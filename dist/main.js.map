{"version":3,"file":"main.js","mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,mBAAmB,EAAC;AACnC;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACrCqH;AACtD;AACtC;AACmB;AAC5C;AACA;AACe,wBAAwB,4CAAG;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,4CAAmB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,gCAAgC,4CAAmB;AACtE;AACA,sBAAsB,gCAAgC,4CAAmB;AACzE;AACA;AACA,iCAAiC;AACjC,2BAA2B;AAC3B,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,4CAAmB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,mEAAkB;AACxD;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,+BAA+B,4CAAmB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,4CAAmB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,EAAE,qDAAqD;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD;AACvD,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,kDAAgB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,8BAA8B,kDAAgB;AAC9C;AACA;AACA,oCAAoC,gEAA8B;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,8BAA8B,yDAAuB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,sBAAsB,gEAAE,YAAY,YAAY;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,0BAA0B,kDAAgB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD;AACjD;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,0BAA0B,gEAA8B;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,4CAAmB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,kBAAkB,gEAAE,aAAa,wBAAwB;AACzD,SAAS;AACT;AACA;AACA;AACA;AACA,mCAAmC,4CAAmB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,yBAAyB;AACzB,gDAAgD,kDAAgB;AAChE;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,4BAA4B,kDAAgB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,gEAAE,YAAY,oCAAoC;AACpE;AACA;AACA,+BAA+B,4CAAmB;AAClD;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;AChhBoC;AACa;AACF;AACiB;AACU;AACrC;AACO;AAC5C;AACA;AACA;AACe,kBAAkB,kDAAS;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,4CAAmB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,8DAAS;AACzC;AACA;AACA,+BAA+B,6DAAQ;AACvC;AACA;AACA,oCAAoC,sEAAgB;AACpD;AACA;AACA;AACA;AACA,0CAA0C;AAC1C,wCAAwC;AACxC;AACA;AACA;AACA,8CAA8C,yBAAyB;AACvE,2CAA2C,4BAA4B;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD;AACzD;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT,gCAAgC,gEAA8B;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,gEAAE;AAChB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,+BAA+B,4CAAmB;AAClD;AACA;AACA;AACA,oCAAoC,sEAAgB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,+CAAI,KAAK,4CAA4C;AACrE;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,gEAAE;AACV,QAAQ,gEAAE;AACV;AACA;AACA;AACA,QAAQ,gEAAE;AACV,QAAQ,gEAAE;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,gEAAE;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB,cAAc,gBAAgB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACpgBe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;AC3DoC;AACe;AACiB;AACxB;AACJ;AACC;AACzC;AACA;AACA;AACe,oBAAoB,kDAAS;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA,+BAA+B;AAC/B;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,4CAAmB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,8DAAW;AAC7C;AACA;AACA;AACA,sCAAsC,wEAAkB;AACxD;AACA;AACA;AACA,0CAA0C;AAC1C,wCAAwC;AACxC;AACA;AACA;AACA,gDAAgD,0BAA0B;AAC1E,2CAA2C,6BAA6B;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,sDAAS;AACvC,qDAAqD;AACrD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD;AACjD;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,cAAc,gEAAE;AAChB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,+BAA+B,4CAAmB;AAClD;AACA;AACA;AACA,sCAAsC,wEAAkB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,4CAAmB;AAC/D,+CAA+C,4CAAmB;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;ACnS2C;AAC3C;AAC4C;AAC5C;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,gEAAE;AACzB,uBAAuB,gEAAE;AACzB,SAAS;AACT;AACA,uBAAuB,gEAAE;AACzB,uBAAuB,gEAAE;AACzB,uBAAuB,gEAAE;AACzB,uBAAuB,gEAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC,mCAAmC;AACnC,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,2BAA2B;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,sBAAsB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,SAAS;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,qBAAqB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,wBAAwB,qDAAY;AACnD;AACA;AACA;AACA,QAAQ,gEAAE;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mFAAmF,wBAAwB;AAC3G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,sBAAsB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,2BAA2B;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;AC5c+C;AACnB;AACgB;AACc;AAC1D;AACO,sBAAsB,2DAAU;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,wCAAG;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,kBAAkB,gEAAE,YAAY,0EAA0E;AAC1G;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,wCAAG;AAC9B;AACA;AACA;AACA;AACA;AACA,kBAAkB,gEAAE,YAAY,0EAA0E;AAC1G;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,gBAAgB,0EAAS;AACzB,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;AC7F2D;AACQ;AACjC;AAClC;AACA;AACO,yBAAyB,sEAAmB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,uBAAuB,6CAAO;AAC9B;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,gCAAgC,uEAAmB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AC3G2C;AACD;AACN;AACpC;AACe,iCAAiC,qDAAY;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,gEAAE;AACvB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,gEAAE,eAAe,gEAAE;AAClC,gBAAgB,+CAAI;AACpB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;;;;;;;;;;;;;;;;AC5F4C;AACpB;AACxB;AACA;AACe,mCAAmC,4CAAG;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,gDAAmB;AACrE;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,gDAAmB;AACnE;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,sBAAsB;AAC9C;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;;;;;;;;;;;;;;;AC7Ee;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACzJ2C;AAC3C;AACe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,KAAK;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,sDAAO;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACpM2C;AAC3C;AAC4C;AAC5C;AACA;AACe,0BAA0B,qDAAY;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC,6DAA6D;AAC7D;AACA;AACA,SAAS;AACT;AACA,QAAQ,gEAAE;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,gEAAE;AAC/B,6BAA6B,gEAAE;AAC/B,6BAA6B,gEAAE;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,gEAAE;AAChC,8BAA8B,gEAAE;AAChC,8BAA8B,gEAAE;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACjKyB;AACzB;AAC4C;AACF;AAC1C;AACA;AACe,+BAA+B,4CAAG;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,4BAA4B;AAC5B,4BAA4B;AAC5B;AACA,0BAA0B;AAC1B,0BAA0B;AAC1B,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,sDAAW;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,gEAAE;AACV;AACA,8BAA8B,gEAAE,cAAc,gEAAE;AAChD,8BAA8B,gEAAE,cAAc,gEAAE;AAChD,8BAA8B,gEAAE,cAAc,gEAAE;AAChD,kCAAkC,gEAAE,cAAc,gEAAE;AACpD;AACA,kCAAkC,gEAAE,qBAAqB,gEAAE;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8JAA8J;AAC9J;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mFAAmF;AACnF,mFAAmF;AACnF,mFAAmF;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,gEAAE;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,gEAAE;AAC5B,6BAA6B,gEAAE;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,WAAW;AAC1D;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACjV+C;AACH;AAC5C;AACA;AACe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,SAAS,MAAM,GAAG,GAAG,GAAG,KAAK,GAAG,GAAG,GAAG,OAAO,KAAK,MAAM,IAAI,UAAU,WAAW,QAAQ;AAChI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,2DAAU;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,gEAAE;AACpB,sBAAsB,gEAAE;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,gEAAE;AACd,YAAY,gEAAE;AACd,YAAY,gEAAE;AACd,YAAY,gEAAE;AACd,YAAY,gEAAE;AACd;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AC9J2C;AAC3C;AAC4C;AAC5C;AACA;AACe,4BAA4B,qDAAY;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC,mEAAmE;AACnE;AACA;AACA,SAAS;AACT;AACA,QAAQ,gEAAE;AACV;AACA;AACA;AACA;AACA;AACA,oBAAoB,gEAAE;AACtB;AACA,uBAAuB,gEAAE,OAAO,gEAAE;AAClC,4BAA4B,gEAAE,OAAO,gEAAE;AACvC,qBAAqB,gEAAE;AACvB,wBAAwB,gEAAE;AAC1B,8BAA8B,gEAAE;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AC/FyB;AACzB;AAC4C;AACE;AAC9C;AACA;AACA;AACA;AACA;AACe,iCAAiC,4CAAG;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,wDAAa;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,gEAAE;AACxB,yBAAyB,gEAAE;AAC3B;AACA;AACA;AACA;AACA;AACA,QAAQ,gEAAE;AACV;AACA,mCAAmC,gEAAE,cAAc,gEAAE;AACrD,8BAA8B,gEAAE,cAAc,gEAAE;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qFAAqF;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,gEAAE;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AC3MA;AACA;AACA;AACA;AACA;AACA;AACA;AAC0C;AACC;AAC3C;AACe,kBAAkB,qDAAY;AAC7C;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,gEAAE;AACd,YAAY,gEAAE;AACd,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,QAAQ,gEAAE;AACV,QAAQ,gEAAE;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,gEAAE;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,gEAAE;AACV,QAAQ,gEAAE;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,gEAAE;AACd,YAAY,gEAAE;AACd,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,gEAAE;AACV,QAAQ,gEAAE;AACV;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,gEAAE;AACV,QAAQ,gEAAE;AACV;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,gEAAE;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,yEAAyE;AACzE;AACA;AACA;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA,wEAAwE;AACxE;AACA;AACA;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,gEAAE;AACV;AACA,QAAQ,gEAAE;AACV,QAAQ,gEAAE;AACV;AACA,QAAQ,gEAAE;AACV;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,QAAQ,gEAAE;AACV,QAAQ,gEAAE;AACV;AACA;AACA,QAAQ,gEAAE;AACV,QAAQ,gEAAE;AACV,QAAQ,gEAAE;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,gEAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,gEAAE;AACd;AACA;AACA,QAAQ,gEAAE;AACV;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA,oBAAoB,gEAAE;AACtB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA,oBAAoB,gEAAE;AACtB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA,oBAAoB,gEAAE;AACtB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA,oBAAoB,gEAAE;AACtB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,gEAAE;AACd,SAAS;AACT,YAAY,gEAAE;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC,QAAQ,gEAAE;AACV;AACA;AACA;AACA,oCAAoC;AACpC,QAAQ,gEAAE;AACV;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC,SAAS;AACT;AACA;AACA,QAAQ,gEAAE;AACV;AACA;AACA,oEAAoE;AACpE,YAAY,gEAAE;AACd,SAAS,4DAA4D;AACrE,YAAY,gEAAE;AACd,SAAS,4DAA4D;AACrE,YAAY,gEAAE;AACd,SAAS,kDAAkD;AAC3D,YAAY,gEAAE;AACd;AACA;AACA,kEAAkE;AAClE,YAAY,gEAAE;AACd,SAAS,yDAAyD;AAClE,YAAY,gEAAE;AACd,SAAS,yDAAyD;AAClE,YAAY,gEAAE;AACd,SAAS,yDAAyD;AAClE,YAAY,gEAAE;AACd,SAAS,+CAA+C;AACxD,YAAY,gEAAE;AACd;AACA;AACA,kEAAkE;AAClE,YAAY,gEAAE;AACd,SAAS,yDAAyD;AAClE,YAAY,gEAAE;AACd,SAAS,yDAAyD;AAClE,YAAY,gEAAE;AACd,SAAS,yDAAyD;AAClE,YAAY,gEAAE;AACd,SAAS,+CAA+C;AACxD,YAAY,gEAAE;AACd;AACA;AACA,kEAAkE;AAClE,YAAY,gEAAE;AACd,SAAS,yDAAyD;AAClE,YAAY,gEAAE;AACd,SAAS,yDAAyD;AAClE,YAAY,gEAAE;AACd,SAAS,yDAAyD;AAClE,YAAY,gEAAE;AACd,SAAS,+CAA+C;AACxD,YAAY,gEAAE;AACd;AACA;AACA;AACA,QAAQ,gEAAE;AACV,QAAQ,gEAAE;AACV,QAAQ,gEAAE;AACV,QAAQ,gEAAE;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,gEAAE;AACd,SAAS;AACT,YAAY,gEAAE;AACd,SAAS;AACT,YAAY,gEAAE;AACd;AACA;AACA;AACA;AACA,YAAY,gEAAE;AACd,SAAS;AACT,YAAY,gEAAE;AACd,SAAS;AACT,YAAY,gEAAE;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,gEAAE;AACV;AACA;AACA;AACA,QAAQ,gEAAE;AACV;AACA,QAAQ,gEAAE;AACV,QAAQ,gEAAE;AACV;AACA,QAAQ,gEAAE;AACV,QAAQ,gEAAE;AACV;AACA,QAAQ,gEAAE;AACV,QAAQ,gEAAE;AACV;AACA;AACA;AACA,QAAQ,gEAAE;AACV,QAAQ,gEAAE;AACV,QAAQ,gEAAE;AACV;AACA,QAAQ,gEAAE;AACV;AACA;AACA;AACA,gCAAgC;AAChC,gCAAgC;AAChC,gCAAgC;AAChC;AACA;AACA,2CAA2C;AAC3C,uCAAuC;AACvC,wCAAwC;AACxC,uCAAuC;AACvC,wCAAwC;AACxC,uCAAuC;AACvC,wCAAwC;AACxC;AACA;AACA,QAAQ,gEAAE;AACV,QAAQ,gEAAE;AACV;AACA,QAAQ,gEAAE;AACV,QAAQ,gEAAE;AACV;AACA,QAAQ,gEAAE;AACV,QAAQ,gEAAE;AACV;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,+BAA+B;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,+BAA+B;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,gEAAE;AACd,YAAY,gEAAE;AACd;AACA,YAAY,gEAAE;AACd,YAAY,gEAAE;AACd,SAAS;AACT,YAAY,gEAAE;AACd,YAAY,gEAAE;AACd;AACA;AACA,YAAY,gEAAE;AACd,YAAY,gEAAE;AACd;AACA,YAAY,gEAAE;AACd,YAAY,gEAAE;AACd,SAAS;AACT,YAAY,gEAAE;AACd,YAAY,gEAAE;AACd;AACA;AACA,YAAY,gEAAE;AACd,YAAY,gEAAE;AACd;AACA,YAAY,gEAAE;AACd,YAAY,gEAAE;AACd,SAAS;AACT,YAAY,gEAAE;AACd,YAAY,gEAAE;AACd;AACA;AACA,YAAY,gEAAE;AACd,YAAY,gEAAE;AACd;AACA,YAAY,gEAAE;AACd,YAAY,gEAAE;AACd,SAAS;AACT,YAAY,gEAAE;AACd,YAAY,gEAAE;AACdgEAAE;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,gEAAE;AACV;AACA;AACA;AACA,YAAY,gEAAE;AACd,SAAS;AACT,YAAY,gEAAE;AACd,SAAS;AACT,YAAY,gEAAE;AACd;AACA;AACA;AACA;AACA;AACA,YAAY,gEAAE;AACd,SAAS;AACT,YAAY,gEAAE;AACd,SAAS;AACT,YAAY,gEAAE;AACd;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,YAAY,gEAAE;AACd,YAAY,gEAAE;AACd,SAAS,MAAM;AACf,YAAY,gEAAE;AACd,YAAY,gEAAE;AACd;AACA,QAAQ,gEAAE;AACV;AACA;AACA;AACA,QAAQ,gEAAE;AACV;AACA,QAAQ,gEAAE;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,gEAAE;AACd,SAAS;AACT,YAAY,gEAAE;AACd,SAAS;AACT,YAAY,gEAAE;AACd;AACA;AACA;AACA;AACA,YAAY,gEAAE;AACd,SAAS;AACT,YAAY,gEAAE;AACd,SAAS;AACT,YAAY,gEAAE;AACd;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,gEAAE;AACd,SAAS;AACT,YAAY,gEAAE;AACd;AACA;AACA,QAAQ,gEAAE;AACV;AACA;AACA,QAAQ,gEAAE;AACV,QAAQ,gEAAE;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,gEAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,gEAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AC/mC2C;AAC3C;AACe;AACf;AACA;AACA;AACA;AACA;AACA,YAAY,gEAAE;AACd;AACA;AACA,iBAAiB,gEAAE;AACnB;AACA,sBAAsB,gEAAE;AACxB,+BAA+B,gEAAE;AACjC,yBAAyB,gEAAE;AAC3B;AACA;AACA;AACA,2BAA2B,gEAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,gEAAE;AACnC;AACA,mCAAmC,gEAAE;AACrC,sCAAsC,gEAAE;AACxC,8BAA8B,gEAAE;AAChC,8BAA8B,gEAAE;AAChC,8BAA8B,gEAAE;AAChC,kCAAkC,gEAAE;AACpC,mCAAmC,gEAAE;AACrC,mCAAmC,gEAAE;AACrC,mCAAmC,gEAAE;AACrC,qCAAqC,gEAAE;AACvC,wBAAwB,gEAAE;AAC1B,8BAA8B,gEAAE;AAChC,8BAA8B,gEAAE;AAChC,6BAA6B,gEAAE;AAC/B,gCAAgC,gEAAE;AAClC;AACA;AACA;AACA;AACA;AACA,yBAAyB,gEAAE;AAC3B;AACA;AACA;AACA;AACA;AACA,yBAAyB,gEAAE;AAC3B,wBAAwB,gEAAE;AAC1B,+BAA+B,gEAAE;AACjC,sBAAsB,gEAAE;AACxB;AACA;AACA;AACA,2BAA2B,gEAAE;AAC7B,uBAAuB,gEAAE;AACzB;AACA,iCAAiC,gEAAE;AACnC,0CAA0C,gEAAE;AAC5C,iCAAiC,gEAAE;AACnC;AACA,8BAA8B,gEAAE;AAChC,yBAAyB,gEAAE;AAC3B;AACA,0BAA0B,gEAAE;AAC5B;AACA;AACA;AACA;AACA,sBAAsB,gEAAE;AACxB;AACA;AACA,8BAA8B,gEAAE;AAChC,wBAAwB,gEAAE;AAC1B,4BAA4B,gEAAE;AAC9B;AACA;AACA,6BAA6B,gEAAE;AAC/B;AACA,wBAAwB,gEAAE;AAC1B;AACA,wBAAwB,gEAAE;AAC1B,oBAAoB,gEAAE;AACtB,oBAAoB,gEAAE;AACtB,wBAAwB,gEAAE;AAC1B,oBAAoB,gEAAE;AACtB,oBAAoB,gEAAE;AACtB,wBAAwB,gEAAE;AAC1B,oBAAoB,gEAAE;AACtB,oBAAoB,gEAAE;AACtB;AACA,wBAAwB,gEAAE;AAC1B,oBAAoB,gEAAE;AACtB,oBAAoB,gEAAE;AACtB;AACA,aAAa,gEAAE;AACf,mBAAmB,gEAAE;AACrB,mBAAmB,gEAAE;AACrB,aAAa,gEAAE;AACf,mBAAmB,gEAAE;AACrB,mBAAmB,gEAAE;AACrB,aAAa,gEAAE;AACf,mBAAmB,gEAAE;AACrB,mBAAmB,gEAAE;AACrB;AACA;AACA,4BAA4B,gEAAE;AAC9B,yBAAyB,gEAAE;AAC3B,uCAAuC,gEAAE;AACzC,8BAA8B,gEAAE;AAChC,iCAAiC,gEAAE;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,gEAAE;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,gEAAE;AAChC,gCAAgC,gEAAE;AAClC;AACA,0BAA0B,gEAAE;AAC5B,wBAAwB,gEAAE;AAC1B;AACA,4BAA4B,gEAAE;AAC9B;AACA;AACA,8BAA8B,gEAAE;AAChC;AACA;AACA,8BAA8B,gEAAE;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,gEAAE;AAC1B,oBAAoB,gEAAE;AACtB,eAAe,gEAAE;AACjB,2BAA2B,gEAAE;AAC7B,kCAAkC,gEAAE;AACpC;AACA,yBAAyB,gEAAE;AAC3B;AACA;AACA;AACA,sBAAsB,gEAAE;AACxB;AACA,mBAAmB,gEAAE;AACrB;AACA;AACA;AACA,2BAA2B,gEAAE;AAC7B,uBAAuB,gEAAE;AACzB,sBAAsB,gEAAE;AACxB,sBAAsB,gEAAE;AACxB,sBAAsB,gEAAE;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AC3X2C;AAC3C;AACA;AACe,wBAAwB,qDAAY;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,iCAAiC;AACjC,uCAAuC;AACvC,wCAAwC;AACxwBAAwB;AACxB,wBAAwB;AACxB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AC1MA;AACA;AAC2C;AAC3C;AACmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,sCAAsC,qDAAY;AACzwDAAE;AAC5B,yBAAyB,wDAAE;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,wDAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C,iDAAiD;AACjD;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AC5Ve;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACzCe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,qBAAqB;AAC9C,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,yBAAyB,uBAAuB;AAChD,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AClHe;AACfwBAAwB,cAAc;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,mBAAmcAAc;AAC1B,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD,gBAAgB,iBAAiB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACnZe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACpDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,WAAW;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,YAAY;;;;;;;;;;;;;;;;;;;;ACzOa;AACoB;AACZ;AACW;AAC5C;AACe,4BAA4B,4CAAG;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,0DAAU;AACpC;AACA;AACA,6CAA6C,YAAY;AACzD;AACA,SAAS;AACT;AACA;AACA,iCAAiC,oBAAoB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,gDAAO;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,0BAA0B,gEAAE,YAAY,2CAA2C;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;;;;;;;;;;ACpQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,iBAAiB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,kBAAkB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,MAAM;AACN;AACA;AACA,MAAM;AACN;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,kBAAkB;AACtC;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,YAAY;AAClC;AACA,UAAU;AACV;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,sBAAsB,YAAY;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,YAAY;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,YAAY;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,qBAAqB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,sBAAsB,YAAY;AAClC;AACA;AACA;AACA;AACA;AACA,oBAAoB,0CAA0C;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;;;;;;;;;;;;;;;;ACpZnB,WAAW,mBAAO,CAAC,iDAAQ;AAC3B;AACe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzxF;AACA;AACA;AACA;AACA;AACA,uGAAuG,YAAY;AACnH;AACA;AACA;AACA;AACA;AACA,4GAA4G;AAC5G;AACA;AACA,4GAA4G,sBAAsB;AAClI;AACA;AACA,4GAA4G,qBAAqB;AACjI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA,4CAA4C,yFAAyF;AACrI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,SAAS,GAAG,SAAS,GAAG,6BAA6B;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACtQyB;AACmB;AACA;AAC5C;AACe,yBAAyB,4CAAG;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,sDAAa;AAC9C,mCAAmC,sDAAa;AAChiBAAiB;AACjB;AACA,aAAa;AACb;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,gEAAE;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,gEAAE;AAC1B;AACA;AACA,2CAA2C;AAC3C;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC,iCAAiC;AACjC,yBAAyB;AACzB;AACA,yBAAyB;AACzB;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,gEAAE;AACnC;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,gEAAE;AACnC;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACrW2C;AACP;AACZ;AACxB;AACA;AACA;AACe,+BAA+B,4CAAG;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,QAAQ,gEAAE;AACV;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,+CAAI,KAAK,6CAA6C;AAClE;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,gBAAgB,gEAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACrH4C;AACD;AAC3C;AACA;AACe,gCAAgC,qDAAY;AAC3D;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,gEAAE;AAC5B;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,gEAAE;AAClB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;;;;;;;;;;;;;;;;;;AC/F4C;AAC4B;AACJ;AACV;AAC1D;AACA;AACA;AACe,uBAAuB,uEAAmB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,gEAAE;AACV;AACA,SAAS;AACT,QAAQ,gEAAE;AACV;AACA,SAAS;AACT,QAAQ,gEAAE;AACV;AACA,SAAS;AACT,QAAQ,gEAAE;AACV;AACA,SAAS;AACT,QAAQ,gEAAE;AACV;AACA,SAAS;AACT,QAAQ,gEAAE;AACV;AACA,SAAS;AACT,QAAQ,gEAAE;AACV;AACA,SAAS;AACT;AACA;AACA;AACA,QAAQ,gEAAE;AACV;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,QAAQ,ggBAAgB,gEAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,gEAAE;AACtB,oBAAoB,gEAAE;AACtB;AACA,oBAAoB,gEAAE;AACtB,oBAAoB,gEAAE;AACtB;AACA,oBAAoB,gEAAE;AACtB,oBAAoB,gEAAE;AACtB;AACA,oBAAoB,gEAAE;AACtB,oBAAoB,gEAAE;AACtB;AACA;AACA,oBAAoB,gEAAE;AACtB,oBAAoB,gEAAE;AACtB;AACA,qBAAqB,gEAAE;AACvB,qBAAqB,gEAAE;AACvB;AACA,qBAAqB,gEAAE;AACvB,qBAAqB,gEAAE;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,uCAAuC,uEAAuB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,0BAA0B,oEAA8B;AACxD;AACA,SAAS;AACT;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACtU4C;AACnB;AACiC;AAC1D;AACA;AACA;AACA;AACA;AACe,wBAAwB,4CAAG;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,QAAQ,gEAAE;AACV;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,QAAQ,gEAAE;AACV;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,QAAQ,gEAAE;AACV;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,gEAAE;AACpB,kCAAkC;AAClC,kCAAkC;AAClC,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA,wBAAwB,gEAAE;AAC1B,wBAAwB,gEAAE;AAC1B,wBAAwB,gEAAE;AAC1B;AACA;AACA;AACA;AACA;AACA,gBAAgB,gEAAE;AAClB,gBAAgB,gEAAE;AAClB,gBAAgB,gEAAE;AAClB;AACA;AACA;AACA;AACA,QAAQ,gEAAE;AACV,QAAQ,gEAAE;AACV,QAAQ,gEAAE;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,gEAAE;AAC/B,+BAA+B,gEAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,gEAAE;AACxC,sCAAsC,gEAAE;AACxC,SAAS;AACT,sCAAsC,gEAAE;AACxC,sCAAsC,gEAAE;AACxC;AACA;AACA,uCAAuC,gEAAE;AACzC,8BAA8B,gEAAE;AAChC,qCAAqC,gEAAE;AACvC;AACA,gCAAgC,gEAAE;AAClC,gCAAgC,gEAAE;AAClC;AACA,uCAAuC;AACvC,oCAAoC,gEAAE;AACtC;AACA,8CAA8C,gEAAE;AAChD;AACA,8BAA8B,gEAAE;AAChC,iCAAiC,gEAAE;AACnC;AACA,gCAAgC,gEAAE;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,gEAAE;AAClgEAAE;AAC5B,0BAA0B,gEAAE;AAC5B;AACA;AACA,0BAA0B,gEAAE;AAC5B,0BAA0B,gEAAE;AAC5B;AACA,0BAA0B,gEAAE;AAC5B,0BAA0B,gEAAE;AAC5B;AACA,0BAA0B,gEAAE;AAC5B,0BAA0B,gEAAE;AAC5B;AACA,0BAA0B,gEAAE;AAC5B,2BAA2B,gEAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,gEAAE;AAC7B,2BAA2B,gEAAE;AAC7B;AACA,2BAA2B,gEAAE;AAC7B,2BAA2B,gEAAE;AAC7B;AACA;AACA,2BAA2B,gEAAE;AAC7B,2BAA2B,gEAAE;AAC7B;AACA;AACA;AACA;AACA,2BAA2B,gEAAE;AAC7B,2BAA2B,gEAAE;AAC7B;AACA;AACA;AACA,2BAA2B,gEAAE;AAC7B,2BAA2B,gEAAE;AAC7B;AACA,2BAA2B,gEAAE;AAC7B,2BAA2B,gEAAE;AAC7B;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,gEAAE;AACV,QAAQ,gEAAE;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,gBAAgB,gEAAE;AAClB,gBAAgB,gEAAE;AAClB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,YAAY,gEAAE;AACd,YAAY,gEAAE;AACd;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,gEAAE;AACV,QAAQ,gEAAE;AACV;AACA;AACA,QAAQ,gEAAE;AACV,QAAQ,gEAAE;AACV,QAAQ,gEAAE;AACV;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,QAAQ,gEAAE;AACV;AACA,QAAQ,gEAAE;AACV,QAAQ,gEAAE;AACV;AACA;AACA;AACA,QAAQ,gEAAE;AACV,QAAQ,gEAAE;AACV,QAAQ,gEAAE;AACV;AACA,QAAQ,gEAAE;AACV;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,gEAAE;AACV,QAAQ,gEAAE;AACV;AACA,QAAQ,gEAAE;AACV,QAAQ,gEAAE;AACV,QAAQ,gEAAE;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE;AAChE;AACA;AACA;AACA,QAAQ,gEAAE;AACV,QAAQ,gEAAE;AACV;AACA,QAAQ,gEAAE;AACV,QAAQ,gEAAE;AACV;AACA;AACA;AACA;AACA,QAAQ,gEAAE;AACV,QAAQ,gEAAE;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,wBAAwB;AACpD;AACA;AACA;AACA;AACA,4BAA4B,wBAAwB;AACpD;AACA;AACA;AACA;AACA,4BAA4B,wBAAwB;AACpD;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,4BAA4B,wBAAwB;AACpD;AACA;AACA;AACA;AACA,4BAA4B,wBAAwB;AACpD;AACA;AACA;AACA;AACA,4BAA4B,wBAAwB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,wBAAwB;AACpD;AACA;AACA;AACA;AACA,4BAA4B,wBAAwB;AACpD;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,4BAA4B,wBAAwB;AACpD;AACA;AACA;AACA;AACA,4BAA4B,wBAAwB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,wBAAwB;AACpD;AACA;AACA;AACA,SAAS;AACT;AACA,4BAA4B,wBAAwB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,gEAAE;AACd,YAAY,gEAAE;AACd;AACA;AACA;AACA;AACA;AACA,YAAY,gEAAE;AACd,YAAY,gEAAE;AACd;AACA;AACA;AACA;AACA;AACA,YAAY,gEAAE;AACd,YAAY,gEAAE;AACd;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,gEAAE,8CAA8C,gEAAE;AAC1D,uBAAuB,gEAAE;AACzB,QAAQ,gEAAE,+CAA+C,gEAAE;AAC3D,uBAAuB,gEAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,oEAA8B;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,gEAAE;AACjB;AACA,kGAAkG,gEAAE;AACpG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AC/yB2C;AACC;AAC5C;AACe,gCAAgC,qDAAY;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,QAAQ,gEAAE;AACV,QAAQ,gEAAE;AACV,QAAQ,gEAAE;AACV,QAAQ,gEAAE;AACV;AACA;AACA,YAAY,gEAAE;AACd;AACA;AACA;AACA,YAAY,gEAAE;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AC3HA;AACA;AACA;AAC4C;AACG;AAC/C;AACe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,2DAAU;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,gEAAE;AACnC;AACA;AACA;AACA,iCAAiC,gEAAE;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;AC/P4C;AACD;AACG;AACrB;AACzB;AACyC;AACzC;AACA;AACe,8BAA8B,4CAAG;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,yDAAQ;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,gEAAE,YAAY,OAAO,2DAAS,UAAU;AAC1D;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6FAA6F,gEAAE;AAC/F;AACA,8EAA8E,gEAAE;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB,gEAAE;AAClB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB,gEAAE;AAClB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB,gEAAE;AAClB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB,gEAAE;AAClB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB,gEAAE;AAClB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB,gEAAE;AAClB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB,gEAAE;AAClB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB,gEAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B,+BAA+B;AAC/B;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,+DAAY;AACpB;AACA,QAAQ,8DAAO;AACf;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,QAAQ,8DAAO;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,QAAQ,sEAAmB;AAC3B;AACA,SAAS;AACT,QAAQ,sEAAmB;AAC3B;AACA,SAAS;AACT,QAAQ,sEAAmB;AAC3B;AACA,SAAS;AACT;AACA,QAAQ,sEAAmB;AAC3B;AACA,SAAS;AACT;AACA;AACA;;;;;;;;;;;;;;;;;ACtUA;AACA;AACA;AACA;AAC2C;AACC;AAC5C;AACe,0BAA0B,qDAAY;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,QAAQ,gEAAE;AACV;AACA,SAAS;AACT;AACA,QAAQ,gEAAE;AACV;AACA,SAAS;AACT;AACA,QAAQ,gEAAE;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C,iBAAiB;AACjB,aAAa;AACb;AACA,aAAa;AACb,SAAS;AACT;AACA,QAAQ,gEAAE;AACV;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,kCAAkC;AAC9D;AACA;AACA;AACA,SAAS;AACT;AACA,4BAA4B,kCAAkC;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,gEAAE;AACd,YAAY,gEAAE;AACd;AACA;AACA;AACA,YAAY,gEAAE;AACd,YAAY,gEAAE;AACd;AACA;AACA;AACA,QAAQ,gEAAE;AACV,QAAQ,gEAAE;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,gEAAE;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,gEAAE;AACd;AACA;AACA,YAAY,gEAAE;AACd;AACA;AACA,YAAY,gEAAE;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,gEAAE;AACvB,yBAAyB,gEAAE;AAC3B,8BAA8B,gEAAE;AAChC,wBAAwB,gEAAE;AAC1B,kCAAkC,gEAAE;AACpC,iCAAiC,gEAAE;AACnC,oCAAoC,gEAAE;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,gEAAE;AACtB,oBAAoB,gEAAE;AACtB;AACA,oBAAoB,gEAAE;AACtB,oBAAoB,gEAAE;AACtB;AACA,oBAAoB,gEAAE;AACtB,oBAAoB,gEAAE;AACtB;AACA,oBAAoB,gEAAE;AACtB,oBAAoB,gEAAE;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,gEAAE;AAC3B,yBAAyB,gEAAE;AAC3B;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,gEAAE;AACV,QAAQ,gEAAE;AACV,QAAQ,gEAAE;AACV,QAAQ,gEAAE;AACV,QAAQ,gEAAE;AACV,QAAQ,gEAAE;AACV,QAAQ,gEAAE;AACV;AACA;AACA;AACA;AACA,YAAY,gEAAE;AACd,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,gEAAE;AACV;AACA;AACA;AACA,gCAAgC,gEAAE;AAClC,8BAA8B,gEAAE;AAChC;AACA,YAAY,gEAAE;AACd;AACA,gBAAgB,gEAAE;AAClB,aAAa;AACb;AACA;AACA,QAAQ,gEAAE;AACV;AACA;AACA;;;;;;;;;;;;;;;;;;;ACtV4C;AACD;AAC3C;AACuC;AACvC;AACA;AACe,8BAA8B,qDAAY;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,gEAAE;AACb,gCAAgC,wDAAQ;AACxC;AACA;AACA,+DAA+D,KAAK;AACpE,iBAAiB;AACjB;AACA;AACA,sBAAsB,KAAK;AAC3B;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,GAAG,YAAY;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,GAAG,YAAY;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,gEAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA,mBAAmB,gEAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,gEAAE;AACjB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,gEAAE;AACjB,eAAe,gEAAE;AACjB,eAAe,gEAAE;AACjB,eAAe,gEAAE;AACjB;AACA;AACA;;;;;;;;;;;;;;;;;;;ACnM2C;AACP;AACZ;AACxB;AACA;AACe,sBAAsB,4CAAG;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,gEAAE;AACd;AACA;AACA;AACA,0MAA0M;AAC1M;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,gEAAE;AACrB,oBAAoB,+CAAI;AACxB;AACA,4BAA4B,gEAAE;AAC9B;AACA,qBAAqB;AACrB,iBAAiB;AACjB,oBAAoB,gEAAE;AACtB;AACA,aAAa;AACb,gBAAgB,gEAAE;AAClB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,gEAAE;AACzB,wBAAwB,+CAAI;AAC5B;AACA,gCAAgC,gEAAE;AAClC;AACA,yBAAyB;AACzB,qBAAqB;AACrB,wBAAwB,gEAAE;AAC1B;AACA;AACA,aAAa;AACb,gBAAgB,gEAAE;AAClB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,gEAAE;AACzB,wBAAwB,+CAAI;AAC5B;AACA,gCAAgC,gEAAE;AAClC;AACA,yBAAyB;AACzB,qBAAqB;AACrB,wBAAwB,gEAAE;AAC1B;AACA;AACA,aAAa;AACb,gBAAgB,gEAAE;AAClB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,gEAAE;AACzB,wBAAwB,+CAAI;AAC5B;AACA;AACA;AACA,gCAAgC,gEAAE;AAClC;AACA,yBAAyB;AACzB,qBAAqB;AACrB;AACA,wBAAwB,gEAAE;AAC1B;AACA;AACA,aAAa;AACb,gBAAgB,gEAAE;AAClB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,gEAAE;AACzB,wBAAwB,+CAAI;AAC5B;AACA,gCAAgC,gEAAE;AAClC;AACA,yBAAyB;AACzB,qBAAqB;AACrB,wBAAwB,gEAAE;AAC1B;AACA;AACA,aAAa;AACb,gBAAgB,gEAAE;AAClB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,gEAAE;AACrB,oBAAoB,+CAAI;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,6FAA6F,mBAAmB;AAChH;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,oBAAoB,gEAAE;AACtB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,mBAAmB;AAC/D;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,gEAAE;AACrB,oBAAoB,+CAAI;AACxB;AACA;AACA;AACA;AACA;AACA,6EAA6E,mBAAmB;AAChG;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,gEAAE;AACtB,uEAAuE,mBAAmB;AAC1F;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,mBAAmB;AAC/D;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,gEAAE;AACzB,wBAAwB,+CAAI;AAC5B;AACA;AACA;AACA;AACA,2EAA2E,mBAAmB;AAC9F;AACA,yBAAyB;AACzB,qBAAqB;AACrB;AACA;AACA;AACA,mEAAmE,mBAAmB;AACtF;AACA,iBAAiB;AACjB;AACA,+CAA+C,mBAAmB;AAClE;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,gEAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,gEAAE;AAClB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,gEAAE;AACb,YAAY,+CAAI;AAChB;AACA,oBAAoB,gEAAE;AACtB;AACA,aAAa;AACb,SAAS;AACT,YAAY,gEAAE;AACd;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACje0C;AACC;AAC3C;AACe,2BAA2B,qDAAY;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,yDAAS;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACrLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,0BAA0B;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB,0BAA0B;AAC5C,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,gBAAgB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,UAAU;AACV;AACA,sBAAsB,6BAA6B;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,kBAAkB,0BAA0B;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,oBAAoB,oBAAoB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;;AAGA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA,yDAAyD,mBAAmB;AAC5E;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,kBAAkB;AACjC,eAAe,QAAQ;AACvB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA,4BAA4B,iBAAiB;AAC7C;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,gBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,UAAU;AACV;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;;;AAGA;AACA;AACA;AACA,eAAe,QAAQ;AACvB;AACA;AACA;AACA;;;AAGA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,kBAAkB;AACjC,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA,MAAM,KAAyB;AAC/B;AACA;AACA,CAAC;;;;;;;;;;;;;;;;ACxrBD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8EAA8E;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8EAA8E;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE;AAClE;AACA;AACA;AACA;AACA;AACA;AACA,gGAAgG;AAChG;AACA;AACA;AACA;AACA;AACA;AACA,8EAA8E;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD;AACjD;AACA;AACA;AACA;AACA;AACA;AACA,8EAA8E;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gGAAgG;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE;AAClE;AACA;AACA;AACA;AACA;AACA;AACA,gGAAgG;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mFAAmF;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iFAAiF;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iFAAiF;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mFAAmF;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iFAAiF;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iFAAiF;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA,yDAAyD;AACzD;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,UAAU,YAAY,iBAAiB,wBAAwB,UAAU,6BAA6B,mBAAmB;AACrK,4BAA4B,mCAAmC;AAC/D,oBAAoB;AACpB,8BAA8B;AAC9B,+CAA+C,UAAU,uBAAuB;AAChF,oBAAoB;AACpB,yBAAyB,2BAA2B;AACpD,2CAA2C,iBAAiB,gBAAgB,SAAS,iBAAiB,aAAa,cAAc,aAAa,iBAAiB,QAAQ,wBAAwB,aAAa,iBAAiB,UAAU,mBAAmB,iBAAiB,YAAY;AACvR,qBAAqB;AACrB,qBAAqB;AACrB,sBAAsB;AACtB,+BAA+B;AAC/B,uBAAuB;AACvB,gDAAgD,iBAAiB,qBAAqB;AACtF,uBAAuB;AACvB,mDAAmD,iBAAiB,kBAAkB;AACtF,yBAAyB;AACzB,0CAA0C;AAC1C,yBAAyB;AACzB;AACA;AACA,kCAAkC,eAAe;AACjD,wCAAwC,mBAAmB,QAAQ;AACnE,+BAA+B;AAC/B,gCAAgC,UAAU,YAAY,iBAAiB,gBAAgB,SAAS,YAAY;AAC5G,oBAAoB;AACpB,qBAAqB;AACrB,gCAAgC,iBAAiB,iBAAiB,iBAAiB,wBAAwB,UAAU,iBAAiB,UAAU,gBAAgB,SAAS,YAAY,SAAS,mBAAmB,aAAa,gBAAgB,aAAa,kBAAkB,aAAa,cAAc,aAAa,iBAAiB,QAAQ,mBAAmB;AACjW,8BAA8B;AAC9B,sBAAsB;AACtB,yBAAyB;AACzB,2BAA2B;AAC3B,wBAAwB;AACxB,wBAAwB;AACxB,yBAAyB;AACzB,wBAAwB;AACxB,wBAAwB;AACxB,qBAAqB;AACrB,qBAAqB;AACrB,gDAAgD,UAAU,YAAY,iBAAiB,mBAAmB,iBAAiB,wBAAwB,YAAY;AAC/J,oBAAoB;AACpB,kCAAkC,kCAAkC,iDAAiD,yBAAyB;AAC9I,mCAAmC,iBAAiB,gBAAgB;AACpE,kCAAkC,sCAAsC;AACxE,0BAA0B,UAAU,WAAW,iBAAiB,gBAAgB;AAChF,oBAAoB;AACpB,kCAAkC,sCAAsC;AACxE,0CAA0C,iBAAiB,gBAAgB;AAC3E,kCAAkC,sCAAsC;AACxE,uDAAuD;AACvD,yBAAyB;AACzB,uCAAuC,UAAU,WAAW,iBAAiB,kBAAkB;AAC/F,yBAAyB;AACzB,oBAAoB;AACpB,wCAAwC,UAAU,kBAAkB;AACpE,yBAAyB;AACzB,oBAAoB;AACpB,mCAAmC,iBAAiB,kBAAkB;AACtE,yBAAyB;AACzB,2CAA2C,gBAAgB,eAAe,UAAU,gBAAgB;AACpG,qBAAqB;AACrB,qBAAqB;AACrB,wBAAwB;AACxB,gDAAgD,gBAAgB,eAAe,UAAU,iBAAiB;AAC1G,qBAAqB;AACrB,qBAAqB;AACrB,wBAAwB;AACxB,oDAAoD,gBAAgB,eAAe,UAAU,iBAAiB;AAC9G,qBAAqB;AACrB,qBAAqB;AACrB,wBAAwB;AACxB,6CAA6C,gBAAgB,eAAe,UAAU,iBAAiB;AACvG,qBAAqB;AACrB,qBAAqB;AACrB,wBAAwB;AACxB,+CAA+C,gBAAgB,eAAe,UAAU,iBAAiB;AACzG,qBAAqB;AACrB,qBAAqB;AACrB,wBAAwB;AACxB,gDAAgD,gBAAgB,oBAAoB;AACpF,uBAAuB;AACvB,sCAAsC,gBAAgB,cAAc;AACpE,sBAAsB;AACtB,sBAAsB;AACtB,oBAAoB;AACpB,wBAAwB;AACxB,uBAAuB;AACvB,0CAA0C,UAAU,YAAY,iBAAiB,oBAAoB;AACrG,oBAAoB;AACpB,sBAAsB;AACtuCAAuC;AACvsDAAsD,0BAA0B;AAC9H,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD;AAClD,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,kDAAkD;AAClD,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD;AAClqBAAqB;AACrsDAAsD;AACtqBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,mBAAmB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,sBAAsB;AAC9D;AACA,0CAA0C,qCAAqC;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,cAAc,GAAG,gBAAgB,oBAAoB,yDAAyD,wBAAwB,GAAG,UAAU,IAAI;AAC9L;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,WAAW;AACrD;AACA;AACA,2EAA2E,WAAW,WAAW,UAAU,UAAU,QAAQ;AAC7H;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,UAAU;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjqCAAqC,mCAAmC,mBAAmwCAAwC,QAAQ;AAChD;AACA;AACA;AACA;AACA;AACA,6CAA6C,OAAO,IAAI,uBAAuB;AAC/E;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,UAAU;AAChD,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,iBAAiB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,gBAAgB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,UAAU,EAAE,YAAY,EAAE,eAAe,IAAI,YAAY;AAC3G;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,uBAAuB,EAAE,aAAa,IAAI,wBAAwB,EAAE,KAAK;AAChH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM,IAAI,2BAA2B,GAAG,yBAAyB,GAAG,OAAO,EAAE,KAAK;AACjG,iBAAiB,yBAAyB,GAAG,yBAAyB,KAAK,sBAAsB,GAAG,sBAAsB;AAC1H,gBAAgB,YAAY,IAAI,MAAM;AACtC;AACA;AACA;AACA,+BAA+B,QAAQ,GAAG;AAC1C;AACA;AACA;AACA;AACA,0CAA0C,mBAAmB,GAAG,gBAAgB,GAAG;AACnF;AACA;AACA;AACA,8CAA8C,mBAAmB,EAAE,YAAY,GAAG,mBAAmB,GAAG;AACxG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D,SAAS;AACxE;AACA,kBAAkB,QAAQ;AAC1B;AACA;AACA;AACA;AACA,8CAA8C,MAAM,EAAE,SAAS;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,mBAAmB,EAAE,aAAa,EAAE,SAAS;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,SAAS,EAAE,SAAS;AAChE;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,0BAA0B,oBAAoB;AAC9C;AACA;AACA,4BAA4B,oBAAoB;AAChD;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,qCAAqC,MAAM,GAAG,WAAW,IAAI,eAAe;AAC5E;AACA;AACA,sCAAsC,WAAW,IAAI,eAAe;AACpE;AACA;AACA;AACA,gDAAgD,WAAW,EAAE,WAAW;AACxE;AACA;AACA,gDAAgD,WAAW,EAAE,WAAW;AACxE;AACA;AACA;AACA,+FAA+F;AAC/F;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA,gDAAgD,WAAW,EAAE,WAAW;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA,0CAA0C,WAAW;AACrD;AACA;AACA,iDAAiD,mBAAmB,EAAE;AACtE;AACA;AACA,iDAAiD,mBAAmB,EAAE;AACtE;AACA;AACA,gDAAgD,oBAAoB;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA,kCAAkC,WAAW;AAC7C;AACA;AACA,iDAAiD,YAAY,EAAE;AAC/D;AACA;AACA,gDAAgD,aAAa;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,MAAM,EAAE,MAAM,GAAG,YAAY,EAAE;AACnF;AACA;AACA,oDAAoD,MAAM,EAAE,MAAM,EAAE,aAAa;AACjF;AACA;AACA;AACA;AACA,oDAAoD,MAAM,EAAE,IAAI,GAAG,YAAY,EAAE;AACjF;AACA;AACA,oDAAoD,MAAM,EAAE,IAAI,EAAE,aAAa;AAC/E;AACA;AACA;AACA;AACA,oDAAoD,MAAM,EAAE,IAAI,EAAE,QAAQ,GAAG,YAAY,EAAE;AAC3F;AACA;AACA,oDAAoD,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,aAAa;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,mBAAmB,EAAE,aAAa,IAAI,MAAM;AACpG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,KAAK;AAClC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA,0CAA0C,iBAAiB;AAC3D;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA,0CAA0C,gBAAgB;AAC1D;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,MAAM,KAAK,MAAM;AACxE;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,aAAa;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA,0CAA0C,wCAAwC;AAClF;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,YAAY,4BAA4B,YAAY;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE,aAAa;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,IAAI;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE,MAAM;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yEAAyE,YAAY;AACrF;AACA;AACA,uDAAurC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,MAAM;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,IAAI;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uEAAuE,SAAS,YAAY,YAAY;AACxG;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,iBAAiB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kFAAkF,QAAQ;AAC1F;AACA;AACA,oFAAoF,QAAQ;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,wCAAwC;AACjE;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,0BAA0B,qCAAqC,YAAY;AACvI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEoB;;;;;;;;;;;;;;;;;;;;;;ACvtHpB;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACxDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,KAAiD,oBAAoB,CAA2H,CAAC,kBAAkB,kBAAkB,OAAO,qBAAqB,mCAAmC,sBAAsB,iBAAiB,oCAAoC,sBAAsB,oCAAoC,sBAAsB,iBAAiB,uCAAuC,sBAAsB,kCAAkC,sBAAsB,qCAAqC,8CAA8C,sBAAsB,uEAAuE,mBAAmB,8BAA8B,wBAAwB,YAAY,sBAAsB,aAAa,qBAAqB,0BAA0B,8BAA8B,sBAAsB,kCAAkC,sBAAsB,iBAAiB,mCAAmC,sBAAsB,aAAa,2CAA2C,mCAAmC,yDAAyD,sBAAsB,aAAa,gHAAgH,sBAAsB,+EAA+E,oCAAoC,2BAA2B,sDAAsD,IAAI,gCAAgC,2CAA2C,iBAAiB,+CAA+C,qBAAqB,sBAAsB,gDAAgD,uBAAuB,6BAA6B,YAAY,KAAK,IAAI,2BAA2B,UAAU,IAAI,4CAA4C,eAAe,WAAW,8BAA8B,sBAAsB,2FAA2F,wDAAwD,yBAAyB,mFAAmF,IAAI,oDAAoD,oBAAoB,gBAAgB,gBAAgB,gBAAgB,cAAc,eAAe,gBAAgB,cAAc,uBAAuB,WAAW,mGAAmG,sBAAsB,iDAAiD,sBAAsB,6BAA6B,SAAS,uBAAuB,gBAAgB,OAAO,OAAO,uBAAuB,IAAI,sBAAsB,aAAa,cAAc,wBAAwB,YAAY,yBAAyB,0BAA0B,SAAS,IAAI,IAAI,sBAAsB,sEAAsE,yBAAyB,KAAK,4CAA4C,aAAa,EAAE,WAAW,YAAY,MAAM,0EAA0E,KAAK,WAAW,+BAA+B,WAAW,WAAW,wBAAwB,sBAAsB,aAAa,uFAAuF,0BAA0B,IAAI,mCAAmC,YAAY,WAAW,SAAS,+BAA+B,GAAG,0BAA0B,yEAAyE,kBAAkB,eAAe,mBAAmB,sBAAsB,qDAAqD,0BAA0B,gEAAgE,IAAI,oBAAoB,qBAAqB,qBAAqB,cAAc,sBAAsB,sBAAsB,2CAA2C,wBAAwB,mDAAmD,iBAAiB,2BAA2B,IAAI,EAAE,eAAe,iBAAiB,aAAa,kBAAkB,SAAS,qBAAqB,sCAAsC,SAAS,iEAAiE,UAAU,YAAY,sBAAsB,8DAA8D,sBAAsB,MAAM,kHAAkH,sBAAsB,cAAc,wBAAwB,6BAA6B,sBAAsB,wBAAwB,4BAA4B,IAAI,8BAA8B,SAAS,iBAAiB,sBAAsB,+BAA+B,IAAI,WAAW,gBAAgB,OAAO,YAAY,mBAAmB,OAAO,gBAAgB,YAAY,0BAA0B,QAAQ,GAAG,UAAU,wBAAwB,mBAAmB,SAAS,IAAI,SAAS,gBAAgB,OAAO,gBAAgB,OAAO,aAAa,MAAM,UAAU,UAAU,sBAAsB,oBAAoB,yBAAyB,sBAAsB,qBAAqB,qBAAqB,+FAA+F,iBAAiB,IAAI,0BAA0B,UAAU,+EAA+E,IAAI,YAAY,WAAW,oEAAoE,sBAAsB,4CAA4C,0BAA0B,+BAA+B,WAAW,KAAK,WAAW,mCAAmC,sBAAsB,uBAAuB,sBAAsB,UAAU,IAAI,YAAY,SAAS,IAAI,2BAA2B,WAAW,UAAU,sBAAsB,cAAc,yBAAyB,cAAc,+EAA+E,GAAG,kBAAkB,wBAAwB,OAAO,iBAAiB,sBAAsB,kCAAkC,4BAA4B,uBAAuB,iBAAiB,iBAAiB,kBAAkB,wBAAwB,OAAO,gEAAgE,sBAAsB,aAAa,kCAAkC,0BAA0B,WAAW,+BAA+B,sBAAsB,aAAa,oCAAoC,sBAAsB,kDAAkD,+CAA+C,kBAAkB,sBAAsB,wBAAwB,0BAA0B,yBAAyB,UAAU,oBAAoB,UAAU,cAAc,sBAAsB,2CAA2C,4BAA4B,QAAQ,EAAE,8CAA8C,2CAA2C,KAAK,IAAI,kCAAkC,UAAU,kBAAkB,8EAA8E,EAAE,UAAU,sBAAsB,sCAAsC,wBAAwB,IAAI,OAAO,oCAAoC,EAAE,SAAS,OAAO,UAAU,sBAAsB,aAAa,0BAA0B,wBAAwB,qEAAqE,sBAAsB,cAAc,yBAAyB,kCAAkC,IAAI,eAAe,UAAU,KAAK,GAAG,kBAAkB,uEAAuE,WAAW,oBAAoB,qBAAqB,+DAA+D,sBAAsB,gCAAgC,kBAAkB,gBAAgB,sBAAsB,gEAAgE,UAAU,kBAAkB,WAAW,qfAAqf,sBAAsB,2EAA2E,wCAAwC,sBAAsB,uCAAuC,qBAAqB,qBAAqB,cAAc,iCAAiC,sBAAsB,cAAc,6DAA6D,kBAAkB,yEAAyE,sBAAsB,yFAAyF,wJAAwJ,sBAAsB,4CAA4C,qBAAqB,iBAAiB,wHAAwH,sBAAsB,4EAA4E,wBAAwB,6CAA6C,uBAAuB,WAAW,wBAAwB,oGAAoG,+BAA+B,OAAO,iDAAiD,kBAAkB,sBAAsB,IAAI,YAAY,SAAS,WAAW,sBAAsB,aAAa,QAAQ,kGAAkG,4BAA4B,4BAA4B,SAAS,uBAAuB,SAAS,aAAa,uBAAuB,eAAe,yBAAyB,gBAAgB,6BAA6B,SAAS,2CAA2C,iBAAiB,aAAa,GAAG,cAAc,iDAAiD,oBAAoB,gCAAgC,uBAAuB,EAAE,uBAAuB,EAAE,SAAS,GAAG,uCAAuC,sBAAsB,sBAAsB,sDAAsD,2EAA2E,4BAA4B,EAAE,sBAAsB,8CAA8C,wBAAwB,6CAA6C,8BAA8B,sBAAsB,cAAc,yBAAyB,kBAAkB,QAAQ,0DAA0D,GAAG,sBAAsB,wCAAwC,iCAAiC,6BAA6B,sBAAsB,+HAA+H,6CAA6C,WAAW,kCAAkC,sBAAsB,wBAAwB,0BAA0B,IAAI,qDAAqD,YAAY,sBAAsB,wBAAwB,sBAAsB,kCAAkC,sBAAsB,kEAAkE,0BAA0B,kBAAkB,8BAA8B,sBAAsB,uBAAuB,wBAAwB,+DAA+D,OAAO,sBAAsB,iEAAiE,sBAAsB,oDAAoD,sBAAsB,kEAAkE,wBAAwB,gCAAgC,yBAAyB,kCAAkC,sBAAsB,kEAAkE,sBAAsB,iBAAiB,SAAS,4BAA4B,IAAI,KAAK,WAAW,wFAAwF,oBAAoB,qBAAqB,mBAAmB,oBAAoB,YAAY,IAAI,4BAA4B,sBAAsB,wBAAwB,wBAAwB,WAAW,yBAAyB,qBAAqB,kGAAkG,IAAI,4BAA4B,IAAI,IAAI,gCAAgC,gCAAgC,qDAAqD,MAAM,eAAe,kBAAkB,iBAAiB,wBAAwB,sBAAsB,uBAAuB,MAAM,iBAAiB,kBAAkB,QAAQ,cAAc,2DAA2D,SAAS,uBAAuB,IAAI,sBAAsB,kBAAkB,2BAA2B,mKAAmK,YAAY,oCAAoC,sBAAsB,8BAA8B,iBAAiB,uCAAuC,kBAAkB,kBAAkB,aAAa,qBAAqB,cAAc,0CAA0C,sBAAsB,iCAAiC,6BAA6B,8CAA8C,eAAe,UAAU,IAAI,GAAG,sBAAsB,yDAAyD,wBAAwB,sCAAsC,eAAe,kCAAkC,GAAG,sBAAsB,gCAAgC,0BAA0B,QAAQ,kFAAkF,sBAAsB,wDAAwD,iDAAiD,YAAY,4BAA4B,sBAAsB,kJAAkJ,eAAe,+BAA+B,oDAAoD,uBAAuB,+BAA+B,eAAe,oBAAoB,eAAe,iBAAiB,KAAK,iBAAiB,wBAAwB,qBAAqB,6BAA6B,eAAe,sBAAsB,eAAe,eAAe,WAAW,sCAAsC,uBAAuB,EAAE,uBAAuB,mBAAmB,MAAM,6EAA6E,YAAY,sBAAsB,0DAA0D,sBAAsB,4CAA4C,sBAAsB,cAAc,qCAAqC,qBAAqB,qBAAqB,sBAAsB,mCAAmC,kCAAkC,aAAa,4BAA4B,sBAAsB,4EAA4E,qGAAqG,kBAAkB,IAAI,mBAAmB,SAAS,UAAU,eAAe,kBAAkB,aAAa,kFAAkF,IAAI,sBAAsB,SAAS,WAAW,sCAAsC,MAAM,6CAA6C,KAAK,MAAM,OAAO,sBAAsB,2DAA2D,cAAc,mCAAmC,2BAA2B,8CAA8C,YAAY,iCAAiC,YAAY,sBAAsB,0BAA0B,wCAAwC,oCAAoC,kBAAkB,sBAAsB,gBAAgB,qBAAqB,+BAA+B,mCAAmC,8CAA8C,aAAa,wCAAwC,kBAAkB,aAAa,sBAAsB,0CAA0C,sBAAsB,MAAM,qDAAqD,sBAAsB,oDAAoD,wBAAwB,yBAAyB,aAAa,kBAAkB,kCAAkC,sBAAsB,kCAAkC,0BAA0B,QAAQ,KAAK,IAAI,uBAAuB,uBAAuB,SAAS,SAAS,SAAS,SAAS,uBAAuB,aAAa,eAAe,sBAAsB,aAAa,mFAAmF,aAAa,4BAA4B,oBAAoB,wBAAwB,cAAc,yBAAyB,sBAAsB,aAAa,yRAAyR,aAAa,kCAAkC,SAAS,wBAAwB,qBAAqB,0BAA0B,UAAU,uCAAuC,sBAAsB,kBAAkB,oBAAoB,8GAA8G,4LAA4L,iBAAiB,WAAW,uCAAuC,6CAA6C,QAAQ,8BAA8B,IAAI,iCAAiC,OAAO,YAAY,sBAAsB,aAAa,2GAA2G,iGAAiG,SAAS,wBAAwB,OAAO,wCAAwC,YAAY,cAAc,8CAA8C,kBAAkB,aAAa,sBAAsB,cAAc,sBAAsB,oBAAoB,sBAAsB,oNAAoN,0BAA0B,YAAY,QAAQ,SAAS,gEAAgE,yKAAyK,wBAAwB,kEAAkE,cAAc,EAAE,IAAI,yDAAyD,YAAY,oCAAoC,UAAU,WAAW,iEAAiE,0CAA0C,wCAAwC,cAAc,kBAAkB,6BAA6B,kCAAkC,SAAS,oBAAoB,sBAAsB,0BAA0B,sBAAsB,iEAAiE,UAAU,sBAAsB,aAAa,qJAAqJ,4BAA4B,aAAa,IAAI,OAAO,MAAM,6BAA6B,YAAY,sBAAsB,GAAG,GAAG,IAAI,cAAc,QAAQ,KAAK,qCAAqC,+CAA+C,OAAO,UAAU,cAAc,iBAAiB,iBAAiB,kDAAkD,IAAI,oEAAoE,IAAI,oCAAoC,SAAS,GAAG,oBAAoB,gIAAgI,eAAe,6BAA6B,eAAe,yBAAyB,4BAA4B,gBAAgB,cAAc,IAAI,gCAAgC,UAAU,UAAU,qOAAqO,mBAAmB,IAAI,mBAAmB,YAAY,+CAA+C,MAAM,kFAAkF,sBAAsB,gEAAgE,gDAAgD,KAAK,uCAAuC,IAAI,sBAAsB,UAAU,sBAAsB,yKAAyK,wBAAwB,uFAAuF,aAAa,0BAA0B,sEAAsE,EAAE,gBAAgB,mBAAmB,0BAA0B,gBAAgB,UAAU,2DAA2D,qCAAqC,sBAAsB,sHAAsH,sBAAsB,uBAAuB,cAAc,UAAU,sCAAsC,sBAAsB,kJAAkJ,wBAAwB,qCAAqC,IAAI,YAAY,SAAS,aAAa,aAAa,sBAAsB,oDAAoD,4CAA4C,eAAe,oBAAoB,iCAAiC,sBAAsB,4FAA4F,yCAAyC,WAAW,sBAAsB,oBAAoB,+DAA+D,sBAAsB,cAAc,cAAc,gBAAgB,sBAAsB,2EAA2E,wBAAwB,sBAAsB,mCAAmC,KAAK,WAAW,kCAAkC,UAAU,sBAAsB,uBAAuB,mCAAmC,eAAe,oBAAoB,aAAa,QAAQ,sEAAsE,IAAI,IAAI,kBAAkB,gBAAgB,wBAAwB,GAAG,sBAAsB,aAAa,4CAA4C,4BAA4B,gBAAgB,oBAAoB,0CAA0C,gBAAgB,GAAG,sBAAsB,kCAAkC,iDAAiD,YAAY,gBAAgB,IAAI,qEAAqE,UAAU,qBAAqB,2CAA2C,WAAW,qBAAqB,aAAa,uBAAuB,cAAc,qBAAqB,8BAA8B,sBAAsB,4CAA4C,wBAAwB,QAAQ,wDAAwD,yCAAyC,wDAAwD,oDAAoD,sBAAsB,qEAAqE,8CAA8C,sBAAsB,sBAAsB,qBAAqB,cAAc,YAAY,sBAAsB,gBAAgB,0BAA0B,eAAe,+BAA+B,YAAY,iBAAiB,QAAQ,GAAG,sBAAsB,iEAAiE,wBAAwB,aAAa,SAAS,eAAe,wBAAwB,mCAAmC,wDAAwD,sBAAsB,aAAa,mXAAmX,gCAAgC,+CAA+C,yEAAyE,yDAAyD,2cAA2c,QAAQ,qBAAqB,yCAAyC,mCAAmC,WAAW,2BAA2B,SAAS,cAAc,sBAAsB,aAAa,cAAc,qBAAqB,mBAAmB,mLAAmL,sBAAsB,+DAA+D,sBAAsB,cAAc,gEAAgE,sBAAsB,+CAA+C,iBAAiB,0CAA0C,sBAAsB,yBAAyB,sBAAsB,mBAAmB,yCAAyC,GAAG,WAAW,gDAAgD,sBAAsB,+BAA+B,wBAAwB,iBAAiB,+CAA+C,GAAG,sBAAsB,+BAA+B,wBAAwB,uBAAuB,gEAAgE,GAAG,sBAAsB,0BAA0B,sBAAsB,2CAA2C,UAAU,sBAAsB,aAAa,2DAA2D,sBAAsB,WAAW,oBAAoB,+BAA+B,aAAa,GAAG,sBAAsB,mDAAmD,0BAA0B,0CAA0C,wBAAwB,GAAG,sBAAsB,oCAAoC,sBAAsB,0BAA0B,sBAAsB,6DAA6D,EAAE,YAAY,sBAAsB,wBAAwB,yBAAyB,kCAAkC,EAAE,uBAAuB,8MAA8M,EAAE,sBAAsB,uDAAuD,wBAAwB,yBAAyB,wCAAwC,sBAAsB,0GAA0G,qBAAqB,oCAAoC,mJAAmJ,WAAW,2BAA2B,sBAAsB,yCAAyC,sBAAsB,qBAAqB,qDAAqD,IAAI,sBAAsB,kIAAkI,mBAAmB,cAAc,mDAAmD,WAAW,+BAA+B,sBAAsB,yCAAyC,yDAAyD,eAAe,kEAAkE,GAAG,sBAAsB,4CAA4C,qBAAqB,qEAAqE,6BAA6B,iBAAiB,GAAG,QAAQ,GAAG,sBAAsB,cAAc,2CAA2C,qBAAqB,cAAc,wBAAwB,sBAAsB,oCAAoC,wBAAwB,WAAW,4BAA4B,sBAAsB,wBAAwB,sBAAsB,gBAAgB,sBAAsB,cAAc,sBAAsB,SAAS,2BAA2B,sBAAsB,yBAAyB,sBAAsB,uCAAuC,sBAAsB,uBAAuB,sBAAsB,gBAAgB,sBAAsB,8FAA8F,wBAAwB,wBAAwB,eAAe,MAAM,6DAA6D,mDAAmD,wCAAwC,sBAAsB,wBAAwB,sBAAsB,oBAAoB,oBAAoB,sBAAsB,SAAS,iEAAiE,sBAAsB,sBAAsB,sBAAsB,gFAAgF,aAAa,kBAAkB,aAAa,sBAAsB,IAAI,YAAY,SAAS,iBAAiB,sBAAsB,mDAAmD,sBAAsB,oDAAoD,sBAAsB,cAAc,4DAA4D,sBAAsB,wBAAwB,2BAA2B,8CAA8C,eAAe,qBAAqB,YAAY,GAAG,sBAAsB,mCAAmC,8CAA8C,sBAAsB,6CAA6C,sBAAsB,4BAA4B,EAAE,eAAe,aAAa,GAAG,sBAAsB,cAAc,MAAM,sBAAsB,yHAAyH,sBAAsB,0DAA0D,kBAAkB,0DAA0D,sBAAsB,aAAa,6KAA6K,SAAS,iCAAiC,iBAAiB,kBAAkB,WAAW,4BAA4B,GAAG,wDAAwD,EAAE,mBAAmB,qCAAqC,4BAA4B,IAAI,wDAAwD,IAAI,4BAA4B,uBAAuB,qBAAqB,EAAE,sBAAsB,aAAa,+BAA+B,GAAG,kDAAkD,EAAE,mBAAmB,yDAAyD,EAAE,sBAAsB,wBAAwB,GAAG,oDAAoD,cAAc,GAAG,EAAE,OAAO,EAAE,sBAAsB,aAAa,qDAAqD,GAAG,6CAA6C,2BAA2B,GAAG,EAAE,qBAAqB,yDAAyD,gBAAgB,sBAAsB,aAAa,2FAA2F,GAAG,gDAAgD,EAAE,oBAAoB,6CAA6C,qCAAqC,EAAE,sBAAsB,aAAa,4IAA4I,yCAAyC,QAAQ,kCAAkC,EAAE,cAAc,8CAA8C,iGAAiG,YAAY,0BAA0B,mEAAmE,YAAY,eAAe,EAAE,WAAW,sBAAsB,aAAa,mEAAmE,GAAG,yDAAyD,EAAE,iBAAiB,oCAAoC,EAAE,sBAAsB,aAAa,4BAA4B,GAAG,+CAA+C,EAAE,gBAAgB,yDAAyD,EAAE,sBAAsB,aAAa,iDAAiD,GAAG,kEAAkE,EAAE,mBAAmB,uBAAuB,4CAA4C,EAAE,sBAAsB,aAAa,+JAA+J,GAAG,kCAAkC,EAAE,oBAAoB,0DAA0D,gIAAgI,wCAAwC,IAAI,4BAA4B,qBAAqB,EAAE,sBAAsB,aAAa,4LAA4L,eAAe,mBAAmB,aAAa,gCAAgC,iBAAiB,cAAc,cAAc,kBAAkB,iBAAiB,SAAS,KAAK,KAAK,mCAAmC,oCAAoC,MAAM,oBAAoB,MAAM,YAAY,QAAQ,KAAK,YAAY,UAAU,EAAE,0BAA0B,eAAe,OAAO,WAAW,wDAAwD,yBAAyB,GAAG,GAAG,6CAA6C,EAAE,iBAAiB,iBAAiB,cAAc,mCAAmC,oBAAoB,QAAQ,IAAI,sBAAsB,oBAAoB,qBAAqB,wEAAwE,gBAAgB,IAAI,aAAa,KAAK,IAAI,UAAU,UAAU,EAAE,qBAAqB,aAAa,kJAAkJ,GAAG,kCAAkC,EAAE,qBAAqB,6DAA6D,mFAAmF,IAAI,6BAA6B,mBAAmB,QAAQ,MAAM,uCAAuC,QAAQ,QAAQ,aAAa,sBAAsB,IAAI,2CAA2C,QAAQ,IAAI,0BAA0B,qBAAqB,EAAE,sBAAsB,4EAA4E,iBAAiB,sBAAsB,yKAAyK,mBAAmB,+BAA+B,IAAI,uBAAuB,SAAS,WAAW,EAAE,sBAAsB,uTAAuT,oBAAoB,2BAA2B,MAAM,IAAI,MAAM,gBAAgB,mBAAmB,wEAAwE,mBAAmB,0BAA0B,qDAAqD,6CAA6C,aAAa,mBAAmB,0BAA0B,8DAA8D,MAAM,0CAA0C,EAAE,0BAA0B,qCAAqC,yCAAyC,EAAE,sBAAsB,aAAa,qSAAqS,oCAAoC,6DAA6D,qEAAqE,uCAAuC,gBAAgB,eAAe,yBAAyB,MAAM,0BAA0B,MAAM,iBAAiB,4BAA4B,IAAI,qCAAqC,qBAAqB,SAAS,uDAAuD,2CAA2C,oBAAoB,gCAAgC,KAAK,kCAAkC,KAAK,0BAA0B,0CAA0C,0CAA0C,EAAE,SAAS,EAAE,oBAAoB,sNAAsN,WAAW,yCAAyC,kCAAkC,sBAAsB,SAAS,wBAAwB,EAAE,kBAAkB,EAAE,sBAAsB,wBAAwB,GAAG,yDAAyD,EAAE,SAAS,EAAE,sBAAsB,aAAa,gEAAgE,MAAM,kCAAkC,EAAE,+BAA+B,eAAe,uCAAuC,GAAG,EAAE,sBAAsB,wDAAwD,GAAG,iDAAiD,KAAK,WAAW,EAAE,uCAAuC,kBAAkB,EAAE,sBAAsB,gEAAgE,GAAG,gCAAgC,EAAE,sCAAsC,oCAAoC,KAAK,WAAW,sCAAsC,UAAU,EAAE,sBAAsB,oCAAoC,GAAG,6CAA6C,qCAAqC,GAAG,EAAE,sBAAsB,EAAE,sBAAsB,sDAAsD,GAAG,iDAAiD,OAAO,GAAG,EAAE,kCAAkC,UAAU,qBAAqB,EAAE,sBAAsB,kCAAkC,GAAG,mDAAmD,KAAK,GAAG,EAAE,iBAAiB,gBAAgB,EAAE,sBAAsB,iCAAiC,oCAAoC,UAAU,EAAE,sBAAsB,8eAA8e,kDAAkD,IAAI,kBAAkB,wBAAwB,yDAAyD,wCAAwC,gOAAgO,uCAAuC,oBAAoB,KAAK,KAAK,iCAAiC,qBAAqB,sBAAsB,iBAAiB,MAAM,gDAAgD,SAAS,2EAA2E,oCAAoC,SAAS,YAAY,YAAY,wGAAwG,mCAAmC,KAAK,iGAAiG,SAAS,2DAA2D,8BAA8B,UAAU,SAAS,YAAY,WAAW,eAAe,8CAA8C,eAAe,EAAE,YAAY,sBAAsB,aAAa,wBAAwB,GAAG,6CAA6C,EAAE,OAAO,EAAE,sBAAsB,aAAa,0HAA0H,sBAAsB,qBAAqB,EAAE,kBAAkB,yCAAyC,cAAc,kCAAkC,GAAG,UAAU,EAAE,sBAAsB,aAAa,gFAAgF,GAAG,+CAA+C,EAAE,qBAAqB,uEAAuE,EAAE,sBAAsB,aAAa,0GAA0G,+BAA+B,QAAQ,2BAA2B,EAAE,cAAc,qCAAqC,qEAAqE,GAAG,sBAAsB,aAAa,iYAAiY,WAAW,0BAA0B,QAAQ,oDAAoD,EAAE,gBAAgB,cAAc,8BAA8B,mCAAmC,0IAA0I,iBAAiB,mDAAmD,+GAA+G,GAAG,kCAAkC,EAAE,qBAAqB,sBAAsB,SAAS,mBAAmB,KAAK,4FAA4F,mBAAmB,mEAAmE,sDAAsD,sBAAsB,sBAAsB,aAAa,wGAAwG,2BAA2B,mBAAmB,mCAAmC,yCAAyC,aAAa,gCAAgC,yBAAyB,2BAA2B,gBAAgB,cAAc,mBAAmB,kBAAkB,EAAE,cAAc,uDAAuD,oBAAoB,EAAE,GAAG,sBAAsB,aAAa,wUAAwU,6BAA6B,iBAAiB,qBAAqB,mCAAmC,kCAAkC,eAAe,qBAAqB,oDAAoD,iBAAiB,yBAAyB,WAAW,YAAY,eAAe,MAAM,gBAAgB,cAAc,cAAc,EAAE,aAAa,kBAAkB,mBAAmB,kDAAkD,uBAAuB,WAAW,KAAK,gEAAgE,WAAW,uCAAuC,eAAe,MAAM,mBAAmB,mBAAmB,uBAAuB,sBAAsB,mCAAmC,gBAAgB,EAAE,kBAAkB,UAAU,yBAAyB,SAAS,iBAAiB,MAAM,GAAG,4BAA4B,WAAW,sBAAsB,aAAa,gSAAgS,sBAAsB,kBAAkB,gCAAgC,oBAAoB,4CAA4C,GAAG,2BAA2B,MAAM,4MAA4M,sCAAsC,kBAAkB,wBAAwB,2BAA2B,sIAAsI,oIAAoI,sCAAsC,2EAA2E,0CAA0C,0CAA0C,kBAAkB,mCAAmC,kCAAkC,eAAe,wCAAwC,yBAAyB,kKAAkK,kBAAkB,4CAA4C,qBAAqB,WAAW,EAAE,kBAAkB,wBAAwB,mEAAmE,KAAK,uCAAuC,YAAY,cAAc,uCAAuC,OAAO,qBAAqB,EAAE,QAAQ,sBAAsB,aAAa,6BAA6B,GAAG,gDAAgD,EAAE,gBAAgB,gBAAgB,EAAE,sBAAsB,aAAa,8nBAA8nB,gBAAgB,MAAM,eAAe,mBAAmB,QAAQ,KAAK,KAAK,mBAAmB,aAAa,2CAA2C,oBAAoB,iBAAiB,YAAY,2BAA2B,yBAAyB,oBAAoB,uBAAuB,WAAW,wEAAwE,mBAAmB,wBAAwB,mCAAmC,kBAAkB,KAAK,gCAAgC,wBAAwB,4BAA4B,KAAK,gBAAgB,yBAAyB,6FAA6F,kBAAkB,kBAAkB,6BAA6B,aAAa,0DAA0D,gBAAgB,mBAAmB,wBAAwB,yBAAyB,KAAK,gBAAgB,gCAAgC,wBAAwB,kCAAkC,MAAM,iBAAiB,oDAAoD,0FAA0F,gFAAgF,sBAAsB,sBAAsB,UAAU,iCAAiC,mBAAmB,oCAAoC,kBAAkB,iEAAiE,kBAAkB,wBAAwB,+BAA+B,4BAA4B,oCAAoC,UAAU,OAAO,mDAAmD,EAAE,SAAS,uBAAuB,KAAK,MAAM,2BAA2B,EAAE,qBAAqB,MAAM,sBAAsB,OAAO,KAAK,0CAA0C,EAAE,qBAAqB,kCAAkC,mEAAmE,KAAK,kCAAkC,EAAE,uBAAuB,qBAAqB,sBAAsB,aAAa,mIAAmI,8DAA8D,QAAQ,cAAc,gHAAgH,2BAA2B,qCAAqC,+HAA+H,mBAAmB,+BAA+B,cAAc,mBAAmB,qCAAqC,uBAAuB,KAAK,mCAAmC,EAAE,SAAS,GAAG,qBAAqB,kIAAkI,GAAG,kCAAkC,EAAE,gBAAgB,WAAW,sBAAsB,qBAAqB,wBAAwB,EAAE,sBAAsB,oBAAoB,sBAAsB,uCAAuC,sBAAsB,iGAAiG,GAAG,kCAAkC,EAAE,mBAAmB,kDAAkD,uBAAuB,EAAE,sBAAsB,wBAAwB,qBAAqB,sBAAsB,QAAQ,sBAAsB,oEAAoE,wBAAwB,iBAAiB,SAAS,cAAc,6CAA6C,KAAK,sBAAsB,8HAA8H,MAAM,gBAAgB,SAAS,SAAS,OAAO,yDAAyD,YAAY,SAAS,aAAa,yCAAyC,qBAAqB,MAAM,cAAc,WAAW,+BAA+B,YAAY,YAAY,oDAAoD,kBAAkB,+DAA+D,uBAAuB,EAAE,gBAAgB,iDAAiD,IAAI,2CAA2C,SAAS,0CAA0C,qBAAqB,iDAAiD,iBAAiB,4FAA4F,eAAe,wCAAwC,SAAS,GAAG,SAAS,kBAAkB,aAAa,cAAc,0BAA0B,SAAS,oBAAoB,UAAU,EAAE,+FAA+F,gGAAgG,mDAAmD,mNAAmN,kBAAkB,qFAAqF,qCAAqC,iCAAiC,0BAA0B,IAAI,uCAAuC,SAAS,iBAAiB,qDAAqD,iBAAiB,mEAAmE,oGAAoG,mBAAmB,eAAe,mFAAmF,IAAI,oBAAoB,iCAAiC,yCAAyC,wBAAwB,oBAAoB,oCAAoC,qBAAqB,wBAAwB,oBAAoB,kBAAkB,sCAAsC,GAAG,wCAAwC,aAAa,2BAA2B,qBAAqB,wCAAwC,GAAG,wBAAwB,GAAG,mCAAmC,aAAa,2BAA2B,wBAAwB,0DAA0D,yCAAyC,yBAAyB,cAAc,iDAAiD,uBAAuB,sBAAsB,mBAAmB,OAAO,qCAAqC,IAAI,wBAAwB,SAAS,sFAAsF,qDAAqD,kBAAkB,kCAAkC,2DAA2D,kBAAkB,gCAAgC,sCAAsC,yBAAyB,QAAQ,IAAI,oCAAoC,qBAAqB,2DAA2D,oCAAoC,4CAA4C,+DAA+D,iGAAiG,mDAAmD,yFAAyF,SAAS,IAAI,wNAAwN,cAAc,mBAAmB,gCAAgC,iBAAiB,oGAAoG,sBAAsB,4JAA4J,GAAG,gBAAgB,MAAM,oCAAoC,oDAAoD,gLAAgL,gBAAgB,oCAAoC,2BAA2B,IAAI,cAAc,SAAS,cAAc,iFAAiF,gBAAgB,aAAa,oGAAoG,MAAM,gBAAgB,YAAY,WAAW,KAAK,WAAW,kHAAkH,kBAAkB,8CAA8C,kDAAkD,WAAW,cAAc,oBAAoB,sCAAsC,4BAA4B,eAAe,6BAA6B,4BAA4B,oEAAoE,sCAAsC,aAAa,kCAAkC,iBAAiB,cAAc,6EAA6E,eAAe,8EAA8E,+MAA+M,cAAc,YAAY,mBAAmB,8GAA8G,UAAU,eAAe,sCAAsC,oBAAoB,iBAAiB,MAAM,GAAG,mCAAmC,EAAE,uCAAuC,0CAA0C,gBAAgB,WAAW,gFAAgF,EAAE,wCAAwC,OAAO,EAAE,KAAK,gBAAgB,UAAU,gBAAgB,MAAM,cAAc,MAAM,YAAY,UAAU,YAAY,WAAW,YAAY,IAAI,UAAU,EAAE,YAAY,IAAI,UAAU,KAAK,WAAW,SAAS,WAAW,OAAO,aAAa,MAAM,QAAQ,GAAG,QAAQ,IAAI,UAAU,OAAO,UAAU,GAAG,SAAS,GAAG,SAAS,GAAG,SAAS,GAAG,SAAS,GAAG,SAAS,GAAG,SAAS,GAAG,SAAS,GAAG,SAAS,GAAG,SAAS,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,aAAa,QAAQ,QAAQ,WAAW,QAAQ,QAAQ,UAAU,QAAQ,UAAU,QAAQ,WAAW,QAAQ,OAAO,YAAY,WAAW,aAAa,MAAM,YAAY,OAAO,UAAU,KAAK,WAAW,OAAO,SAAS,OAAO,UAAU,cAAc,UAAU,IAAI,UAAU,SAAS,WAAW,eAAe,QAAQ,eAAe,QAAQ,UAAU,QAAQ,YAAY,YAAY,OAAO,QAAQ,cAAc,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,EAAE,+CAA+C,iFAAiF,+DAA+D,EAAE,4CAA4C,2JAA2J,SAAS,KAAK,SAAS,UAAU,gEAAgE,OAAO,SAAS,cAAc,uEAAuE,MAAM,yDAAyD,IAAI,+DAA+D,MAAM,SAAS,YAAY,oJAAoJ,aAAa,yDAAyD,eAAe,yDAAyD,eAAe,yDAAyD,UAAU,yDAAyD,cAAc,yDAAyD,SAAS,kEAAkE,iBAAiB,sMAAsM,EAAE,uCAAuC,+FAA+F,2BAA2B,sBAAsB,IAAI,EAAE,6CAA6C,4GAA4G,4EAA4E,EAAE,sCAAsC,oMAAoM,8HAA8H,EAAE,iCAAiC,oMAAoM,yBAAyB,UAAU,0CAA0C,iRAAiR,6DAA6D,sBAAsB,GAAG,UAAU,EAAE,yCAAyC,oMAAoM,2NAA2N,sBAAsB,UAAU,EAAE,0CAA0C,kFAAkF,+BAA+B,+IAA+I,oBAAoB,4CAA4C,0HAA0H,EAAE,0CAA0C,uCAAuC,EAAE,qCAAqC,yDAAyD,EAAE,8CAA8C,6BAA6B,EAAE,kCAAkC,yEAAyE,kDAAkD,OAAO,EAAE,qCAAqC,0DAA0D,0BAA0B,IAAI,EAAE,oCAAoC,sCAAsC,aAAa,EAAE,uCAAuC,yBAAyB,6DAA6D,MAAM,sCAAsC,sBAAsB,sEAAsE,OAAO,gEAAgE,SAAS,uBAAuB,OAAO,iBAAiB,oBAAoB,QAAQ,EAAE,sBAAsB,eAAe,QAAQ,MAAM,6JAA6J,gBAAgB,OAAO,aAAa,YAAY,cAAc,eAAe,kBAAkB,eAAe,SAAS,cAAc,IAAI,8BAA8B,QAAQ,gBAAgB,0CAA0C,IAAI,UAAU,gBAAgB,EAAE,cAAc,2DAA2D,SAAS,OAAO,QAAQ,QAAQ,qEAAqE,YAAY,IAAI,GAAG,wBAAwB,GAAG,QAAQ,cAAc,iFAAiF,gBAAgB,aAAa,oGAAoG,MAAM,gBAAgB,YAAY,WAAW,KAAK,WAAW,kHAAkH,kBAAkB,8CAA8C,kDAAkD,WAAW,cAAc,oBAAoB,sCAAsC,4BAA4B,eAAe,6BAA6B,4BAA4B,oEAAoE,sCAAsC,aAAa,kCAAkC,iBAAiB,cAAc,uCAAuC,eAAe,8EAA8E,mGAAmG,kLAAkL,2DAA2D,UAAU,gBAAgB,+CAA+C,wBAAwB,oHAAoH,yCAAyC,2BAA2B,uDAAuD,aAAa,IAAI,aAAa,KAAK,aAAa,QAAQ,aAAa,GAAG,oBAAoB,8HAA8H,0BAA0B,0BAA0B,YAAY,uIAAuI,kDAAkD,MAAM,uCAAuC,gCAAgC,+LAA+L,IAAI,EAAE,6CAA6C,wBAAwB,oHAAoH,yCAAyC,2BAA2B,oDAAoD,aAAa,kBAAkB,+CAA+C,6CAA6C,YAAY,+KAA+K,IAAI,EAAE,mDAAmD,wEAAwE,6VAA6V,EAAE,qCAAqC,OAAO,+2BAA+2B,mFAAmF,SAAS,oEAAoE,YAAY,IAAI,GAAG,cAAc,iFAAiF,gBAAgB,aAAa,oGAAoG,MAAM,gBAAgB,YAAY,WAAW,KAAK,WAAW,kHAAkH,kBAAkB,8CAA8C,kDAAkD,WAAW,cAAc,oBAAoB,sCAAsC,4BAA4B,eAAe,6BAA6B,4BAA4B,oEAAoE,sCAAsC,aAAa,kCAAkC,iBAAiB,cAAc,8BAA8B,eAAe,8EAA8E,8QAA8Q,UAAU,eAAe,+BAA+B,gFAAgF,EAAE,6BAA6B,6DAA6D,gBAAgB,4DAA4D,iBAAiB,4GAA4G,oBAAoB,IAAI,EAAE,mCAAmC,mGAAmG,yKAAyK,mCAAmC,8DAA8D,kDAAkD,mEAAmE,yCAAyC,QAAQ,KAAK,mKAAmK,mBAAmB,sBAAsB,iEAAiE,cAAc,kBAAkB,GAAG,0CAA0C,2FAA2F,iBAAiB,iBAAiB,8EAA8E,GAAG,yIAAyI,4CAA4C,2FAA2F,iBAAiB,iBAAiB,8EAA8E,GAAG,sIAAsI,qEAAqE,YAAY,IAAI,OAAO,cAAc,mBAAmB,gCAAgC,iBAAiB,oGAAoG,mBAAmB,aAAa,oCAAoC,oDAAoD,oDAAoD,6CAA6C,qFAAqF,gBAAgB,4JAA4J,GAAG,gBAAgB,oCAAoC,2BAA2B,IAAI,cAAc,SAAS,cAAc,iFAAiF,gBAAgB,aAAa,oGAAoG,MAAM,gBAAgB,qBAAqB,iCAAiC,sCAAsC,4BAA4B,uDAAuD,sBAAsB,SAAS,gBAAgB,YAAY,WAAW,KAAK,WAAW,kHAAkH,kBAAkB,8CAA8C,kDAAkD,WAAW,cAAc,oBAAoB,sCAAsC,4BAA4B,eAAe,6BAA6B,4BAA4B,oEAAoE,sCAAsC,aAAa,kCAAkC,iBAAiB,gBAAgB,WAAW,iBAAiB,8EAA8E,yzBAAyzB,UAAU,0FAA0F,qCAAqC,mIAAmI,oCAAoC,qEAAqE,OAAO,4CAA4C,mCAAmC,iBAAiB,yCAAyC,uBAAuB,4CAA4C,0BAA0B,0CAA0C,8BAA8B,kBAAkB,+CAA+C,8CAA8C,IAAI,sBAAsB,yDAAyD,UAAU,aAAa,+BAA+B,6FAA6F,GAAG,sBAAsB,sIAAsI,iGAAiG,YAAY,mBAAmB,KAAK,yCAAyC,yCAAyC,YAAY,qIAAqI,gEAAgE,GAAG,SAAS,EAAE,4IAA4I,wDAAwD,6DAA6D,gBAAgB,gEAAgE,mEAAmE,4XAA4X,kDAAkD,+DAA+D,8CAA8C,0HAA0H,6BAA6B,qBAAqB,UAAU,eAAe,yCAAyC,+DAA+D,8CAA8C,EAAE,2CAA2C,sFAAsF,gCAAgC,yCAAyC,sHAAsH,gCAAgC,GAAG,eAAe,4BAA4B,yBAAyB,MAAM,OAAO,oCAAoC,aAAa,WAAW,OAAO,oCAAoC,UAAU,EAAE,8CAA8C,WAAW,2CAA2C,wDAAwD,gIAAgI,0BAA0B,0OAA0O,iUAAiU,GAAG,EAAE,8CAA8C,2EAA2E,KAAK,GAAG,OAAO,kCAAkC,+FAA+F,0VAA0V,qLAAqL,+EAA+E,kGAAkG,4jBAA4jB,uEAAuE,yGAAyG,wWAAwW,EAAE,oCAAoC,yBAAyB,EAAE,qCAAqC,2DAA2D,gBAAgB,uBAAuB,EAAE,gDAAgD,WAAW,sYAAsY,kCAAkC,kBAAkB,MAAM,OAAO,SAAS,UAAU,SAAS,KAAK,SAAS,MAAM,SAAS,IAAI,UAAU,WAAW,SAAS,UAAU,SAAS,QAAQ,SAAS,UAAU,2GAA2G,SAAS,EAAE,8CAA8C,WAAW,2eAA2e,wCAAwC,mLAAmL,EAAE,yDAAyD,0DAA0D,EAAE,yCAAyC,WAAW,iIAAiI,yGAAyG,QAAQ,EAAE,0CAA0C,WAAW,2BAA2B,+EAA+E,IAAI,EAAE,kCAAkC,sGAAsG,sGAAsG,EAAE,gCAAgC,gKAAgK,4JAA4J,EAAE,oCAAoC,gBAAgB,oDAAoD,sBAAsB,MAAM,EAAE,iCAAiC,+IAA+I,gFAAgF,EAAE,qCAAqC,cAAc,EAAE,kCAAkC,+DAA+D,0BAA0B,+IAA+I,EAAE,uCAAuC,WAAW,0CAA0C,2DAA2D,IAAI,EAAE,oCAAoC,gEAAgE,4NAA4N,8CAA8C,IAAI,EAAE,iCAAiC,uMAAuM,EAAE,iCAAiC,6JAA6J,wEAAwE,uCAAuC,IAAI,EAAE,yCAAyC,WAAW,yCAAyC,kCAAkC,kDAAkD,SAAS,uCAAuC,4CAA4C,KAAK,2BAA2B,sDAAsD,SAAS,kCAAkC,kBAAkB,EAAE,GAAG,mBAAmB,EAAE,4CAA4C,WAAW,gEAAgE,gHAAgH,QAAQ,6FAA6F,kCAAkC,mFAAmF,aAAa,GAAG,gHAAgH,SAAS,GAAG,mBAAmB,EAAE,yCAAyC,+BAA+B,mCAAmC,EAAE,4CAA4C,kCAAkC,6EAA6E,gBAAgB,gHAAgH,UAAU,EAAE,yCAAyC,6DAA6D,8FAA8F,2EAA2E,kWAAkW,EAAE,oCAAoC,iHAAiH,EAAE,sCAAsC,yFAAyF,EAAE,sCAAsC,2BAA2B,EAAE,uCAAuC,2BAA2B,EAAE,qCAAqC,2BAA2B,EAAE,8CAA8C,oEAAoE,EAAE,0CAA0C,aAAa,gFAAgF,2EAA2E,oFAAoF,MAAM,yFAAyF,yIAAyI,sDAAsD,gVAAgV,qPAAqP,IAAI,EAAE,uCAAuC,WAAW,yDAAyD,sCAAsC,IAAI,EAAE,+BAA+B,0GAA0G,2EAA2E,0fAA0f,oMAAoM,ucAAuc,EAAE,8CAA8C,oCAAoC,gDAAgD,gFAAgF,yBAAyB,2DAA2D,gFAAgF,MAAM,EAAE,iDAAiD,oCAAoC,yCAAyC,6PAA6P,IAAI,EAAE,6CAA6C,8DAA8D,EAAE,+CAA+C,iCAAiC,+FAA+F,EAAE,8CAA8C,yKAAyK,EAAE,8BAA8B,6KAA6K,EAAE,yCAAyC,ofAAof,EAAE,oCAAoC,+EAA+E,EAAE,gCAAgC,uEAAuE,EAAE,uCAAuC,qFAAqF,EAAE,mCAAmC,WAAW,gFAAgF,eAAe,kBAAkB,sFAAsF,EAAE,wCAAwC,6CAA6C,EAAE,sCAAsC,kCAAkC,EAAE,oDAAoD,wCAAwC,0CAA0C,WAAW,sBAAsB,gDAAgD,mCAAmC,mEAAmE,+BAA+B,wBAAwB,6BAA6B,wBAAwB,yDAAyD,wBAAwB,6DAA6D,MAAM,EAAE,8BAA8B,WAAW,gFAAgF,2EAA2E,qCAAqC,KAAK,IAAI,KAAK,8BAA8B,MAAM,oBAAoB,GAAG,MAAM,IAAI,OAAO,qBAAqB,MAAM,WAAW,MAAM,sCAAsC,KAAK,IAAI,KAAK,wBAAwB,KAAK,MAAM,uBAAuB,MAAM,IAAI,OAAO,qBAAqB,MAAM,WAAW,MAAM,GAAG,wIAAwI,oVAAoV,mBAAmB,wHAAwH,kHAAkH,IAAI,oCAAoC,sBAAsB,cAAc,yBAAyB,iIAAiI,0EAA0E,uLAAuL,yIAAyI,oBAAoB,mHAAmH,wDAAwD,0BAA0B,2BAA2B,6BAA6B,2BAA2B,yBAAyB,0FAA0F,2BAA2B,mHAAmH,yBAAyB,2BAA2B,+BAA+B,wDAAwD,2BAA2B,2BAA2B,+BAA+B,2BAA2B,iCAAiC,mEAAmE,kCAAkC,qCAAqC,0HAA0H,uEAAuE,+LAA+L,uCAAuC,oCAAoC,uCAAuC,2CAA2C,6CAA6C,qCAAqC,uCAAuC,0CAA0C,6CAA6C,oCAAoC,uCAAuC,4CAA4C,6CAA6C,kBAAkB,qEAAqE,YAAY,IAAI,WAAW,KAAK,GAAG;;;;;;;;;;;;;;;;;;;;;;;ACX7spG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,yBAAyB;AACzB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,kBAAkB;AACvD;AACA;AACA;AACA;AACA,8BAA8B,EAAE,eAAe,EAAE;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8EAA8E,wDAAwD;AACtI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2KAA2K;AAC3K,eAAe;;AAEf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAQ,0BAA0B;AAClC;;AAEA;AACA;AACA,eAAe,QAAQ;AACvB,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,QAAQ;AACvB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA,yFAAyF;;AAEzF;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,0DAA0D,+BAA+B;;AAEzF;AACA;AACA;AACA;;AAEA;AACA,+BAA+B;;AAE/B;AACA,UAAU,iCAAiC,oBAAoB;AAC/D;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,6BAA6B,qBAAqB;AAClD;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,oDAAoD,eAAe;AACnE,OAAO;;AAEP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,qBAAqB;;AAErB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,UAAU;AACV;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,QAAQ;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA,eAAe,SAAS;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,sDAAsD,eAAe;AACrE;AACA;;AAEA;AACA,gCAAgC;AAChC;AACA,uDAAuD,eAAe;AACtE;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,kDAAkD,eAAe;;AAEjE;AACA,yBAAyB,qBAAqB;AAC9C;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,QAAQ;AACvB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,eAAe,QAAQ;AACvB,gBAAgB,QAAQ;AACxB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,eAAe,QAAQ;AACvB;AACA;AACA;;AAEA;AACA;AACA,qDAAqD,eAAe;AACpE;;AAEA;AACA;AACA;;AAEA,+DAA+D,UAAU,gBAAgB;AACzF;;AAEA;AACA;AACA,eAAe,QAAQ;AACvB,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,QAAQ;AACvB,eAAe,QAAQ;AACvB;AACA;AACA;;AAEA;AACA;AACA,8BAA8B,EAAE;AAChC,8BAA8B,EAAE;AAChC;AACA;;AAEA;AACA;AACA;AACA,eAAe,QAAQ;AACvB,gBAAgB,QAAQ;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,QAAQ;AACvB,eAAe,QAAQ;AACvB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,eAAe,QAAQ;AACvB,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,eAAe,QAAQ;AACvB,eAAe,QAAQ;AACvB;AACA,sCAAsC,sBAAsB,WAAW,sBAAsB;AAC7F;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,oBAAoB,UAAU;AAC9B;AACA;;AAEA;AACA;AACA,eAAe,QAAQ;AACvB,gBAAgB,QAAQ;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,QAAQ;AACvB,gBAAgB,QAAQ;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,QAAQ;AACvB,gBAAgB,QAAQ;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2BAA2B;AAC3B,6BAA6B;AAC7B,4BAA4B;AAC5B,mBAAmB;AACnB;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,QAAQ;AACvB,gBAAgB,QAAQ;AACxB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,QAAQ;AACR,wDAAwD,EAAE,sBAAsB,wBAAwB;AACxG;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,eAAe,QAAQ;AACvB,gBAAgB,QAAQ;AACxB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,eAAe,QAAQ;AACvB,gBAAgB,QAAQ;AACxB;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA,eAAe,QAAQ;AACvB,gBAAgB,QAAQ;AACxB;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,yDAAyD;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA,OAAO;;AAEP;AACA,6DAA6D,gBAAgB;AAC7E,OAAO;;AAEP;AACA;AACA,OAAO;;AAEP;AACA,6DAA6D,gBAAgB;AAC7E,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA,OAAO;;AAEP;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;;AAEA;AACA,2EAA2E,eAAe;AAC1F,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAgB,OAAO;AACvB;AACA;AACA;AACA,wDAAwD,2BAA2B;;AAEnF;AACA;;AAEA;AACA;AACA,eAAe,QAAQ;AACvB,gBAAgB,QAAQ;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,QAAQ;AACvB,eAAe,QAAQ;AACvB,eAAe,mBAAmB;AAClC,eAAe,UAAU;AACzB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,UAAU;AACzB,eAAe,OAAO;AACtB;AACA;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,eAAe,QAAQ;AACvB,eAAe,aAAa;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,eAAe;AACrE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,SAAS;AACT,OAAO;;AAEP;AACA,oCAAoC,qEAAqE,cAAc,UAAU;AACjI;AACA;AACA,QAAQ,0BAA0B;;AAElC;AACA;AACA,4DAA4D,0BAA0B;AACtF,4DAA4D,0BAA0B;AACtF,OAAO;;AAEP;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;;AAEA,GAAG;AACH,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,OAAO,EAAC;;;;;;;UCxuCvB;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACN0D;AACI;AACjB;AACY;AACL;AACT;AACX;AACe;AACvB;AACgC;AACR;AACN;AACyB;AACN;AAC0B;AACvC;AAChD;AAC4D;AAChC;AACI;AAChC;AACA;AACA;AACA,oBAAoB,2DAAa;AACjC;AACA;AACA;AACA,0BAA0B,sDAAY;AACtC;AACA;AACA,wBAAwB,oEAAiB;AACzC;AACA;AACA,IAAI,8DAAiB;AACrB,IAAI,iEAAe;AACnB;AACA,6BAA6B,kEAAe;AAC5C,uBAAuB,2DAAS;AAChC;AACA;AACA,gCAAgC,oDAAkB;AAClD,gCAAgC,mEAAkB;AAClD;AACA;AACA;AACA;AACA,iBAAiB,iDAAG;AACpB;AACA;AACA,iBAAiB,4CAAG;AACpB;AACA;AACA;AACA;AACA;AACA,8BAA8B,kDAAgB;AAC9C;AACA;AACA;AACA,mBAAmB,mDAAK;AACxB;AACA;AACA;AACA;AACA,8BAA8B,2EAAgB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,qFAA0B;AAC3D;AACA;AACA;AACA;AACA,wBAAwB,8DAAU;AAClC;AACA;AACA,IAAI,uDAAoB;AACxB;AACA;AACA,aAAa,gDAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,iEAAmB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,E","sources":["webpack://dragonbms-interface-web/./js/ble/ble.js","webpack://dragonbms-interface-web/./js/ble/bleDevice.js","webpack://dragonbms-interface-web/./js/ble/bms.js","webpack://dragonbms-interface-web/./js/ble/disconnect_watchdog.js","webpack://dragonbms-interface-web/./js/ble/tacho.js","webpack://dragonbms-interface-web/./js/can/canBridge.js","webpack://dragonbms-interface-web/./js/can/dbcFile.js","webpack://dragonbms-interface-web/./js/can/dbcGUIManager.js","webpack://dragonbms-interface-web/./js/captureMode.js","webpack://dragonbms-interface-web/./js/connection_gui.js","webpack://dragonbms-interface-web/./js/dataDistribution/dataDistribution.js","webpack://dragonbms-interface-web/./js/dataDistribution/dataDistributionGUIManager.js","webpack://dragonbms-interface-web/./js/dataProcessing/bms_gathering.js","webpack://dragonbms-interface-web/./js/dataProcessing/bms_processing.js","webpack://dragonbms-interface-web/./js/dataProcessing/datalogging.js","webpack://dragonbms-interface-web/./js/dataProcessing/tacho_gathering.js","webpack://dragonbms-interface-web/./js/dataProcessing/tacho_processing.js","webpack://dragonbms-interface-web/./js/gui.js","webpack://dragonbms-interface-web/./js/gui_elements.js","webpack://dragonbms-interface-web/./js/helpers/color_mode.js","webpack://dragonbms-interface-web/./js/helpers/configcalib_processing.js","webpack://dragonbms-interface-web/./js/helpers/connectionWatchDog.js","webpack://dragonbms-interface-web/./js/helpers/fileObject.js","webpack://dragonbms-interface-web/./js/helpers/small_functions.js","webpack://dragonbms-interface-web/./js/helpers/wakelock.js","webpack://dragonbms-interface-web/./js/helpers/zoom.js","webpack://dragonbms-interface-web/./js/otaUpdate/otaController.js","webpack://dragonbms-interface-web/./js/otaUpdate/otaHelpers/cbor.js","webpack://dragonbms-interface-web/./js/otaUpdate/otaHelpers/mcumgr.js","webpack://dragonbms-interface-web/./js/otaUpdate/otaManager.js","webpack://dragonbms-interface-web/./js/rearrange.js","webpack://dragonbms-interface-web/./js/serviceworker/sw_init.js","webpack://dragonbms-interface-web/./js/settings/board-calib.js","webpack://dragonbms-interface-web/./js/settings/board-config.js","webpack://dragonbms-interface-web/./js/settings/deviceInfoManager.js","webpack://dragonbms-interface-web/./js/settings/importedFilesManager.js","webpack://dragonbms-interface-web/./js/settings/interface-config.js","webpack://dragonbms-interface-web/./js/settings/tacho-config.js","webpack://dragonbms-interface-web/./js/settings/virtualkeyboard.js","webpack://dragonbms-interface-web/./js/tilebar.js","webpack://dragonbms-interface-web/./js/vehicleModel.js","webpack://dragonbms-interface-web/./node_modules/@iconfu/svg-inject/dist/svg-inject.js","webpack://dragonbms-interface-web/./node_modules/candied/dist/index.es.js","webpack://dragonbms-interface-web/./node_modules/candied/lib/dbc/Errors.js","webpack://dragonbms-interface-web/./node_modules/candied/lib/filesystem/DbcWebFs.js","webpack://dragonbms-interface-web/./node_modules/simple-keyboard/build/index.js","webpack://dragonbms-interface-web/./node_modules/@melloware/coloris/dist/esm/coloris.js","webpack://dragonbms-interface-web/webpack/bootstrap","webpack://dragonbms-interface-web/webpack/runtime/compat get default export","webpack://dragonbms-interface-web/webpack/runtime/define property getters","webpack://dragonbms-interface-web/webpack/runtime/hasOwnProperty shorthand","webpack://dragonbms-interface-web/webpack/runtime/make namespace object","webpack://dragonbms-interface-web/./js/entry.js"],"sourcesContent":["let bleConnectionStates = {\r\n        disconnected: 'disconnected',\r\n        searching: 'searching',\r\n        connecting: 'connecting',\r\n        connected: 'connected',\r\n        reconnecting: 'reconnecting'\r\n    };\r\n\r\nexport default bleConnectionStates;\r\n\r\n\r\nexport class WrongDeviceError extends Error {\r\n        constructor(message = \"This device does not support the required services and characteristics.\") {\r\n                super(message);\r\n                this.message = message;\r\n        }\r\n}\r\n\r\nexport class CharacteristicsInitFailedError extends Error {\r\n        constructor(message = \"Initializing the characteristic was unsuccessful.\") {\r\n                super(message);\r\n                this.message = message;\r\n        }\r\n}\r\n\r\nexport class CharacteristicUnavailableError extends Error {\r\n        constructor(message = \"For whatever reason, this characteristic is inaccessible.\") {\r\n                super(message);\r\n                this.message = message;\r\n        }\r\n}\r\n\r\nexport class ServicesInitFailedError extends Error {\r\n        constructor(message = \"Initializing the characteristic was unsuccessful.\") {\r\n                super(message);\r\n                this.message = message;\r\n        }\r\n}","import bleConnectionStates, {CharacteristicsInitFailedError, ServicesInitFailedError, WrongDeviceError} from \"./ble\";\r\nimport connectionWatchDog from \"../helpers/connectionWatchDog\";\r\nimport gui from \"../gui\";\r\nimport sf from \"../helpers/small_functions\";\r\n\r\n// noinspection JSCheckFunctionSignatures\r\nexport default class bleDevice extends gui{\r\n\r\n    connectionState;\r\n\r\n    gattServer;\r\n    device;\r\n\r\n    services;\r\n    characteristics;\r\n\r\n    connectionWatchDog;\r\n\r\n    guiOperations = {};\r\n\r\n    reconnect = false;\r\n    firstReconnectFailDone = true;\r\n\r\n\r\n    disconnectedCallback;\r\n\r\n    interfaceConfigObj;\r\n\r\n    // important to keep the disconnect watchdog from cancelling the ota update\r\n    otaUpdateInProgress = false;\r\n\r\n\r\n    constructor(name, interfaceConfig){\r\n        super();\r\n\r\n        this.connectionState = bleConnectionStates.disconnected;\r\n\r\n        this.interfaceConfigObj = interfaceConfig;\r\n        this.deviceTypeName = name;\r\n\r\n        this.disconnectedEventAbortController = new AbortController();\r\n    }\r\n\r\n    isConnected(){ return this.connectionState === bleConnectionStates.connected; }\r\n\r\n    isDisconnected(){ return this.connectionState === bleConnectionStates.disconnected; }\r\n\r\n\r\n    setDisconnectedCallback(cB){ this.disconnectedCallback = cB; }\r\n    setServices(services){ this.services = services; }\r\n    setServiceInitDoneCallback(cB) { this.serviceInitDoneCallback = cB; }\r\n    setGUIOperations(guiOperations){\r\n        this.guiOperations.setOverlayText = (text, override=false) => {\r\n            if(this.firstReconnectFailDone || override){\r\n                guiOperations.setOverlayText(text);\r\n            }\r\n        };\r\n\r\n        this.guiOperations.resetOverlayText = () => {\r\n            if(this.firstReconnectFailDone) {\r\n                guiOperations.resetOverlayText();\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    connect(){\r\n        // ignore requests to connect if already connected\r\n        if(this.connectionState !== bleConnectionStates.disconnected) {\r\n            console.warn(\"[bleDevice \" + this.deviceTypeName + \"] tried to connect while not disconnected!\");\r\n            return;\r\n        }\r\n        // check for properly set guiOperations\r\n        if(typeof this.guiOperations.setOverlayText !== \"function\"\r\n        && typeof this.guiOperations.resetOverlayText !== \"function\"){\r\n            console.warn(\"[bleDevice \" + this.deviceTypeName + \"] guiOperations not set!\");\r\n            return;\r\n        }\r\n\r\n\r\n        // set up the connectionWatchDog for this connection attempt\r\n        this.connectionWatchDog = new connectionWatchDog(\r\n            this.interfaceConfigObj.connectionStepTimeout * 1000,\r\n            async ()=>{\r\n                console.warn(\"[bleDevice \" + this.deviceTypeName + \"] connection Watchdog timed out!\");\r\n                await this.disconnect();\r\n            });\r\n\r\n\r\n        // indicate searching\r\n        this.guiOperations.setOverlayText(\"Searching\");\r\n        this.connectionState = bleConnectionStates.searching;\r\n\r\n        // disable any auto-reconnects!\r\n        this.reconnect = false;\r\n\r\n\r\n        // watch out as this is async and waits for the previous device to disconnect!\r\n        navigator.bluetooth.requestDevice(this.#getSearchOptions()).then(async (device)=>{\r\n\r\n            // check if the previous device is still in memory\r\n            // and if so, disconnect from it\r\n            if(typeof this.device !== \"undefined\" && this.device !== null){\r\n                // also unregister the disconnect listener of the previous device\r\n                // (to prevent multiple being registered)\r\n                this.disconnectedEventAbortController.abort();\r\n\r\n                // and reset / disconnect it if so\r\n                await this.disconnect();\r\n            }\r\n\r\n\r\n            // indicate that a device has been found\r\n            // and set connectionState to connecting!\r\n            this.guiOperations.resetOverlayText();\r\n            this.guiOperations.setOverlayText(\"Found Device\");\r\n            this.connectionState = bleConnectionStates.connecting;\r\n\r\n\r\n\r\n            // reset abortController to not abort the incoming registration\r\n            this.disconnectedEventAbortController = new AbortController();\r\n\r\n            this.device = device;\r\n\r\n            // register the disconnect listener for the current device\r\n            this.device.addEventListener('gattserverdisconnected', async ()=>{\r\n                console.log(\"[bleDevice \" + this.deviceTypeName + \"] disconnected\");\r\n\r\n                // kill this exact event listener if reconnect is disabled\r\n                if(!this.reconnect){\r\n                    this.disconnectedEventAbortController.abort();\r\n                }\r\n\r\n                await this.#callDisconnectedCB();\r\n            },{signal: this.disconnectedEventAbortController.signal});\r\n\r\n\r\n            this.guiOperations.setOverlayText(\"Connecting Device\");\r\n\r\n            // connect the device and then call initialize the services\r\n            this.connectionWatchDog.start();\r\n            this.device.gatt.connect().then((server) => {\r\n                this.connectionWatchDog.stop();\r\n\r\n                this.gattServer = server;\r\n                this.guiOperations.setOverlayText(\"Connected GATT Server\");\r\n\r\n                // initialize all services (sequentially!)\r\n                if(this.connectionWatchDog.timedOut){return;}\r\n                this.connectionWatchDog.start();\r\n                this.#initServices().then(()=>{\r\n                    this.connectionWatchDog.stop();\r\n\r\n                    // a callback does config and calib reading and all the other stuff\r\n                    try{\r\n                        this.#callServiceInitDoneCallback();\r\n\r\n                        // reset the indicator for the next re-connect attempt\r\n                        this.firstReconnectFailDone = false;\r\n\r\n                        console.log(\"[bleDevice \" + this.deviceTypeName + \"] Done with connection process!\");\r\n\r\n                    }catch(error) {\r\n                        this.#connectionFailed(error);\r\n                    }\r\n\r\n                }).catch((error) => {\r\n                    this.connectionWatchDog.stop();\r\n\r\n                    this.#connectionFailed(error);\r\n                });\r\n\r\n            }).catch((error) => {\r\n                this.#connectionFailed(error);\r\n            });\r\n\r\n        }).catch((error) => {\r\n            this.#connectionFailed(error);\r\n        });\r\n    }\r\n\r\n\r\n    async #initServices(attempt = 0){\r\n        for (const serviceKey of Object.keys(this.services)) {\r\n\r\n            // get real service name by cutting off \"Uuid\" from the end\r\n            let serviceName = serviceKey.split(\"Uuid\")[0];\r\n\r\n            // signal the user, which service is being initialized\r\n            this.guiOperations.setOverlayText(\"Initializing \" + serviceName);\r\n\r\n\r\n            // initialize the service and it's characteristics (all sequentially)\r\n            let serviceObj = this.services[serviceKey];\r\n            try{\r\n                let serviceCharacteristics = await this.#initService(serviceObj);\r\n\r\n                // merge the newly initialized characteristics into the existing object\r\n                this.characteristics = Object.assign({}, this.characteristics, serviceCharacteristics);\r\n            }catch(error) {\r\n                // always good for debugging\r\n                if(attempt > 3){\r\n                    console.error(error);\r\n                }\r\n\r\n                // check if the error is \"No matching UUIDs found\"\r\n                if(error instanceof WrongDeviceError && attempt > 2){\r\n                    // DomException: No matching UUID found\r\n\r\n                    // do not show the first re-connect try (that always fails) to the user!\r\n                    if(this.firstReconnectFailDone) {\r\n                        this.guiOperations.setOverlayText(\"Not a \" + this.deviceTypeName + \"!\");\r\n                    }\r\n\r\n                    console.warn(\"[bleDevice \" + this.deviceTypeName + \"] Not a \"+ this.deviceTypeName + \"!\");\r\n\r\n                    // only display this error to the user if reconnect is disabled\r\n                    if(!this.reconnect){\r\n                        setTimeout(() => {\r\n                            this.guiOperations.resetOverlayText();\r\n                        }, 1000);\r\n                    }\r\n\r\n                    throw new WrongDeviceError();\r\n                }\r\n\r\n                if(error instanceof CharacteristicsInitFailedError && attempt > 2){\r\n                    // DomException: No matching UUID found\r\n\r\n\r\n                    // do not show the first re-connect try (that always fails) to the user!\r\n                    if(this.firstReconnectFailDone) {\r\n                        this.guiOperations.setOverlayText(\"Service init failed!\");\r\n                    }\r\n\r\n                    console.error(\"[bleDevice \" + this.deviceTypeName + \"] Service init failed!\");\r\n\r\n                    // only display this error to the user if reconnect is disabled\r\n                    if(!this.reconnect) {\r\n                        setTimeout(() => {\r\n                            this.guiOperations.resetOverlayText();\r\n                        }, 1000);\r\n                    }\r\n\r\n                    throw new ServicesInitFailedError();\r\n                }\r\n\r\n\r\n                // if the number of attempts has not yet reached two:\r\n                // retry the process\r\n\r\n                // do not show the first re-connect try (that always fails) to the user!\r\n                if(this.firstReconnectFailDone) {\r\n                    this.guiOperations.setOverlayText(\"Attempt #\" + (attempt + 1));\r\n                }\r\n\r\n                // dirty way to have a timeout without calling the initServices function from an anonymous function\r\n                let tmp = false;\r\n                setTimeout(()=>{\r\n                    tmp = true;\r\n                }, 200);\r\n\r\n                await sf.until(()=>{return tmp;});\r\n\r\n                await this.#initServices(attempt + 1);\r\n\r\n                // and stop the execution of the loop\r\n                break;\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    async #initService(serviceObj){\r\n        let characteristics = {};\r\n\r\n        // get the gatt service\r\n        let service;\r\n\r\n        if(this.connectionWatchDog.timedOut){return;}\r\n        this.connectionWatchDog.start();\r\n        try{\r\n            service = await this.gattServer.getPrimaryService(serviceObj.serviceUuid);\r\n\r\n            this.connectionWatchDog.stop();\r\n        }catch(error){\r\n            this.connectionWatchDog.stop();\r\n\r\n            // trow the custom implemented WrongDeviceError if the service is required for the device to function\r\n            if(serviceObj.required){\r\n                throw new WrongDeviceError();\r\n            }\r\n\r\n            // do nothing if the error is simply that the service cannot be found\r\n            if(error instanceof DOMException && error.message.includes(\"No Services matching UUID\")){\r\n                return;\r\n            }\r\n\r\n            // otherwise throw the error\r\n            throw error;\r\n        }\r\n\r\n\r\n\r\n        for (const characteristicKey of Object.keys(serviceObj.characteristics)) {\r\n\r\n            // cut off \"Uuid\" from the characteristicUuid key to get the real name of the characteristic\r\n            let characteristicName = characteristicKey.split(\"Uuid\")[0];\r\n\r\n            // get the characteristic\r\n            if(this.connectionWatchDog.timedOut){return;}\r\n            this.connectionWatchDog.start();\r\n            try{\r\n                characteristics[characteristicName] = await service.getCharacteristic(serviceObj.characteristics[characteristicKey]);\r\n\r\n                this.connectionWatchDog.stop();\r\n            }catch(error) {\r\n                this.connectionWatchDog.stop();\r\n\r\n                // throw an error\r\n                throw new CharacteristicsInitFailedError(characteristicName);\r\n            }\r\n\r\n        }\r\n        return characteristics;\r\n    }\r\n\r\n\r\n    // requests a device disconnect\r\n    async disconnect(){\r\n        // in case of the device not being initialized, just do nothing\r\n        if(typeof this.device === \"undefined\"){\r\n            await this.#callDisconnectedCB();\r\n            return;\r\n        }\r\n\r\n        // only disconnect if not already disconnected\r\n        if(!this.device.gatt.connected){\r\n            this.connectionState = bleConnectionStates.disconnected;\r\n\r\n            await this.#callDisconnectedCB();\r\n            return;\r\n        }\r\n\r\n        console.log(\"[bleDevice \" + this.deviceTypeName + \"] disconnecting\");\r\n\r\n        try{\r\n            this.device.gatt.disconnect();\r\n\r\n            // check if disconnect really happened and try again if not\r\n            // BE CAUTIOUS, THIS FIRES QUITE A FEW TIMES\r\n            setTimeout(async ()=>{\r\n                if(!this.isDisconnected()){\r\n                    await this.disconnect();\r\n                }\r\n            }, 100);\r\n\r\n            await sf.until(()=>{ this.isDisconnected(); });\r\n        }catch(e) {\r\n            console.warn(\"[bleDevice \" + this.deviceTypeName + \"] problem while disconnecting - manually calling disconnected callback\");\r\n\r\n            await this.#callDisconnectedCB();\r\n\r\n            this.connectionState = bleConnectionStates.disconnected;\r\n        }\r\n    }\r\n\r\n\r\n    #handleReconnect(){\r\n        // double-checking - redundant\r\n        if(this.isDisconnected() && this.reconnect){\r\n            console.log(\"[bleDevice \" + this.deviceTypeName + \"] starting reconnect-attempt\");\r\n            if(!this.firstReconnectFailDone){\r\n                this.guiOperations.setOverlayText(\"Initializing Auto-Reconnect..\", true);\r\n            }\r\n\r\n\r\n            setTimeout(async ()=>{\r\n                this.device.gatt.connect().then(async (server) => {\r\n                    if(this.reconnect){\r\n                        this.gattServer = server;\r\n                        try{\r\n\r\n                            // same code as in the original connection process\r\n                            this.#initServices().then(()=>{\r\n                                this.connectionWatchDog.stop();\r\n\r\n                                // a callback does config and calib reading and all the other stuff\r\n                                try{\r\n                                    this.#callServiceInitDoneCallback();\r\n\r\n                                    // reset the indicator for the next re-connect attempt\r\n                                    this.firstReconnectFailDone = false;\r\n\r\n                                    console.log(\"[bleDevice \" + this.deviceTypeName + \"] Done with connection process!\");\r\n\r\n                                }catch(error) {\r\n                                    this.#connectionFailed(error);\r\n                                }\r\n\r\n                            }).catch((error) => {\r\n                                this.connectionWatchDog.stop();\r\n\r\n                                this.#connectionFailed(error);\r\n\r\n                            });\r\n                        }catch(error){\r\n                            if(error instanceof WrongDeviceError){\r\n                                console.warn(\"[auto-reconnect bms] failed: \" + error);\r\n\r\n                                // the handleReconnect recursion already occurs in the disconnect function!\r\n                                await this.disconnect();\r\n                            }else{\r\n                                throw error;\r\n                            }\r\n                        }\r\n                    }else{\r\n                        console.warn(\"[auto-reconnect bms] reconnected but reconnect is off\");\r\n                        server.disconnect();\r\n                    }\r\n                }).catch(async (error) => {\r\n                    console.warn(\"[auto-reconnect bms] failed: \" + error);\r\n\r\n                    // the handleReconnect recursion already occurs in the disconnect function!\r\n                    await this.disconnect();\r\n                });\r\n            }, 500);\r\n        }\r\n    }\r\n\r\n\r\n    #connectionFailed(error){\r\n        if(error instanceof WrongDeviceError && this.firstReconnectFailDone){\r\n            console.error(\"[bleDevice \" + this.deviceTypeName + \"] connection failed: \");\r\n            console.error(error);\r\n        }\r\n\r\n        // set the firstReconnectFailDone flag to true\r\n        if(this.reconnect && !this.firstReconnectFailDone){\r\n            this.firstReconnectFailDone = true;\r\n        }\r\n\r\n        // for safety, let's disconnect\r\n        this.disconnect().then();\r\n    }\r\n\r\n\r\n\r\n    async #callDisconnectedCB(){\r\n        // firstly, do some of the disconnect handling here, then call the outside function\r\n        this.connectionWatchDog.stop();\r\n\r\n\r\n        // just to make sure\r\n        if(typeof this.device !== \"undefined\"){\r\n            await sf.until(()=>{return !this.device.gatt.connected;});\r\n        }\r\n\r\n        this.connectionState = bleConnectionStates.disconnected;\r\n\r\n\r\n        if(typeof this.disconnectedCallback === \"function\"){\r\n            this.disconnectedCallback();\r\n        }else{\r\n            console.warn(\"[bleDevice \" + this.deviceTypeName + \"] disconnected callback is not a function!\");\r\n        }\r\n\r\n        // this has to be called last as otherwise the \"auto-reconnect active\" banner doesn't show up\r\n        if(this.reconnect){\r\n\r\n            this.guiOperations.setOverlayText(\"Auto-reconnect active\");\r\n\r\n            this.#handleReconnect();\r\n        }\r\n\r\n    }\r\n\r\n    #callServiceInitDoneCallback(){\r\n        if(typeof this.serviceInitDoneCallback === \"function\"){\r\n            try{\r\n                this.serviceInitDoneCallback();\r\n            }catch(error){\r\n                throw error;\r\n            }\r\n        }else{\r\n            console.warn(\"[bleDevice \" + this.deviceTypeName + \"] serviceInitDone callback is not a function!\");\r\n        }\r\n    }\r\n\r\n\r\n\r\n    #getSearchOptions(){\r\n\r\n        // check for initialized services\r\n        if(typeof this.services === \"undefined\"){\r\n            console.warn(\"[bleDevice \" + this.deviceTypeName + \"] services undefined!\");\r\n            return;\r\n        }\r\n\r\n        let options = {\r\n            optionalServices: [\r\n                'device_information'\r\n            ]\r\n        };\r\n\r\n        for (const service of Object.keys(this.services)) {\r\n            options.optionalServices.push(this.services[service].serviceUuid);\r\n        }\r\n\r\n        if(this.interfaceConfigObj.filterBMSConnection) {\r\n            options.filters = [{\r\n                manufacturerData: [{\r\n                    // nice\r\n                    companyIdentifier: 0x6969\r\n                }]\r\n            }];\r\n        }else{\r\n            options.acceptAllDevices = true;\r\n        }\r\n\r\n        return options;\r\n    }\r\n\r\n}","import bleDevice from \"./bleDevice\";\r\nimport bmsConfig from \"../settings/board-config\";\r\nimport bmsCalib from \"../settings/board-calib\";\r\nimport bmsDataProcessor from \"../dataProcessing/bms_processing\";\r\nimport bleConnectionStates, {CharacteristicUnavailableError} from \"./ble\";\r\nimport {zoom} from \"../helpers/zoom\";\r\nimport sf from \"../helpers/small_functions\";\r\n\r\n// noinspection ShiftOutOfRangeJS\r\n\r\nexport default class bms extends bleDevice{\r\n\r\n    services = {\r\n        bmsDataLoggingServiceUuid: {\r\n            serviceUuid: \"e9ea0200-e19b-482d-9293-c7907585fc48\",\r\n            characteristics: {\r\n                bmsDataLoggingCharacteristicUuid: \"e9ea0201-e19b-482d-9293-c7907585fc48\"\r\n            },\r\n            required: true\r\n        },\r\n\r\n        bmsConfigServiceUuid: {\r\n            serviceUuid: \"e9ea0100-e19b-482d-9293-c7907585fc48\",\r\n            characteristics: {\r\n                bmsConfigCharacteristicUuid: \"e9ea0101-e19b-482d-9293-c7907585fc48\",\r\n                bmsCalibCharacteristicUuid: \"e9ea0102-e19b-482d-9293-c7907585fc48\",\r\n                bmsDeviceNameCharacteristicUuid: \"e9ea0103-e19b-482d-9293-c7907585fc48\"\r\n            },\r\n            required: true\r\n        },\r\n\r\n        developmentServiceUuid: {\r\n            serviceUuid: \"e9ea0400-e19b-482d-9293-c7907585fc48\",\r\n            characteristics: {\r\n                prechargeControlCharacteristicUuid: \"e9ea0403-e19b-482d-9293-c7907585fc48\",\r\n                channelControlCharacteristicUuid: \"e9ea0401-e19b-482d-9293-c7907585fc48\",\r\n                uptimeCharacteristicUuid: \"e9ea0404-e19b-482d-9293-c7907585fc48\"\r\n            },\r\n            required: true\r\n        },\r\n\r\n        // mostly obsolete now\r\n        runtimeControlServiceUuid: {\r\n            serviceUuid: \"e9ea0500-e19b-482d-9293-c7907585fc48\",\r\n            characteristics: {\r\n                turnOnCharacteristicUuid: \"e9ea0503-e19b-482d-9293-c7907585fc48\",\r\n                shutdownControlCharacteristicUuid: \"e9ea0502-e19b-482d-9293-c7907585fc48\",\r\n                userGPOCharacteristicUuid: \"e9ea0501-e19b-482d-9293-c7907585fc48\"\r\n            },\r\n            required: false\r\n        },\r\n\r\n        alertWarningServiceUuid: {\r\n            serviceUuid: \"e9ea0300-e19b-482d-9293-c7907585fc48\",\r\n            characteristics: {\r\n                warningCharacteristicUuid: \"e9ea0301-e19b-482d-9293-c7907585fc48\",\r\n                alertCharacteristicUuid: \"e9ea0302-e19b-482d-9293-c7907585fc48\"\r\n            },\r\n            required: true\r\n        },\r\n\r\n        otaUpdateServiceUuid: {\r\n            serviceUuid: '8d53dc1d-1db7-4cd3-868b-8a527460aa84',\r\n            characteristics: {},\r\n            required: false\r\n        }\r\n    }\r\n\r\n\r\n    connectionWatchDog;\r\n\r\n    stateMachineState;\r\n\r\n    bmsConfigObj;\r\n    bmsCalibObj;\r\n\r\n    #lastUptime = 0;\r\n    #countingUptime = 0;\r\n\r\n\r\n    constructor(interfaceConfig, dataLoggingMgr, deviceInfoMgr){\r\n        super(\"BMS\", interfaceConfig);\r\n\r\n        this.connectionState = bleConnectionStates.disconnected;\r\n\r\n        // initialize constructor arguments to class attributes\r\n        this.interfaceConfig = interfaceConfig;\r\n        this.dataLoggingMgr = dataLoggingMgr;\r\n        this.deviceInfoMgr = deviceInfoMgr;\r\n\r\n\r\n        // create config & calib objects\r\n        this.bmsConfigObj = new bmsConfig(this, true);\r\n        this.bmsConfigObj.addEventListeners();\r\n\r\n        this.bmsCalibObj = new bmsCalib(this);\r\n        this.bmsCalibObj.addEventListeners();\r\n\r\n        this.bmsDataProcessor = new bmsDataProcessor(this.bmsConfigObj, this.bmsCalibObj, this.interfaceConfig, this.dataLoggingMgr);\r\n\r\n\r\n        // initialize the callbacks and bms specific stuff for the bleDevice\r\n        let guiOps = {};\r\n        guiOps.setOverlayText = (text)=>{ this.setAutoconnectBMSText(text); }\r\n        guiOps.resetOverlayText = ()=>{ this.resetAutoconnectBMSSilentInstant(); }\r\n        this.setGUIOperations(guiOps);\r\n\r\n        this.setServices(this.services);\r\n        this.setServiceInitDoneCallback(()=>{ this.#serviceInitDone() });\r\n        this.setDisconnectedCallback(()=>{ this.#deviceDisconnected() });\r\n\r\n\r\n        // initial call for looped functions\r\n        this.pollFaults();\r\n        this.#pollUptime(true);\r\n        this.#setUptime();\r\n\r\n        //this.print();\r\n    }\r\n\r\n    print() {\r\n        setTimeout(()=>{\r\n            console.log(\"bms: \" + this.firstReconnectFailDone);\r\n            this.print();\r\n        }, 200);\r\n    }\r\n\r\n\r\n    initDataDistribution(dd){\r\n        this.dd = dd;\r\n        this.bmsDataProcessor.gatherer.initDataDistribution(this.dd);\r\n        this.bmsDataProcessor.initDataDistribution(this.dd);\r\n    }\r\n\r\n    initTachoObj(tachoObj){\r\n        this.tachoObj = tachoObj;\r\n    }\r\n\r\n\r\n\r\n    // this function is called when the bluetooth connection and service initialization is over\r\n    // that of course does not mean the device is ready to use though, still the config needs to be read,\r\n    // and the data logging needs to be enabled\r\n    async #serviceInitDone(){\r\n\r\n        try{\r\n            await this.#getDeviceInfo();\r\n        }catch(error){\r\n            console.warn(\"[bms connection] failed to get device info!\");\r\n        }\r\n\r\n        this.setAutoconnectBMSText(\"Reading Config&Calib\");\r\n        console.log(\"[bms connection] auto-reading bms config/calib\");\r\n\r\n        try{\r\n            this.bmsCalibObj.readBMSCalib((success) => {\r\n                if(this.connectionWatchDog.timedOut){return;}\r\n\r\n                // this will get taken care of by the watchdog!\r\n                if(!success){\r\n                    console.warn(\"[bmsConnection] calib characteristic unavailable!\");\r\n                    return;\r\n                }\r\n\r\n                this.connectionWatchDog.start();\r\n                this.bmsConfigObj.readBMSConfig(async (success) => {\r\n                    if(this.connectionWatchDog.timedOut){return;}\r\n\r\n                    // this will get taken care of by the watchdog!\r\n                    if(!success){\r\n                        console.warn(\"[bmsConnection] config characteristic unavailable!\");\r\n                        return;\r\n                    }\r\n\r\n                    // enabling data logging\r\n                    this.setAutoconnectBMSText(\"Enabling data logging\");\r\n                    this.connectionWatchDog.start();\r\n                    await this.characteristics.bmsDataLoggingCharacteristic.startNotifications();\r\n                    if(this.connectionWatchDog.timedOut){return;}\r\n                    this.connectionWatchDog.stop();\r\n\r\n                    this.setAutoconnectBMSText(\"Successfully connected!\");\r\n                    this.characteristics.bmsDataLoggingCharacteristic.addEventListener('characteristicvaluechanged', (event)=>{\r\n                        this.bmsDataProcessor.processData(event);\r\n                    });\r\n\r\n                    //console.log(this.characteristics);\r\n                });\r\n            });\r\n        }catch(error){\r\n            if(error instanceof CharacteristicUnavailableError){\r\n                console.log(\"[bms] how did it come this far?\");\r\n                await this.disconnect();\r\n            }\r\n        }\r\n\r\n        this.connectionWatchDog.start();\r\n\r\n\r\n\r\n        // wait until all initializations are done\r\n        // (or in case of disconnect during reading - block the execution until the watchdog runs out)\r\n        await sf.until(()=>{\r\n            return this.bmsCalibObj.initialised && this.bmsConfigObj.initialised;\r\n        });\r\n\r\n        // unsure what happens with a new connection - does this just get executed twice?\r\n\r\n\r\n        this.reconnect = true;\r\n        this.connectionState = bleConnectionStates.connected;\r\n\r\n\r\n\r\n        this.bmsDataProcessor = new bmsDataProcessor(this.bmsConfigObj, this.bmsCalibObj, this.interfaceConfig, this.dataLoggingMgr);\r\n        this.bmsDataProcessor.gatherer.initDataDistribution(this.dd);\r\n        this.bmsDataProcessor.initDataDistribution(this.dd);\r\n\r\n        if(typeof this.serviceInitDoneCB !== \"undefined\" && this.serviceInitDoneCB !== null){\r\n            this.serviceInitDoneCB();\r\n        }\r\n\r\n\r\n\r\n        setTimeout(() => {\r\n            // catch if disconnect happened between success and enabling!\r\n            if(!this.isConnected()){\r\n                return;\r\n            }\r\n            this.enableBoardGauges();\r\n            this.disableNothingConnectedOverlay();\r\n\r\n            if (!this.tachoObj.isDisconnected()) {\r\n                zoom.to({element: this.table, padding: 0, pan: false});\r\n            }\r\n        }, 1000);\r\n    }\r\n\r\n    #deviceDisconnected(){\r\n        this.disableBoardGauges();\r\n\r\n        this.resetBMSValues();\r\n\r\n        console.log(this.connectionState);\r\n\r\n        // enable nothingConnectedOverlay if bms was the last device to disconnect\r\n        if (!this.tachoObj.isConnected()) {\r\n            this.enableNothingConnectedOverlay();\r\n        }\r\n\r\n        this.resetAutoconnectBMSSilentInstant();\r\n\r\n    }\r\n\r\n\r\n\r\n    async #getDeviceInfo(){\r\n        let decoder = new TextDecoder('utf-8');\r\n\r\n\r\n        // Device information service\r\n        let service = await this.gattServer.getPrimaryService('device_information');\r\n\r\n        let deviceInfo = {};\r\n\r\n        await service.getCharacteristic(BluetoothUUID.getCharacteristic('hardware_revision_string')).then(async (characteristic) => {\r\n            await characteristic.readValue().then(value => {\r\n                deviceInfo.hardwareRevision = decoder.decode(value);\r\n            });\r\n        });\r\n\r\n        await service.getCharacteristic(BluetoothUUID.getCharacteristic('firmware_revision_string')).then(async (characteristic) => {\r\n            await characteristic.readValue().then(value => {\r\n                deviceInfo.firmwareRevision = decoder.decode(value);\r\n            });\r\n        });\r\n\r\n        await service.getCharacteristic(BluetoothUUID.getCharacteristic('model_number_string')).then(async (characteristic) => {\r\n            await characteristic.readValue().then(value => {\r\n                deviceInfo.modelNumber = decoder.decode(value);\r\n            });\r\n        }).catch(()=>{\r\n            deviceInfo.modelNumber = \"not supported\";\r\n        });\r\n\r\n        await service.getCharacteristic(BluetoothUUID.getCharacteristic('software_revision_string')).then(async (characteristic) => {\r\n            await characteristic.readValue().then(value => {\r\n                deviceInfo.serialNumber = decoder.decode(value);\r\n            });\r\n        }).catch(()=>{\r\n            deviceInfo.serialNumber =  \"not supported\";\r\n        });\r\n\r\n        this.#updateDeviceInfo(deviceInfo);\r\n    }\r\n\r\n\r\n    #updateDeviceInfo(deviceInfo) {\r\n        if (deviceInfo.modelNumber.toLowerCase().includes(\"relay\")) {\r\n            deviceInfo.switchType = \"relay\";\r\n        } else if (deviceInfo.modelNumber.toLowerCase().includes(\"mosfet\")) {\r\n            deviceInfo.switchType = \"mosfet\";\r\n        } else {\r\n            deviceInfo.switchType = \"unknown\";\r\n        }\r\n        if (deviceInfo.modelNumber.toLowerCase().includes(\"single\")) {\r\n            deviceInfo.channelCount = 1;\r\n        } else if (deviceInfo.modelNumber.toLowerCase().includes(\"double\")) {\r\n            deviceInfo.channelCount = 2;\r\n        } else if (deviceInfo.modelNumber.toLowerCase().includes(\"triple\")) {\r\n            deviceInfo.channelCount = 3;\r\n        }\r\n\r\n        this.deviceInfoMgr.devicesInfo.updateDeviceInfo(\"BMS\", deviceInfo);\r\n\r\n        // temporarily disabled\r\n        this.#checkFWUpdate(deviceInfo);\r\n\r\n\r\n        if(deviceInfo.modelNumber === \"not supported\"){\r\n            return;\r\n        }\r\n\r\n        // if the model string is supported, check for topology and do specific stuff\r\n        if(deviceInfo.switchType === \"relay\"){\r\n            this.#setRelaisSpecificLabels();\r\n        }\r\n        if(deviceInfo.switchType === \"mosfet\"){\r\n            this.#setMosfetSpecificLabels();\r\n        }\r\n    }\r\n\r\n    #setRelaisSpecificLabels(){\r\n        sf.setValueTexts(this.bmsPrechargeTempLabels, \"BMS-Extern Temp:\");\r\n        sf.setValueTexts(this.bmsMaxPrechargeTempLabels, \"max BMS<br>Extern Temp:\");\r\n    }\r\n\r\n    #setMosfetSpecificLabels(){\r\n        sf.setValueTexts(this.bmsPrechargeTempLabels, \"BMS-Precharge<br>Temp:\");\r\n        sf.setValueTexts(this.bmsMaxPrechargeTempLabels, \"max Precharge<br>Temp:\");\r\n    }\r\n\r\n    #checkFWUpdate(deviceInfo){\r\n        const url = 'https://api.github.com/repos/Dev-Voltaic/Voltaic_BMS/releases/latest';\r\n\r\n        try {\r\n            fetch(url).then((response) => {\r\n                response.text().then((text) => {\r\n                    const newestFirmwareVersion = JSON.parse(text)[\"tag_name\"];\r\n\r\n                    if(deviceInfo.firmwareRevision !== newestFirmwareVersion){\r\n                        this.firmwareUpdateText.innerHTML = \"<a href='https://github.com/Dev-Voltaic/Voltaic_BMS'>\"\r\n                            + \"Newest Firmware Version is: \"\r\n                            + newestFirmwareVersion\r\n                            + \"<br>Have you considered updating</a>?\";\r\n\r\n                        this.firmwareUpdateText.classList.add(\"fault\");\r\n                        this.firmwareUpdateText.classList.remove(\"hidden\");\r\n                    }\r\n                });\r\n            });\r\n        }catch (e){\r\n            // TypeError - failed to fetch\r\n            if(e instanceof TypeError){\r\n                this.firmwareUpdateText.innerHTML = \"Failed to get remote version info\";\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    async pauseDataLogging(){\r\n        await this.characteristics.bmsDataLoggingCharacteristic.stopNotifications();\r\n    }\r\n    async unPauseDataLogging(){\r\n        await this.characteristics.bmsDataLoggingCharacteristic.startNotifications();\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    // poll faults from characteristic when data logging gives state 4 (fault)\r\n    pollFaults(){\r\n        // with no logging data, there is no need to poll the faults\r\n        if(!this.bmsDataProcessor.isInitialised()){\r\n            setTimeout(() => {\r\n                this.pollFaults();\r\n            }, 500);\r\n            return;\r\n        }\r\n\r\n        // only poll faults if bms is connected and data logging suggests fault state\r\n        if(this.bmsDataProcessor.stateMachineState === 4 && this.isConnected()){\r\n            // try to catch for \"gatt operation already in progress\"\r\n            this.characteristics.alertCharacteristic.readValue().then(alertValue => {\r\n                this.alertBuffer = (((alertValue.getUint8(3) << 24) | (alertValue.getUint8(2) << 16)) | (alertValue.getUint8(1) << 8)) | (alertValue.getUint8(0));\r\n            }).catch((e) => {\r\n                if(e instanceof DOMException){\r\n                    console.log(\"[bms] poll faults error: \" + e)\r\n                }\r\n            });\r\n\r\n            // try to catch for \"gatt operation already in progress\"\r\n            this.characteristics.warningCharacteristic.readValue().then(warningValue => {\r\n                this.warningBuffer = (((warningValue.getUint8(3) << 24) | (warningValue.getUint8(2) << 16)) | (warningValue.getUint8(1) << 8)) | (warningValue.getUint8(0))\r\n            }).catch((e) => {\r\n                if(e instanceof DOMException){\r\n                    console.log(\"[bms] poll warnings: \" + e)\r\n                }\r\n            });\r\n            this.updateWarningFields(this.warningBuffer, this.alertBuffer);\r\n        }else{\r\n            // do not display any faults if not in fault mode & not connected\r\n            this.alertBuffer = 0;\r\n            this.warningBuffer = 0;\r\n            this.updateWarningFields(this.warningBuffer, this.alertBuffer);\r\n        }\r\n        // recursive call\r\n        setTimeout(() => {\r\n            this.pollFaults();\r\n        }, 500);\r\n    }\r\n\r\n    // get uptime from development service every 15 seconds\r\n    #pollUptime(recursive) {\r\n        // not really able to filter this, has to be done all the time while connected\r\n        if (this.isConnected()) {\r\n            try {\r\n                this.characteristics.uptimeCharacteristic.readValue().then(alertValue => {\r\n                    let uptimeValue =\r\n                        sf.handleSignedBullshit64(\r\n                            (alertValue.getUint8(7) << 56) | (alertValue.getUint8(6) << 48) |\r\n                            (alertValue.getUint8(5) << 40) | (alertValue.getUint8(4) << 32) |\r\n                            (alertValue.getUint8(3) << 24) | (alertValue.getUint8(2) << 16) |\r\n                            (alertValue.getUint8(1) << 8) | (alertValue.getUint8(0)));\r\n                    this.#lastUptime = -uptimeValue;\r\n                    this.#countingUptime = 0;\r\n                }).catch((e) => {\r\n                    if(e instanceof DOMException){\r\n                        console.log(\"[poll Uptime] error: \" + e)\r\n                    }\r\n                });\r\n            } catch (error) { //\"gatt operation already in progress\"\r\n            }\r\n\r\n        }\r\n        if(recursive){\r\n            setTimeout(() => {\r\n                this.#pollUptime(true);\r\n            }, 15000);\r\n        }\r\n    }\r\n\r\n    // set uptime gauge every second - gets synced uptime every 15 seconds, \"interpolates\" between the syncs\r\n    #setUptime() {\r\n        if (this.isConnected()) {\r\n            if(this.#lastUptime === 0){\r\n                // call pollUptime if the bms just connected\r\n                this.#pollUptime(false);\r\n            }else{\r\n                this.#countingUptime += 1000;\r\n                this.setOnTime(Math.floor((this.#lastUptime + this.#countingUptime) / 1000));\r\n            }\r\n        }\r\n        setTimeout(()=>{\r\n            this.#setUptime();\r\n        }, 1000);\r\n    }\r\n\r\n\r\n    clearAlerts(counter, _){\r\n        if (counter === 10){\r\n            //alert(\"Failed to clear alerts: \" + error);\r\n            return;\r\n        }\r\n\r\n        // NOT SURE WHICH ERROR COMES BACK IF IT FAILS!\r\n        this.characteristics.alertCharacteristic.writeValue(Uint8Array.from([0]).buffer)\r\n            .then(() => {\r\n                // clear everything (might not be needed as they will automagically clear on the next poll)\r\n                this.updateWarningFields(this.warningBuffer, this.alertBuffer);\r\n            })\r\n            .catch(error => {\r\n                setTimeout( ()=>{\r\n                    this.clearAlerts(counter + 1, error);\r\n                }, 100);\r\n            });\r\n    }\r\n\r\n\r\n\r\n\r\n    resetBMSValues() {\r\n        this.bmsDataProcessor.remainingEnergy1 = 0;\r\n        this.bmsDataProcessor.remainingEnergy2 = 0;\r\n        this.bmsDataProcessor.remainingEnergy3 = 0;\r\n\r\n        // reset the warning buffer and also update the fields\r\n        this.alertBuffer = 0;\r\n        this.warningBuffer = 0;\r\n        this.updateWarningFields(this.warningBuffer, this.alertBuffer);\r\n\r\n        // reset the bms dataLoggingBuffer\r\n        this.bmsDataProcessor.bmsAveragingBuffer = [];\r\n\r\n        // reset uptime gauge\r\n        this.setOnTime(0);\r\n\r\n        this.bmsDataProcessor.maxValueBuffer = [];\r\n\r\n        // hide board information, calibration & configuration if not already hidden\r\n        this.hideAllSettings();\r\n    }\r\n\r\n\r\n}","export default class disconnect_watchdog{\r\n    enabled = true;\r\n    interval;\r\n\r\n    timeout;\r\n\r\n    constructor(interval, timeout, bmsObj, tachoObj){\r\n        this.interval = interval;\r\n        this.timeout = timeout;\r\n\r\n        this.bmsObj = bmsObj;\r\n        this.tachoObj = tachoObj;\r\n\r\n        this.#loop();\r\n    }\r\n\r\n    start(){\r\n        if(!this.enabled){\r\n            this.enabled = true;\r\n            this.#loop();\r\n        }\r\n    }\r\n\r\n    stop(){\r\n        this.enabled = false;\r\n    }\r\n\r\n    #loop(){\r\n        setTimeout(()=>{\r\n            if(this.enabled){\r\n                this.#loop();\r\n            }\r\n        }, this.interval);\r\n\r\n        // checking for logging data timeout on bms\r\n\r\n        if(!this.bmsObj.isDisconnected()){\r\n            // this only happens when the connection is broken or when data logging is paused\r\n            if(this.bmsObj.bmsDataProcessor.bmsAveragingBuffer.length > 0){\r\n                // don't interrupt the upload of new firmware!\r\n                if(!this.bmsObj.otaUpdateInProgress){\r\n                    if((Date.now() - this.bmsObj.bmsDataProcessor.bmsAveragingBuffer[0].time) > this.timeout){\r\n                        this.bmsObj.disconnect().then();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if(!this.tachoObj.isDisconnected()){\r\n            if(this.tachoObj.tachoDataProcessor.tachoAveragingBuffer.length > 0){\r\n                // don't interrupt the upload of new firmware!\r\n                if(!this.tachoObj.otaUpdateInProgress) {\r\n                    if ((Date.now() - this.tachoObj.tachoDataProcessor.tachoAveragingBuffer[0].time) > this.timeout) {\r\n                        this.tachoObj.disconnect().then();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","import bleDevice from \"./bleDevice\";\r\nimport tachoConfig from \"../settings/tacho-config\";\r\nimport tachoDataProcessor from \"../dataProcessing/tacho_processing\";\r\nimport sf from \"../helpers/small_functions\";\r\nimport bleConnectionStates from \"./ble\";\r\nimport canBridge from \"../can/canBridge\";\r\n\r\n// noinspection ShiftOutOfRangeJS\r\n\r\nexport default class tacho extends bleDevice{\r\n\r\n    services = {\r\n        tachoDataLoggingServiceUuid: {\r\n            serviceUuid: \"ffd70200-fe1b-4b6d-aba1-36cc0bab3e3d\",\r\n            characteristics: {\r\n                tachoDataLoggingCharacteristicUuid: \"ffd70201-fe1b-4b6d-aba1-36cc0bab3e3d\"\r\n            },\r\n            required: true\r\n        },\r\n\r\n        tachoConfigServiceUuid: {\r\n            serviceUuid: \"ffd70100-fe1b-4b6d-aba1-36cc0bab3e3d\",\r\n            characteristics: {\r\n                tachoConfigCharacteristicUuid: \"ffd70101-fe1b-4b6d-aba1-36cc0bab3e3d\",\r\n                tachoOdometerCharacteristicUuid: \"ffd70102-fe1b-4b6d-aba1-36cc0bab3e3d\"\r\n            },\r\n            required: true\r\n        },\r\n\r\n        otaUpdateServiceUuid: {\r\n            serviceUuid: '8d53dc1d-1db7-4cd3-868b-8a527460aa84',\r\n            characteristics: {},\r\n            required: false\r\n        },\r\n\r\n        voltaicCanBridgeServiceUuid: {\r\n            serviceUuid: \"ffd70300-fe1b-4b6d-aba1-36cc0bab3e3d\",\r\n            characteristics: {\r\n                canBridgeTXCharacteristicUuid: \"ffd70301-fe1b-4b6d-aba1-36cc0bab3e3d\",\r\n                canBridgeRXConfigCharacteristicUuid: \"ffd70302-fe1b-4b6d-aba1-36cc0bab3e3d\",\r\n                canBridgeRXStreamCharacteristicUuid: \"ffd70303-fe1b-4b6d-aba1-36cc0bab3e3d\"\r\n            },\r\n            required: false\r\n        }\r\n    }\r\n\r\n    canBridgeSupported = true;\r\n\r\n    tachoDataProcessor;\r\n\r\n    interfaceConfig;\r\n\r\n\r\n    constructor(interfaceConfig, dataLoggingMgr, deviceInfoMgr) {\r\n        super(\"Tacho\", interfaceConfig);\r\n\r\n        this.connectionState = bleConnectionStates.disconnected;\r\n\r\n        // initialize constructor arguments to class attributes\r\n        this.interfaceConfig = interfaceConfig;\r\n        this.dataLoggingMgr = dataLoggingMgr;\r\n        this.deviceInfoMgr = deviceInfoMgr;\r\n\r\n\r\n        // create a new config object\r\n        this.tachoConfigObj = new tachoConfig(this);\r\n        // adding event listeners separately to avoid having multiple listeners in the future\r\n        this.tachoConfigObj.addEventListeners();\r\n\r\n        this.tachoDataProcessor = new tachoDataProcessor(this, interfaceConfig, dataLoggingMgr);\r\n\r\n\r\n        let guiOps = {};\r\n        guiOps.setOverlayText = (text)=>{ this.setAutoconnectTachoText(text); }\r\n        guiOps.resetOverlayText = ()=>{ this.resetAutoconnectTachoSilentInstant(); }\r\n        this.setGUIOperations(guiOps);\r\n\r\n        this.setServices(this.services);\r\n        this.setServiceInitDoneCallback(() => { this.#serviceInitDone(); });\r\n        this.setDisconnectedCallback(()=>{ this.#deviceDisconnected(); });\r\n\r\n        //this.print();\r\n    }\r\n\r\n    print() {\r\n        setTimeout(()=>{\r\n            console.log(\"tacho: \" + this.connectionState);\r\n            this.print();\r\n        }, 200);\r\n    }\r\n\r\n    initDataDistribution(dd){\r\n        this.dd = dd;\r\n        this.tachoDataProcessor.gatherer.initDataDistribution(this.dd);\r\n        this.tachoDataProcessor.initDataDistribution(this.dd);\r\n    }\r\n\r\n    initBMSObj(bmsObj){\r\n        this.bmsObj = bmsObj;\r\n    }\r\n\r\n\r\n    // this function is called when the bluetooth connection and service initialization is over\r\n    // that of course does not mean the device is ready to use though, still the config needs to be read,\r\n    // and the data logging needs to be enabled\r\n    async #serviceInitDone(){\r\n\r\n        try{\r\n            await this.#getDeviceInfo();\r\n        }catch(error){\r\n            console.warn(\"[bms connection] failed to get device info!\");\r\n        }\r\n\r\n        this.setAutoconnectTachoText(\"Reading Config\");\r\n        console.log(\"[tacho connection] auto-reading tacho config\");\r\n\r\n        this.connectionWatchDog.start();\r\n        this.tachoConfigObj.readTachoConfig(async () => {\r\n        if(this.connectionWatchDog.timedOut){return;}\r\n\r\n            // enabling the notifications on the CANBridge RX Stream characteristic,\r\n            // but only if the characteristics are actually supported!\r\n            if(typeof this.characteristics.canBridgeTXCharacteristic !== \"undefined\"\r\n            && typeof this.characteristics.canBridgeRXConfigCharacteristicUuid !== \"undefined\"\r\n            && typeof this.characteristics.canBridgeRXStreamCharacteristicUuid !== \"undefined\"){\r\n                this.canBridgeSupported = true;\r\n\r\n                // initialize the new canBridge object!\r\n                // this automatically registers all the listeners for the characteristics\r\n                this.connectionWatchDog.start();\r\n                this.cB = new canBridge(this.characteristics.canBridgeTXCharacteristic, this.characteristics.canBridgeRXConfigCharacteristic, this.characteristics.canBridgeRXStreamCharacteristic);\r\n                if(this.connectionWatchDog.timedOut){return;}\r\n                this.connectionWatchDog.stop();\r\n\r\n                this.addPfuschListeners();\r\n            }else{\r\n                document.getElementById(\"reverse-fr\").disabled = true;\r\n                document.getElementById(\"reverse-fl\").disabled = true;\r\n                document.getElementById(\"reverse-rl\").disabled = true;\r\n                document.getElementById(\"reverse-rr\").disabled = true;\r\n            }\r\n\r\n            // enabling data logging\r\n            this.setAutoconnectTachoText(\"Enabling data logging\");\r\n            this.connectionWatchDog.start();\r\n            await this.characteristics.tachoDataLoggingCharacteristic.startNotifications();\r\n            if(this.connectionWatchDog.timedOut){return;}\r\n            this.connectionWatchDog.stop();\r\n\r\n            this.setAutoconnectTachoText(\"Successfully connected!\");\r\n            this.characteristics.tachoDataLoggingCharacteristic.addEventListener('characteristicvaluechanged', (event)=>{\r\n                this.tachoDataProcessor.processData(event);\r\n            });\r\n        });\r\n\r\n\r\n        // wait until all initializations are done\r\n        // (or in case of disconnect during reading - block the execution until the watchdog runs out)\r\n        await sf.until(() => {\r\n            return this.tachoConfigObj.initialised;\r\n        });\r\n\r\n        // unsure what happens with a new connection - does this just get executed twice?\r\n\r\n\r\n        this.reconnect = true;\r\n        this.connectionState = bleConnectionStates.connected;\r\n\r\n\r\n\r\n        this.tachoDataProcessor = new tachoDataProcessor(this, this.interfaceConfig, this.dataLoggingMgr);\r\n        this.tachoDataProcessor.gatherer.initDataDistribution(this.dd);\r\n        this.tachoDataProcessor.initDataDistribution(this.dd);\r\n\r\n        if(typeof this.serviceInitDoneCB !== \"undefined\" && this.serviceInitDoneCB !== null){\r\n            this.serviceInitDoneCB();\r\n        }\r\n\r\n\r\n\r\n        // longer time window to see the connection process of the bms if it's either searching or connecting\r\n        if (this.bmsObj.connectionState === bleConnectionStates.connecting\r\n            || this.bmsObj.connectionState === bleConnectionStates.searching) {\r\n            setTimeout(() => {\r\n                if(!this.isConnected()){\r\n                    // catch if disconnect happened between success and enabling!\r\n                    return;\r\n                }\r\n                this.inlineConnected();\r\n                this.disableNothingConnectedOverlay();\r\n            }, 1000);\r\n        } else {\r\n            // shorter window as bms is disconnected anyway\r\n            setTimeout(() => {\r\n                if(!this.isConnected()){\r\n                    // catch if disconnect happened between success and enabling!\r\n                    return;\r\n                }\r\n                this.inlineConnected();\r\n                this.disableNothingConnectedOverlay();\r\n            }, 500);\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    async #getDeviceInfo(){\r\n        let decoder = new TextDecoder('utf-8');\r\n\r\n\r\n        // Device information service\r\n        let service = await this.gattServer.getPrimaryService('device_information');\r\n\r\n        let deviceInfo = {};\r\n\r\n        await service.getCharacteristic(BluetoothUUID.getCharacteristic('hardware_revision_string')).then(async (characteristic) => {\r\n            await characteristic.readValue().then(value => {\r\n                deviceInfo.hardwareRevision = decoder.decode(value);\r\n            });\r\n        });\r\n\r\n        await service.getCharacteristic(BluetoothUUID.getCharacteristic('firmware_revision_string')).then(async (characteristic) => {\r\n            await characteristic.readValue().then(value => {\r\n                deviceInfo.firmwareRevision = decoder.decode(value);\r\n            });\r\n        });\r\n\r\n        await service.getCharacteristic(BluetoothUUID.getCharacteristic('model_number_string')).then(async (characteristic) => {\r\n            await characteristic.readValue().then(value => {\r\n                deviceInfo.modelNumber = decoder.decode(value);\r\n            });\r\n        }).catch(()=>{\r\n            deviceInfo.modelNumber = \"not supported\";\r\n        });\r\n\r\n        await service.getCharacteristic(BluetoothUUID.getCharacteristic('software_revision_string')).then(async (characteristic) => {\r\n            await characteristic.readValue().then(value => {\r\n                deviceInfo.serialNumber = decoder.decode(value);\r\n            });\r\n        }).catch(()=>{\r\n            deviceInfo.serialNumber =  \"not supported\";\r\n        });\r\n\r\n        this.#updateDeviceInfo(deviceInfo);\r\n    }\r\n\r\n\r\n    #updateDeviceInfo(deviceInfo) {\r\n\r\n        this.deviceInfoMgr.devicesInfo.updateDeviceInfo(\"Tacho\", deviceInfo);\r\n\r\n        // in bms, there's a \"check for firmware update\" here\r\n\r\n        // more can-specific stuff to be added!\r\n    }\r\n\r\n\r\n\r\n    #deviceDisconnected(){\r\n        this.resetInlineValues();\r\n\r\n        this.inlineDisconnected();\r\n\r\n        // enable nothingConnectedOverlay if bms was the last device to disconnect\r\n        if (!this.bmsObj.isConnected()) {\r\n            this.enableNothingConnectedOverlay();\r\n        }\r\n\r\n        this.resetAutoconnectTachoSilentInstant();\r\n\r\n    }\r\n\r\n    async pauseDataLogging(){\r\n        await this.characteristics.tachoDataLoggingCharacteristic.stopNotifications();\r\n    }\r\n    async unPauseDataLogging(){\r\n        await this.characteristics.tachoDataLoggingCharacteristic.startNotifications();\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    resetInlineValues() {\r\n        this.tachoDataProcessor.tachoAveragingBuffer = [];\r\n        this.tachoDataProcessor.maxInlineValueBuffer = [];\r\n\r\n        // reset range calculation stuff\r\n        this.tachoDataProcessor.drivenDistanceOffset = -1;\r\n    }\r\n}","import gui_elements from \"../gui_elements\";\r\n\r\nimport sf from \"../helpers/small_functions\";\r\n\r\n\r\n\r\nexport class canId{\r\n    constructor(){\r\n\r\n    }\r\n\r\n    getBytes(){\r\n        let bytes = [];\r\n\r\n        if(this.extended === false){\r\n            bytes[0] = sf.to16bit(this.id)[1];\r\n            bytes[1] = sf.to16bit(this.id)[0];\r\n        }else{\r\n            // set the upmost bit to 1 to indicate extended ID\r\n            bytes[0] = sf.to32bit(this.id)[3] | 0b10000000;\r\n            bytes[1] = sf.to32bit(this.id)[2];\r\n            bytes[2] = sf.to32bit(this.id)[1];\r\n            bytes[3] = sf.to32bit(this.id)[0];\r\n        }\r\n\r\n        return bytes;\r\n    }\r\n\r\n    init(extended, id){\r\n        this.extended = extended;\r\n        this.id = id;\r\n    }\r\n\r\n    initFromBytes(bytes){\r\n        // return if number of bytes can't be an ID\r\n        if(bytes.length < 2){\r\n            return;\r\n        }\r\n\r\n        // read MSB of first byte as it indicates an extended id\r\n        if((bytes[0] >> 8) === 1){\r\n            // return if byte count doesn't satisfy indicated extended id\r\n            if(bytes.length < 4){\r\n                return;\r\n            }\r\n\r\n            this.extended = true;\r\n            // delete the indicator bit so the byte data isn't corrupted\r\n            bytes[0] = bytes[0] & 0b01111111;\r\n        }\r\n\r\n        if(this.extended){\r\n            this.id = ((((bytes[0] << 24) | (bytes[1] << 16)) | (bytes[2] << 8)) | bytes[3])\r\n        }else{\r\n            this.id = ((bytes[0] << 8) | bytes[1])\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport class canSubFilter{\r\n\r\n    start;\r\n    stop;\r\n    condition;\r\n    dataLength;\r\n    data;\r\n\r\n    dataBytes;\r\n\r\n    validConditions = {\r\n        match: 0,\r\n        // more to come!\r\n    };\r\n\r\n    constructor(){\r\n\r\n    }\r\n\r\n    init(start, stop, condition, data){\r\n        if(!Object.keys(this.validConditions).includes(condition)){\r\n            console.log(\"[canSubFilter] invalid condition!\");\r\n            return;\r\n        }\r\n\r\n        // reject all invalid arguments\r\n        if(start < 0 || start > 28){ return; }\r\n        if(stop < 0 || stop > 28){ return; }\r\n        if(stop < start){ return; }\r\n\r\n        // start bit number\r\n        this.start = start;\r\n        // stop bit number\r\n        this.stop = stop;\r\n        this.condition = this.validConditions[condition];\r\n\r\n        // number of bytes in the data object\r\n        this.dataLength = (Math.ceil((this.stop - this.start) / 8) - 1);\r\n\r\n        if(data > Math.pow(2, ((this.dataLength+1)*8))){\r\n            console.log(\"[canSubFilter] data doesn't fit between start and stop!\");\r\n            return;\r\n        }\r\n\r\n        this.data = data;\r\n    }\r\n\r\n    print(){\r\n        console.log(\"SubFilter: \");\r\n        console.log(this);\r\n\r\n        let byteString = \"\";\r\n\r\n        for (let i = 0; i < this.dataBytes.length; i++) {\r\n\r\n            byteString += (\" \" + Number(this.dataBytes[i]).toString(2));\r\n        }\r\n\r\n        console.log(\"data bytes:\");\r\n        console.log(byteString);\r\n    }\r\n\r\n    // please look at the documentation in the Tacho_BLE_Firmware GitHub repository for details!\r\n    getBytes(){\r\n        let bytes = [];\r\n\r\n        // set the first byte\r\n        bytes[0] = 0;\r\n        bytes[0] |= ((this.start << 0) & 0b00011111);\r\n        bytes[0] |= ((this.stop << 5)  & 0b11100000);\r\n\r\n        // set the second byte\r\n        bytes[1] = 0;\r\n        bytes[1] |= ((this.stop >> 3)       & 0b00000011);\r\n        bytes[1] |= ((this.condition << 3)  & 0b00111000);\r\n        bytes[1] |= ((this.dataLength << 6) & 0b11000000);\r\n\r\n        // dynamically add the data bytes\r\n        for (let i = 0; i <= this.dataLength; i++) {\r\n            bytes[i+2] = 0;\r\n            bytes[i+2] = (this.data >> 8*i) & 0b11111111;\r\n        }\r\n\r\n        this.dataBytes = bytes;\r\n\r\n        return bytes;\r\n    }\r\n\r\n    initFromBytes(bytes){\r\n        this.start = (bytes[0] & 0b00011111) >> 0;\r\n\r\n        this.stop = ((bytes[1] & 0b00000011) << 3 ) | ((bytes[0] & 0b11100000) >> 5);\r\n\r\n        this.condition = (bytes[1] & 0b00111000) >> 3;\r\n\r\n        this.dataLength = (bytes[1] & 0b11000000) >> 6;\r\n\r\n\r\n        let dataNumber = 0;\r\n        // dynamically add the data bytes\r\n        for (let i = this.dataLength; i >= 0 ; i--) {\r\n            dataNumber |= bytes[i+2] << 8*i;\r\n        }\r\n        this.data = dataNumber;\r\n\r\n        this.dataBytes = bytes;\r\n    }\r\n}\r\n\r\nexport class canFilter{\r\n\r\n    subFilters = [];\r\n\r\n    constructor(){\r\n    }\r\n\r\n    addSubFilter(subFilter){\r\n        if(this.subFilters.length >= 4){\r\n            console.log(\"[canFilter] too many subFilters!\");\r\n            return;\r\n        }\r\n\r\n        if(!(subFilter instanceof canSubFilter)){\r\n            console.log(\"[canFilter] parameter is not a canSubFilter\")\r\n            return;\r\n        }\r\n\r\n        this.subFilters.push(subFilter);\r\n    }\r\n\r\n    getWriteCommandBytes(){\r\n        let bytes = [];\r\n\r\n        bytes[0] |= 0b00000011 & this.subFilters.length;\r\n    }\r\n\r\n    // todo: complete\r\n\r\n}\r\n\r\n\r\nexport class canMessage{\r\n    constructor(){\r\n    }\r\n\r\n    init(extended, id, data){\r\n        this.cId = new canId();\r\n        this.cId.init(extended, id);\r\n\r\n        // check for a too long data object\r\n        if(data.length > 7){\r\n            return;\r\n        }\r\n\r\n        this.data = data;\r\n        this.dataLength = data.length;\r\n    }\r\n\r\n    initFromBytes(bytes){\r\n        this.cId = new canId();\r\n        this.cId.initFromBytes(bytes);\r\n\r\n        let dataBytes;\r\n\r\n        if(this.cId.extended){\r\n            dataBytes = bytes.slice(4);\r\n        }else{\r\n            dataBytes = bytes.slice(2);\r\n        }\r\n\r\n        this.data = dataBytes;\r\n    }\r\n\r\n    getBytes(){\r\n        let outgoingBytes = this.cId.getBytes();\r\n\r\n        for (let i = 0; i < this.dataLength; i++) {\r\n            outgoingBytes.push(this.data[i]);\r\n        }\r\n\r\n        return outgoingBytes;\r\n    }\r\n}\r\n\r\n\r\nexport default class canBridge extends gui_elements{\r\n\r\n    constructor(txCharacteristic, rxConfigCharacteristic, rxStreamCharacteristic) {\r\n        super();\r\n        sf.classListValueTextsRemove(this.canBridgeElements, \"disabled\");\r\n\r\n        this.txChar = txCharacteristic;\r\n        this.rxConfigChar = rxConfigCharacteristic;\r\n        this.rxStreamChar = rxStreamCharacteristic;\r\n\r\n        // in this case, canBridge is not yet supported by the firmware\r\n        if(typeof this.txChar === \"undefined\"){\r\n\r\n            console.log(\"[Tacho canBridge] canBridge not supported by firmware!\");\r\n            return;\r\n        }\r\n\r\n        // add tx event listeners\r\n        this.#addEventListeners();\r\n\r\n        if(typeof this.rxConfigChar === \"undefined\"\r\n            || typeof this.rxStreamChar === \"undefined\") {\r\n\r\n            console.log(\"[Tacho canBridge] canBridge RX not supported, TX supported!\");\r\n        }\r\n\r\n        // add rx event listeners\r\n        this.addStreamListener();\r\n    }\r\n\r\n    sendMessage(canMessage){\r\n        let outgoingBytes = canMessage.getBytes();\r\n\r\n        this.txChar.writeValueWithoutResponse(Uint8Array.from(outgoingBytes).buffer);\r\n    }\r\n\r\n    async addStreamListener(){\r\n        this.rxStreamChar.addEventListener('characteristicvaluechanged', (event)=>{this.onRXReceive(event)});\r\n        await this.rxStreamChar.startNotifications();\r\n    }\r\n\r\n    onRXReceive(event){\r\n        let value = event.target.value;\r\n\r\n        // catch broken messages\r\n        if(value.byteLength < 2){\r\n            return;\r\n        }\r\n\r\n        let data = [];\r\n\r\n        for (let i = 0; i < value.byteLength; i++) {\r\n            data.push(value.getUint8(i));\r\n        }\r\n\r\n        let message = new canMessage();\r\n        message.initFromBytes(data);\r\n\r\n        console.log(message);\r\n\r\n\r\n    }\r\n\r\n    addCanIDToWhiteList(extended, id){\r\n        let cId = new canId();\r\n        cId.init(extended, id);\r\n\r\n        let cIdBytes = this.addCanIdToWhiteList(cId);\r\n\r\n        // let\r\n\r\n\r\n        // going to be changed to the new rx filter design\r\n        return cIdBytes;\r\n    }\r\n\r\n    // returns true upon success, false upon error\r\n    addCanIdToWhiteList(canId){\r\n\r\n        // 0 for adding to the list\r\n        let outgoingBytes = [0].concat(canId.getBytes());\r\n\r\n        this.rxConfigChar.writeValue(Uint8Array.from(outgoingBytes).buffer).then(async _ => {\r\n            let listAfter = await this.getWhiteList();\r\n\r\n            console.log(\"list after:\");\r\n            console.log(listAfter);\r\n\r\n            let included = false;\r\n            for (const el of listAfter) {\r\n                if(el.id === canId.id){\r\n                    included = true;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if(included){\r\n                return true;\r\n            }\r\n\r\n            console.log(\"[Tacho canBridge] successful write but not included in whitelist after\")\r\n        }).catch(error => {\r\n            console.log(\"[Tacho canBridge] \" + error);\r\n        });\r\n\r\n        return false;\r\n    }\r\n\r\n    async getWhiteList(){\r\n\r\n        let dataBuffer = [];\r\n        try{\r\n            dataBuffer = await this.rxConfigChar.readValue();\r\n        }catch (e) {\r\n            console.log(e);\r\n            return [];\r\n        }\r\n\r\n        if(dataBuffer.byteLength < 3){\r\n            return;\r\n        }\r\n\r\n        let data = [];\r\n\r\n        for (let i = 0; i < dataBuffer.byteLength; i++) {\r\n            data.push(dataBuffer.getUint8(i));\r\n        }\r\n\r\n        console.log(\"[Tacho canBridge] whiteList length: \" + data[0]);\r\n\r\n        let whiteList = [];\r\n\r\n        // the data that is left to be interpreted\r\n        let iteratedData = data.slice(1);\r\n\r\n        console.log(iteratedData);\r\n\r\n        while(iteratedData.length >= 2){\r\n            let id = new canId();\r\n            id.initFromBytes(iteratedData);\r\n\r\n            whiteList.push(id);\r\n\r\n            // shorten the available data according to how many bytes the prev id took up\r\n            if(id.extended){\r\n                iteratedData = iteratedData.slice(4);\r\n            }else{\r\n                iteratedData = iteratedData.slice(2);\r\n            }\r\n        }\r\n\r\n        return whiteList;\r\n    }\r\n\r\n\r\n    #addEventListeners(){\r\n        this.canTxGaugeSend.addEventListener(\"click\", ()=>{\r\n            let message = this.#getCanTxMessageFromGUI();\r\n\r\n            this.sendMessage(message);\r\n        });\r\n\r\n        this.canRxGaugeSend.addEventListener(\"click\", () => {\r\n            this.#addCanRxMessageFromGUI();\r\n        });\r\n    }\r\n\r\n    #getCanTxMessageFromGUI(){\r\n        let extended = this.canTxGaugeExtended.checked;\r\n        let id = parseInt(this.canTxGaugeId.value);\r\n\r\n        let data = [];\r\n        if(parseInt(this.canTxGaugeD0.value) >= 0){\r\n            data.push(parseInt(this.canTxGaugeD0.value));\r\n        }\r\n        if(parseInt(this.canTxGaugeD1.value) >= 0){\r\n            data.push(parseInt(this.canTxGaugeD1.value));\r\n        }\r\n\r\n\r\n        // TEMPORARILY COMMENTED OUT FOR THE SHORTENED CAN INTERFACE TILE\r\n        /*\r\n        if(parseInt(this.canTxGaugeD2.value) >= 0){\r\n            data.push(parseInt(this.canTxGaugeD2.value));\r\n        }\r\n        if(parseInt(this.canTxGaugeD3.value) >= 0){\r\n            data.push(parseInt(this.canTxGaugeD3.value));\r\n        }\r\n        if(parseInt(this.canTxGaugeD4.value) >= 0){\r\n            data.push(parseInt(this.canTxGaugeD4.value));\r\n        }\r\n        if(parseInt(this.canTxGaugeD5.value) >= 0){\r\n            data.push(parseInt(this.canTxGaugeD5.value));\r\n        }\r\n        if(parseInt(this.canTxGaugeD6.value) >= 0){\r\n            data.push(parseInt(this.canTxGaugeD6.value));\r\n        }\r\n        if(parseInt(this.canTxGaugeD7.value) >= 0){\r\n            data.push(parseInt(this.canTxGaugeD7.value));\r\n        }\r\n\r\n        */\r\n\r\n        let cM = new canMessage();\r\n        cM.init(extended, id, data);\r\n        return cM;\r\n    }\r\n\r\n    #addCanRxMessageFromGUI(){\r\n        let extended = this.canRxGaugeExtended.checked;\r\n        let id = parseInt(this.canRxGaugeId.value);\r\n\r\n        return this.addCanIDToWhiteList(extended, id);\r\n    }\r\n\r\n}","import fileObject from \"../helpers/fileObject\";\r\nimport {Dbc} from \"candied\";\r\nimport sf from \"../helpers/small_functions\";\r\nimport {dbcReader} from \"candied/lib/filesystem/DbcWebFs\";\r\n\r\nexport class dbcFile extends fileObject{\r\n\r\n    dbc;\r\n    dbcJSObj;\r\n\r\n    name;\r\n    size;\r\n\r\n    constructor(){\r\n        super(\"dbc\");\r\n    }\r\n\r\n\r\n    // return true on successful reading in and false on failure\r\n    async openNewDBCFile(){\r\n        this.dbcJSObj = null;\r\n\r\n\r\n        try{\r\n            let file = await this.readFile();\r\n\r\n            this.dbc = new Dbc();\r\n\r\n            // read the dbc file into the can-died object\r\n            // use a promise to get the timeout functionality\r\n            this.readInDBC(file).then((fileContent)=>{\r\n                this.dbcJSObj = this.dbc.load(fileContent);\r\n                console.log(this.dbcJSObj);\r\n            }).catch((error)=>{\r\n                if(error === \"timeout\"){\r\n                    console.warn(\"[dbcGUIManager] dbc reading timed out!\");\r\n                }else{\r\n                    console.warn(\"[dbcGUIManager] dbc reading error:\" + error);\r\n                }\r\n\r\n                // return false for the success variable in any way\r\n                return false;\r\n            });\r\n\r\n            await sf.until(()=>{return (this.dbcJSObj !== null && (typeof this.dbcJSObj !== \"undefined\"))})\r\n\r\n        }catch(error){\r\n            console.warn(\"[dbcGUIManager] error:\" + error);\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n\r\n    // return true on successful reading in and false on failure\r\n    async openNewDBC(fileContent){\r\n        this.dbcJSObj = null;\r\n\r\n\r\n        try{\r\n            this.dbc = new Dbc();\r\n\r\n            // read the dbc file into the can-died object\r\n            // use a promise to get the timeout functionality\r\n            this.dbcJSObj = this.dbc.load(fileContent);\r\n\r\n            await sf.until(()=>{return (this.dbcJSObj !== null && (typeof this.dbcJSObj !== \"undefined\"))})\r\n\r\n        }catch(error){\r\n            console.warn(\"[dbcGUIManager] error:\" + error);\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n\r\n    readInDBC(file, timeout=1000) {\r\n        return new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n                reject('timeout');\r\n            }, timeout);\r\n\r\n            try{\r\n                dbcReader(file, resolve);\r\n            }catch(error){\r\n                reject(error);\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n}","import {MessageDoesNotExist} from \"candied/lib/dbc/Errors\";\r\nimport importedFileManager from \"../settings/importedFilesManager\";\r\nimport {dbcFile} from \"./dbcFile\";\r\n\r\n\r\nexport class dbcManager extends importedFileManager{\r\n\r\n    dbcFileList = [];\r\n\r\n    /*\r\n    todo: process the can messages through candied to usable values\r\n    todo: dynamically add all at least once received messages to data distribution\r\n    */\r\n\r\n    constructor(){\r\n        super(\"dbcGUIMgr\", \"dbc\");\r\n\r\n        this.setFileListUpdatedCallback(()=>{\r\n            this.readInAllFiles();\r\n        });\r\n    }\r\n\r\n    readInAllFiles(){\r\n        let files = this.getAllFilesFromLocalStorage();\r\n\r\n        // clear out the list before\r\n        this.dbcFileList = [];\r\n\r\n        // and read in all the dbc files\r\n        files.forEach(async (file) => {\r\n            await this.addDBCFromContents(file.fileContent);\r\n        });\r\n\r\n        console.log(this.dbcFileList);\r\n    }\r\n\r\n    async addDBCFromContents(fileContent){\r\n        let file = new dbcFile();\r\n        let success = await file.openNewDBC(fileContent);\r\n\r\n        if(success){\r\n            this.dbcFileList.push(file);\r\n        }else{\r\n            console.log(\"[DBC GUI Manager] couldn't read in dbc file\");\r\n        }\r\n    }\r\n\r\n    getMessages(){\r\n        let messagesList = [];\r\n\r\n        for (const dbcListElement of this.dbcFileList) {\r\n            for (const message of dbcListElement.dbcJSObj.messages) {\r\n                if(message.length > 1 && typeof message[1] !== \"string\") {\r\n                    messagesList.push(message[1]);\r\n                }\r\n            }\r\n        }\r\n\r\n        return messagesList;\r\n    }\r\n\r\n    getMessageForId(id){\r\n        let message = null;\r\n\r\n        for (const element of this.dbcFileList) {\r\n            let messageBefore = message;\r\n            try{\r\n                message = element.dbc.getMessageById(id);\r\n            }catch(e){\r\n                if(e instanceof MessageDoesNotExist){\r\n                    continue;\r\n                }\r\n            }\r\n\r\n            if(typeof messageBefore !== null && typeof message !== undefined){\r\n                console.log(\"[dbcManager] multiple Messages for same ID!\");\r\n            }\r\n        }\r\n\r\n        return message;\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default class dbcGUIManager extends dbcManager{\r\n\r\n    constructor(){\r\n        super();\r\n\r\n\r\n        this.setGUI(\r\n            document.getElementById(\"dbc-file-manager-table\"),\r\n            document.getElementById(\"dbc-file-manager-add-file\")\r\n        );\r\n        this.readInAllFiles();\r\n        this.fillGUIWithFileList();\r\n    }\r\n}","import sf from \"./helpers/small_functions\";\r\nimport gui_elements from \"./gui_elements\";\r\nimport {zoom} from \"./helpers/zoom\";\r\n\r\nexport default class captureModeManager extends gui_elements{\r\n\r\n    video;\r\n\r\n    constraints;\r\n\r\n    constructor(){\r\n        super();\r\n\r\n        this.video = sf.getId(\"capture-mode-video\");\r\n\r\n        this.constraints = {\r\n            video: {\r\n                height: {\r\n                    min: 800\r\n                },\r\n                width: {\r\n                    min: 600\r\n                },\r\n                facingMode: {\r\n                    exact: \"environment\"\r\n                }\r\n            }\r\n        };\r\n\r\n        window.addEventListener('scroll', ()=>{\r\n            if(sf.zoomedIn() && sf.isScrolledIntoView(this.captureModeContainer)){\r\n                zoom.out();\r\n            }\r\n        });\r\n\r\n        this.captureModeContainer.addEventListener(\"dblclick\", ()=>{\r\n\r\n            if(this.constraints.video.facingMode.exact === \"user\"){\r\n                this.constraints.video.facingMode.exact = \"environment\";\r\n            }else{\r\n                this.constraints.video.facingMode.exact = \"user\";\r\n            }\r\n\r\n            console.log(this.constraints);\r\n\r\n            try{\r\n                this.stopStream();\r\n            }catch(e){\r\n                console.log(\"probably no video started\");\r\n                console.log(e);\r\n            }\r\n            this.startStream(this.constraints).then();\r\n        });\r\n    }\r\n\r\n    activateCaptureMode(){\r\n        this.captureModeContainer.classList.remove(\"display-none\");\r\n\r\n        this.constraints.video.aspectRatio = { exact: (this.video.scrollHeight/this.video.scrollWidth)};\r\n\r\n        if ('mediaDevices' in navigator && navigator.mediaDevices.getUserMedia) {\r\n            this.startStream(this.constraints).then();\r\n        }\r\n    }\r\n\r\n    closeCaptureMode(){\r\n        this.captureModeContainer.classList.add(\"display-none\");\r\n\r\n        this.stopStream();\r\n    }\r\n\r\n\r\n\r\n    startStream = async (constraints) => {\r\n        const stream = await navigator.mediaDevices.getUserMedia(constraints);\r\n        this.handleStream(stream);\r\n    };\r\n\r\n    handleStream = (stream) => {\r\n        this.video.srcObject = stream;\r\n    };\r\n\r\n    stopStream(){\r\n        // return if there is no video stream to close\r\n        if(this.video.srcObject === null || typeof this.video.srcObject === \"undefined\"){\r\n            return;\r\n        }\r\n        this.video.srcObject.getTracks().forEach(function(track) {\r\n            track.stop();\r\n        });\r\n    }\r\n\r\n}","import bleConnectionStates from \"./ble/ble\";\r\nimport gui from \"./gui\";\r\n\r\n\r\nexport default class connectionGUIManager extends gui{\r\n\r\n    dotsCounter = 0;\r\n\r\n    constructor(bmsObj, tachoObj) {\r\n        super();\r\n\r\n        this.bmsObj = bmsObj;\r\n        this.tachoObj = tachoObj;\r\n\r\n        this.inlineDisconnected();\r\n\r\n        this.dotterBodge();\r\n\r\n        this.addEventListeners();\r\n    }\r\n\r\n\r\n    addEventListeners(){\r\n\r\n        // handler for the Nothing Connected overlay - Connect bms\r\n        this.connectBMSOverlayButton.addEventListener('click', () => {\r\n\r\n            // since there is no auto-connect feature now, the user should only be able to connect devices successively\r\n            if (this.tachoObj.connectionState === bleConnectionStates.searching) {\r\n                return;\r\n            }\r\n\r\n            this.bmsObj.connect();\r\n        });\r\n\r\n        // handler for the nothing connected overlay - Connect tacho\r\n        this.connectTachoOverlayButton.addEventListener('click', () => {\r\n\r\n            // since there is no auto-connect feature now,\r\n            // the user should only be able to search for devices successively\r\n            if (this.bmsObj.connectionState === bleConnectionStates.searching) {\r\n                console.log(\"[connection gui] BMS is in searching state - no tacho connection allowed\");\r\n                return;\r\n            }\r\n\r\n            this.tachoObj.connect();\r\n        });\r\n\r\n        // handler for the overlay over the tacho tile - connect tacho\r\n        this.connectTachoOverlay.addEventListener(\"click\", () => {\r\n            this.tachoObj.connect();\r\n        });\r\n\r\n\r\n        this.connectBMSOverlay.addEventListener(\"click\", () => {\r\n            this.bmsObj.connect();\r\n        });\r\n\r\n    }\r\n\r\n\r\n\r\n    // needed for the auto-connect typing animation\r\n    dotterBodge() {\r\n        this.dotsCounter += 1;\r\n        this.dotsCounter %= 5;\r\n        this.autoconnectingBMSText.innerHTML = \"Auto-connecting\";\r\n        this.autoconnectingTachoText.innerHTML = \"Auto-connecting\";\r\n        for (let i = 0; i < this.dotsCounter; i++) {\r\n            this.autoconnectingBMSText.innerHTML += '.';\r\n            this.autoconnectingTachoText.innerHTML += '.';\r\n        }\r\n        setTimeout(()=>{\r\n            this.dotterBodge();\r\n        }, 200);\r\n    }\r\n\r\n}","export default class dataDistribution{\r\n\r\n    providedDataLabels = [];\r\n    expectedDataLabels = [];\r\n\r\n    providedDataObj = {};\r\n    expectedDataObj = {};\r\n\r\n    dataMap = new dataMap();\r\n\r\n    expecterUpdateFunctions = [];\r\n\r\n    constructor() {\r\n    }\r\n\r\n    setDataMap(dataMap){\r\n        this.dataMap = dataMap;\r\n    }\r\n\r\n\r\n    /*\r\n    CONCEPT:\r\n\r\n    saving:\r\n    data distribution gets saved for the combination of devices and will automatically be set to that\r\n\r\n    like with the calib auto-backups, there will be a dropdown for choosing between the different saved options\r\n    it should also be downloadable\r\n\r\n    gui:\r\n    pairs on the left can be dragged and dropped anywhere on the screen, and the input will be deleted\r\n    implement where the data comes from to group it\r\n    implement groups for the outputs as well\r\n     */\r\n\r\n\r\n    getMapJson(){\r\n        return JSON.stringify(this.dataMap);\r\n    }\r\n\r\n    readInMapJson(j){\r\n        try{\r\n            this.setDataMap(JSON.parse(j));\r\n        }catch(error){\r\n            console.warn(\"[dataDistribution] error reading in JSON: \"+ error);\r\n        }\r\n    }\r\n\r\n    addMapping(input, output){\r\n        if(this.providedDataLabels.includes(input) && this.expectedDataLabels.includes(output)){\r\n            this.dataMap.addMapping(input,output);\r\n        }else{\r\n            console.log(\"[dataDistribution] failed to add mapping: input or output not contained in label lists\");\r\n        }\r\n    }\r\n\r\n    updateProvidedData(data){\r\n        for (const key of Object.keys(data)) {\r\n            if(this.providedDataLabels.includes(key)){\r\n                this.providedDataObj[key] = data[key];\r\n            }\r\n        }\r\n    }\r\n\r\n    executeMapping(){\r\n        for (const inputKey of Object.keys(this.providedDataObj)) {\r\n            let outputKeys = this.dataMap.getOutputs(inputKey);\r\n\r\n            for (const outputKey of outputKeys) {\r\n                if(this.expectedDataLabels.includes(outputKey)){\r\n                    this.expectedDataObj[outputKey] = this.providedDataObj[inputKey];\r\n                }else{\r\n                    console.log(\"[dataDistribution] failed to execute mapping: mapping output not contained in expected data label list\");\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    updateDataExpecters(){\r\n        for (const expecterUpdateFunction of this.expecterUpdateFunctions) {\r\n            expecterUpdateFunction(this.expectedDataObj);\r\n        }\r\n    }\r\n\r\n    registerExpecterUpdate(updateFunction){\r\n        this.expecterUpdateFunctions.push(updateFunction);\r\n    }\r\n\r\n\r\n    addProvidedDataLabels(dataLabels){\r\n        this.providedDataLabels = this.providedDataLabels.concat(dataLabels);\r\n    }\r\n\r\n    addExpectedDataLabels(dataLabels){\r\n        this.expectedDataLabels = this.expectedDataLabels.concat(dataLabels);\r\n    }\r\n}\r\n\r\n\r\n\r\nexport class dataMap{\r\n\r\n    mapObj = [];\r\n\r\n    constructor(){\r\n\r\n    }\r\n\r\n    addMapping(input, output){\r\n        let mappingObj = {\r\n            input: input,\r\n            output: output\r\n        };\r\n\r\n        this.mapObj.push(mappingObj);\r\n    }\r\n\r\n    removeMapping(input, output){\r\n\r\n        // filter function returns true if an element should stay in an array, false if it should be removed\r\n        this.mapObj = this.mapObj.filter(function (element) {\r\n            return (element.input === input && element.output === output);\r\n        });\r\n    }\r\n\r\n    getMap(){\r\n        return this.mapObj;\r\n    }\r\n\r\n    getOutputs(input){\r\n        let outputObj = this.mapObj.filter(function (element) {\r\n            return (element.input === input);\r\n        }).map(x => x.output);\r\n\r\n        if(outputObj.length > 1){\r\n            // maybe for debugging but right now this is okay since values are pfusched onto vehicle model\r\n            //console.log(\"[dataMap] more than one output for input!\");\r\n        }\r\n\r\n        return outputObj;\r\n    }\r\n\r\n    getInput(output){\r\n        let inputObj = this.mapObj.filter(function (element) {\r\n            return (element.output === output);\r\n        }).map(x => x.input);\r\n\r\n        if(inputObj.length > 1){\r\n            console.log(\"[dataMap] more than one input for output!\");\r\n        }\r\n\r\n        return inputObj;\r\n    }\r\n}","import {dataMap} from \"./dataDistribution\";\r\n\r\nexport default class dataDistributionGUIManager{\r\n    constructor(dataDistributionObj) {\r\n        this.ddObj = dataDistributionObj;\r\n\r\n\r\n        this.dataDistributionGUI = document.getElementById(\"data-distribution\");\r\n\r\n        this.dataDistributionMappingTable = document.getElementById(\"data-distribution-mapping-table\");\r\n        this.dataDistributionInputsTable = document.getElementById(\"data-distribution-inputs-table\");\r\n    }\r\n\r\n\r\n\r\n    dragStart(event) {\r\n        event.dataTransfer.setData(\"text/plain\", event.target.id);\r\n    }\r\n\r\n    dragLeave(event){\r\n        event.preventDefault();\r\n        if(event.currentTarget.nodeName.toLowerCase() === \"tr\"){\r\n            event.currentTarget.classList.remove(\"blend-in-background-accent\");\r\n            event.currentTarget.classList.add(\"blend-out-background-accent\");\r\n        }\r\n    }\r\n\r\n    allowDrop(event) {\r\n        event.preventDefault();\r\n        if(event.currentTarget.nodeName.toLowerCase() === \"tr\"){\r\n            event.currentTarget.classList.add(\"blend-in-background-accent\");\r\n        }\r\n    }\r\n\r\n    drop(event) {\r\n        event.preventDefault();\r\n        const data = event.dataTransfer.getData(\"text/plain\");\r\n\r\n        // important to clone the node, otherwise the original element will be moved\r\n        let element = document.querySelector(`#${data}`).cloneNode(true);\r\n        element.draggable = true;\r\n\r\n        let t = event.target;\r\n        while(t.nodeName.toLowerCase() !== \"tr\"){\r\n            t = t.parentNode;\r\n        }\r\n\r\n        // remove the currently connected data label\r\n        if(t.childNodes.length > 1){\r\n            t.removeChild(t.childNodes[1]);\r\n        }\r\n\r\n        // attach the dragged one\r\n        try {\r\n            t.appendChild(element);\r\n        } catch (error) {\r\n            console.warn(\"you can't move the item to the same place\")\r\n        }\r\n\r\n        // reset animation\r\n        // as there might be an animation-end event right after the drop, this 5ms delay is needed\r\n        setTimeout(()=>{\r\n            t.classList.remove(\"blend-in-background-accent\");\r\n            t.classList.add(\"blend-out-background-accent\");\r\n        }, 5);\r\n\r\n        // always update the dataMap when something has changed in the table (something was dropped)\r\n        this.readInMappingTable();\r\n    }\r\n\r\n    fillInputTable(){\r\n\r\n        // clear out all tds from the table (let the ths stay there)\r\n        this.dataDistributionInputsTable.childNodes.forEach((child) => {\r\n            // skip empty trs\r\n            if(child.childNodes.length === 0){\r\n                return;\r\n            }\r\n            if(child.childNodes[0].nodeName.toLowerCase() === \"td\"){\r\n                this.dataDistributionInputsTable.removeChild(child);\r\n            }\r\n        });\r\n\r\n        let providedDataLabels = this.ddObj.providedDataLabels;\r\n\r\n        // loop through all labels\r\n        for (const providedLabel of providedDataLabels) {\r\n                        // check if there is an assigned mapping already\r\n            let mapping = this.ddObj.dataMap.getOutputs(providedLabel);\r\n            if(mapping.length > 0){\r\n                // skip displaying this input since it is already displayed in the mapping table\r\n                continue;\r\n            }\r\n\r\n            // create a new tr object for every expected label\r\n            let trObj = document.createElement(\"tr\");\r\n\r\n            let td = document.createElement(\"td\");\r\n            td.innerHTML = \"<p>\" + providedLabel + \"</p>\";\r\n            td.id = providedLabel;\r\n\r\n            td.draggable = true;\r\n            td.ondragstart = (event) => {\r\n                this.dragStart(event);\r\n            };\r\n\r\n            trObj.appendChild(td);\r\n\r\n            this.dataDistributionInputsTable.appendChild(trObj);\r\n        }\r\n    }\r\n\r\n    fillMappingTable(){\r\n        let expectedDataLabels = this.ddObj.expectedDataLabels;\r\n\r\n        // loop through all labels\r\n        for (const expectedLabel of expectedDataLabels) {\r\n            // create a new tr object for every expected label\r\n            let trObj = document.createElement(\"tr\");\r\n\r\n            let leftTd = document.createElement(\"td\");\r\n            leftTd.innerHTML = \"<p>\" + expectedLabel + \"</p>\";\r\n\r\n            trObj.appendChild(leftTd);\r\n\r\n            // check if there is an assigned mapping already\r\n            let mapping = this.ddObj.dataMap.getInput(expectedLabel);\r\n            if(mapping.length > 0){\r\n                let rightTd = document.createElement(\"td\");\r\n                rightTd.innerHTML = \"<p>\" + mapping[0] + \"</p>\";\r\n\r\n                // enable dragging for right td for deleting it\r\n                rightTd.draggable = true;\r\n\r\n                trObj.appendChild(rightTd);\r\n            }else{\r\n                // attach empty td\r\n                trObj.appendChild(document.createElement(\"td\"));\r\n            }\r\n\r\n            // attach listeners for drag/drop actions\r\n            trObj.ondragover = (event)=>{\r\n                this.allowDrop(event);\r\n            };\r\n            trObj.ondrop = (event)=>{\r\n                this.drop(event);\r\n            };\r\n            trObj.ondragleave = (event) => {\r\n                this.dragLeave(event);\r\n            }\r\n\r\n\r\n\r\n            // event listener for removing the animation class once it's faded away\r\n            trObj.addEventListener(\"animationend\", (event)=>{\r\n                if(event.target.classList.contains(\"blend-out-background-accent\")){\r\n                    event.target.classList.remove(\"blend-out-background-accent\");\r\n                    event.target.classList.remove(\"blend-in-background-accent\");\r\n                }\r\n            });\r\n\r\n\r\n            this.dataDistributionMappingTable.appendChild(trObj);\r\n        }\r\n    }\r\n\r\n    readInMappingTable(){\r\n        let children = this.dataDistributionMappingTable.childNodes;\r\n\r\n        let map = new dataMap();\r\n\r\n        for (const child of children) {\r\n            // filter out any non tr objects\r\n            if(child.nodeName.toLowerCase() !== \"tr\"){\r\n                continue;\r\n            }\r\n\r\n            // filter out empty mappings\r\n            if(child.childNodes.length === 1){\r\n                continue;\r\n            }\r\n            // filter out empty mappings\r\n            let input = child.childNodes[1];\r\n            let output = child.childNodes[0];\r\n            if(input.childNodes.length === 0 || output.childNodes.length === 0){\r\n                continue;\r\n            }\r\n\r\n            input = input.childNodes[0].innerHTML;\r\n            output = output.childNodes[0].innerHTML;\r\n\r\n            map.addMapping(input, output);\r\n        }\r\n        // update the used data map\r\n        this.ddObj.setDataMap(map);\r\n    }\r\n}","import gui_elements from \"../gui_elements\";\r\n\r\nimport sf from \"../helpers/small_functions\";\r\n\r\n\r\nexport default class bmsGatherer extends gui_elements{\r\n\r\n    lastLoggingDataTimeStamp = Date.now();\r\n    hertzSampleBuffer = [];\r\n\r\n\r\n    providedDataLabels = [\r\n        \"bmsU1\",\r\n        \"bmsU2\",\r\n        \"bmsU3\",\r\n        \"bmsUOut\",\r\n        \"bmsI1\",\r\n        \"bmsI2\",\r\n        \"bmsI3\",\r\n        \"bmsStateMachineState\",\r\n\r\n        \"bmsTemp\",\r\n        \"bmsExternTemp\",\r\n\r\n        \"energyUsed1\",\r\n        \"energyUsed2\",\r\n        \"energyUsed3\"\r\n    ];\r\n\r\n\r\n    constructor(bmsConfig){\r\n        super();\r\n        this.bmsConfig = bmsConfig;\r\n    }\r\n\r\n\r\n    initDataDistribution(dd){\r\n        this.dd = dd;\r\n        this.dd.addProvidedDataLabels(this.providedDataLabels);\r\n    }\r\n\r\n\r\n    gatherData(event){\r\n        let value = event.target.value;\r\n\r\n        // FILTERING ALL INVALID DATA\r\n\r\n        if(value.byteLength === 0){\r\n            console.log(\"Something wrong with incoming BLE data!\");\r\n            return;\r\n        }\r\n\r\n        if(!this.bmsConfig.initialised){\r\n            console.log(\"waiting for config to be read...\");\r\n            return;\r\n        }\r\n\r\n        //let loggingDataInterval = Date.now() - lastLoggingDataTimeStamp;\r\n        this.lastLoggingDataTimeStamp = Date.now();\r\n\r\n        let packetSequenceNumber = (value.getUint8(2) << 8) | value.getUint8(1);\r\n\r\n        // would normally be dropped, but franz requested to ignore this for testing\r\n        /*\r\n        if(loggingDataInterval < configBuffer.dataloggingUpdateInterval * 0.5){\r\n            //console.log(\"dropped\");\r\n            return;\r\n        }\r\n         */\r\n\r\n\r\n\r\n        // CALCULATING DATA PACKET RATE\r\n\r\n        this.hertzSampleBuffer.push([\r\n            packetSequenceNumber,\r\n            this.lastLoggingDataTimeStamp\r\n        ]);\r\n        this.hertzSampleBuffer.forEach((element) => {\r\n            if(element[1] + 1000 < Date.now()){\r\n                const index = this.hertzSampleBuffer.indexOf(element);\r\n                if (index > -1) { // only splice array when item is found\r\n                    this.hertzSampleBuffer.splice(index, 1); // 2nd parameter means remove one item only\r\n                }\r\n            }\r\n        });\r\n\r\n        sf.setValueTexts(this.bmsDataLoggingFrequencyValues, \"BMS: \" +  this.hertzSampleBuffer.length + \"Hz\");\r\n\r\n\r\n\r\n        // CONVERTING THE RAW DATA TO USABLE VALUES\r\n\r\n        let U_Strand1_raw = (((value.getUint8(10) << 8) | value.getUint8(9)) / 100);\r\n        let U_Strand2_raw = (((value.getUint8(12) << 8) | value.getUint8(11)) / 100);\r\n        let U_Strand3_raw = (((value.getUint8(14) << 8) | value.getUint8(13)) / 100);\r\n        let U_Out_raw = (((value.getUint8(16) << 8) | value.getUint8(15)) / 100);\r\n\r\n        let I_Strand1_raw = (sf.handleSignedBullshit((value.getUint8(4) << 8) | value.getUint8(3)) / 100);\r\n        let I_Strand2_raw = (sf.handleSignedBullshit((value.getUint8(6) << 8) | value.getUint8(5)) / 100);\r\n        let I_Strand3_raw = (sf.handleSignedBullshit((value.getUint8(8) << 8) | value.getUint8(7)) / 100);\r\n\r\n        let shuntTemp_raw = ((value.getUint8(18) << 8) | value.getUint8(17)) / 10;\r\n        let prechargeTemp_raw = ((value.getUint8(20) << 8) | value.getUint8(19)) / 10;\r\n\r\n        let stateMachineState = value.getUint8(21);\r\n\r\n        let energyUsed1_raw = sf.handleSignedBullshit32((((value.getUint8(25) << 24) | (value.getUint8(24) << 16)) | (value.getUint8(23) << 8)) | (value.getUint8(22)));\r\n        let energyUsed2_raw = sf.handleSignedBullshit32((((value.getUint8(29) << 24) | (value.getUint8(28) << 16)) | (value.getUint8(27) << 8)) | (value.getUint8(26)));\r\n        let energyUsed3_raw = sf.handleSignedBullshit32((((value.getUint8(33) << 24) | (value.getUint8(32) << 16)) | (value.getUint8(31) << 8)) | (value.getUint8(30)));\r\n\r\n\r\n        // update data in the data distribution\r\n        this.dd.updateProvidedData({\r\n            bmsPSN: packetSequenceNumber,\r\n\r\n            bmsU1: U_Strand1_raw,\r\n            bmsU2: U_Strand2_raw,\r\n            bmsU3: U_Strand3_raw,\r\n            bmsUOut: U_Out_raw,\r\n\r\n            bmsI1: I_Strand1_raw,\r\n            bmsI2: I_Strand2_raw,\r\n            bmsI3: I_Strand3_raw,\r\n\r\n            bmsStateMachineState: stateMachineState,\r\n\r\n            bmsTemp: shuntTemp_raw,\r\n            bmsExternTemp: prechargeTemp_raw,\r\n\r\n            energyUsed1: energyUsed1_raw,\r\n            energyUsed2: energyUsed2_raw,\r\n            energyUsed3: energyUsed3_raw\r\n        });\r\n\r\n\r\n        // do the mapping\r\n        this.dd.executeMapping();\r\n\r\n        // update all elements expecting data\r\n        this.dd.updateDataExpecters();\r\n\r\n\r\n        return {\r\n            time: this.lastLoggingDataTimeStamp,\r\n            packageSequenceNumber: packetSequenceNumber,\r\n            u1: U_Strand1_raw,\r\n            u2: U_Strand2_raw,\r\n            u3: U_Strand3_raw,\r\n            uOut: U_Out_raw,\r\n            i1: I_Strand1_raw,\r\n            i2: I_Strand2_raw,\r\n            i3: I_Strand3_raw,\r\n            tShunt: shuntTemp_raw,\r\n            tPch: prechargeTemp_raw,\r\n            eU1: energyUsed1_raw,\r\n            eU2: energyUsed2_raw,\r\n            eU3: energyUsed3_raw,\r\n            stateMachineState: stateMachineState\r\n        };\r\n    }\r\n}","import gui from \"../gui\";\r\n\r\nimport sf from \"../helpers/small_functions\";\r\nimport bmsGatherer from \"./bms_gathering\";\r\n\r\n\r\nexport default class bmsDataProcessor extends gui{\r\n\r\n    bmsAveragingBuffer = [];\r\n\r\n    maxValueBuffer = [];\r\n\r\n\r\n    providedDataLabels = [\r\n        \"bmsITotal\",\r\n        \"bmsPTotal\",\r\n        \"bmsPLoss\",\r\n        \"soc1\",\r\n        \"soc2\",\r\n        \"soc3\",\r\n        \"minSOC\"\r\n    ];\r\n\r\n\r\n    usedEnergyOffset1 = -1; // Watt-hours\r\n    usedEnergyOffset2 = -1; // Watt-hours\r\n    usedEnergyOffset3 = -1; // Watt-hours\r\n\r\n    remainingEnergy1 = 0; // Watt-hours\r\n    remainingEnergy2 = 0; // Watt-hours\r\n    remainingEnergy3 = 0; // Watt-hours\r\n\r\n    stateMachineState = 4;\r\n\r\n    constructor(bmsConfigObj, bmsCalibObj, interfaceConfig, dataLoggingMgr) {\r\n        super();\r\n        this.bmsConfigObj = bmsConfigObj;\r\n        this.bmsCalibObj = bmsCalibObj;\r\n\r\n        this.interfaceConfig = interfaceConfig;\r\n\r\n        this.dataLoggingMgr = dataLoggingMgr;\r\n\r\n        this.gatherer = new bmsGatherer(this.bmsConfigObj);\r\n    }\r\n\r\n    initDataDistribution(dd){\r\n        this.dd = dd;\r\n        this.dd.addProvidedDataLabels(this.providedDataLabels);\r\n    }\r\n\r\n    isInitialised(){\r\n        return (typeof this.bmsAveragingBuffer.at(0)) !== \"undefined\";\r\n    }\r\n\r\n    processData(event) {\r\n\r\n        const bmsLoggingPacket = this.gatherer.gatherData(event);\r\n\r\n        // catch invalid / dropped packets\r\n        if(typeof(bmsLoggingPacket) === \"undefined\"){\r\n            return;\r\n        }\r\n\r\n        // always have the newest packet at the first index of the buffer\r\n        this.bmsAveragingBuffer.unshift(bmsLoggingPacket);\r\n        // delete all packets that are older than needed\r\n        sf.deleteOlderDataPackets(this.bmsAveragingBuffer, this.interfaceConfig.maxAveragingInterval)\r\n\r\n        const averagedDataU = sf.averagedData(sf.getLastXSeconds(this.bmsAveragingBuffer, this.interfaceConfig.averagingIntervalU), 1);\r\n        const averagedDataI = sf.averagedData(sf.getLastXSeconds(this.bmsAveragingBuffer, this.interfaceConfig.averagingIntervalI), 2);\r\n        const averagedDataT = sf.averagedData(sf.getLastXSeconds(this.bmsAveragingBuffer, this.interfaceConfig.averagingIntervalT), 1);\r\n        const averagedDataCalib = sf.averagedData(sf.getLastXSeconds(this.bmsAveragingBuffer, this.interfaceConfig.averagingIntervalCalib), 4);\r\n\r\n        const averagedDataPLoss = sf.averagedDataNumbers(sf.getLastXSeconds(this.bmsAveragingBuffer, this.interfaceConfig.averagingIntervalT));\r\n\r\n\r\n        this.stateMachineState = bmsLoggingPacket.stateMachineState;\r\n\r\n\r\n        // calculating further values\r\n\r\n        let P_total = (parseFloat(averagedDataU.uOut) / 1000 * (parseFloat(averagedDataI.i1) + parseFloat(averagedDataI.i2) + parseFloat(averagedDataI.i3))); // Power in kW\r\n\r\n        let P_loss = Math.abs(\r\n            (averagedDataPLoss.u1 * averagedDataPLoss.i1) +\r\n            (averagedDataPLoss.u2 * averagedDataPLoss.i2) +\r\n            (averagedDataPLoss.u3 * averagedDataPLoss.i3) -\r\n            (averagedDataPLoss.uOut * (averagedDataPLoss.i1 + averagedDataPLoss.i2 + averagedDataPLoss.i3))\r\n        );\r\n\r\n\r\n\r\n        let totalAmps = parseFloat(averagedDataI.i1) + parseFloat(averagedDataI.i2) + parseFloat(averagedDataI.i3);\r\n        if(isNaN(totalAmps)){\r\n            totalAmps = 0;\r\n        }\r\n\r\n\r\n\r\n        // init energy used offsets at first received data logging packet\r\n        if(this.usedEnergyOffset1 === -1){\r\n            this.usedEnergyOffset1 = bmsLoggingPacket.eU1;\r\n        }\r\n        if(this.usedEnergyOffset2 === -1){\r\n            this.usedEnergyOffset2 = bmsLoggingPacket.eU2;\r\n        }\r\n        if(this.usedEnergyOffset3 === -1){\r\n            this.usedEnergyOffset3 = bmsLoggingPacket.eU3;\r\n        }\r\n\r\n\r\n\r\n\r\n        // BATTERY SOC CALCULATION (very fucked atm)\r\n        // _______________________________________\r\n\r\n        let CellCount = this.bmsConfigObj.battCellCount;\r\n        let Capacity = this.bmsConfigObj.battNomCapacity;\r\n\r\n        let soc;\r\n        if (this.remainingEnergy1 === 0 && (CellCount * 2.5 <= bmsLoggingPacket.u1 <= CellCount * 4.2)) {\r\n            let cell_voltage = bmsLoggingPacket.u1 / CellCount;\r\n            /*\r\n            let soc;\r\n            if(cell_voltage > 3.5){\r\n                soc = -25.54 * cell_voltage ** 5 + 488.74 * cell_voltage ** 4 - 3736 * cell_voltage ** 3 + 14258 * cell_voltage ** 2 - 27164 * cell_voltage + 20664;\r\n\r\n                //soc = -8.09 * 0.001 * x ** 9 + 5.44 * 0.01 * x ** 8 + 7.77 * 0.01 ** 7 + 1.82 * x ** 6 - 3.2 * x ** 5 + 84.1 * x ** 4 + 393 * x ** 3 - 2400 * x ** 2 + 3770 * x - 1380\r\n            }else{\r\n                soc =  11.171*cell_voltage**4 - 168.65*cell_voltage**3 + 952.15*cell_voltage**2 - 2381.2*cell_voltage + 2225.1;\r\n            }\r\n             */\r\n            // temporary\r\n            soc = (cell_voltage - 3) / 1.2;\r\n            this.remainingEnergy1 = soc * (Capacity / 1000) * (CellCount * 3.7);\r\n        }\r\n\r\n\r\n        if (this.remainingEnergy2 === 0 && (CellCount * 2.5 <= bmsLoggingPacket.u2 <= CellCount * 4.2)) {\r\n            let cell_voltage = bmsLoggingPacket.u2/CellCount;\r\n            /*\r\n            let soc;\r\n            if(cell_voltage > 3.5){\r\n                soc = -25.54*cell_voltage**5 + 488.74*cell_voltage**4 - 3736*cell_voltage**3 + 14258*cell_voltage**2 - 27164*cell_voltage + 20664;\r\n            }else{\r\n                soc =  11.171*cell_voltage**4 - 168.65*cell_voltage**3 + 952.15*cell_voltage**2 - 2381.2*cell_voltage + 2225.1;\r\n            }\r\n             */\r\n            // temporary\r\n            soc = (cell_voltage - 3) / 1.2;\r\n            this.remainingEnergy2 = soc * (Capacity / 1000) * (CellCount * 3.7);\r\n        }\r\n\r\n\r\n        if (this.remainingEnergy3 === 0 && (CellCount * 2.5 <= bmsLoggingPacket.u3 <= CellCount * 4.2)) {\r\n            let cell_voltage = bmsLoggingPacket.u3/CellCount;\r\n            /*\r\n            let soc;\r\n            if(cell_voltage > 3.5){\r\n                soc = -25.54*cell_voltage**5 + 488.74*cell_voltage**4 - 3736*cell_voltage**3 + 14258*cell_voltage**2 - 27164*cell_voltage + 20664;\r\n            }else{\r\n                soc =  11.171*cell_voltage**4 - 168.65*cell_voltage**3 + 952.15*cell_voltage**2 - 2381.2*cell_voltage + 2225.1;\r\n            }\r\n            */\r\n            // temporary\r\n            soc = (cell_voltage - 3) / 1.2;\r\n            this.remainingEnergy3 = soc * (Capacity / 1000) * (CellCount * 3.7);\r\n        }\r\n\r\n        let SOC_1 = 100 * ((this.remainingEnergy1 - ((bmsLoggingPacket.eU1 - this.usedEnergyOffset1) / 3600)) / ((Capacity / 1000) * CellCount * 3.7));\r\n        let SOC_2 = 100 * ((this.remainingEnergy2 - ((bmsLoggingPacket.eU2 - this.usedEnergyOffset2) / 3600)) / ((Capacity / 1000) * CellCount * 3.7));\r\n        let SOC_3 = 100 * ((this.remainingEnergy3 - ((bmsLoggingPacket.eU3 - this.usedEnergyOffset3) / 3600)) / ((Capacity / 1000) * CellCount * 3.7));\r\n\r\n        if (bmsLoggingPacket.u1 < CellCount * 2.5 || SOC_1 <= 0) {\r\n            SOC_1 = 0;\r\n            this.remainingEnergy1 = 0;\r\n        }\r\n        if (bmsLoggingPacket.u2 < CellCount * 2.5 || SOC_2 <= 0) {\r\n            SOC_2 = 0;\r\n            this.remainingEnergy2 = 0;\r\n        }\r\n        if (bmsLoggingPacket.u3 < CellCount * 2.5 || SOC_3 <= 0) {\r\n            SOC_3 = 0;\r\n            this.remainingEnergy3 = 0;\r\n        }\r\n\r\n\r\n\r\n        let minSOC = 100;\r\n        if(((this.bmsConfigObj.boardEnabledChannels & 1) === 1) && SOC_1 < minSOC){minSOC = SOC_1}\r\n        if(((this.bmsConfigObj.boardEnabledChannels & 2) === 2) && SOC_2 < minSOC){minSOC = SOC_2}\r\n        if(((this.bmsConfigObj.boardEnabledChannels & 4) === 4) && SOC_3 < minSOC){minSOC = SOC_3}\r\n\r\n\r\n        //const usedEnergyTotal = (bmsLoggingPacket.eU1 - usedEnergyOffset1) + (bmsLoggingPacket.eU2 - usedEnergyOffset2) + (bmsLoggingPacket.eU3 - usedEnergyOffset3);\r\n        const usedEnergyTotal = bmsLoggingPacket.eU1 + bmsLoggingPacket.eU2 + bmsLoggingPacket.eU3;\r\n\r\n        //_________________________________________________\r\n\r\n\r\n\r\n        const bmsCalculatedDataPacket = {\r\n            iTotal: totalAmps,\r\n            pTotal: P_total,\r\n            pLoss: P_loss,\r\n            energyUsed: {\r\n                combined: usedEnergyTotal,\r\n                ch1: bmsLoggingPacket.eU1,\r\n                ch2: bmsLoggingPacket.eU2,\r\n                ch3: bmsLoggingPacket.eU3,\r\n            },\r\n            soc: {\r\n                ch1: SOC_1,\r\n                ch2: SOC_2,\r\n                ch3: SOC_3,\r\n                min: minSOC\r\n            }\r\n        };\r\n\r\n        // update data in the data distribution\r\n        this.dd.updateProvidedData({\r\n            bmsITotal: totalAmps,\r\n            bmsPTotal: P_total,\r\n            bmsPLoss: P_loss,\r\n            soc1: SOC_1,\r\n            soc2: SOC_2,\r\n            soc3: SOC_3,\r\n            minSOC: minSOC\r\n        });\r\n\r\n\r\n        // do the mapping\r\n        this.dd.executeMapping();\r\n\r\n        // update all elements expecting data\r\n        this.dd.updateDataExpecters();\r\n\r\n        let maxValueInfo = {\r\n            time: bmsLoggingPacket.time,\r\n            totalAmps: totalAmps,\r\n            uOut: bmsLoggingPacket.uOut,\r\n            pTotal: P_total,\r\n            tShunt: bmsLoggingPacket.tShunt,\r\n            tPch: bmsLoggingPacket.tPch\r\n        }\r\n\r\n        // always have the newest packet at the first index of the buffer\r\n        this.maxValueBuffer.unshift(maxValueInfo);\r\n        // delete all packets that are older than needed\r\n        sf.deleteOlderDataPackets(this.maxValueBuffer, this.interfaceConfig.maxValueHoldOnTime);\r\n\r\n\r\n        let powersArray = [];\r\n        let currentsArray = [];\r\n        let voltagesArray = [];\r\n        let prechargeTempArray = [];\r\n        let shuntTempArray = [];\r\n\r\n        this.maxValueBuffer.forEach((sample) => {\r\n            currentsArray.unshift(parseFloat(sample.totalAmps).toFixed(1));\r\n            voltagesArray.unshift(sample.uOut);\r\n            powersArray.unshift(sample.pTotal);\r\n            shuntTempArray.unshift(sample.tShunt);\r\n            prechargeTempArray.unshift(sample.tPch);\r\n        });\r\n\r\n\r\n\r\n\r\n        /*\r\n            setting gui elements\r\n         */\r\n\r\n        this.setBMSState(bmsLoggingPacket.stateMachineState);\r\n        this.handleTurnOnTd(bmsLoggingPacket);\r\n        this.handleConfigWarningButtons(bmsLoggingPacket.stateMachineState);\r\n\r\n\r\n        this.setChannelVoltageInfo(averagedDataU);\r\n        this.setChannelCurrentInfo(averagedDataI);\r\n\r\n        this.setBMSTempValues(averagedDataT);\r\n\r\n        this.setBMSMaxValues({\r\n            power: Math.max(...powersArray).toFixed(2),\r\n            maxCurrent: Math.max(...currentsArray),\r\n            minCurrent: Math.min(...currentsArray),\r\n            minVoltage: Math.min(...voltagesArray).toFixed(2),\r\n            maxVoltage: Math.max(...voltagesArray).toFixed(2),\r\n            shuntTemp: Math.max(...shuntTempArray).toFixed(1),\r\n            prechargeTemp: Math.max(...prechargeTempArray).toFixed(1)\r\n        });\r\n\r\n        this.setBMSCalculatedValues(bmsCalculatedDataPacket);\r\n\r\n\r\n        this.bmsCalibObj.updateActualData(averagedDataCalib);\r\n\r\n\r\n        // this has to be after both setInlineTempValues and setInlineMaxValues\r\n        // as it disables and overwrites the values put in by the functions above in case of disabled temps\r\n        this.setTempGaugeVisibility(this.interfaceConfig);\r\n\r\n\r\n\r\n        if (this.dataLoggingMgr.dataLoggingEnabled) {\r\n\r\n            let dataStringBoard;\r\n\r\n            const stamp = sf.getTimeStamp();\r\n            const ms_today = sf.getMsToday();\r\n\r\n            // as there are 11 numbers and 12 chars, the rough size is\r\n            //11*8bytes + 12*2bytes = 112 bytes\r\n\r\n            let boardData = [\r\n                bmsLoggingPacket.packageSequenceNumber,\r\n                ms_today,\r\n                stamp,\r\n                bmsLoggingPacket.u1,\r\n                bmsLoggingPacket.u2,\r\n                bmsLoggingPacket.u3,\r\n                bmsLoggingPacket.uOut,\r\n                bmsLoggingPacket.i1,\r\n                bmsLoggingPacket.i2,\r\n                bmsLoggingPacket.i3,\r\n                bmsLoggingPacket.tShunt,\r\n                bmsLoggingPacket.tPch\r\n            ];\r\n\r\n            dataStringBoard = boardData.join(\";\") + \";;;;;\";\r\n\r\n            this.dataLoggingMgr.loggingDataBuffer.push(dataStringBoard);\r\n        }\r\n    }\r\n\r\n}","import fileObject from \"../helpers/fileObject\";\r\nimport sf from \"../helpers/small_functions\";\r\n\r\n\r\nexport default class dataLoggingManager{\r\n\r\n    loggingFileObj;\r\n\r\n    loggingDataBuffer;\r\n\r\n    dataLoggingEnabled;\r\n\r\n    constructor() {\r\n\r\n        this.dataLoggingEnabled = false;\r\n\r\n        this.loggingDataBuffer = [];\r\n\r\n        // initial call\r\n        this.saveDataLoggingData();\r\n    }\r\n\r\n    async newFile(){\r\n        this.loggingFileObj = new loggingDataFileObject(this);\r\n\r\n        await this.loggingFileObj.getHandle();\r\n\r\n        this.loggingDataBuffer = [\"psn;ms_today;stamp;u1;u2;u3;uOut;i1;i2;i3;tShunt;tPch;speed;rpm;motorTemp;externTemp;tripOdo;\"];\r\n    }\r\n\r\n    closeFile(){\r\n        this.dataLoggingEnabled = false;\r\n\r\n        this.loggingFileObj.closeObject();\r\n        this.loggingFileObj = null;\r\n\r\n        this.loggingDataBuffer = [];\r\n    }\r\n\r\n    saveDataLoggingData(){\r\n        // don't even bother if data logging isn't enabled\r\n        if(!this.dataLoggingEnabled && this.loggingDataBuffer.length === 0){\r\n            setTimeout(()=>{\r\n                this.saveDataLoggingData();\r\n            }, 1000);\r\n            return;\r\n        }\r\n\r\n        this.loggingFileObj.saveLoggingData(this.loggingDataBuffer);\r\n        this.loggingDataBuffer = [];\r\n\r\n        // recursively execute every second\r\n        setTimeout(()=>{\r\n            this.saveDataLoggingData();\r\n        }, 1000);\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass loggingDataFileObject extends fileObject{\r\n    constructor(managerObj){\r\n        super(\"csv\");\r\n\r\n        this.manager = managerObj;\r\n\r\n        this.suggestedFileName = this.getSuggestedFileName();\r\n\r\n        this.dataBuffer = [];\r\n    }\r\n\r\n    async getHandle(){\r\n        await this.getSaveFileHandle(this.suggestedFileName);\r\n    }\r\n\r\n    saveLoggingData(data){\r\n\r\n        // push all data into the buffer\r\n        this.dataBuffer = this.dataBuffer.concat(data);\r\n\r\n        // then decide what to do with it\r\n        if(!this.hasFileAccess()){\r\n\r\n            // lord have mercy for the ram\r\n\r\n            // to limit the file size and thereby the ram size, the files will be split\r\n\r\n            // limit to about 10MB\r\n            const maxBufferLength = (10E6 / 115);\r\n            if(this.dataBuffer.length > maxBufferLength){\r\n                this.dataBuffer.push(\"\");\r\n\r\n                this.saveLegacy(this.suggestedFileName, this.dataBuffer);\r\n\r\n                this.dataBuffer = [];\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        if(typeof this.writableStream === \"undefined\"){\r\n            console.log(\"initialise object before writing to it\");\r\n            return;\r\n        }\r\n\r\n        // constantly write data to the file system in 20 packet chunks\r\n        // if the user actually has FS access\r\n        if (this.dataBuffer.length > 20 || !this.manager.dataLoggingEnabled) {\r\n            this.dataBuffer.push(\"\");\r\n\r\n            try{\r\n                this.writableStream.write(this.dataBuffer.join(\"\\n\"));\r\n            }catch(e){\r\n            }\r\n\r\n            this.dataBuffer = [];\r\n        }\r\n    }\r\n\r\n    closeObject(){\r\n        if(this.hasFileAccess()){\r\n            if(typeof this.writableStream === \"undefined\"){\r\n                console.log(\"initialise object before closing it\");\r\n                return;\r\n            }\r\n\r\n            this.saveLoggingData([]);\r\n            this.writableStream.close();\r\n        }else{\r\n            this.saveLegacy(this.suggestedFileName, this.dataBuffer);\r\n        }\r\n    }\r\n\r\n    getSuggestedFileName(){\r\n        let bmsName = \"\";\r\n\r\n        if(typeof sf.getIdValue(\"board-config-device-name\") !== \"undefined\"){\r\n            bmsName = sf.getIdValue(\"board-config-device-name\");\r\n        }\r\n\r\n        const date = new Date();\r\n\r\n        return bmsName +\r\n            date.getFullYear().toString() + \"_\" +\r\n            sf.pad2(date.getMonth() + 1) + \"_\" +\r\n            sf.pad2(date.getDate()) + \"__\" +\r\n            sf.pad2(date.getHours()) + \"_\" +\r\n            sf.pad2(date.getMinutes()) + \"_\" +\r\n            sf.pad2(date.getSeconds());\r\n    }\r\n}\r\n\r\n\r\n","import gui_elements from \"../gui_elements\";\r\n\r\nimport sf from \"../helpers/small_functions\";\r\n\r\n\r\nexport default class tachoGatherer extends gui_elements{\r\n    inlineHertzSampleBuffer = [];\r\n    lastInlineLoggingDataTimeStamp;\r\n\r\n    providedDataLabels = [\r\n        \"speed\",\r\n        \"rpm\",\r\n        \"motorTemp\",\r\n        \"integratedTemp\",\r\n        \"tripOdometer\",\r\n        \"vehicleOdometer\"\r\n    ]\r\n\r\n\r\n    constructor(tachoConfigObj) {\r\n        super();\r\n\r\n        this.tachoConfigObj = tachoConfigObj;\r\n    }\r\n\r\n    initDataDistribution(dd){\r\n        this.dd = dd;\r\n        this.dd.addProvidedDataLabels(this.providedDataLabels);\r\n    }\r\n\r\n    gatherData(event){\r\n\r\n        if(!this.tachoConfigObj.initialised){\r\n            console.log(\"waiting for config to be read...\");\r\n            return;\r\n        }\r\n\r\n        let data = event.target.value;\r\n\r\n        if(data.byteLength === 0) {\r\n            console.log(\"Something wrong with incoming BLE Data!\");\r\n            return;\r\n        }\r\n\r\n        /*\r\n        let inlineLoggingDataInterval = Date.now() - lastInlineLoggingDataTimeStamp;\r\n        if(inlineLoggingDataInterval < 25){\r\n            console.log(\"dropped tacho\");\r\n            return;\r\n        }\r\n        */\r\n        this.lastInlineLoggingDataTimeStamp = Date.now();\r\n\r\n        this.inlineHertzSampleBuffer.push([\r\n            this.lastInlineLoggingDataTimeStamp\r\n        ]);\r\n        this.inlineHertzSampleBuffer.forEach((element) => {\r\n            if(element[0] + 1000 < Date.now()){\r\n                const index = this.inlineHertzSampleBuffer.indexOf(element);\r\n                if (index > -1) { // only splice array when item is found\r\n                    this.inlineHertzSampleBuffer.splice(index, 1); // 2nd parameter means remove one item only\r\n                }\r\n            }\r\n        });\r\n\r\n        sf.setValueTexts(this.tachoDataLoggingFrequencyValues, \"T: \" +  this.inlineHertzSampleBuffer.length + \"Hz\");\r\n\r\n\r\n\r\n        let dataPacket = {\r\n            time: this.lastInlineLoggingDataTimeStamp,\r\n            speed: -sf.handleSignedBullshit(((data.getUint8(2) << 8) | data.getUint8(1))) * 0.036,\r\n            rpm: ((data.getUint8(4) << 8) | data.getUint8(3)),\r\n            motorTemp: sf.cap((-sf.handleSignedBullshit(((data.getUint8(6) << 8) | data.getUint8(5))) / 10), -50, 200),\r\n            integratedTemp: sf.cap((-sf.handleSignedBullshit(((data.getUint8(8) << 8) | data.getUint8(7))) / 10), -50, 200),\r\n            tripOdo: sf.handleUnsignedBullshit32(((data.getUint8(12) << 24) | (data.getUint8(11) << 16) | (data.getUint8(10) << 8) | data.getUint8(9))),\r\n            vehicleOdo: sf.handleUnsignedBullshit32(((data.getUint8(16) << 24) | (data.getUint8(15) << 16) | (data.getUint8(14) << 8) | data.getUint8(13))),\r\n            calibPulseCount: -sf.handleSignedBullshit(((data.getUint8(18) << 8) | data.getUint8(17)))\r\n        };\r\n\r\n\r\n        // update data in the data distribution\r\n        this.dd.updateProvidedData({\r\n            speed: dataPacket.speed,\r\n            rpm: dataPacket.rpm,\r\n\r\n            motorTemp: dataPacket.motorTemp,\r\n            integratedTemp: dataPacket.integratedTemp,\r\n\r\n            tripOdometer: dataPacket.tripOdo,\r\n            vehicleOdometer: dataPacket.vehicleOdo\r\n        });\r\n\r\n        return dataPacket;\r\n    }\r\n}","import gui from \"../gui\";\r\n\r\nimport sf from \"../helpers/small_functions\";\r\nimport tachoGatherer from \"./tacho_gathering\";\r\n\r\n\r\n\r\n\r\n\r\nexport default class tachoDataProcessor extends gui{\r\n\r\n    tachoConfigObj;\r\n\r\n\r\n    tachoAveragingBuffer = [];\r\n    maxInlineValueBuffer = [];\r\n\r\n    // values for calculation of wh/km and therefore also range\r\n    usedEnergyOffset;\r\n\r\n\r\n    lastInlineLoggingDataTimeStamp = Date.now();\r\n    drivenDistanceOffset;\r\n\r\n\r\n    providedDataLabels = [\r\n\r\n    ]\r\n\r\n\r\n    // this constructor takes the tachoObj,\r\n    // because the bmsObj is used when calculating economy and stuff\r\n    constructor(tachoObj, interfaceConfig, dataLoggingMgr) {\r\n        super();\r\n\r\n        this.tachoObj = tachoObj;\r\n        this.tachoConfigObj = tachoObj.tachoConfigObj;\r\n\r\n        this.interfaceConfig = interfaceConfig;\r\n\r\n        this.dataLoggingMgr = dataLoggingMgr;\r\n\r\n        this.gatherer = new tachoGatherer(this.tachoConfigObj);\r\n\r\n        this.drivenDistanceOffset = -1;\r\n    }\r\n\r\n\r\n    initDataDistribution(dd){\r\n        this.dd = dd;\r\n        this.dd.addProvidedDataLabels(this.providedDataLabels);\r\n    }\r\n\r\n\r\n    isInitialised() {\r\n        return typeof this.tachoAveragingBuffer.at(0) === \"undefined\";\r\n    }\r\n\r\n    processData(event) {\r\n        let tachoLoggingPacket = this.gatherer.gatherData(event);\r\n\r\n        // catch invalid / dropped packets\r\n        if (typeof (tachoLoggingPacket) === \"undefined\") {\r\n            return;\r\n        }\r\n\r\n        const stamp = sf.getTimeStamp();\r\n        const ms_today = sf.getMsToday();\r\n\r\n\r\n        // always have the newest packet at the first index of the buffer\r\n        this.tachoAveragingBuffer.unshift(tachoLoggingPacket);\r\n        // delete all packets that are older than needed\r\n        sf.deleteOlderDataPackets(this.tachoAveragingBuffer, this.interfaceConfig.maxTachoAveragingInterval);\r\n\r\n        const averagedDataSpeeds = sf.averagedData(sf.getLastXSeconds(this.tachoAveragingBuffer, this.interfaceConfig.tachoDataAveragingIntervalV), 1);\r\n        const averagedDataT = sf.averagedData(sf.getLastXSeconds(this.tachoAveragingBuffer, this.interfaceConfig.tachoDataAveragingIntervalT), 1);\r\n\r\n\r\n        // ECONOMY CALCULATION\r\n        if (this.tachoObj.bmsObj.isConnected()\r\n            && typeof this.tachoObj.bmsObj.bmsDataProcessor.bmsAveragingBuffer.at(-1) !== \"undefined\") {\r\n            // get bms data for economy calculation if bms connected\r\n            let bmsLoggingPacket = this.tachoObj.bmsObj.bmsDataProcessor.bmsAveragingBuffer.at(-1);\r\n            const totalUsedEnergy = bmsLoggingPacket.eU1\r\n                + bmsLoggingPacket.eU2\r\n                + bmsLoggingPacket.eU3;\r\n\r\n            // kinda pfusch\r\n            // used for the \"reset economy\" button\r\n            if (this.drivenDistanceOffset === -1) {\r\n                if (this.tachoObj.bmsObj.isConnected()) {\r\n                    this.drivenDistanceOffset = (tachoLoggingPacket.tripOdo / 1000); // in meters\r\n\r\n                    this.usedEnergyOffset = totalUsedEnergy;\r\n                }\r\n            }\r\n\r\n\r\n            // distance driven in the session in meters\r\n            let drivenDistanceSession = (tachoLoggingPacket.tripOdo / 1000) - this.drivenDistanceOffset;\r\n            // energy used in the session in mWh\r\n            let energyUsedSession = (totalUsedEnergy - this.usedEnergyOffset) / 3.6;\r\n\r\n            // wh/km for the session\r\n            let sessionEconomy = energyUsedSession / drivenDistanceSession;\r\n\r\n            let range = Math.abs(\r\n                (this.tachoObj.bmsObj.bmsDataProcessor.remainingEnergy1\r\n                    + this.tachoObj.bmsObj.bmsDataProcessor.remainingEnergy2\r\n                    + this.tachoObj.bmsObj.bmsDataProcessor.remainingEnergy3)\r\n                / sessionEconomy);\r\n\r\n            this.setEconomyGauges({\r\n                whkmSession: sessionEconomy,\r\n                range: range\r\n            });\r\n        } else {\r\n            this.disableEconomyGauges();\r\n        }\r\n\r\n\r\n        // Set values\r\n        this.tachoObj.tachoConfigObj.updatePulseCount(tachoLoggingPacket.calibPulseCount);\r\n\r\n\r\n        this.setInlineTempValues({\r\n            motor: averagedDataT.motorTemp,\r\n            extern: averagedDataT.integratedTemp\r\n        });\r\n\r\n        this.setTachoGauges({\r\n            tripOdo: tachoLoggingPacket.tripOdo,\r\n            vehicleOdo: tachoLoggingPacket.vehicleOdo\r\n        });\r\n\r\n        this.setSpeedGaugeValues(averagedDataSpeeds);\r\n\r\n        let maxTachoValueInfo = {\r\n            time: tachoLoggingPacket.time,\r\n            speed: tachoLoggingPacket.speed,\r\n            motorTemp: tachoLoggingPacket.motorTemp,\r\n            integratedTemp: tachoLoggingPacket.integratedTemp\r\n        }\r\n\r\n\r\n        // always have the newest packet at the first index of the buffer\r\n        this.maxInlineValueBuffer.unshift(maxTachoValueInfo);\r\n        // delete all packets that are older than needed\r\n        sf.deleteOlderDataPackets(this.maxInlineValueBuffer, this.interfaceConfig.maxValueHoldOnTime);\r\n\r\n        let speedsArray = [];\r\n        let motorTempArray = [];\r\n        let externTempArray = [];\r\n\r\n        this.maxInlineValueBuffer.forEach((sample) => {\r\n            if (!isNaN(sample.speed)) {\r\n                speedsArray.unshift(sample.speed);\r\n            }\r\n            if (!isNaN(sample.motorTemp)) {\r\n                motorTempArray.unshift(sample.motorTemp).toFixed(1);\r\n            }\r\n            if (!isNaN(sample.integratedTemp)) {\r\n                externTempArray.unshift(sample.integratedTemp).toFixed(1);\r\n            }\r\n        });\r\n\r\n\r\n        this.setInlineMaxValues({\r\n            speed: Math.max(...speedsArray),\r\n            motorTemp: Math.max(...motorTempArray).toFixed(1),\r\n            externTemp: Math.max(...externTempArray).toFixed(1),\r\n        });\r\n\r\n\r\n        // this has to be after both setInlineTempValues and setInlineMaxValues\r\n        // as it disables and overwrites the values put in by the functions above in case of disabled temps\r\n        this.setTempGaugeVisibility(this.interfaceConfig);\r\n\r\n        if (this.dataLoggingMgr.dataLoggingEnabled && this.tachoObj.isConnected()) {\r\n            let dataStringInline = [\r\n                \"\",\r\n                ms_today,\r\n                stamp,\r\n                \"\",\r\n                \"\",\r\n                \"\",\r\n                \"\",\r\n                \"\",\r\n                \"\",\r\n                \"\",\r\n                \"\",\r\n                \"\",\r\n                tachoLoggingPacket.speed,\r\n                tachoLoggingPacket.rpm,\r\n                tachoLoggingPacket.motorTemp,\r\n                tachoLoggingPacket.integratedTemp,\r\n                tachoLoggingPacket.tripOdo\r\n            ].join(\";\");\r\n\r\n            this.dataLoggingMgr.loggingDataBuffer.push(dataStringInline);\r\n        }\r\n    }\r\n}","// noinspection JSBitwiseOperatorUsage,FallThroughInSwitchStatementJS\r\n\r\n\r\n/*\r\n    BMS related\r\n */\r\n\r\nimport gui_elements from \"./gui_elements\";\r\nimport sf from \"./helpers/small_functions\";\r\n\r\nexport default class gui extends gui_elements {\r\n\r\n    turnOnTdMoveStart = {x: 0, y: 0};\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    initBmsObj(bmsObj){\r\n        this.bmsObj = bmsObj;\r\n    }\r\n\r\n\r\n\r\n    inlineConnected() {\r\n        this.inlineGaugeDiv.classList.remove(\"inline-gauge-disabled\");\r\n        this.connectTachoOverlay.classList.add(\"visibility-hidden\");\r\n\r\n\r\n        if(typeof this.serviceInitDoneCB !== \"undefined\" && this.serviceInitDoneCB !== null){\r\n            this.serviceInitDoneCB();\r\n        }\r\n\r\n    }\r\n\r\n    inlineDisconnected(){\r\n        this.inlineGaugeDiv.classList.add(\"inline-gauge-disabled\");\r\n        this.connectTachoOverlay.classList.remove(\"visibility-hidden\");\r\n    }\r\n\r\n\r\n    resetAutoconnectBMS(){\r\n        this.autoConnectBMSError();\r\n\r\n        setTimeout(()=>{\r\n            sf.setValueTexts(this.autoConnectBMSTexts, \"Connect</br>BMS\");\r\n            sf.classListValueTextsRemove(this.autoConnectBMSTexts, \"fault\");\r\n        }, 1000);\r\n    }\r\n\r\n    autoConnectBMSError() {\r\n        this.autoconnectingBMSText.classList.add(\"hidden\");\r\n        this.autoconnectingBMSText.style.position = \"\";\r\n        sf.setValueTexts(this.autoConnectBMSTexts, \"Didn't</br>work\");\r\n        sf.classListValueTextsAdd(this.autoConnectBMSTexts, \"fault\");\r\n    }\r\n\r\n\r\n    setAutoconnectBMSText(text) {\r\n        this.autoconnectingBMSText.style.position = \"inherit\";\r\n        this.autoconnectingBMSText.classList.remove(\"hidden\");\r\n\r\n        sf.setValueTexts(this.autoConnectBMSTexts, text);\r\n    }\r\n\r\n\r\n    resetAutoconnectBMSSilentInstant() {\r\n        this.autoconnectingBMSText.classList.add(\"hidden\");\r\n        this.autoconnectingBMSText.style.position = \"\";\r\n\r\n        sf.setValueTexts(this.autoConnectBMSTexts, \"Connect</br>BMS\");\r\n        sf.classListValueTextsRemove(this.autoConnectBMSTexts, \"fault\");\r\n    }\r\n\r\n\r\n    resetAutoconnectTacho() {\r\n        this.autoconnectTachoError();\r\n\r\n        setTimeout(() => {\r\n            sf.setValueTexts(this.autoConnectTachoTexts, \"Connect</br>Tacho\");\r\n            sf.classListValueTextsRemove(this.autoConnectTachoTexts, \"fault\");\r\n        }, 1000);\r\n    }\r\n\r\n    resetAutoconnectTachoSilentInstant() {\r\n        this.autoconnectingTachoText.classList.add(\"hidden\");\r\n        this.autoconnectingTachoText.style.position = \"\";\r\n\r\n        sf.setValueTexts(this.autoConnectTachoTexts, \"Connect</br>Tacho\");\r\n        sf.classListValueTextsRemove(this.autoConnectTachoTexts, \"fault\");\r\n    }\r\n\r\n    autoconnectTachoError() {\r\n        this.autoconnectingTachoText.classList.add(\"hidden\");\r\n        this.autoconnectingTachoText.style.position = \"\";\r\n\r\n        sf.setValueTexts(this.autoConnectTachoTexts, \"Didn't</br>work\");\r\n        sf.classListValueTextsAdd(this.autoConnectTachoTexts, \"fault\");\r\n    }\r\n\r\n    setAutoconnectTachoText(text) {\r\n        this.autoconnectingTachoText.style.position = \"inherit\";\r\n        this.autoconnectingTachoText.classList.remove(\"hidden\");\r\n\r\n        sf.setValueTexts(this.autoConnectTachoTexts, text);\r\n    }\r\n\r\n\r\n\r\n\r\n    initTachoObj(tachoObj){\r\n        this.tachoObj = tachoObj;\r\n    }\r\n\r\n    addGUIEventListeners(){\r\n        this.clearAlertsButton.addEventListener(\"click\", () => {\r\n            this.bmsObj.clearAlerts(0, \"\");\r\n        });\r\n\r\n\r\n        //todo: transfer the characteristics write to bmsObj\r\n        this.boardConfigTurnOnButton.addEventListener(\"click\", () => {\r\n            if (this.boardConfigTurnOnButton.innerHTML.includes(\"ON\")) { // if the button says \"Switch on\", switch on when pressed\r\n                this.boardConfigTurnOnButton.classList.add(\"button-orange\");\r\n                this.bmsObj.characteristics.turnOnCharacteristic.writeValue(Uint8Array.from([1]).buffer).then(_ => {\r\n                    this.boardConfigTurnOnButton.classList.remove(\"button-orange\");\r\n                }).catch(_ => {\r\n                    console.log(\"failed to turn on\");\r\n                });\r\n            }\r\n            if (this.boardConfigTurnOnButton.innerHTML.includes(\"OFF\")) {\r\n                this.boardConfigTurnOnButton.classList.add(\"button-orange\");\r\n                this.bmsObj.characteristics.turnOnCharacteristic.writeValue(Uint8Array.from([0]).buffer).then(_ => {\r\n                    this.boardConfigTurnOnButton.classList.remove(\"button-orange\");\r\n                }).catch(_ => {\r\n                    console.log(\"failed to turn off\");\r\n                });\r\n            }\r\n        });\r\n\r\n        this.boardCalibTurnOnButton.addEventListener(\"click\", () => {\r\n            if (this.boardCalibTurnOnButton.innerHTML.includes(\"ON\")) { // if the button says \"Switch on\", switch on when pressed\r\n                this.boardCalibTurnOnButton.classList.add(\"button-orange\");\r\n                this.bmsObj.characteristics.turnOnCharacteristic.writeValue(Uint8Array.from([1]).buffer).then(_ => {\r\n                    this.boardCalibTurnOnButton.classList.remove(\"button-orange\");\r\n                }).catch(_ => {\r\n                    console.log(\"failed to turn on\");\r\n                });\r\n            }\r\n            if (this.boardCalibTurnOnButton.innerHTML.includes(\"OFF\")) {\r\n                this.boardCalibTurnOnButton.classList.add(\"button-orange\");\r\n                this.bmsObj.characteristics.turnOnCharacteristic.writeValue(Uint8Array.from([0]).buffer).then(_ => {\r\n                    this.boardCalibTurnOnButton.classList.remove(\"button-orange\");\r\n                }).catch(_ => {\r\n                    console.log(\"failed to turn off\");\r\n                });\r\n            }\r\n        });\r\n\r\n\r\n\r\n\r\n        // bind is necessary since the functions call methods from this class\r\n        // without bind, the \"this\" context would get lost, making the listeners not work\r\n        this.turnOnTd.addEventListener(\"mousedown\", this.turnOnTdPressed.bind(this));\r\n        this.turnOnTd.addEventListener(\"touchstart\", this.turnOnTdPressed.bind(this));\r\n        this.turnOnTd.addEventListener(\"touchmove\", this.turnOnTdMoved.bind(this));\r\n\r\n        this.turnOnTd.addEventListener(\"mouseup\", this.turnOnTdReleased.bind(this));\r\n        this.turnOnTd.addEventListener(\"touchend\", this.turnOnTdReleased.bind(this));\r\n\r\n\r\n\r\n        this.resetEconomyButton.addEventListener(\"click\", () => {\r\n            // triggers a reset of all the offsets needed to calculate the sessison economy\r\n            // basically starts a new session for the measurement\r\n            console.log(\"new session values for economy!\");\r\n            this.tachoObj.tachoDataProcessor.drivenDistanceOffset = -1;\r\n        });\r\n\r\n\r\n        this.resetTripButton.addEventListener(\"click\", () => {\r\n\r\n            this.tachoObj.inlineOdometerCharacteristic.writeValueWithoutResponse(Uint8Array.from([0x01]).buffer).then(()=>{\r\n                // also reset economy values\r\n                this.tachoObj.tachoDataProcessor.drivenDistanceOffset = -1;\r\n            }).catch(_ =>{\r\n                console.log(\"failed to reset trip odometer\");\r\n            });\r\n\r\n        });\r\n\r\n\r\n        for (let button of this.hideSettingButtons) {\r\n            button.addEventListener(\"click\", ()=>{\r\n                this.table.scrollIntoView({\r\n                    behavior: \"smooth\"\r\n                });\r\n\r\n                this.hideAllSettings();\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    // reset everything connected to the settings\r\n    hideAllSettings(){\r\n\r\n        // hide all settings containing containers\r\n        this.boardCalibContainer.classList.add(\"display-none\");\r\n        this.boardConfigContainer.classList.add(\"display-none\");\r\n        this.inlineConfigContainer.classList.add(\"display-none\");\r\n        this.boardInfoContainer.classList.add(\"display-none\");\r\n        this.interfaceSettingsContainer.classList.add(\"display-none\");\r\n        this.dbcFileManagerContainer.classList.add(\"display-none\");\r\n    }\r\n\r\n\r\n    updateConfigRelatedGauges(config) {\r\n        // config info  tile\r\n        sf.setValueTexts(this.bmsConfigStartupValues, (config.boardAutoStart ? 'Autostart' : 'manual Start'));\r\n\r\n        sf.setValueTexts(this.bmsConfigOverVoltageValues, String(config.packOverVoltage) + \"V\");\r\n        sf.setValueTexts(this.bmsConfigUnderVoltageValues, String(config.packUnderVoltage) + \"V\");\r\n\r\n        sf.setValueTexts(this.bmsConfigOverTempValues, String(Math.min(config.protMaxLogicTemp, config.protMaxPowerTemp)) + \"°C\");\r\n\r\n\r\n        // disable non enabled channels and count number of enabled channels - to adjust protection values\r\n        let numChannels = 0;\r\n        if (!(config.boardEnabledChannels & 0b00000001)) {\r\n            document.getElementById(\"channel-info-1\").classList.add(\"disabled\");\r\n        } else {\r\n            document.getElementById(\"channel-info-1\").classList.remove(\"disabled\");\r\n            numChannels ++;\r\n        }\r\n        if (!(config.boardEnabledChannels & 0b00000010)) {\r\n            document.getElementById(\"channel-info-2\").classList.add(\"disabled\");\r\n        } else {\r\n            document.getElementById(\"channel-info-2\").classList.remove(\"disabled\");\r\n            numChannels ++;\r\n        }\r\n        if (!(config.boardEnabledChannels & 0b00000100)) {\r\n            document.getElementById(\"channel-info-3\").classList.add(\"disabled\");\r\n        } else {\r\n            document.getElementById(\"channel-info-3\").classList.remove(\"disabled\");\r\n            numChannels ++;\r\n        }\r\n\r\n        sf.setValueTexts(this.bmsConfigUnderCurrentValues, String(config.protMaxReverseCurrent * 0.01 * numChannels) + \"A\");\r\n        sf.setValueTexts(this.bmsConfigOverCurrentValues, String(config.protMaxCurrent * 0.01 * numChannels) + \"A\");\r\n\r\n        // should some day be editable on a per-channel basis\r\n        sf.setValueTexts(this.bmsCh1TypeValues, config.battCellCount + \"S\");\r\n        sf.setValueTexts(this.bmsCh2TypeValues, config.battCellCount + \"S\");\r\n        sf.setValueTexts(this.bmsCh3TypeValues, config.battCellCount + \"S\");\r\n    }\r\n\r\n\r\n    setBMSState(stateMachineState) {\r\n        let stateMachineStateString;\r\n\r\n        // noinspection FallThroughInSwitchStatementJS\r\n        switch (stateMachineState) {\r\n            case 0:\r\n                stateMachineStateString = \"Startup\"\r\n                break;\r\n\r\n            case 1:\r\n                stateMachineStateString = \"Precharging...\"\r\n                break;\r\n\r\n            case 2:\r\n                stateMachineStateString = \"Ready\"\r\n                break;\r\n\r\n            case 4:\r\n                stateMachineStateString = \"Fault\"\r\n                break;\r\n\r\n            case 3:\r\n                stateMachineStateString = \"Operation\"\r\n                sf.classListValueTextsAdd(this.bmsStateMachineStateValues, \"success\");\r\n                break;\r\n\r\n            default:\r\n                stateMachineStateString = \"UNDEFINED STATE!\"\r\n                break;\r\n        }\r\n\r\n        if(stateMachineState !== 3){\r\n            sf.classListValueTextsRemove(this.bmsStateMachineStateValues, \"success\");\r\n        }\r\n\r\n        sf.setValueTexts(this.bmsStateMachineStateValues, stateMachineStateString);\r\n    }\r\n\r\n\r\n    handleTurnOnTd(loggingPacket) {\r\n        let stateMachineState = loggingPacket.stateMachineState;\r\n        // turn on field is now tied to the state machine state - smart choice!\r\n        if (stateMachineState === 2) { // ready\r\n\r\n            // if turnOnTd is in the elements div (clear alerts must be on the screen then), swap\r\n            this.elementsDiv.childNodes.forEach((child) => {\r\n                if (child === this.turnOnTd) {\r\n                    sf.swap(this.clearAlertsTd, this.turnOnTd);\r\n                }\r\n            });\r\n            if (!this.turnOnButton.innerHTML.includes(\"ON\")) {\r\n                this.turnOnButton.innerHTML = \"<h2>Switch ON</h2>\";\r\n            }\r\n        }\r\n        if (stateMachineState === 3) { // operation\r\n            this.elementsDiv.childNodes.forEach((child) => {\r\n                if (child === this.turnOnTd) {\r\n                    sf.swap(this.clearAlertsTd, this.turnOnTd);\r\n                }\r\n            });\r\n            if (!this.turnOnButton.innerHTML.includes(\"OFF\")) {\r\n                this.turnOnButton.innerHTML = \"<h2>Switch OFF</h2>\";\r\n            }\r\n        }\r\n        if (stateMachineState === 1) { // Precharging\r\n            this.elementsDiv.childNodes.forEach((child) => {\r\n                if (child === this.turnOnTd) {\r\n                    sf.swap(this.clearAlertsTd, this.turnOnTd);\r\n                }\r\n            });\r\n            this.turnOnButton.innerHTML = \"<h2>Precharging...</h2>\";\r\n\r\n            this.turnOnButton.classList.add(\"animateLoading\");\r\n\r\n            let maxInputVoltage = Math.max(loggingPacket.u1, loggingPacket.u2, loggingPacket.u3);\r\n            let prechargePercentage = loggingPacket.uOut / (maxInputVoltage - 1);\r\n\r\n            this.turnOnButton.style.backgroundSize = (prechargePercentage*100) + \"% 100%\";\r\n        }else{\r\n            this.turnOnButton.classList.remove(\"animateLoading\");\r\n            this.turnOnButton.style.backgroundSize = \"\";\r\n        }\r\n        if (stateMachineState === 4) { // fault\r\n            this.elementsDiv.childNodes.forEach((child) => {\r\n                if (child === this.clearAlertsTd) {\r\n                    sf.swap(this.clearAlertsTd, this.turnOnTd);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    handleConfigWarningButtons(stateMachineState){\r\n        if (stateMachineState === 3) { // operation\r\n            // change the turn on/off buttons\r\n            if (!this.boardConfigTurnOnButton.innerHTML.includes(\"OFF\")) {\r\n                this.boardConfigTurnOnButton.innerHTML = \"Turn OFF\";\r\n            }\r\n            if (!this.boardCalibTurnOnButton.innerHTML.includes(\"OFF\")) {\r\n                this.boardCalibTurnOnButton.innerHTML = \"Turn OFF\";\r\n            }\r\n\r\n            // update the warning\r\n            this.configWriteWarning.classList.remove(\"hidden\");\r\n            this.calibWriteWarning.classList.remove(\"hidden\");\r\n\r\n            this.boardConfigInputFields.forEach((element) => {\r\n                element.classList.add(\"warning\");\r\n            });\r\n            this.boardCalibInputFields.forEach((element) => {\r\n                element.classList.add(\"warning\");\r\n            });\r\n        }else{\r\n            // change the turn on/off buttons\r\n            if (!this.boardConfigTurnOnButton.innerHTML.includes(\"ON\")) {\r\n                this.boardConfigTurnOnButton.innerHTML = \"Turn ON\";\r\n            }\r\n            if (!this.boardCalibTurnOnButton.innerHTML.includes(\"ON\")) {\r\n                this.boardCalibTurnOnButton.innerHTML = \"Turn ON\";\r\n            }\r\n\r\n            // update the warning\r\n            this.configWriteWarning.classList.add(\"hidden\");\r\n            this.calibWriteWarning.classList.add(\"hidden\");\r\n\r\n            this.boardConfigInputFields.forEach((element) => {\r\n                element.classList.remove(\"warning\");\r\n            });\r\n            this.boardCalibInputFields.forEach((element) => {\r\n                element.classList.remove(\"warning\");\r\n            });\r\n        }\r\n    }\r\n\r\n    turnOnTdPressed(event){\r\n        // save the touch event start to be compared to move event - cancel turn on/off on scroll\r\n        try{\r\n            this.turnOnTdMoveStart.x = event.changedTouches[0].screenX;\r\n            this.turnOnTdMoveStart.y = event.changedTouches[0].screenY;\r\n        }catch(e) {\r\n            // sometimes, there is no changed Touch in the event (don't ask why)\r\n            if(!(e instanceof TypeError)){\r\n                console.log(e);\r\n            }\r\n        }\r\n\r\n        if (this.turnOnButton.innerHTML.includes(\"ON\")) { // if the button says \"Switch on\", switch on when pressed\r\n            // turn on the animation of filling the button\r\n            this.turnOnButton.classList.add(\"animateTurnOnButton\");\r\n            // listen for the animation to end (mouse has been down for 0.5s if this event fires)\r\n            this.turnOnButton.addEventListener('animationend', () => {\r\n                this.turnOnButton.classList.add(\"orange\");\r\n\r\n                this.bmsObj.characteristics.turnOnCharacteristic.writeValue(Uint8Array.from([1]).buffer).then(() => {\r\n                    this.turnOnButton.classList.remove(\"orange\");\r\n                    //console.log(\"turned on\");\r\n                }).catch(e => {\r\n                    console.log(\"failed to turn on\" + e);\r\n                });\r\n                this.turnOnButton.classList.remove(\"animateTurnOnButton\");\r\n            });\r\n        }\r\n        if (this.turnOnButton.innerHTML.includes(\"OFF\")) {\r\n            this.turnOnButton.classList.add(\"animateTurnOffButton\");\r\n            // listen for the animation to end (mouse has been down for 0.5s if this event fires)\r\n            this.turnOnButton.addEventListener('animationend', () => {\r\n                this.turnOnButton.classList.add(\"orange\");\r\n\r\n                this.bmsObj.characteristics.turnOnCharacteristic.writeValue(Uint8Array.from([0]).buffer).then(() => {\r\n                    this.turnOnButton.classList.remove(\"orange\");\r\n                    //console.log(\"turned on\");\r\n                }).catch(e => {\r\n                    console.log(\"failed to turn off\" + e);\r\n                });\r\n                this.turnOnButton.classList.remove(\"animateTurnOffButton\");\r\n            });\r\n        }\r\n    }\r\n\r\n    // cancel animation if touch user only wants to scroll\r\n    turnOnTdMoved(event){\r\n        const moveX = this.turnOnTdMoveStart.x - event.changedTouches[0].screenX;\r\n        const moveY = this.turnOnTdMoveStart.y - event.changedTouches[0].screenY;\r\n        const swipeDistance = Math.sqrt(Math.pow(moveX, 2) + Math.pow(moveY, 2));\r\n        if(swipeDistance > window.outerHeight * 0.01){\r\n            this.turnOnButton.classList.remove(\"animateTurnOnButton\");\r\n            this.turnOnButton.classList.remove(\"animateTurnOffButton\");\r\n        }\r\n    }\r\n\r\n    turnOnTdReleased(){\r\n        // stop the animations if the mouse button/touch action is released\r\n        if (this.turnOnButton.innerHTML.includes(\"ON\")) {\r\n            this.turnOnButton.classList.remove(\"animateTurnOnButton\");\r\n        }\r\n        if (this.turnOnButton.innerHTML.includes(\"OFF\")) {\r\n            this.turnOnButton.classList.remove(\"animateTurnOffButton\");\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    updateBMSNameFields(name){\r\n        if(typeof name === \"undefined\"){\r\n            sf.setValueValues(this.deviceNameFields, \"too old firmware\");\r\n        }else{\r\n            sf.setValueValues(this.deviceNameFields, name);\r\n        }\r\n    }\r\n\r\n\r\n    setBMSCalculatedValues(data){\r\n        // total current\r\n        let iTotalString = data.iTotal.toFixed(1);\r\n        if(iTotalString === \"-0.0\"){iTotalString = \"0.0\"}\r\n        sf.setValueTexts(this.bmsCombinedCurrentValues, iTotalString + \"A\");\r\n\r\n        // total power\r\n        let pTotalString = data.pTotal.toFixed(1);\r\n        if(pTotalString === \"-0.0\"){pTotalString = \"0.0\"}\r\n        sf.setValueTexts(this.bmsCombinedPowerValues, pTotalString + \"kW\");\r\n\r\n        // power loss\r\n        let pLossString = \"\";\r\n        if(data.pLoss < 2){\r\n            // PFUSCH, we should think about a warning, not just cap the value at a min\r\n            if(data.pLoss < 2){ pLossString = \"<2.0\"; }\r\n        }else{\r\n            pLossString = data.pLoss.toFixed(1);\r\n        }\r\n        sf.setValueTexts(this.bmsPowerLossValues, pLossString + \"W\");\r\n\r\n        // used energy\r\n        if(Math.abs(data.energyUsed.combined / 1000) < 200){        // 0 to 199.9Wh\r\n            sf.setValueTexts(this.bmsCombinedEnergyUsedValues,  (data.energyUsed.combined / 1000).toFixed(1) + \"Wh\");\r\n        }else if(Math.abs(data.energyUsed.combined / 1000) < 1000){  // 200Wh to 999Wh\r\n            sf.setValueTexts(this.bmsCombinedEnergyUsedValues,  (data.energyUsed.combined / 1000).toFixed(0) + \"Wh\");\r\n        }else if(Math.abs(data.energyUsed.combined / 1000) < 20000){ // 1.0kWh to 19.9kWh\r\n            sf.setValueTexts(this.bmsCombinedEnergyUsedValues,  (data.energyUsed.combined / 1000000).toFixed(1) + \"kWh\");\r\n        }else{                                             //from 20kWh\r\n            sf.setValueTexts(this.bmsCombinedEnergyUsedValues,  (data.energyUsed.combined / 1000000).toFixed(0) + \"kWh\");\r\n        }\r\n\r\n        if(Math.abs(data.energyUsed.ch1 / 1000) < 200){           // 0 to 199.999Wh\r\n            sf.setValueTexts(this.bmsCh1EnergyUsedValues, (data.energyUsed.ch1 / 1000).toFixed(3) + \"Wh\");\r\n        }else if(Math.abs(data.energyUsed.ch1 / 1000) < 1000){    // 200.00Wh to 999.99Wh\r\n            sf.setValueTexts(this.bmsCh1EnergyUsedValues, (data.energyUsed.ch1 / 1000).toFixed(2) + \"Wh\");\r\n        }else if(Math.abs(data.energyUsed.ch1 / 1000) < 10000){   // 1000.0Wh to 9999.9Wh\r\n            sf.setValueTexts(this.bmsCh1EnergyUsedValues, (data.energyUsed.ch1 / 1000).toFixed(1) + \"Wh\");\r\n        }else if(Math.abs(data.energyUsed.ch1 / 1000) < 100000){  // 10000Wh to 99999Wh\r\n            sf.setValueTexts(this.bmsCh1EnergyUsedValues, (data.energyUsed.ch1 / 1000).toFixed(0) + \"Wh\");\r\n        }else {                                         // from 100.0kWh\r\n            sf.setValueTexts(this.bmsCh1EnergyUsedValues, (data.energyUsed.ch1 / 1000000).toFixed(1) + \"kWh\");\r\n        }\r\n\r\n        if(Math.abs(data.energyUsed.ch2 / 1000) < 200){           // 0 to 199.999Wh\r\n            sf.setValueTexts(this.bmsCh2EnergyUsedValues, (data.energyUsed.ch2 / 1000).toFixed(3) + \"Wh\");\r\n        }else if(Math.abs(data.energyUsed.ch2 / 1000) < 1000){    // 200.00Wh to 999.99Wh\r\n            sf.setValueTexts(this.bmsCh2EnergyUsedValues, (data.energyUsed.ch2 / 1000).toFixed(2) + \"Wh\");\r\n        }else if(Math.abs(data.energyUsed.ch2 / 1000) < 10000){   // 1000.0Wh to 9999.9Wh\r\n            sf.setValueTexts(this.bmsCh2EnergyUsedValues, (data.energyUsed.ch2 / 1000).toFixed(1) + \"Wh\");\r\n        }else if(Math.abs(data.energyUsed.ch2 / 1000) < 100000){  // 10000Wh to 99999Wh\r\n            sf.setValueTexts(this.bmsCh2EnergyUsedValues, (data.energyUsed.ch2 / 1000).toFixed(0) + \"Wh\");\r\n        }else {                                         // from 100.0kWh\r\n            sf.setValueTexts(this.bmsCh2EnergyUsedValues, (data.energyUsed.ch2 / 1000000).toFixed(1) + \"kWh\");\r\n        }\r\n\r\n        if(Math.abs(data.energyUsed.ch3 / 1000) < 200){           // 0 to 199.999Wh\r\n            sf.setValueTexts(this.bmsCh3EnergyUsedValues, (data.energyUsed.ch3 / 1000).toFixed(3) + \"Wh\");\r\n        }else if(Math.abs(data.energyUsed.ch3 / 1000) < 1000){    // 200.00Wh to 999.99Wh\r\n            sf.setValueTexts(this.bmsCh3EnergyUsedValues, (data.energyUsed.ch3 / 1000).toFixed(2) + \"Wh\");\r\n        }else if(Math.abs(data.energyUsed.ch3 / 1000) < 10000){   // 1000.0Wh to 9999.9Wh\r\n            sf.setValueTexts(this.bmsCh3EnergyUsedValues, (data.energyUsed.ch3 / 1000).toFixed(1) + \"Wh\");\r\n        }else if(Math.abs(data.energyUsed.ch3 / 1000) < 100000){  // 10000Wh to 99999Wh\r\n            sf.setValueTexts(this.bmsCh3EnergyUsedValues, (data.energyUsed.ch3 / 1000).toFixed(0) + \"Wh\");\r\n        }else {                                         // from 100.0kWh\r\n            sf.setValueTexts(this.bmsCh3EnergyUsedValues, (data.energyUsed.ch3 / 1000000).toFixed(1) + \"kWh\");\r\n        }\r\n\r\n        // state of charge (soc)\r\n        sf.setValueTexts(this.bmsCh1SOCValues, (data.soc.ch1).toFixed(1) + \"%\");\r\n        sf.setValueTexts(this.bmsCh2SOCValues, (data.soc.ch2).toFixed(1) + \"%\");\r\n        sf.setValueTexts(this.bmsCh3SOCValues, (data.soc.ch3).toFixed(1) + \"%\");\r\n        sf.setValueTexts(this.bmsMinSOCValues, (data.soc.min).toFixed(1) + \"%\");\r\n\r\n    }\r\n\r\n    setBMSTempValues(data){\r\n\r\n        // cap shunt temp values between -50°C and +150°C\r\n        if(parseFloat(data.tShunt) >= 150){\r\n            sf.setValueTexts(this.bmsShuntTempValues, \"150+°C\");\r\n        }else if(parseFloat(data.tShunt) <= -50){\r\n            sf.setValueTexts(this.bmsShuntTempValues, \"-50-°C\");\r\n        }else {\r\n            sf.setValueTexts(this.bmsShuntTempValues, data.tShunt + \"°C\");\r\n        }\r\n\r\n        // cap precharge temp values between -50°C and +150°C\r\n        if(parseFloat(data.tPch) >= 150){\r\n            sf.setValueTexts(this.bmsPrechargeTempValues, \"150+°C\");\r\n        }else if(parseFloat(data.tPch) <= -50){\r\n            sf.setValueTexts(this.bmsPrechargeTempValues, \"-50-°C\");\r\n        }else {\r\n            sf.setValueTexts(this.bmsPrechargeTempValues, data.tPch + \"°C\");\r\n        }\r\n    }\r\n\r\n\r\n    setOnTime(values) {\r\n        let seconds = (values % 60).toString();\r\n        while (seconds.length < 2) seconds = \"0\" + seconds;\r\n\r\n        let minutes = Math.floor((values / 60) % 60).toString();\r\n        while (minutes.length < 2) minutes = \"0\" + minutes;\r\n\r\n        // not that symmetric but let's be honest - who keeps it on for >10h?\r\n        let hours = Math.floor(values / 3600).toString();\r\n        while (hours.length < 1) hours = \"0\" + hours;\r\n\r\n        sf.setValueTexts(this.bmsOnTimeValues, hours + \":\" + minutes + \":\" + seconds);\r\n    }\r\n\r\n    setBMSMaxValues(data) {\r\n        sf.setValueTexts(this.bmsMaxPowerValues, data.power + \"kW\");\r\n\r\n        sf.setValueTexts(this.bmsMaxCurrentValues, data.maxCurrent + \"A\");\r\n        sf.setValueTexts(this.bmsMinCurrentValues, data.minCurrent + \"A\");\r\n\r\n        sf.setValueTexts(this.bmsMinVoltageValues, data.minVoltage + \"V\");\r\n        sf.setValueTexts(this.bmsMaxVoltageValues, data.maxVoltage + \"V\");\r\n\r\n        sf.setValueTexts(this.bmsMaxShuntTempValues, data.shuntTemp + \"°C\");\r\n        sf.setValueTexts(this.bmsMaxPrechargeTempValues, data.prechargeTemp + \"°C\");\r\n    }\r\n\r\n    setChannelVoltageInfo(data){\r\n        sf.setValueTexts(this.bmsCh1VoltageValues, data.u1 + \"V\");\r\n        sf.setValueTexts(this.bmsCh2VoltageValues, data.u2 + \"V\");\r\n        sf.setValueTexts(this.bmsCh3VoltageValues, data.u3 + \"V\");\r\n\r\n        sf.setValueTexts(this.bmsOutputVoltageValues, data.uOut + \"V\");\r\n    }\r\n    setChannelCurrentInfo(data){\r\n        // make the data more aesthetic\r\n        if(data.i1 === \"-0.00\"){data.i1 = \"0.00\"}\r\n        if(data.i2 === \"-0.00\"){data.i2 = \"0.00\"}\r\n        if(data.i3 === \"-0.00\"){data.i3 = \"0.00\"}\r\n\r\n        // as the measurements stop at 327.68A, displaying more is not possible\r\n        // 325 is a nicer number than 327 ;)\r\n        if(parseFloat(data.i1) >= 325){data.i1 = \"325+\";}\r\n        if(parseFloat(data.i1) <= -325){data.i1 = \"-325-\";}\r\n        if(parseFloat(data.i2) >= 325){data.i2 = \"325+\";}\r\n        if(parseFloat(data.i2) <= -325){data.i2 = \"-325-\";}\r\n        if(parseFloat(data.i3) >= 325){data.i3 = \"325+\";}\r\n        if(parseFloat(data.i3) <= -325){data.i3 = \"-325-\";}\r\n\r\n\r\n        sf.setValueTexts(this.bmsCh1CurrentValues, data.i1 + \"A\");\r\n        sf.setValueTexts(this.bmsCh1PowerValues, (parseFloat(data.u1) * parseFloat(data.i1)).toFixed(1) + \"W\");\r\n\r\n        sf.setValueTexts(this.bmsCh2CurrentValues, data.i2 + \"A\");\r\n        sf.setValueTexts(this.bmsCh2PowerValues, (parseFloat(data.u2) * parseFloat(data.i2)).toFixed(1) + \"W\");\r\n\r\n        sf.setValueTexts(this.bmsCh3CurrentValues, data.i3 + \"A\");\r\n        sf.setValueTexts(this.bmsCh3PowerValues, (parseFloat(data.u3) * parseFloat(data.i3)).toFixed(1) + \"W\");\r\n    }\r\n\r\n\r\n\r\n\r\n    enableBoardGauges(){\r\n        for(let i = 0; i < this.boardElements.length; i++){\r\n            this.boardElements[i].classList.remove(\"board-gauge-disabled\");\r\n        }\r\n\r\n        // hide \"Connect BMS\" Overlay\r\n        this.connectBMSOverlay.classList.add(\"visibility-hidden\");\r\n    }\r\n    disableBoardGauges(){\r\n        for(let i = 0; i < this.boardElements.length; i++){\r\n            this.boardElements[i].classList.add(\"board-gauge-disabled\");\r\n        }\r\n\r\n        // show \"Connect BMS\" Overlay\r\n        this.connectBMSOverlay.classList.remove(\"visibility-hidden\");\r\n    }\r\n\r\n\r\n\r\n\r\n    setTempGaugeVisibility(interfaceConfig){\r\n        if(!interfaceConfig.showBMSIntTemp){\r\n            sf.setValueTexts(this.bmsShuntTempValues, \"-°C\");\r\n            sf.classListValueTextsAdd(this.bmsShuntTempValues, \"disabled\");\r\n\r\n            sf.setValueTexts(this.bmsMaxShuntTempValues, \"-°C\");\r\n            sf.classListValueTextsAdd(this.bmsMaxShuntTempValues, \"disabled\");\r\n        }else{\r\n            sf.classListValueTextsRemove(this.bmsShuntTempValues, \"disabled\");\r\n            sf.classListValueTextsRemove(this.bmsMaxShuntTempValues, \"disabled\");\r\n        }\r\n        if(!interfaceConfig.showBMSExtTemp){\r\n            sf.setValueTexts(this.bmsPrechargeTempValues, \"-°C\");\r\n            sf.classListValueTextsAdd(this.bmsPrechargeTempValues, \"disabled\");\r\n\r\n            sf.setValueTexts(this.bmsMaxPrechargeTempValues, \"-°C\");\r\n            sf.classListValueTextsAdd(this.bmsMaxPrechargeTempValues, \"disabled\");\r\n        }else{\r\n            sf.classListValueTextsRemove(this.bmsPrechargeTempValues, \"disabled\");\r\n            sf.classListValueTextsRemove(this.bmsMaxPrechargeTempValues, \"disabled\");\r\n        }\r\n        if(!interfaceConfig.showMotorTemp){\r\n            sf.setValueTexts(this.tachoMotorTempValues, \"-°C\");\r\n            sf.classListValueTextsAdd(this.tachoMotorTempValues, \"disabled\");\r\n\r\n            sf.setValueTexts(this.tachoMaxMotorTempValues, \"-°C\");\r\n            sf.classListValueTextsAdd(this.tachoMaxMotorTempValues, \"disabled\");\r\n        }else{\r\n            sf.classListValueTextsRemove(this.tachoMotorTempValues, \"disabled\");\r\n            sf.classListValueTextsRemove(this.tachoMaxMotorTempValues, \"disabled\");\r\n        }\r\n        if(!interfaceConfig.showTachoExtTemp){\r\n            sf.setValueTexts(this.tachoExternTempValues, \"-°C\");\r\n            sf.classListValueTextsAdd(this.tachoExternTempValues, \"disabled\");\r\n\r\n            sf.setValueTexts(this.tachoMaxExternTempValues, \"-°C\");\r\n            sf.classListValueTextsAdd(this.tachoMaxExternTempValues, \"disabled\");\r\n        }else{\r\n            sf.classListValueTextsRemove(this.tachoExternTempValues, \"disabled\");\r\n            sf.classListValueTextsRemove(this.tachoMaxExternTempValues, \"disabled\");\r\n        }\r\n    }\r\n\r\n\r\n\r\n    updateWarningFields(warningBuffer, alertBuffer) {\r\n        let faultFieldText = \"\";\r\n        let faultNameText = \"\";\r\n        let faultExplanationText = \"\";\r\n\r\n        if(alertBuffer === 0 && warningBuffer === 0){\r\n            faultFieldText = \"None\";\r\n        }\r\n\r\n\r\n        if(warningBuffer !== 0){\r\n            faultFieldText += \"<warning>\";\r\n        }\r\n        if (warningBuffer & 0b00000000000000000000000000000001) {\r\n            faultFieldText += \"GPO OC  \";\r\n        }\r\n        if (warningBuffer & 0b00000000000000000000000000001000) {\r\n            faultFieldText += \"Power Temp  \";\r\n        }\r\n        if (warningBuffer & 0b00000000000000000000000000010000) {\r\n            faultFieldText += \"Logic Temp  \";\r\n        }\r\n        if (warningBuffer & 0b00000000000000000000000000100000) {\r\n            faultFieldText += \"C Imb  \";\r\n        }\r\n        if (warningBuffer & 0b00000000000000000000000001000000) {\r\n            faultFieldText += \"Ch1 UC  \";\r\n        }\r\n        if (warningBuffer & 0b00000000000000000000000010000000) {\r\n            faultFieldText += \"Ch1 OC  \";\r\n        }\r\n        if (warningBuffer & 0b00000000000000000000000100000000) {\r\n            faultFieldText += \"Ch2 UC  \";\r\n        }\r\n        if (warningBuffer & 0b00000000000000000000001000000000) {\r\n            faultFieldText += \"Ch2 OC  \";\r\n        }\r\n        if (warningBuffer & 0b00000000000000000000010000000000) {\r\n            faultFieldText += \"Ch3 UC  \";\r\n        }\r\n        if (warningBuffer & 0b00000000000000000000100000000000) {\r\n            faultFieldText += \"Ch3 OC  \";\r\n        }\r\n        if (warningBuffer & 0b00000000000000000001000000000000) {\r\n            faultFieldText += \"Ch1 OV  \";\r\n        }\r\n        if (warningBuffer & 0b00000000000000000010000000000000) {\r\n            faultFieldText += \"Ch1 UV  \";\r\n        }\r\n        if (warningBuffer & 0b00000000000000000100000000000000) {\r\n            faultFieldText += \"Ch2 OV  \";\r\n        }\r\n        if (warningBuffer & 0b00000000000000001000000000000000) {\r\n            faultFieldText += \"Ch2 UV  \";\r\n        }\r\n        if (warningBuffer & 0b00000000000000010000000000000000) {\r\n            faultFieldText += \"Ch3 OV  \";\r\n        }\r\n        if (warningBuffer & 0b00000000000000100000000000000000) {\r\n            faultFieldText += \"Ch3 UV  \";\r\n        }\r\n        if (warningBuffer & 0b00000000000001000000000000000000) {\r\n            faultFieldText += \"LIMP  \";\r\n        }\r\n        // close warning tag if needed\r\n        if(warningBuffer !== 0){\r\n            faultFieldText += \"</warning>\";\r\n        }\r\n\r\n        // open fault tag if needed\r\n        if(alertBuffer !== 0){\r\n            faultFieldText += \"<fault>\";\r\n        }\r\n        if (alertBuffer & 0b00000000000000000000000000000010) {\r\n            faultFieldText += \"Unable to Precharge\";\r\n\r\n            faultNameText = \"Unable to Precharge\";\r\n            faultExplanationText = \"either your load's current is too high during precharge or your capacitor is too big\";\r\n        }\r\n        if (alertBuffer & 0b00000000000000000000000000000100) {\r\n            faultFieldText += \"Nothing Connected\";\r\n\r\n            faultNameText = \"Nothing Connected\";\r\n            faultExplanationText = \"Voltage increased to quickly. Either your load is disconnected or your load capacitance setting is wrong.\";\r\n        }\r\n\r\n        if (alertBuffer & 0b00000000000000000000000000001000) {\r\n            faultFieldText += \"BMS Temp\";\r\n\r\n            faultNameText = \"BMS Temperature\";\r\n            faultExplanationText = \"The BMS-Temperature exceeded your max. setting (should always be below 85C°)\";\r\n        }\r\n        if (alertBuffer & 0b00000000000000000000000000010000) {\r\n            faultFieldText += \"Extern Temp\";\r\n\r\n            faultNameText = \"Extern Temperature\";\r\n            faultExplanationText = \"With MosfetBMS, your Precharge got too hot, with RelaisBMS your external Sensor got too hot\";\r\n        }\r\n        if (alertBuffer & 0b00000000000000000000000000100000) {\r\n            faultFieldText += \"Current-Imbalance\";\r\n\r\n            faultNameText = \"Current-Imbalance\";\r\n            faultExplanationText = \"Current difference setting between batteries was exceeded during operation OR turn on would have caused such an imbalance.\";\r\n        }\r\n        if (alertBuffer & 0b00000000000000000000000001000000) {\r\n            faultFieldText += \"Charge 1\";\r\n\r\n            faultNameText = \"Charge Current 1\";\r\n            faultExplanationText = \"Battery 1 has exceeded your max. charge-current setting for 10ms\";\r\n        }\r\n        if (alertBuffer & 0b00000000000000000000000010000000) {\r\n            faultFieldText += \"Discharge Current 1\";\r\n\r\n            faultNameText = \"Discharge Current 1\";\r\n            faultExplanationText = \"Battery 1 has exceeded your max. discharge-current setting for 10ms\";\r\n        }\r\n        if (alertBuffer & 0b00000000000000000000000100000000) {\r\n            faultFieldText += \"Charge 2\";\r\n\r\n            faultNameText = \"Charge Current 2\";\r\n            faultExplanationText = \"Battery 2 has exceeded your max. charge-current setting for 10ms\";\r\n        }\r\n        if (alertBuffer & 0b00000000000000000000001000000000) {\r\n            faultFieldText += \"Discharge Current 2\";\r\n\r\n            faultNameText = \"Discharge Current 2\";\r\n            faultExplanationText = \"Battery 2 has exceeded your max. discharge-current setting for 10ms\";\r\n        }\r\n        if (alertBuffer & 0b00000000000000000000010000000000) {\r\n            faultFieldText += \"Charge 3\";\r\n\r\n            faultNameText = \"Charge Current 3\";\r\n            faultExplanationText = \"Battery 3 has exceeded your max. charge-current setting for 10ms\";\r\n        }\r\n        if (alertBuffer & 0b00000000000000000000100000000000) {\r\n            faultFieldText += \"Discharge Current 3\";\r\n\r\n            faultNameText = \"Discharge Current 3\";\r\n            faultExplanationText = \"Battery 3 has exceeded your max. discharge-current setting for 10ms\";\r\n        }\r\n        if (alertBuffer & 0b00000000000000000001000000000000) {\r\n            faultFieldText +=\"Over-Voltage 1\";\r\n\r\n            faultNameText = \"Over-Voltage 1\";\r\n            faultExplanationText = \"Battery 1 exceeded your max. voltage setting\";\r\n        }\r\n        if (alertBuffer & 0b00000000000000000010000000000000) {\r\n            faultFieldText +=\"Low-Voltage 1\";\r\n\r\n            faultNameText = \"Low-Voltage 1\";\r\n            faultExplanationText = \"Battery 1 voltage dropped below your low voltage setting\";\r\n        }\r\n        if (alertBuffer & 0b00000000000000000100000000000000) {\r\n            faultFieldText +=\"Over-Voltage 2\";\r\n\r\n            faultNameText = \"Over-Voltage 2\";\r\n            faultExplanationText = \"Battery 2 exceeded your max. voltage setting\";\r\n        }\r\n        if (alertBuffer & 0b00000000000000001000000000000000) {\r\n            faultFieldText +=\"Low-Voltage 2\";\r\n\r\n            faultNameText = \"Low-Voltage 2\";\r\n            faultExplanationText = \"Battery 2 voltage dropped below your low voltage setting\";\r\n        }\r\n        if (alertBuffer & 0b00000000000000010000000000000000) {\r\n            faultFieldText +=\"Over-Voltage 3\";\r\n\r\n            faultNameText = \"Over-Voltage 3\";\r\n            faultExplanationText = \"Battery 3 exceeded your max. voltage setting\";\r\n        }\r\n        if (alertBuffer & 0b00000000000000100000000000000000) {\r\n            faultFieldText +=\"Low-Voltage 3\";\r\n\r\n            faultNameText = \"Low-Voltage 3\";\r\n            faultExplanationText = \"Battery 3 Voltage dropped below your low voltage settings\";\r\n        }\r\n        if (alertBuffer & 0b00000000000001000000000000000000) {\r\n            faultFieldText += \"Other Fault\";\r\n\r\n            faultNameText = \"Other Fault\";\r\n            faultExplanationText = \"Other Fault(oldShort) Not implemented yet\";\r\n        }\r\n        if (alertBuffer & 0b00010000000000000000000000000000) {\r\n            faultFieldText += \"Invalid Input\";\r\n\r\n            faultNameText = \"Invalid config/calib input\";\r\n            faultExplanationText = \"Sorry, we forgot to make this input impossible for the user, will be fixed soon! :)\";\r\n        }\r\n        if (alertBuffer & 0b00100000000000000000000000000000) {\r\n            faultFieldText += \"Firmware\";\r\n\r\n            faultNameText = \"Firmware Hiccup\";\r\n            faultExplanationText = \"Firmware internal hiccup. This might be caused by corrupted config/calib data. Please restart your device.\";\r\n        }\r\n        if (alertBuffer & 0b10000000000000000000000000000000) {\r\n            faultFieldText += \"HW Fault\";\r\n\r\n            faultNameText = \"Hardware Fault\";\r\n            faultExplanationText = \"Most likely a broken switch or broken precharge\";\r\n        }\r\n\r\n        // only display this generic fault if no other faults have fired\r\n        if(alertBuffer !== 0 && faultFieldText === \"\"){\r\n            faultFieldText += \"Fault\";\r\n\r\n            faultNameText = \"Fault\";\r\n            faultExplanationText = \"alert spike - big EMI/EMC problem or Hiccup. Please confirm!\";\r\n        }\r\n\r\n\r\n        // append a closing fault tag if needed\r\n        if(alertBuffer !== 0){\r\n            faultFieldText += \"</fault>\";\r\n        }\r\n\r\n        // only update field if needed - ensures animation is working correctly\r\n        if(this.faultStateValue.innerHTML !== faultFieldText){\r\n            sf.setValueTexts(this.bmsFaultStateValues, faultFieldText);\r\n        }\r\n\r\n        // only update fields if needed - max fps!!!!\r\n        if(this.clearAlertsFaultName.innerHTML !== faultNameText){\r\n            this.clearAlertsFaultName.innerHTML = faultNameText;\r\n        }\r\n        if(this.clearAlertsFaultExplanation.innerHTML !== faultExplanationText){\r\n            this.clearAlertsFaultExplanation.innerHTML = faultExplanationText;\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    /*\r\n        INLINE related\r\n     */\r\n\r\n    setInlineMaxValues(data){\r\n        sf.setValueTexts(this.tachoMaxSpeedValues, data.speed.toFixed(1) + \"km/h\");\r\n\r\n        // cap extern temp values between -50°C and +150°C\r\n        if(parseFloat(data.motorTemp) >= 150){\r\n            sf.setValueTexts(this.tachoMaxMotorTempValues, \"150+°C\");\r\n        }else if(parseFloat(data.motorTemp) <= -50){\r\n            sf.setValueTexts(this.tachoMaxMotorTempValues, \"-50-°C\");\r\n        }else {\r\n            sf.setValueTexts(this.tachoMaxMotorTempValues, data.motorTemp + \"°C\");\r\n        }\r\n\r\n\r\n        // cap extern temp values between -50°C and +150°C\r\n        if(parseFloat(data.externTemp) >= 150){\r\n            sf.setValueTexts(this.tachoMaxExternTempValues, \"150+°C\");\r\n        }else if(parseFloat(data.externTemp) <= -50){\r\n            sf.setValueTexts(this.tachoMaxExternTempValues, \"-50-°C\");\r\n        }else {\r\n            sf.setValueTexts(this.tachoMaxExternTempValues, data.externTemp + \"°C\");\r\n        }\r\n\r\n    }\r\n\r\n\r\n    setSpeedGaugeValues(data){\r\n        if(data.speed >= 0){ // forwards\r\n            sf.setValueTexts(this.tachoSpeedValues, data.speed + \"km/h\");\r\n            sf.setValueTexts(this.tachoSpeedNoUnitValues, data.speed);\r\n        }else{ // backwards\r\n            sf.setValueTexts(this.tachoSpeedValues, data.speed + \"km/h\");\r\n            sf.setValueTexts(this.tachoSpeedNoUnitValues, data.speed);\r\n        }\r\n        sf.setValueTexts(this.tachoRPMValues, parseFloat(data.rpm).toFixed(0) + \"RPM\");\r\n    }\r\n\r\n    setTachoGauges(values){\r\n        sf.setValueTexts(this.tachoTripOdoValues, (values.tripOdo / 1000000).toFixed(2));\r\n\r\n        sf.setValueTexts(this.tachoVehicleOdoValues, (Math.floor((values.vehicleOdo / 10)) / 10).toFixed(1));\r\n    }\r\n\r\n\r\n\r\n    setInlineTempValues(data){\r\n        // cap motor temp values between -50°C and +150°C\r\n        if(parseFloat(data.motor) >= 150){\r\n            sf.setValueTexts(this.tachoMotorTempValues, \"150+°C\");\r\n        }else if(parseFloat(data.motor) <= -50){\r\n            sf.setValueTexts(this.tachoMotorTempValues, \"-50-°C\");\r\n        }else {\r\n            sf.setValueTexts(this.tachoMotorTempValues, data.motor + \"°C\");\r\n        }\r\n\r\n        // cap extern temp values between -50°C and +150°C\r\n        if(parseFloat(data.extern) >= 150){\r\n            sf.setValueTexts(this.tachoExternTempValues, \"150+°C\");\r\n        }else if(parseFloat(data.extern) <= -50){\r\n            sf.setValueTexts(this.tachoExternTempValues, \"-50-°C\");\r\n        }else {\r\n            sf.setValueTexts(this.tachoExternTempValues, data.extern + \"°C\");\r\n        }\r\n    }\r\n\r\n    setEconomyGauges(values){\r\n        // because sometimes its -Infinity xD\r\n        if(Math.abs(values.whkmSession) === Infinity){\r\n            sf.setValueTexts(this.sessionEconomyValues, \"∞\");\r\n        }else{\r\n            sf.setValueTexts(this.sessionEconomyValues, values.whkmSession.toFixed(1));\r\n        }\r\n\r\n        sf.setValueTexts(this.sessionRangeValues, values.range.toFixed(1));\r\n    }\r\n    disableEconomyGauges(){\r\n        sf.setValueTexts(this.sessionRangeValues, \"no BMS\");\r\n        sf.setValueTexts(this.sessionEconomyValues, \"no BMS\");\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    disableNothingConnectedOverlay() {\r\n        this.nothingConnectedOverlay.classList.add(\"disabled\");\r\n        this.nothingConnectedOverlay.classList.add(\"visibility-hidden\");\r\n\r\n        // always hiding \"Auto-connecting...\" text when disabling the overlay\r\n        this.autoconnectingTachoText.classList.add(\"hidden\");\r\n        this.autoconnectingBMSText.classList.add(\"hidden\");\r\n    }\r\n\r\n    enableNothingConnectedOverlay() {\r\n        if(this.nothingConnectedOverlay.classList.contains(\"disabled\")){\r\n            this.nothingConnectedOverlay.classList.remove(\"disabled\");\r\n        }\r\n        if(this.nothingConnectedOverlay.classList.contains(\"visibility-hidden\")){\r\n            this.nothingConnectedOverlay.classList.remove(\"visibility-hidden\");\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    showDevTiles(){\r\n        let devTilesTrs = document.getElementsByClassName(\"dev-mode-tiles\");\r\n\r\n        for (let devTileTr of devTilesTrs) {\r\n            devTileTr.classList.remove(\"display-none\");\r\n        }\r\n    }\r\n\r\n\r\n\r\n    getDevTile(index){\r\n        let devTilesTrs = document.getElementsByClassName(\"dev-mode-tiles\");\r\n        let devTiles = [];\r\n\r\n        for (let devTileTr of devTilesTrs) {\r\n            for (const devTile of devTileTr.childNodes) {\r\n                if(devTile.nodeName.toLowerCase() === \"td\"){\r\n                    devTiles.push(devTile);\r\n                }\r\n            }\r\n        }\r\n\r\n        if(devTiles.length === 0){\r\n            return;\r\n        }\r\n\r\n        if(index < 0){\r\n            return devTiles[0];\r\n        }\r\n\r\n        if(index >= devTiles.length){\r\n            return devTiles[devTiles.length - 1];\r\n        }\r\n\r\n        return devTiles[index];\r\n    }\r\n\r\n\r\n\r\n\r\n    enterInterfaceMode(mode) {\r\n        switch (mode) {\r\n            case \"dev\":\r\n\r\n                console.log(\"[gui] entering development interface mode!\");\r\n\r\n                sf.swap(this.canGauge, this.getDevTile(0));\r\n\r\n                // enable data-distribution option\r\n                document.getElementById(\"tileBarDataDistributionContainer\").classList.remove(\"display-none\");\r\n\r\n                // enable file manager (dbc)\r\n                document.getElementById(\"tileBarDataFileManagerContainer\").classList.remove(\"display-none\");\r\n\r\n                // no break!\r\n                // do everything the experimental does too\r\n\r\n            case \"exp\":\r\n\r\n                console.log(\"[gui] entering experimental interface mode!\");\r\n\r\n                this.showDevTiles();\r\n\r\n                sf.swap(this.vehicleModelGauge, this.getDevTile(1));\r\n\r\n                // enabled bms calib\r\n                document.getElementById(\"tileBarBMSCalibContainer\").classList.remove(\"display-none\");\r\n\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n\r\n}","import sf from \"./helpers/small_functions\";\r\n\r\nexport default class gui_elements{\r\n\r\n    constructor() {\r\n    }\r\n\r\n    // MAIN TABLE\r\n    table = sf.getId(\"main-table\");\r\n\r\n    // TILEBAR\r\n    tilebarDOM = sf.getId(\"tilebar\");\r\n\r\n    tileBarEditMode = sf.getId(\"tilebar-edit\");\r\n    tileBarInterfaceDropdown = sf.getId(\"tilebar-interface-dropdown\");\r\n    tileBarCaptureMode = sf.getId(\"tilebar-capture-mode\");\r\n\r\n\r\n    // capture mode stuff\r\n    captureModeContainer = sf.getId(\"capture-mode-container\");\r\n\r\n\r\n    // root (contains all the css vars)\r\n    domRoot = document.querySelector(':root');\r\n\r\n    // hardware specific labels\r\n    bmsPrechargeTempLabels = document.getElementsByClassName(\"bms-precharge-temp-label\");\r\n    bmsMaxPrechargeTempLabels = document.getElementsByClassName(\"bms-max-pch-temp-label\");\r\n\r\n\r\n    // File Managers\r\n    dbcFileManagerContainer = document.getElementById(\"dbcFileManager\");\r\n\r\n\r\n    // INTERFACE INFO\r\n    interfaceSettingsContainer = sf.getId(\"interface-settings-container\");\r\n    interfaceVersionFields = document.getElementsByClassName(\"version-number-field\");\r\n    interfaceBMSFilterConnection = sf.getId(\"interface-filter-bms-connection\");\r\n    interfaceBMSAutoReadConfigCalib = sf.getId(\"interface-bms-auto-read-config-calib\");\r\n    interfaceAveragingTimeU = sf.getId(\"interface-averaging-time-u\");\r\n    interfaceAveragingTimeI = sf.getId(\"interface-averaging-time-i\");\r\n    interfaceAveragingTimeT = sf.getId(\"interface-averaging-time-t\");\r\n    interfaceAveragingTimeCalib = sf.getId(\"interface-averaging-time-calib\");\r\n    interfaceAveragingTimeTachoV = sf.getId(\"interface-averaging-time-tacho-v\");\r\n    interfaceAveragingTimeTachoT = sf.getId(\"interface-averaging-time-tacho-t\");\r\n    interfaceMaxValuesHoldOnTime = sf.getId(\"interface-max-value-hold-on-time\");\r\n    interfaceConnectionStepTimeout = sf.getId(\"interface-connect-step-timeout\");\r\n    interfaceWakeLock = sf.getId(\"interface-wakelock-checkbox\");\r\n    interfaceShowBMSExtTemp = sf.getId(\"interface-show-temp-bms-ext\");\r\n    interfaceShowBMSIntTemp = sf.getId(\"interface-show-temp-bms\");\r\n    interfaceShowMotorTemp = sf.getId(\"interface-show-temp-motor\");\r\n    interfaceShowTachoExtTemp = sf.getId(\"interface-show-temp-tacho-ext\");\r\n\r\n\r\n    // Settings elements\r\n\r\n    // BOARD INFO\r\n    boardInfoContainer = sf.getId(\"device-info-container\");\r\n    deviceNameFields = document.getElementsByClassName(\"bms-name-field\");\r\n    deviceModelFields = document.getElementsByClassName(\"bms-model-field\");\r\n    deviceFirmwareRevisionFields = document.getElementsByClassName(\"bms-firmware-version-field\");\r\n    deviceHardwareRevisionFields = document.getElementsByClassName(\"bms-hardware-version-field\");\r\n    deviceSerialNumberFields = document.getElementsByClassName(\"bms-serial-number-field\");\r\n    firmwareUpdateText = sf.getId(\"firmwareUpdateText\");\r\n    otaUpdateInfoText = sf.getId(\"otaUpdateInfoText\");\r\n    availableOTAImagesSelect = sf.getId(\"available-ota-images\");\r\n    updateOTAButton = sf.getId(\"ota-update-button\");\r\n\r\n\r\n    // Board Config\r\n    boardConfigContainer = sf.getId(\"board-configuration-div\");\r\n    boardConfigTable = sf.getId(\"board-config-table\");\r\n    boardConfigInputFields = document.querySelectorAll(\"#board-config-table input\");\r\n    boardConfigBatterySelector = sf.getId(\"battery-type-select\");\r\n    boardConfigSpikeSensitivitySelector = sf.getId(\"spike-sensitivity-select\");\r\n    fullyCustomChemistryOption = sf.getId(\"fully-custom-chemistry-option\");\r\n\r\n    boardConfigTurnOnButton = sf.getId(\"board-turnonoff-config\");\r\n    configWriteWarning = sf.getId(\"config-write-warning\");\r\n\r\n    lastLocalConfigText = sf.getId(\"last-local-config-text\");\r\n\r\n\r\n    // Board Calib\r\n    boardCalibContainer = document.getElementById(\"board-calibration-div\");\r\n    boardCalibTable = sf.getId(\"board-calibration-table\");\r\n\r\n    // temporarily disabled for stable version\r\n    calibBackupDeviceSelect = sf.getId(\"calib-backup-device-select\");\r\n    calibBackupSelect = sf.getId(\"calib-backup-select\");\r\n    calibBackupReadButton = sf.getId(\"board-calib-backup-read\");\r\n\r\n    boardCalibInputFields = document.querySelectorAll(\"#board-calibration-div input\");\r\n    boardCalibTurnOnButton = sf.getId(\"board-turnonoff-calib\");\r\n\r\n    calibWriteWarning = sf.getId(\"calib-write-warning\");\r\n\r\n    inVolt1Correction = sf.getId(\"in-volt1-correction\");\r\n    inVolt1Target = sf.getId(\"in-volt1-target\");\r\n    inVolt1Actual = sf.getId(\"in-volt1-actual\");\r\n    inVolt2Correction = sf.getId(\"in-volt2-correction\");\r\n    inVolt2Target = sf.getId(\"in-volt2-target\");\r\n    inVolt2Actual = sf.getId(\"in-volt2-actual\");\r\n    inVolt3Correction = sf.getId(\"in-volt3-correction\");\r\n    inVolt3Target = sf.getId(\"in-volt3-target\");\r\n    inVolt3Actual = sf.getId(\"in-volt3-actual\");\r\n\r\n    outVoltCorrection = sf.getId(\"out-volt-correction\");\r\n    outVoltTarget = sf.getId(\"out-volt-target\");\r\n    outVoltActual = sf.getId(\"out-volt-actual\");\r\n\r\n    shunt1 = sf.getId(\"shunt-resistance-1\");\r\n    shunt1Target = sf.getId(\"shunt-resistance-1-target\");\r\n    shunt1Actual = sf.getId(\"shunt-resistance-1-actual\");\r\n    shunt2 = sf.getId(\"shunt-resistance-2\");\r\n    shunt2Target = sf.getId(\"shunt-resistance-2-target\");\r\n    shunt2Actual = sf.getId(\"shunt-resistance-2-actual\");\r\n    shunt3 = sf.getId(\"shunt-resistance-3\");\r\n    shunt3Target = sf.getId(\"shunt-resistance-3-target\");\r\n    shunt3Actual = sf.getId(\"shunt-resistance-3-actual\");\r\n\r\n    // Inline Config\r\n    inlineConfigContainer = sf.getId(\"inline-configuration-div\");\r\n    tempSensorSelector = sf.getId(\"ntc-type-select\");\r\n    inlineConfigDataLoggingFrequency = sf.getId(\"inline-dl-frequency\");\r\n    tachoResetTripOdoButton = sf.getId(\"configResetTripOdo\");\r\n    tachoResetVehicleOdoButton = sf.getId(\"resetVehicleOdo\");\r\n\r\n\r\n\r\n\r\n\r\n\r\n    elementsDiv = sf.getId(\"elementsDiv\");\r\n\r\n\r\n\r\n\r\n    // Vehicle Model\r\n    vehicleModelGauge = document.getElementById(\"vehicle-model\");\r\n\r\n\r\n\r\n    // hide settings things at the bottom\r\n    hideSettingButtons = document.getElementsByClassName(\"hide-setting-button\");\r\n\r\n\r\n    // CAN Bridge Elements\r\n    canBridgeElements = document.getElementsByClassName(\"can-bridge-element\");\r\n\r\n    // CAN TX GAUGE\r\n    canGauge = document.getElementById(\"can-gauge\");\r\n    canTxGaugeExtended = document.getElementById(\"can-tx-extended-id-checkbox\");\r\n    canTxGaugeId = document.getElementById(\"can-tx-id\");\r\n    canTxGaugeD0 = document.getElementById(\"can-tx-data0\");\r\n    canTxGaugeD1 = document.getElementById(\"can-tx-data1\");\r\n    canTxGaugeD2 = document.getElementById(\"can-tx-data2\");\r\n    canTxGaugeD3 = document.getElementById(\"can-tx-data3\");\r\n    canTxGaugeD4 = document.getElementById(\"can-tx-data4\");\r\n    canTxGaugeD5 = document.getElementById(\"can-tx-data5\");\r\n    canTxGaugeD6 = document.getElementById(\"can-tx-data6\");\r\n    canTxGaugeD7 = document.getElementById(\"can-tx-data7\");\r\n    canTxGaugeSend = document.getElementById(\"can-tx-send-button\");\r\n\r\n    canRxGaugeExtended = document.getElementById(\"can-rx-extended-id-checkbox\");\r\n    canRxGaugeId = document.getElementById(\"can-rx-id\");\r\n    canRxGaugeSend = document.getElementById(\"can-rx-send-button\");\r\n\r\n    canRxGaugeText = document.getElementById(\"can-rx-pfusch-box\");\r\n\r\n\r\n    // keyboard\r\n    keyboardContainer = document.getElementById(\"keyboard-container\");\r\n\r\n\r\n\r\n\r\n\r\n    // NO DEVICES CONNECTED OVERLAY\r\n\r\n    connectBMSOverlayButton = sf.getId('autoconnectBMS');\r\n    connectTachoOverlayButton = sf.getId('autoconnectTacho');\r\n\r\n    connectTachoOverlay = sf.getId(\"connect-tacho-overlay\");\r\n    connectBMSOverlay = sf.getId(\"connect-bms-overlay\");\r\n\r\n    autoconnectingBMSText = sf.getId(\"autoconnectingBMSText\");\r\n    autoConnectBMSTexts = document.getElementsByClassName(\"connect-bms-text\");\r\n\r\n    autoconnectingTachoText = sf.getId(\"autoconnectingTachoText\");\r\n    autoConnectTachoTexts = document.getElementsByClassName(\"connect-tacho-text\");\r\n\r\n    nothingConnectedOverlay = sf.getId(\"nothingConnectedOverlay\");\r\n\r\n\r\n\r\n\r\n\r\n    // Info elements (class based)\r\n    bmsDataLoggingFrequencyValues = document.getElementsByClassName(\"bms-hz\");\r\n    tachoDataLoggingFrequencyValues = document.getElementsByClassName(\"tacho-hz\");\r\n\r\n\r\n    tachoSpeedValues = document.getElementsByClassName(\"tacho-speed-value\");\r\n    tachoSpeedNoUnitValues = document.getElementsByClassName(\"tacho-speed-value-no-unit\");\r\n    tachoRPMValues = document.getElementsByClassName(\"tacho-rpm-value\");\r\n    tachoTripOdoValues = document.getElementsByClassName(\"tacho-trip-odometer-value\");\r\n    tachoVehicleOdoValues = document.getElementsByClassName(\"tacho-vehicle-odometer-value\");\r\n    sessionEconomyValues = document.getElementsByClassName(\"session-economy-value\");\r\n    sessionRangeValues = document.getElementsByClassName(\"session-range-value\");\r\n    bmsPrechargeTempValues = document.getElementsByClassName(\"bms-precharge-temp-value\");\r\n    bmsShuntTempValues = document.getElementsByClassName(\"bms-shunt-temp-value\");\r\n    tachoMotorTempValues = document.getElementsByClassName(\"tacho-motor-temp-value\");\r\n    tachoExternTempValues = document.getElementsByClassName(\"tacho-extern-temp-value\");\r\n    bmsCombinedPowerValues = document.getElementsByClassName(\"bms-combined-power-value\");\r\n    bmsCombinedCurrentValues = document.getElementsByClassName(\"bms-combined-current-value\");\r\n    bmsOutputVoltageValues = document.getElementsByClassName(\"bms-output-voltage-value\");\r\n\r\n    bmsMinSOCValues = document.getElementsByClassName(\"bms-min-soc-value\");\r\n    bmsPowerLossValues = document.getElementsByClassName(\"bms-power-loss-value\");\r\n    bmsCombinedEnergyUsedValues = document.getElementsByClassName(\"bms-combined-energy-used-value\");\r\n    bmsOnTimeValues = document.getElementsByClassName(\"bms-on-time-value\");\r\n\r\n    bmsCh1VoltageValues = document.getElementsByClassName(\"bms-ch1-voltage-value\");\r\n    bmsCh1CurrentValues = document.getElementsByClassName(\"bms-ch1-current-value\");\r\n    bmsCh1PowerValues = document.getElementsByClassName(\"bms-ch1-power-value\");\r\n    bmsCh1SOCValues = document.getElementsByClassName(\"bms-ch1-soc-value\");\r\n    bmsCh1TypeValues = document.getElementsByClassName(\"bms-ch1-type-value\");\r\n    bmsCh1EnergyUsedValues = document.getElementsByClassName(\"bms-ch1-energy-used-value\");\r\n\r\n    bmsCh2VoltageValues = document.getElementsByClassName(\"bms-ch2-voltage-value\");\r\n    bmsCh2CurrentValues = document.getElementsByClassName(\"bms-ch2-current-value\");\r\n    bmsCh2PowerValues = document.getElementsByClassName(\"bms-ch2-power-value\");\r\n    bmsCh2SOCValues = document.getElementsByClassName(\"bms-ch2-soc-value\");\r\n    bmsCh2TypeValues = document.getElementsByClassName(\"bms-ch2-type-value\");\r\n    bmsCh2EnergyUsedValues = document.getElementsByClassName(\"bms-ch2-energy-used-value\");\r\n\r\n    bmsCh3VoltageValues = document.getElementsByClassName(\"bms-ch3-voltage-value\");\r\n    bmsCh3CurrentValues = document.getElementsByClassName(\"bms-ch3-current-value\");\r\n    bmsCh3PowerValues = document.getElementsByClassName(\"bms-ch3-power-value\");\r\n    bmsCh3SOCValues = document.getElementsByClassName(\"bms-ch3-soc-value\");\r\n    bmsCh3TypeValues = document.getElementsByClassName(\"bms-ch3-type-value\");\r\n    bmsCh3EnergyUsedValues = document.getElementsByClassName(\"bms-ch3-energy-used-value\");\r\n\r\n\r\n    bmsMaxPrechargeTempValues = document.getElementsByClassName(\"bms-max-pch-temp-value\");\r\n    bmsMaxShuntTempValues = document.getElementsByClassName(\"bms-max-shunt-temp-value\");\r\n    tachoMaxMotorTempValues = document.getElementsByClassName(\"tacho-max-motor-temp-value\");\r\n    tachoMaxExternTempValues = document.getElementsByClassName(\"tacho-max-extern-temp-value\");\r\n    bmsMaxPowerValues = document.getElementsByClassName(\"bms-max-power-value\");\r\n    tachoMaxSpeedValues = document.getElementsByClassName(\"tacho-max-speed-value\");\r\n\r\n    bmsMaxCurrentValues = document.getElementsByClassName(\"bms-max-current-value\");\r\n    bmsMinCurrentValues = document.getElementsByClassName(\"bms-min-current-value\");\r\n    bmsMinVoltageValues = document.getElementsByClassName(\"bms-min-voltage-value\");\r\n    bmsMaxVoltageValues = document.getElementsByClassName(\"bms-max-voltage-value\");\r\n\r\n    bmsStateMachineStateValues = document.getElementsByClassName(\"bms-state-value\");\r\n    bmsFaultStateValues = document.getElementsByClassName(\"bms-fault-state-value\");\r\n\r\n    bmsConfigStartupValues = document.getElementsByClassName(\"bms-config-startup-value\");\r\n    bmsConfigOverCurrentValues = document.getElementsByClassName(\"bms-config-over-current-value\");\r\n    bmsConfigOverVoltageValues = document.getElementsByClassName(\"bms-config-over-voltage-value\");\r\n    bmsConfigUnderVoltageValues = document.getElementsByClassName(\"bms-config-under-voltage-value\");\r\n    bmsConfigUnderCurrentValues = document.getElementsByClassName(\"bms-config-under-current-value\");\r\n    bmsConfigOverTempValues = document.getElementsByClassName(\"bms-config-over-temp-value\");\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    // BMS Control elements\r\n\r\n    // Clear alerts and turn on/off\r\n    clearAlertsButton = sf.getId(\"clearAlertsButton\");\r\n    clearAlertsTd = sf.getId(\"clearAlertsTd\");\r\n    turnOnTd = sf.getId(\"switchOnTd\");\r\n    clearAlertsFaultName = sf.getId(\"clearAlerts-fault-name\");\r\n    clearAlertsFaultExplanation = sf.getId(\"clearAlerts-fault-explanation\");\r\n\r\n    resetEconomyButton = sf.getId(\"resetEconomyButton\");\r\n    boardElements = document.getElementsByClassName(\"board-element\");\r\n\r\n    // bms & fault states\r\n    faultStateValue = sf.getId(\"fault-state\");\r\n\r\n    turnOnButton = sf.getId(\"turnOnButton\");\r\n\r\n\r\n    // Dev tile stuff\r\n    precharge_button_div = sf.getId(\"precharge-checkbox-template\");\r\n    precharge_button = sf.getId(\"precharge-button\");\r\n    channel1_button = sf.getId(\"ch1control-on\");\r\n    channel2_button = sf.getId(\"ch2control-on\");\r\n    channel3_button = sf.getId(\"ch3control-on\");\r\n\r\n\r\n\r\n\r\n\r\n\r\n    // INLINE\r\n    inlineGaugeDiv = document.getElementById(\"inline-gauge\");\r\n    resetTripButton = document.getElementById(\"resetTripOdo\");\r\n}\r\n\r\n// classes for gauge id to class conversion:\r\n/*\r\nspeed-val -> tacho-speed-value\r\nspeed-rpm-val -> tacho-rpm-value\r\ntrip-odo-val -> tacho-trip-odometer-value\r\nvehicle-odo-val -> tacho-vehicle-odometer-value\r\nsessionEconomyValue -> session-economy-value\r\nsessionRangeValue -> session-range-value\r\nprecharge-temperature -> bms-precharge-temp-value\r\nshunt-temperature -> bms-shunt-temp-value\r\nmotor-temperature -> tacho-motor-temp-value\r\nextern-temperature -> tacho-extern-temp-value\r\ncombined-power -> bms-combined-power-value\r\ncombined-current -> bms-combined-current-value\r\noutput-voltage -> bms-output-voltage-value\r\n\r\nmin-soc -> bms-min-soc-value\r\nboard-powerloss -> bms-power-loss-value\r\ncombined-energy-used -> bms-combined-energy-used-value\r\n\r\nch1info-v -> bms-ch1-voltage-value\r\nch1control-a -> bms-ch1-current-value\r\nch1control-p -> bms-ch1-power-value\r\nch1info-soc -> bms-ch1-soc-value\r\nch1info-t -> bms-ch1-type-value\r\nch1info-eu -> bms-ch1-energy-used-value\r\n\r\nch2info-v -> bms-ch2-voltage-value\r\nch2control-a -> bms-ch2-current-value\r\nch2control-p -> bms-ch2-power-value\r\nch2info-soc -> bms-ch2-soc-value\r\nch2info-t -> bms-ch2-type-value\r\nch2info-eu -> bms-ch2-energy-used-value\r\n\r\nch3info-v -> bms-ch3-voltage-value\r\nch3control-a -> bms-ch3-current-value\r\nch3control-p -> bms-ch3-power-value\r\nch3info-soc -> bms-ch3-soc-value\r\nch3info-t -> bms-ch3-type-value\r\nch3info-eu -> bms-ch3-energy-used-value\r\n\r\n\r\nmaxPrechargeTemp -> bms-max-pch-temp-value\r\nmaxShuntTemp -> bms-max-shunt-temp-value\r\nmaxMotorTemp -> tacho-max-motor-temp-value\r\nmaxExternTemp -> tacho-max-extern-temp-value\r\nmax-power -> bms-max-power-value\r\nmax-speed -> tacho-max-speed-value\r\n\r\nmax-amp-big-val -> bms-max-current-value\r\nmin-volt-big-val -> bms-max-current-value\r\nontime -> bms-on-time-value\r\ncombined-energy-used2 -> bms-combined-energy-used-value\r\n\r\n\r\nstate-machine-state -> bms-state-value\r\nfault-state -> bms-fault-state-value\r\nconfig-info-startup -> bms-config-startup-value\r\nconfig-info-ocp -> bms-config-over-current-value\r\nconfig-info-ovp -> bms-config-over-voltage-value\r\nconfig-info-uvp -> bms-config-under-voltage-value\r\nconfig-info-revocp -> bms-config-under-current-value\r\nconfig-info-otp -> bms-config-over-temp-value\r\n\r\n\r\n*/","import gui_elements from \"../gui_elements\";\r\n\r\n\r\nexport default class colorMode extends gui_elements{\r\n\r\n    mode = \"dark\";\r\n\r\n    constructor(interfaceConfigObj){\r\n        super();\r\n\r\n        this.interfaceConfigObj = interfaceConfigObj;\r\n\r\n        this.addEventListeners();\r\n    }\r\n\r\n    addEventListeners(){\r\n        document.addEventListener('coloris:pick', _ => {\r\n\r\n            // always set the color mode to custom when editing - to see the changes live\r\n            this.mode = \"custom\";\r\n\r\n            // writing them instantly to the localStorage\r\n            localStorage.setItem('customColorForeground', this.getCustomForegroundColor());\r\n            localStorage.setItem('customColorBackground', this.getCustomBackgroundColor());\r\n            localStorage.setItem('customColorAccent', this.getCustomAccentColor());\r\n            localStorage.setItem('customColorCaptureModeBackground', this.getCustomCaptureModeBackgroundColor());\r\n\r\n            localStorage.setItem('lastColorMode', this.mode);\r\n\r\n            // load the stored values back in\r\n            this.interfaceConfigObj.updateConfig();\r\n            this.adjust(this.interfaceConfigObj.colorMode);\r\n        });\r\n    }\r\n\r\n    toggle(){\r\n        if(this.mode === \"dark\"){this.mode = \"light\";}\r\n        else if(this.mode === \"light\"){this.mode = \"custom\";}\r\n        else if(this.mode === \"custom\"){this.mode = \"dark\";}\r\n\r\n        localStorage.setItem('lastColorMode', this.mode); // for the next session\r\n\r\n        this.adjust(this.mode);\r\n    }\r\n\r\n    adjust(targetMode){\r\n\r\n        this.mode = targetMode;\r\n\r\n        switch (targetMode) {\r\n            case \"light\":\r\n                document.getElementsByTagName(\"link\")[1].href = \"css/index-light.css\";\r\n                break;\r\n\r\n            case \"dark\":\r\n                document.getElementsByTagName(\"link\")[1].href = \"css/index-dark.css\";\r\n                break;\r\n\r\n            case \"custom\":\r\n                // remove color values form css files since then the root vars aren't overwritten\r\n                document.getElementsByTagName(\"link\")[1].href = \"\";\r\n                break;\r\n\r\n            default:\r\n                document.getElementsByTagName(\"link\")[1].href = \"css/index-dark.css\";\r\n\r\n        }\r\n\r\n\r\n        // make sure color pickers are correct with the displayed color\r\n        document.getElementById(\"interface-foreground-color\").parentNode.style.color = this.interfaceConfigObj.customColorForeground;\r\n        document.getElementById(\"interface-background-color\").parentNode.style.color = this.interfaceConfigObj.customColorBackground;\r\n        document.getElementById(\"interface-accent-color\").parentNode.style.color = this.interfaceConfigObj.customColorAccent;\r\n        document.getElementById(\"capture-mode-background-color\").parentNode.style.color = this.interfaceConfigObj.customColorCaptureModeBackground;\r\n\r\n        // set the main colors\r\n        const fg = this.interfaceConfigObj.customColorForeground;\r\n        const bg = this.interfaceConfigObj.customColorBackground;\r\n        const ac = this.interfaceConfigObj.customColorAccent;\r\n        const cpmbg = this.interfaceConfigObj.customColorCaptureModeBackground;\r\n\r\n        this.domRoot.style.setProperty('--background-color', bg);\r\n        this.domRoot.style.setProperty('--text-color', fg);\r\n        this.domRoot.style.setProperty('--accent-color', ac);\r\n\r\n        this.domRoot.style.setProperty('--capture-mode-background-color', cpmbg);\r\n\r\n\r\n        this.domRoot.style.setProperty('--color-good', 'green');\r\n        this.domRoot.style.setProperty('--color-bad', 'red');\r\n        this.domRoot.style.setProperty('--color-warning', 'orange');\r\n\r\n\r\n        // the hard part - calculating all the dependant colors from the three main colors\r\n\r\n        let tileBarColor = new color(bg);\r\n        tileBarColor.scale(0.7);\r\n        this.domRoot.style.setProperty('--tilebar-background-color', tileBarColor.getString());\r\n\r\n\r\n        let dropDownColor = new color(bg);\r\n        tileBarColor.scale(1.2);\r\n        this.domRoot.style.setProperty('--dropdown-background-color', dropDownColor.getString());\r\n\r\n        let gaugeDivBorderColor = new color(bg);\r\n        gaugeDivBorderColor.contrast(0.5);\r\n        this.domRoot.style.setProperty('--gauge-div-border-color', gaugeDivBorderColor.getString());\r\n\r\n        let mainTableGridColor = new color(bg);\r\n        mainTableGridColor.contrast(0.5);\r\n        this.domRoot.style.setProperty('--main-table-grid-color', mainTableGridColor.getString());\r\n\r\n        let configInputBackgroundColor = new color(bg);\r\n        configInputBackgroundColor.contrast(0.5);\r\n        this.domRoot.style.setProperty('--config-input-background-color', configInputBackgroundColor.getString());\r\n\r\n        let configInputTextColor = new color(fg);\r\n        configInputTextColor.scale(1);\r\n        this.domRoot.style.setProperty('--config-input-text-color', configInputTextColor.getString());\r\n\r\n        let nothingConnectedOverlayColor = new color(bg);\r\n        nothingConnectedOverlayColor.scale(1.5);\r\n        nothingConnectedOverlayColor.a = 0.7;\r\n        this.domRoot.style.setProperty('--nothing-connected-overlay-background-color', nothingConnectedOverlayColor.getString());\r\n\r\n    }\r\n\r\n\r\n    getCustomForegroundColor(){\r\n        return document.getElementById(\"interface-foreground-color\").parentNode.style.color;\r\n    }\r\n    getCustomBackgroundColor(){\r\n        return document.getElementById(\"interface-background-color\").parentNode.style.color;\r\n    }\r\n    getCustomAccentColor(){\r\n        return document.getElementById(\"interface-accent-color\").parentNode.style.color;\r\n    }\r\n\r\n    getCustomCaptureModeBackgroundColor(){\r\n        return document.getElementById(\"capture-mode-background-color\").parentNode.style.color;\r\n    }\r\n}\r\n\r\n\r\n\r\nclass color {\r\n    constructor(colorString) {\r\n        if(!colorString.includes(\"rgb\")){\r\n            console.log(\"fuck hex colors\");\r\n        }\r\n\r\n        let colorStringParams = colorString\r\n            .replaceAll(' ','')\r\n            .replaceAll('rgb', '')\r\n            .replaceAll('a','')\r\n            .replaceAll('(','')\r\n            .replaceAll(')','')\r\n            .split(',');\r\n\r\n        this.r = parseInt(colorStringParams[0]);\r\n        this.g = parseInt(colorStringParams[1]);\r\n        this.b = parseInt(colorStringParams[2]);\r\n\r\n        // if color is set as rgba\r\n        if(colorStringParams.length === 4){\r\n            this.a = parseFloat(colorStringParams[3]);\r\n        }else{\r\n            // default to 1\r\n            this.a = 1;\r\n        }\r\n    }\r\n\r\n    scale(amount){\r\n        this.r += Math.floor((1-amount) * this.r);\r\n        this.g += Math.floor((1-amount) * this.g);\r\n        this.b += Math.floor((1-amount) * this.b);\r\n\r\n        this.containInLimits();\r\n    }\r\n\r\n    contrast(amount){\r\n        this.r += Math.floor(amount * (128 - this.r));\r\n        this.g += Math.floor(amount * (128 - this.g));\r\n        this.b += Math.floor(amount * (128 - this.b));\r\n\r\n        this.containInLimits();\r\n    }\r\n\r\n    containInLimits(){\r\n\r\n        if(this.r > 255){ this.r = 255; }\r\n        if(this.g > 255){ this.g = 255; }\r\n        if(this.b > 255){ this.b = 255; }\r\n\r\n        if(this.r < 0){ this.r = 0; }\r\n        if(this.g < 0){ this.g = 0; }\r\n        if(this.b < 0){ this.b = 0; }\r\n    }\r\n\r\n    getString(){\r\n        return \"rgba(\" + this.r + \",\" + this.g + \",\" + this.b + \",\" + this.a + \")\";\r\n    }\r\n}","// noinspection JSUnusedAssignment\r\n\r\nimport gui_elements from \"../gui_elements\";\r\n\r\nimport sf from \"./small_functions\";\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// extends here is just a trick to inherit also the gui elements to the localConfigCalibGUI\r\nexport class localConfigCalibManager extends gui_elements{\r\n    constructor(bmsObj) {\r\n        super();\r\n\r\n        this.bmsConfigObj = bmsObj.bmsConfigObj;\r\n        this.bmsCalibObj = bmsObj.bmsCalibObj;\r\n    }\r\n\r\n\r\n    getCalibStorage(){\r\n        const calibStorageText = localStorage.getItem(\"calibStorage\");\r\n\r\n        if(calibStorageText === null\r\n            || calibStorageText === \"undefined\"){\r\n            console.log(\"[calib storage] no calibs stored yet.\");\r\n            return {};\r\n        }\r\n\r\n        let calibStorage;\r\n        try{\r\n            calibStorage = JSON.parse(calibStorageText);\r\n        }catch(e){\r\n            console.log(\"[calib storage] error parsing json: \" + e);\r\n            return;\r\n        }\r\n\r\n        return calibStorage;\r\n    }\r\n\r\n    getCalibsForSerialNumber(serialNumber){\r\n        let calibStorage = this.getCalibStorage();\r\n\r\n        // no calibs saved yet for this serial number\r\n        if(typeof calibStorage[serialNumber] === \"undefined\"){\r\n            return {};\r\n        }\r\n\r\n        return calibStorage[serialNumber];\r\n    }\r\n\r\n    getLatestCalibForSerialNumber(serialNumber){\r\n        let calibs = this.getCalibsForSerialNumber(serialNumber);\r\n\r\n        let newestCalibUnixTime;\r\n        let newestCalib;\r\n        for (const timestamp in calibs) {\r\n            if(typeof newestCalibUnixTime === \"undefined\"){\r\n                newestCalibUnixTime = calibs[timestamp].unixTime;\r\n                newestCalib = calibs[timestamp];\r\n                continue;\r\n            }\r\n            if(newestCalibUnixTime < calibs[timestamp].unixTime){\r\n                newestCalibUnixTime = calibs[timestamp].unixTime;\r\n                newestCalib = calibs[timestamp];\r\n            }\r\n        }\r\n\r\n        return newestCalib;\r\n    }\r\n\r\n    getOldestCalibForSerialNumber(serialNumber){\r\n        let calibs = this.getCalibsForSerialNumber(serialNumber);\r\n\r\n        let oldestCalibUnixTime;\r\n        let oldestCalib;\r\n        for (const timestamp in calibs) {\r\n            if(typeof oldestCalibUnixTime === \"undefined\"){\r\n                oldestCalibUnixTime = calibs[timestamp].unixTime;\r\n                oldestCalib = calibs[timestamp];\r\n                continue;\r\n            }\r\n            if(oldestCalibUnixTime > calibs[timestamp].unixTime){\r\n                oldestCalibUnixTime = calibs[timestamp].unixTime;\r\n                oldestCalib = calibs[timestamp];\r\n            }\r\n        }\r\n\r\n\r\n\r\n        return oldestCalib;\r\n    }\r\n\r\n    deleteCalibObj(calib){\r\n        let calibStorage = this.getCalibStorage();\r\n\r\n        delete calibStorage[calib.serialNumber][calib.timestamp]\r\n\r\n        this.saveCalibStorage(calibStorage);\r\n    }\r\n\r\n    deleteOldestCalibObjForSerialNumber(serialNumber){\r\n        let oldestCalib = this.getOldestCalibForSerialNumber(serialNumber);\r\n        this.deleteCalibObj(oldestCalib);\r\n    }\r\n\r\n    saveCalibStorage(calibStorage){\r\n        if(typeof calibStorage === \"undefined\" || calibStorage === null){\r\n            return;\r\n        }\r\n\r\n        let calibStorageText = \"\";\r\n        try{\r\n            calibStorageText = JSON.stringify(calibStorage);\r\n        }catch(e){\r\n            console.log(\"[calib storage] something went wrong during json.stringify: \" + e);\r\n            return;\r\n        }\r\n\r\n        localStorage.setItem('calibStorage', calibStorageText);\r\n    }\r\n\r\n    addNewCalib(calib, bmsObj){\r\n        let calibStorage = this.getCalibStorage();\r\n\r\n        // this static \"bms\" is okay since the method is only ever called with a valid bms connected\r\n        const serialNumber = bmsObj.deviceInfoMgr.devicesInfo.getDeviceInfo(\"bms\").serialNumber;\r\n\r\n        if(typeof calibStorage === \"undefined\" || calibStorage === null){\r\n            return;\r\n        }\r\n\r\n        const timestamp = sf.getDateStamp();\r\n        const unixTime = sf.getUnixTime();\r\n\r\n        let toBeStored = {\r\n            unixTime: unixTime,\r\n            timestamp: timestamp,\r\n            serialNumber: serialNumber,\r\n            displayName: bmsObj.name,\r\n            calib: calib.getCalibObject()\r\n        }\r\n\r\n        // catch if no calib has been saved for this serial number yet\r\n        if(typeof calibStorage[serialNumber] === \"undefined\"){\r\n            calibStorage[serialNumber] = {};\r\n        }\r\n\r\n        if(typeof this.getLatestCalibForSerialNumber(serialNumber) !== \"undefined\"){\r\n\r\n            // always automatically override the latest calib with the to be added if there are no changes\r\n            if(sf.objectsEqual(this.getLatestCalibForSerialNumber(serialNumber).calib, toBeStored.calib)){\r\n                this.deleteCalibObj(this.getLatestCalibForSerialNumber(serialNumber));\r\n                calibStorage = this.getCalibStorage();\r\n            }\r\n        }\r\n\r\n\r\n        // save the to be added calib\r\n        calibStorage[serialNumber][timestamp] = toBeStored;\r\n        this.saveCalibStorage(calibStorage);\r\n\r\n\r\n        // automatically limit to 10 calibs per serial number\r\n        while(Object.keys(this.getCalibsForSerialNumber(serialNumber)).length > 10){\r\n            this.deleteOldestCalibObjForSerialNumber(serialNumber);\r\n        }\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// LOCALLY STORED CONFIG CALIB\r\n\r\nexport default class localConfigCalibGUI extends localConfigCalibManager{\r\n    constructor(bmsObj) {\r\n        super(bmsObj);\r\n\r\n        this.bmsConfigObj = bmsObj.bmsConfigObj;\r\n        this.bmsCalibObj = bmsObj.bmsCalibObj;\r\n\r\n        // this basically completely disables the \"locally stored config/calib\"\r\n        //this.updateLatestStoredConfigCalib();\r\n    }\r\n\r\n    updateLatestStoredConfigCalib(){\r\n        const lastConfigCalibDateStamp = localStorage.getItem(\"lastSavedConfigCalibTime\");\r\n\r\n        if(lastConfigCalibDateStamp === null){\r\n            this.lastLocalConfigText.innerHTML = \"none yet\";\r\n            return;\r\n        }\r\n        this.lastLocalConfigText.innerHTML = \"Last local stored version: \" + lastConfigCalibDateStamp;\r\n    }\r\n\r\n    addCalibGUIEventListeners(){\r\n        /*\r\n        sf.getId(\"board-config-read-in-localStorage\").addEventListener(\"click\", ()=>{\r\n            const lastConfigText = localStorage.getItem(\"lastSavedBMSConfig\");\r\n            const lastCalibText = localStorage.getItem(\"lastSavedBMSCalib\");\r\n            const lastConfigCalibDateSTamp = localStorage.getItem(\"lastSavedConfigCalibTime\");\r\n\r\n            if(lastConfigText === null\r\n                || lastCalibText === null\r\n                || lastConfigCalibDateSTamp === null\r\n                || lastConfigText === \"undefined\"\r\n                || lastCalibText === \"undefined\"\r\n                || lastConfigCalibDateSTamp === \"undefined\"){\r\n\r\n                this.lastLocalConfigText.innerHTML = \"none yet\";\r\n                return;\r\n            }\r\n\r\n            this.bmsConfigObj.readInJSON(lastConfigText);\r\n            this.bmsCalibObj.readInJSON(lastCalibText);\r\n\r\n            this.bmsConfigObj.setGUIValues();\r\n            this.bmsCalibObj.setGUIValues();\r\n        });\r\n\r\n\r\n\r\n        sf.getId(\"board-config-write-to-localStorage\").addEventListener(\"click\", ()=>{\r\n\r\n            if(!this.bmsConfigObj.initialised || !this.bmsCalibObj.initialised){\r\n                return;\r\n            }\r\n\r\n            this.bmsConfigObj.readInGUIValues();\r\n            this.bmsCalibObj.readInGUIValues();\r\n\r\n            let config = this.bmsConfigObj.getJSON();\r\n            let calib = this.bmsCalibObj.getJSON();\r\n\r\n            let bmsName = \"\";\r\n\r\n            if(typeof sf.getIdValue(\"board-config-device-name\") !== \"undefined\"){\r\n                bmsName = sf.getIdValue(\"board-config-device-name\");\r\n            }\r\n\r\n            localStorage.setItem('lastSavedBMSConfig', config);\r\n            localStorage.setItem('lastSavedBMSCalib', calib);\r\n            localStorage.setItem('lastSavedConfigCalibTime', bmsName + \" \" + sf.getDateStamp());\r\n\r\n            this.updateLatestStoredConfigCalib();\r\n        });\r\n         */\r\n\r\n\r\n        this.calibBackupDeviceSelect.addEventListener(\"change\", ()=>{\r\n            let calibStorage = this.getCalibStorage();\r\n            const serialNumber = this.calibBackupDeviceSelect.options[this.calibBackupDeviceSelect.selectedIndex].value;\r\n\r\n\r\n            // clear all options\r\n            while (this.calibBackupSelect.firstChild) {\r\n                this.calibBackupSelect.removeChild(this.calibBackupSelect.lastChild);\r\n            }\r\n\r\n            // don't fill if no board is selected\r\n            if(serialNumber === \"none\"){\r\n                return;\r\n            }\r\n\r\n            const calibKeys = Object.keys(calibStorage[serialNumber]).reverse();\r\n\r\n            calibKeys.forEach((calibKey) => {\r\n                const calib = calibStorage[serialNumber][calibKey];\r\n                let opt = document.createElement(\"option\");\r\n                opt.value= serialNumber + \";\" + calib.timestamp;\r\n                opt.innerHTML = calib.timestamp; // whatever property it has\r\n\r\n                // then append it to the select element\r\n                this.calibBackupSelect.appendChild(opt);\r\n            });\r\n        });\r\n\r\n\r\n        this.calibBackupReadButton.addEventListener(\"click\", ()=>{\r\n            const value = this.calibBackupSelect.options[this.calibBackupSelect.selectedIndex].value\r\n            if(value === \"\"){\r\n                return;\r\n            }\r\n\r\n            const serialNumber = value.split(\";\")[0];\r\n            const timestamp = value.split(\";\")[1];\r\n\r\n            let backedUpCalib = this.getCalibStorage()[serialNumber][timestamp].calib;\r\n\r\n            // normally there would be a \"this.bmsCalibObj\" here, but since the context of the addEventListener\r\n            // function is the bmsCalibObj itself (it gets called from there), it is lost\r\n            this.readInCalibObject(backedUpCalib);\r\n            this.setGUIValues();\r\n        });\r\n    }\r\n\r\n    fillInCalibBackupGUI(){\r\n        let calibStorage = this.getCalibStorage();\r\n\r\n        if(Object.keys(calibStorage).length === 0){\r\n            this.calibBackupDeviceSelect.disabled = true;\r\n            this.calibBackupSelect.disabled = true;\r\n            return;\r\n        }else{\r\n            this.calibBackupDeviceSelect.disabled = false;\r\n            this.calibBackupSelect.disabled = false;\r\n        }\r\n\r\n        // clear all options from device selector field\r\n        while (this.calibBackupDeviceSelect.firstChild) {\r\n            this.calibBackupDeviceSelect.removeChild(this.calibBackupDeviceSelect.lastChild);\r\n        }\r\n\r\n        // clear all options from backup selector field\r\n        while (this.calibBackupSelect.firstChild) {\r\n            this.calibBackupSelect.removeChild(this.calibBackupSelect.lastChild);\r\n        }\r\n\r\n        // always add the \"none\" options, since only with two options the change event listener works\r\n        let noneOption = document.createElement(\"option\");\r\n        noneOption.value= \"none\";\r\n        noneOption.innerHTML = \"none\"; // whatever property it has\r\n        this.calibBackupDeviceSelect.appendChild(noneOption);\r\n\r\n        // loop through all saved calibs and add them as options\r\n        for (const serialNumber in calibStorage) {\r\n            const calib = calibStorage[serialNumber][Object.keys(calibStorage[serialNumber])[0]];\r\n            let opt = document.createElement(\"option\");\r\n            opt.value= serialNumber;\r\n            opt.innerHTML = calib.displayName; // whatever property it has\r\n\r\n            // then append it to the select element\r\n            this.calibBackupDeviceSelect.appendChild(opt);\r\n        }\r\n    }\r\n}","export default class connectionWatchDog{\r\n    timeout;\r\n\r\n    timeoutAction;\r\n\r\n    startTime;\r\n    enabled;\r\n\r\n    timedOut;\r\n\r\n    constructor(timeout, timeoutAction) {\r\n        this.timeout = timeout;\r\n\r\n        this.timeoutAction = timeoutAction;\r\n\r\n        this.timedOut = false;\r\n    }\r\n\r\n    start(){\r\n        this.startTime = Date.now();\r\n        this.enabled = true;\r\n        this.timedOut = false;\r\n\r\n        setTimeout(()=>{\r\n            if(!this.enabled){\r\n                return;\r\n            }\r\n            if(Date.now() - this.startTime < this.timeout){\r\n                // timeout was set higher manually (illegal) or the watchdog was reset\r\n                return;\r\n            }\r\n\r\n            this.startTime = Date.now();\r\n            this.timedOut = true;\r\n            this.timeoutAction();\r\n        }, this.timeout);\r\n    }\r\n\r\n    stop(){\r\n        this.enabled = false;\r\n    }\r\n}\r\n","export default class fileObject{\r\n\r\n    metadata = {};\r\n\r\n    // placeholder tag for legacy file save option\r\n    aDownloadFile = document.getElementById('aDownloadFile');\r\n\r\n    constructor(fileType){\r\n        this.fileType = fileType;\r\n\r\n        this.metadata.fileType = fileType;\r\n\r\n        // hide \"select file\" option if there is no file access as it doesn't work anyway\r\n        if(!this.hasFileAccess()){\r\n            document.getElementById(\"tileBarSelectDataLoggingFile\").classList.add(\"hidden\");\r\n        }\r\n    }\r\n\r\n    async getSaveFileHandle(suggestedName) {\r\n\r\n        if(!this.hasFileAccess()) {\r\n            return;\r\n        }\r\n\r\n        let options = {\r\n            suggestedName: suggestedName,\r\n            excludeAcceptAllOption: true,\r\n            multiple: false\r\n        }\r\n\r\n        if(this.fileType === \"csv\"){\r\n            options.types = [{\r\n                description: \"CSV File\",\r\n                accept: {\"text/csv\": [\".csv\"]},\r\n            }]\r\n        }\r\n\r\n        if(this.fileType === \"json\"){\r\n            options.types = [{\r\n                description: \"JSON File\",\r\n                accept: {\"text/json\": [\".json\"]},\r\n            }]\r\n        }\r\n\r\n        // create a new handle\r\n        this.fileHandle = await window.showSaveFilePicker(options);\r\n\r\n        // create a FileSystemWritableFileStream to write to\r\n        this.writableStream = await this.fileHandle.createWritable();\r\n    }\r\n\r\n    async getReadFileHandle(){\r\n        const options = {\r\n            types: [\r\n                {\r\n                    description: this.fileType + ' File',\r\n                    accept: {\r\n                        'text/*': ['.' + this.fileType]\r\n                    }\r\n                },\r\n            ],\r\n            excludeAcceptAllOption: true,\r\n            multiple: false\r\n        };\r\n\r\n        // return value is a one element array, this deconstructs it\r\n        [this.fileHandle] = await window.showOpenFilePicker(options);\r\n\r\n    }\r\n\r\n    async readFile(){\r\n        // sets the this.fileHandle object once ready\r\n        await this.getReadFileHandle();\r\n\r\n        const file = await this.fileHandle.getFile();\r\n\r\n        this.name = file.name;\r\n        this.size = file.size;\r\n\r\n        // this should be eventually switched to reliance on the metadata object everywhere\r\n        this.metadata.name = file.name;\r\n        this.metadata.size = file.size;\r\n\r\n        return file;\r\n    }\r\n\r\n    saveLegacy(suggestedName, dataBuffer){\r\n        if(this.hasFileAccess()){\r\n            return;\r\n        }\r\n\r\n        if(dataBuffer.length < 2){\r\n            return;\r\n        }\r\n\r\n        let options = {};\r\n        if(this.fileType === \"csv\"){\r\n            options.type = 'text/csv';\r\n        }\r\n\r\n        if(this.fileType === \"xml\"){\r\n            options.type = 'text/xml';\r\n        }\r\n\r\n        const file = new File([dataBuffer.join(\"\\n\")], '', options);\r\n\r\n        this.aDownloadFile.href = window.URL.createObjectURL(file);\r\n        this.aDownloadFile.setAttribute('download', suggestedName);\r\n        this.aDownloadFile.click();\r\n    }\r\n\r\n    hasFileAccess(){\r\n        return 'chooseFileSystemEntries' in window || 'showOpenFilePicker' in window;\r\n    }\r\n}","export default class sf{\r\n\r\n    constructor(){}\r\n\r\n    // swaps two dom elements\r\n    static swap(node1, node2) {\r\n\r\n        const afterNode2 = node2.nextElementSibling;\r\n        const parent = node2.parentNode;\r\n\r\n        // bug fix\r\n        if (afterNode2 === node1) {\r\n            this.swap(node2, node1);\r\n        } else {\r\n            node1.replaceWith(node2);\r\n            parent.insertBefore(node1, afterNode2);\r\n        }\r\n    }\r\n\r\n\r\n    // helper for waiting until a condition is met\r\n    static until(conditionFunction) {\r\n        const poll = resolve => {\r\n            if (conditionFunction()) resolve();\r\n            else setTimeout(_ => poll(resolve), 10);\r\n        }\r\n\r\n        return new Promise(poll);\r\n    }\r\n\r\n\r\n    static isScrolledIntoViewWithKeyboard(el) {\r\n        if (this.isElementHidden(el)) {\r\n            return false;\r\n        }\r\n\r\n        const rect = el.getBoundingClientRect();\r\n        const elemTop = rect.top;\r\n        const elemBottom = rect.bottom;\r\n\r\n        // Only completely visible elements return true:\r\n        // Partially visible elements return true:\r\n        //isVisible = elemTop < window.innerHeight && elemBottom >= 0;\r\n\r\n        // numpad appears to always be 265px high\r\n        return elemTop < (window.innerHeight - 265) && elemBottom >= 0;\r\n    }\r\n\r\n    static isScrolledIntoView(el) {\r\n        if (this.isElementHidden(el)) {\r\n            return false;\r\n        }\r\n\r\n        const rect = el.getBoundingClientRect();\r\n        const elemTop = rect.top;\r\n        const elemBottom = rect.bottom;\r\n\r\n        // Only completely visible elements return true:\r\n        // Partially visible elements return true:\r\n        //isVisible = elemTop < window.innerHeight && elemBottom >= 0;\r\n        return elemTop < window.innerHeight && elemBottom >= 0;\r\n    }\r\n\r\n    static isElementHidden(obj) {\r\n        // loop up through all the parents to see if an element is hidden\r\n        while (!(typeof obj == \"undefined\" || obj === document)\r\n        && !(obj.classList.contains(\"visibility-hidden\") || obj.classList.contains(\"display-none\"))) {\r\n            obj = obj.parentNode;\r\n        }\r\n        return obj !== document;\r\n    }\r\n\r\n\r\n    /*\r\n        Stuff for the Config/Calib and data logging data that is split into bytes\r\n     */\r\n\r\n\r\n    static to16bit(number) {\r\n        if (number >= 65536) {\r\n            return;\r\n        }\r\n        let lsb = number % 256;\r\n        let msb = Math.floor(number / 256);\r\n\r\n        return [lsb, msb];\r\n    }\r\n\r\n    static to32bit(number) {\r\n        if (number >= Math.pow(32, 2)) {\r\n            return;\r\n        }\r\n        let lsb = number % 256;\r\n        let b1 = Math.floor(number / 256) % 256;\r\n        let b2 = Math.floor(number / 65536) % 256;\r\n        let msb = Math.floor(number / 256);\r\n\r\n        return [lsb, b1, b2, msb];\r\n    }\r\n\r\n\r\n    // the notorious handleSignedBullshit\r\n    static handleSignedBullshit(input) {\r\n        if (input > Math.pow(2, 15)) {\r\n            return Math.pow(2, 16) - input;\r\n        }\r\n        return -input;\r\n    }\r\n\r\n    static handleSignedBullshit32(input) {\r\n        if (input > Math.pow(2, 31)) {\r\n            return Math.pow(2, 32) - input;\r\n        }\r\n        return -input;\r\n    }\r\n\r\n    static handleUnsignedBullshit32(input) {\r\n        if (input < 0) {\r\n            return Math.pow(2, 32) + input;\r\n        }\r\n        return input;\r\n    }\r\n\r\n    static handleSignedBullshit64(input) {\r\n        if (input > Math.pow(2, 63)) {\r\n            return Math.pow(2, 64) - input;\r\n        }\r\n        return -input;\r\n    }\r\n\r\n\r\n    static getId(id) {\r\n        return document.getElementById(id);\r\n    }\r\n\r\n    static getIdValue(id) {\r\n        return document.getElementById(id).value;\r\n    }\r\n\r\n    static getIdChecked(id) {\r\n        return document.getElementById(id).checked;\r\n    }\r\n\r\n    static setValueBackToBoundaries(id, min, max) {\r\n        let element = document.getElementById(id);\r\n        let v = parseFloat(element.value);\r\n        if (v < min) {\r\n            element.value = min;\r\n            element.style.color = \"red\";\r\n            return;\r\n        }\r\n        if (v > max) {\r\n            element.value = max;\r\n            element.style.color = \"red\";\r\n            return;\r\n        }\r\n        element.style.color = \"\";\r\n    }\r\n\r\n\r\n    static arraysEqual(a, b) {\r\n        if (a === b) return true;\r\n        if (a == null || b == null) return false;\r\n        if (a.length !== b.length) return false;\r\n\r\n        // If you don't care about the order of the elements inside\r\n        // the array, you should sort both arrays here.\r\n        // Please note that calling sort on an array will modify that array.\r\n        // You might want to clone your array first.\r\n\r\n        for (let i = 0; i < a.length; ++i) {\r\n            if (a[i] !== b[i]) return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    static objectsEqual(obj1, obj2) {\r\n        let props1 = Object.getOwnPropertyNames(obj1);\r\n        let props2 = Object.getOwnPropertyNames(obj2);\r\n        if (props1.length !== props2.length) {\r\n            return false;\r\n        }\r\n        for (let i = 0; i < props1.length; i++) {\r\n            let val1 = obj1[props1[i]];\r\n            let val2 = obj2[props1[i]];\r\n            let isObjects = this.isObject(val1) && this.isObject(val2);\r\n            if (isObjects && !this.objectsEqual(val1, val2) || !isObjects && val1 !== val2) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    static isObject(object) {\r\n        return object != null && typeof object === 'object';\r\n    }\r\n\r\n    static isFloat(val) {\r\n        let floatRegex = /^-?\\d+(?:[.,]\\d*?)?$/;\r\n        if (!floatRegex.test(val))\r\n            return false;\r\n\r\n        val = parseFloat(val);\r\n        return !isNaN(val);\r\n    }\r\n\r\n\r\n    static mobileDevice() {\r\n        return navigator.userAgentData.mobile;\r\n    }\r\n\r\n\r\n    static isChrome() {\r\n        if (typeof (window) !== \"undefined\") {\r\n            return !!window.chrome;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    // simpler, less elegant version than with cap but doesn't induce float errors\r\n    static cap(value, low, high) {\r\n        if(value >= high){\r\n            return high;\r\n        }\r\n        if(value <= low){\r\n            return low;\r\n        }\r\n        return value\r\n    }\r\n\r\n\r\n    // tells if the device has a touchscreen\r\n    static isTouchDevice() {\r\n        return (('ontouchstart' in window) ||\r\n            (navigator.maxTouchPoints > 0));\r\n    }\r\n\r\n\r\n    static getDateStamp() {\r\n        const date = new Date();\r\n\r\n        return date.getFullYear().toString() + \"_\" +\r\n            this.pad2(date.getMonth() + 1) + \"_\" +\r\n            this.pad2(date.getDate()) + \"__\" +\r\n            this.pad2(date.getHours()) + \"_\" +\r\n            this.pad2(date.getMinutes()) + \"_\" +\r\n            this.pad2(date.getSeconds());\r\n    }\r\n\r\n    static getTimeStamp() {\r\n        const d = new Date();\r\n        return d.getHours() + \":\" + d.getMinutes() + \":\" + d.getSeconds() + \".\" + d.getMilliseconds();\r\n    }\r\n\r\n    static getMsToday() {\r\n        const d = new Date();\r\n        return (d.getHours() - 2) * 3600 * 1000 + d.getMinutes() * 60 * 1000 + d.getSeconds() * 1000 + d.getMilliseconds();\r\n    }\r\n\r\n    static getUnixTime() {\r\n        return Date.now();\r\n    }\r\n\r\n\r\n    static averagedData(array, rounding) {\r\n        let averagedArray = this.averagedDataNumbers(array);\r\n        // set values for keys to averaged values rounded via.toFixed\r\n        for (const [key, _] of Object.entries(averagedArray)) {\r\n            averagedArray[key] = averagedArray[key].toFixed(rounding);\r\n        }\r\n        return averagedArray;\r\n    }\r\n\r\n    static averagedDataNumbers(array) {\r\n        // safety, kids!\r\n        if (array.length === 0) {\r\n            return;\r\n        }\r\n\r\n        // copy array keys and values\r\n        // {... original} = copy (copy by value - not by reference)\r\n        let summedDataPacket = {...array[0]};\r\n        // set all values to 0\r\n        for (const [key, _] of Object.entries(summedDataPacket)) {\r\n            summedDataPacket[key] = 0;\r\n        }\r\n\r\n        // loop through all data packets and add their values up in the summed data packet\r\n        array.forEach(dataPacket => {\r\n            //console.log(dataPacket);\r\n            for (const [key, value] of Object.entries(dataPacket)) {\r\n                summedDataPacket[key] = summedDataPacket[key] + value;\r\n            }\r\n        });\r\n\r\n        //console.log(summedDataPacket);\r\n\r\n        // copy array keys and values\r\n        let averagedArray = {...array[0]};\r\n        // set values for keys to averaged values rounded via.toFixed\r\n        for (const [key, _] of Object.entries(averagedArray)) {\r\n            averagedArray[key] = (summedDataPacket[key] / array.length);\r\n        }\r\n        return averagedArray;\r\n    }\r\n\r\n\r\n    static pad2(n) {\r\n        return n < 10 ? '0' + n : n;\r\n    }\r\n\r\n\r\n    static getLastXSeconds(array, seconds) {\r\n        let now = Date.now();\r\n        return array.filter((element) => {\r\n            return element.time > (now - 1000 * seconds);\r\n        });\r\n    }\r\n\r\n\r\n    static setValueTexts(elements, value) {\r\n        for (const element of elements) {\r\n            if (!element.classList.contains(\"disabled\")) {\r\n                element.innerHTML = value;\r\n            }\r\n        }\r\n    }\r\n\r\n    static classListValueTextsAdd(elements, classString) {\r\n        for (const element of elements) {\r\n            element.classList.add(classString);\r\n        }\r\n    }\r\n\r\n    static classListValueTextsRemove(elements, classString) {\r\n        for (const element of elements) {\r\n            element.classList.remove(classString);\r\n        }\r\n    }\r\n\r\n    static setValueValues(elements, value) {\r\n        for (const element of elements) {\r\n            element.value = value;\r\n        }\r\n    }\r\n\r\n\r\n    // like element.scrollInToView() but with the offset of the tilebar\r\n    static scrollToElement(element) {\r\n        let bodyRect = document.body.getBoundingClientRect();\r\n        let elemRect = element.getBoundingClientRect();\r\n        let offset = elemRect.top - bodyRect.top;\r\n\r\n        window.scrollTo(0, offset);\r\n    }\r\n\r\n\r\n    static deleteOlderDataPackets(buffer, time) {\r\n        if (buffer.length < 2) {\r\n            return;\r\n        }\r\n\r\n        const nowTimeStamp = Date.now();\r\n\r\n        // more efficient to do this recursively than looping through the whole array\r\n        // (since the array will always be sorted from newest to oldest)\r\n        if (buffer.at(-1).time < (nowTimeStamp - (time * 1000))) {\r\n            buffer.pop();\r\n            this.deleteOlderDataPackets(buffer, time);\r\n        }\r\n    }\r\n\r\n\r\n    static zoomedIn() {\r\n        return document.getElementById(\"zoom-content\").style.transform !== '';\r\n    }\r\n\r\n\r\n\r\n    static async fetchWithTimeout(resource, options = {}) {\r\n        const { timeout = 8000 } = options;\r\n\r\n        const controller = new AbortController();\r\n        const id = setTimeout(() => controller.abort(), timeout);\r\n\r\n        const response = await fetch(resource, {\r\n            ...options,\r\n            signal: controller.signal\r\n        }).catch(error => {\r\n            throw error;\r\n        });\r\n        clearTimeout(id);\r\n\r\n        return response;\r\n    }\r\n\r\n\r\n    static random10Digit(){\r\n        return Math.floor(100000 + Math.random() * 900000);\r\n    }\r\n\r\n\r\n}","export default class wakeLock{\r\n    wakeLockObj = null;\r\n    constructor() {\r\n\r\n    }\r\n    handleVisibilityChange(){\r\n        if (this.wakeLockObj !== null && document.visibilityState === 'visible') {\r\n            this.enable();\r\n        }\r\n    }\r\n\r\n\r\n    enable(){\r\n\r\n        document.addEventListener('visibilitychange', ()=>{\r\n            this.handleVisibilityChange();\r\n        });\r\n        document.addEventListener('fullscreenchange', ()=>{\r\n            this.handleVisibilityChange();\r\n        });\r\n\r\n        if (\"keepAwake\" in screen) {\r\n            screen.keepAwake = true;\r\n        } else if (\"wakeLock\" in navigator) {\r\n            navigator.wakeLock.request('screen')\r\n                .then((wakeLock) => {\r\n                    this.wakeLockObj = wakeLock;\r\n                })\r\n                .catch((err) => {\r\n                    console.error(err);\r\n                });\r\n        }\r\n    }\r\n\r\n    disable(){\r\n\r\n        document.removeEventListener('visibilitychange', ()=>{\r\n            this.handleVisibilityChange();\r\n        });\r\n        document.removeEventListener('fullscreenchange', ()=>{\r\n            this.handleVisibilityChange();\r\n        });\r\n\r\n        if (\"keepAwake\" in screen) {\r\n            screen.keepAwake = false;\r\n        } else if (\"wakeLock\" in navigator) {\r\n            if (this.wakeLockObj) {\r\n                this.wakeLockObj.release();\r\n                this.wakeLockObj = null;\r\n            }\r\n        }\r\n    }\r\n}\r\n","/*!\r\n * zoom.js 0.3\r\n * http://lab.hakim.se/zoom-js\r\n * MIT licensed\r\n *\r\n * Copyright (C) 2011-2014 Hakim El Hattab, http://hakim.se\r\n * modified by p3h3 in 2022-2023\r\n */\r\n\r\nlet zoom = (function () {\r\n\r\n    let TRANSITION_DURATION = 300;\r\n\r\n    // The current zoom level (scale)\r\n    let level = 1;\r\n\r\n    // The current mouse position, used for panning\r\n    let mouseX = 0,\r\n        mouseY = 0;\r\n\r\n    // Timeout before pan is activated\r\n    let panEngageTimeout = -1,\r\n        panUpdateInterval = -1;\r\n\r\n    // Timeout for callback function\r\n    let callbackTimeout = -1;\r\n\r\n    let zoomContent = document.getElementById(\"zoom-content\");\r\n\r\n    // Check for transform support so that we can fall back otherwise\r\n    let supportsTransforms = 'transform' in zoomContent.style;\r\n\r\n    if (supportsTransforms) {\r\n        // The easing that will be applied when we zoom in/out\r\n        zoomContent.style.transition = 'transform ' + TRANSITION_DURATION + 'ms ease';\r\n    }\r\n\r\n    // Zoom out if the user hits escape\r\n    document.addEventListener('keyup', function (event) {\r\n        if (level !== 1 && event.keyCode === 27) {\r\n            zoom.out();\r\n        }\r\n    });\r\n\r\n    /**\r\n     * Applies the CSS required to zoom in, prefers the use of CSS3\r\n     * transforms but falls back on zoom for IE.\r\n     *\r\n     * @param {Object} rect\r\n     * @param {Number} scale\r\n     */\r\n    function magnify(rect, scale) {\r\n\r\n        let scrollOffset = getScrollOffset();\r\n\r\n        // Ensure a width/height is set\r\n        rect.width = rect.width || 1;\r\n        rect.height = rect.height || 1;\r\n\r\n        // Center the rect within the zoomed viewport\r\n        rect.x -= (window.innerWidth - (rect.width * scale)) / 2;\r\n        //rect.y -= ( window.innerHeight - ( rect.height * scale ) ) / 4;\r\n\r\n        if (supportsTransforms) {\r\n            // Reset\r\n            if (scale === 1) {\r\n                zoomContent.style.transform = '';\r\n            }\r\n            // Scale\r\n            else {\r\n                let origin = scrollOffset.x + 'px ' + scrollOffset.y + 'px';\r\n\r\n                // tilebar height to make the zoom accommodate the non moving tilebar\r\n                let transform = 'translate(' + -rect.x + 'px,' + -(rect.y - document.getElementById(\"tilebar\").clientHeight * 1.85) + 'px) scale(' + scale + ')';\r\n\r\n                zoomContent.style.transformOrigin = origin;\r\n\r\n                zoomContent.style.transform = transform;\r\n            }\r\n        } else {\r\n            // Reset\r\n            if (scale === 1) {\r\n                zoomContent.style.position = '';\r\n                zoomContent.style.left = '';\r\n                zoomContent.style.top = '';\r\n                zoomContent.style.width = '';\r\n                zoomContent.style.height = '';\r\n                zoomContent.style.zoom = '';\r\n            }\r\n            // Scale\r\n            else {\r\n                zoomContent.style.position = 'relative';\r\n                zoomContent.style.left = (-(scrollOffset.x + rect.x) / scale) + 'px';\r\n                zoomContent.style.top = (-(scrollOffset.y + rect.y) / scale) + 'px';\r\n                zoomContent.style.width = (scale * 100) + '%';\r\n                zoomContent.style.height = (scale * 100) + '%';\r\n                zoomContent.style.zoom = scale;\r\n            }\r\n        }\r\n\r\n        level = scale;\r\n    }\r\n\r\n    /**\r\n     * Pan the document when the mouse cursor approaches the edges\r\n     * of the window.\r\n     */\r\n    function pan() {\r\n        let range = 0.12,\r\n            rangeX = window.innerWidth * range,\r\n            rangeY = window.innerHeight * range,\r\n            scrollOffset = getScrollOffset();\r\n\r\n        // Up\r\n        if (mouseY < rangeY) {\r\n            window.scroll(scrollOffset.x, scrollOffset.y - (1 - (mouseY / rangeY)) * (14 / level));\r\n        }\r\n        // Down\r\n        else if (mouseY > window.innerHeight - rangeY) {\r\n            window.scroll(scrollOffset.x, scrollOffset.y + (1 - (window.innerHeight - mouseY) / rangeY) * (14 / level));\r\n        }\r\n\r\n        // Left\r\n        if (mouseX < rangeX) {\r\n            window.scroll(scrollOffset.x - (1 - (mouseX / rangeX)) * (14 / level), scrollOffset.y);\r\n        }\r\n        // Right\r\n        else if (mouseX > window.innerWidth - rangeX) {\r\n            window.scroll(scrollOffset.x + (1 - (window.innerWidth - mouseX) / rangeX) * (14 / level), scrollOffset.y);\r\n        }\r\n    }\r\n\r\n    function getScrollOffset() {\r\n        return {\r\n            x: window.scrollX !== undefined ? window.scrollX : window.pageXOffset,\r\n            y: window.scrollY !== undefined ? window.scrollY : window.pageYOffset\r\n        }\r\n    }\r\n\r\n    return {\r\n        /**\r\n         * Zooms in on either a rectangle or HTML element.\r\n         *\r\n         * @param {Object} options\r\n         *\r\n         *   (required)\r\n         *   - element: HTML element to zoom in on\r\n         *   OR\r\n         *   - x/y: coordinates in non-transformed space to zoom in on\r\n         *   - width/height: the portion of the screen to zoom in on\r\n         *   - scale: can be used instead of width/height to explicitly set scale\r\n         *\r\n         *   (optional)\r\n         *   - callback: call back when zooming in ends\r\n         *   - padding: spacing around the zoomed in element\r\n         */\r\n        to: function (options) {\r\n\r\n            // Due to an implementation limitation we can't zoom in\r\n            // to another element without zooming out first\r\n            if (level !== 1) {\r\n                zoom.out();\r\n            } else {\r\n                options.x = options.x || 0;\r\n                options.y = options.y || 0;\r\n\r\n                // If an element is set, that takes precedence\r\n                if (!!options.element) {\r\n                    // Space around the zoomed in element to leave on screen\r\n                    let padding = typeof options.padding === 'number' ? options.padding : 20;\r\n                    let bounds = options.element.getBoundingClientRect();\r\n\r\n                    options.x = bounds.left - padding;\r\n                    options.y = bounds.top - padding;\r\n                    options.width = bounds.width + (padding * 2);\r\n                    options.height = bounds.height + (padding * 2);\r\n                }\r\n\r\n                // If width/height values are set, calculate scale from those values\r\n                if (options.width !== undefined && options.height !== undefined) {\r\n                    options.scale = Math.max(Math.min(window.innerWidth / options.width, window.innerHeight / options.height), 1);\r\n                }\r\n\r\n                if (options.scale > 1) {\r\n                    options.x *= options.scale;\r\n                    options.y *= options.scale;\r\n\r\n                    options.x = Math.max(options.x, 0);\r\n                    options.y = Math.max(options.y, 0);\r\n\r\n                    magnify(options, options.scale);\r\n\r\n                    if (options.pan !== false) {\r\n\r\n                        // Wait with engaging panning as it may conflict with the\r\n                        // zoom transition\r\n                        panEngageTimeout = setTimeout(function () {\r\n                            panUpdateInterval = setInterval(pan, 1000 / 60);\r\n                        }, TRANSITION_DURATION);\r\n\r\n                    }\r\n\r\n                    if (typeof options.callback === 'function') {\r\n                        callbackTimeout = setTimeout(options.callback, TRANSITION_DURATION);\r\n                    }\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Resets the document zoom state to its default.\r\n         *\r\n         * @param {Object} options\r\n         *   - callback: call back when zooming out ends\r\n         */\r\n        out: function (options) {\r\n            clearTimeout(panEngageTimeout);\r\n            clearInterval(panUpdateInterval);\r\n            clearTimeout(callbackTimeout);\r\n\r\n            magnify({x: 0, y: 0}, 1);\r\n\r\n            if (options && typeof options.callback === 'function') {\r\n                setTimeout(options.callback, TRANSITION_DURATION);\r\n            }\r\n\r\n            level = 1;\r\n        }\r\n    }\r\n\r\n})();\r\n\r\n\r\nexports.zoom = zoom;\r\n","import gui from \"../gui\";\r\nimport MCUManager from \"./otaHelpers/mcumgr\";\r\nimport tilebar from \"../tilebar\";\r\nimport sf from \"../helpers/small_functions\";\r\n\r\nexport default class otaController extends gui{\r\n\r\n    /*\r\n    todo: disable everything while ota update is in progress\r\n     */\r\n\r\n    file = null;\r\n    images = [];\r\n\r\n    onUpdateSuccessfulCB;\r\n\r\n\r\n    MGMT_GROUP_ID_IMAGE = 1;\r\n    IMG_MGMT_ID_STATE = 0;\r\n\r\n    constructor(bleDevice) {\r\n        super();\r\n\r\n        this.bleDevice = bleDevice;\r\n\r\n        this.mcumgr = new MCUManager(bleDevice);\r\n\r\n\r\n        this.mcumgr.onImageUploadProgress(({ percentage }) => {\r\n            this.otaUpdateInfoText.innerText = \"Uploading... \" + percentage.toFixed(1) + \"%\";\r\n        });\r\n\r\n\r\n        this.mcumgr.onMessage(({ _, group, id, data }) => {\r\n            switch (group) {\r\n                case this.MGMT_GROUP_ID_IMAGE:\r\n                    switch (id) {\r\n                        case this.IMG_MGMT_ID_STATE:\r\n                            this.images = data.images;\r\n                            /*\r\n                            this.images.forEach(image => {\r\n                                console.log(image);\r\n                            });\r\n                            */\r\n                            break;\r\n                    }\r\n                    break;\r\n                default:\r\n                    console.log('Unknown group');\r\n                    break;\r\n            }\r\n        });\r\n\r\n\r\n\r\n        this.mcumgr.onImageUploadFinished(async () => {\r\n            this.otaUpdateInfoText.innerText = 'Upload complete';\r\n            console.log(\"done uploading image\");\r\n            try{\r\n                await this.mcumgr.cmdImageState();\r\n            }catch (e){\r\n                this.onUpdateFailureCB();\r\n                return;\r\n            }\r\n\r\n\r\n\r\n            // fill the serviceInitDone Callback, which is called when the connection process was successful\r\n            // in this case, the process should occur after resetting and auto-reconnecting after the update\r\n            this.bleDevice.serviceInitDoneCB = ()=>{\r\n                setTimeout(async ()=>{\r\n\r\n                    // scroll to the board information section to let the user see the update completed text\r\n\r\n                    // luckily, this works without any set parameters and doesn't initialize event listeners\r\n                    let tb = new tilebar();\r\n                    tb.scrollToBoardInfo();\r\n\r\n                    // Initializing OTA Update Service\r\n                    this.otaUpdateInfoText.innerText = 'Initialising Update Service';\r\n                    try{\r\n                        await this.mcumgr.connect();\r\n                    }catch (e){\r\n                        this.onUpdateFailureCB();\r\n                        return;\r\n                    }\r\n\r\n\r\n                    // get the image information,\r\n                    // which is needed\r\n                    // for checking successful copying to slot 0 before confirming\r\n                    try{\r\n                        await this.mcumgr.cmdImageState();\r\n                    }catch (e){\r\n                        this.onUpdateFailureCB();\r\n                        return;\r\n                    }\r\n\r\n\r\n                    // this wait block need to be here since the above-called cmsImageState() is non-blocking\r\n                    // so the callback doesn't instantly arrive\r\n                    let wait = true;\r\n                    setTimeout(()=>{\r\n                        wait = false;\r\n                    }, 2000);\r\n\r\n                    await sf.until(()=>{return !(wait && this.images[0].confirmed)});\r\n\r\n\r\n\r\n                    this.otaUpdateInfoText.innerText = 'Confirming Upload';\r\n\r\n                    console.log(this.images);\r\n\r\n                    //CONFIRM\r\n                    // confirms the image if the slot 0 image (the one that is booted) is not yet confirmed\r\n                    // this is only the case if it's the new firmware\r\n                    if (this.images.length > 0 && this.images[0].confirmed === false) {\r\n                        try{\r\n                            console.log(\"confirming image\");\r\n                            await this.mcumgr.cmdImageConfirm(this.images[0].hash);\r\n\r\n                            this.otaUpdateInfoText.innerText = 'Auto update COMPLETE!';\r\n                            this.onUpdateSuccessfulCB();\r\n\r\n                        }catch (e){\r\n                            this.onUpdateFailureCB();\r\n                            return;\r\n                        }\r\n                    }else{\r\n                        this.otaUpdateInfoText.innerText = 'Auto update failed!';\r\n                    }\r\n\r\n\r\n                    // indicate that the hard part of the update - the upload\r\n                    // is over and the disconnect watchdog can be re-enabled\r\n                    this.bleDevice.otaUpdateInProgress = false;\r\n\r\n\r\n                    // reset this very callback, so it doesn't affect the normal connection process\r\n                    this.bleDevice.serviceInitDoneCB = null;\r\n                }, 2000);\r\n                // this delay with 2s is for user experience\r\n                // with less of a delay, everything happens simultaneously, and the UX goes down the drain\r\n\r\n            };\r\n\r\n\r\n\r\n            setTimeout(async()=>{\r\n                // continuation of the automated upload process\r\n\r\n                //TEST\r\n\r\n                this.otaUpdateInfoText.innerText = 'Testing Image';\r\n                if (this.images.length > 1 && this.images[1].pending === false) {\r\n                    try{\r\n                        await this.mcumgr.cmdImageTest(this.images[1].hash);\r\n                    }catch (e){\r\n                        this.onUpdateFailureCB();\r\n                        return;\r\n                    }\r\n                }\r\n\r\n                //RESET\r\n                this.otaUpdateInfoText.innerText = 'Will reset shortly';\r\n\r\n                setTimeout(async ()=>{\r\n                    try{\r\n                        await this.mcumgr.cmdReset();\r\n                    }catch (e){\r\n                        this.onUpdateFailureCB();\r\n                    }\r\n                }, 1500);\r\n            }, 1500);\r\n        });\r\n\r\n    }\r\n\r\n    // callback is called when the file was successfully loaded\r\n    updateSelectedFile(file, cb){\r\n        const reader = new FileReader();\r\n\r\n        // this callback is called when the reader has successfully read in the file (call for that is below)\r\n        reader.onload = async () => {\r\n            this.fileData = reader.result;\r\n            cb();\r\n        };\r\n\r\n        reader.readAsArrayBuffer(file);\r\n    }\r\n\r\n    async startUpdateProcess(onSuccessCB, onFailureCB){\r\n\r\n        this.onUpdateSuccessfulCB = onSuccessCB;\r\n\r\n        this.onUpdateFailureCB = onFailureCB;\r\n\r\n        this.bleDevice.otaUpdateInProgress = true;\r\n\r\n        // the update process follows this rather strict schedule to be successful:\r\n\r\n        /*\r\n            Connect\r\n            Erase\r\n            Upload\r\n\r\n            (Callback since this takes lots of time)\r\n\r\n            Test\r\n            Reset\r\n\r\n            (reconnect the device)\r\n\r\n            Confirm\r\n\r\n            DONE!\r\n        */\r\n\r\n        // some of these actions are asynchronous in the sense that they work based on callbacks.\r\n\r\n        // Initializing OTA Update Service\r\n        this.otaUpdateInfoText.innerText = 'Initialising Update Service';\r\n        try{\r\n            await this.mcumgr.connect();\r\n        }catch (e){\r\n            this.onUpdateFailureCB();\r\n            return;\r\n        }\r\n\r\n\r\n        setTimeout(async ()=>{\r\n            // ERASE\r\n            this.otaUpdateInfoText.innerText = 'Erasing';\r\n            try{\r\n                await this.mcumgr.cmdImageErase();\r\n            }catch (e){\r\n                this.onUpdateFailureCB();\r\n                return;\r\n            }\r\n\r\n\r\n            setTimeout(()=>{\r\n                //UPLOAD\r\n                this.otaUpdateInfoText.disabled = true;\r\n                //event.stopPropagation();\r\n                if (this.fileData) {\r\n                    this.mcumgr.cmdUpload(this.fileData).catch(()=>{\r\n                        this.onUpdateFailureCB();\r\n                    });\r\n                }else{\r\n                    this.otaUpdateInfoText.innerText = 'No firmware loaded!';\r\n                }\r\n            },1000);\r\n\r\n            // as this is not asynchronous but with a callback function.\r\n            // this continues in the onImageUploadFinished callback registered in constructor\r\n        }, 1000);\r\n    }\r\n\r\n}","// noinspection JSBitwiseOperatorUsage\r\n\r\n/*\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2014-2016 Patrick Gansterer <paroga@paroga.com>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n */\r\n\r\n\"use strict\";\r\n\r\n\r\nconst POW_2_24 = 5.960464477539063e-8,\r\n    POW_2_32 = 4294967296,\r\n    POW_2_53 = 9007199254740992;\r\n\r\nfunction encode(value) {\r\n  let data = new ArrayBuffer(256);\r\n  let dataView = new DataView(data);\r\n  let lastLength;\r\n  let offset = 0;\r\n\r\n  function prepareWrite(length) {\r\n    let newByteLength = data.byteLength;\r\n    let requiredLength = offset + length;\r\n    while (newByteLength < requiredLength)\r\n      newByteLength <<= 1;\r\n    if (newByteLength !== data.byteLength) {\r\n      let oldDataView = dataView;\r\n      data = new ArrayBuffer(newByteLength);\r\n      dataView = new DataView(data);\r\n      let uint32count = (offset + 3) >> 2;\r\n      for (let i = 0; i < uint32count; ++i)\r\n        dataView.setUint32(i << 2, oldDataView.getUint32(i << 2));\r\n    }\r\n\r\n    lastLength = length;\r\n    return dataView;\r\n  }\r\n  function commitWrite() {\r\n    offset += lastLength;\r\n  }\r\n  function writeFloat64(value) {\r\n    // noinspection JSVoidFunctionReturnValueUsed\r\n    commitWrite(prepareWrite(8).setFloat64(offset, value));\r\n  }\r\n  function writeUint8(value) {\r\n    // noinspection JSVoidFunctionReturnValueUsed\r\n    commitWrite(prepareWrite(1).setUint8(offset, value));\r\n  }\r\n  function writeUint8Array(value) {\r\n    let dataView = prepareWrite(value.length);\r\n    for (let i = 0; i < value.length; ++i)\r\n      dataView.setUint8(offset + i, value[i]);\r\n    commitWrite();\r\n  }\r\n  function writeUint16(value) {\r\n    // noinspection JSVoidFunctionReturnValueUsed\r\n    commitWrite(prepareWrite(2).setUint16(offset, value));\r\n  }\r\n  function writeUint32(value) {\r\n    // noinspection JSVoidFunctionReturnValueUsed\r\n    commitWrite(prepareWrite(4).setUint32(offset, value));\r\n  }\r\n  function writeUint64(value) {\r\n    let low = value % POW_2_32;\r\n    let high = (value - low) / POW_2_32;\r\n    let dataView = prepareWrite(8);\r\n    dataView.setUint32(offset, high);\r\n    dataView.setUint32(offset + 4, low);\r\n    commitWrite();\r\n  }\r\n  function writeTypeAndLength(type, length) {\r\n    if (length < 24) {\r\n      writeUint8(type << 5 | length);\r\n    } else if (length < 0x100) {\r\n      writeUint8(type << 5 | 24);\r\n      writeUint8(length);\r\n    } else if (length < 0x10000) {\r\n      writeUint8(type << 5 | 25);\r\n      writeUint16(length);\r\n    } else if (length < 0x100000000) {\r\n      writeUint8(type << 5 | 26);\r\n      writeUint32(length);\r\n    } else {\r\n      writeUint8(type << 5 | 27);\r\n      writeUint64(length);\r\n    }\r\n  }\r\n\r\n  function encodeItem(value) {\r\n    let i;\r\n\r\n    if (value === false)\r\n      return writeUint8(0xf4);\r\n    if (value === true)\r\n      return writeUint8(0xf5);\r\n    if (value === null)\r\n      return writeUint8(0xf6);\r\n    if (value === undefined)\r\n      return writeUint8(0xf7);\r\n\r\n    switch (typeof value) {\r\n      case \"number\":\r\n        if (Math.floor(value) === value) {\r\n          if (0 <= value && value <= POW_2_53)\r\n            return writeTypeAndLength(0, value);\r\n          if (-POW_2_53 <= value && value < 0)\r\n            return writeTypeAndLength(1, -(value + 1));\r\n        }\r\n        writeUint8(0xfb);\r\n        return writeFloat64(value);\r\n\r\n      case \"string\":\r\n        let utf8data = [];\r\n        for (i = 0; i < value.length; ++i) {\r\n          let charCode = value.charCodeAt(i);\r\n          if (charCode < 0x80) {\r\n            utf8data.push(charCode);\r\n          } else if (charCode < 0x800) {\r\n            utf8data.push(0xc0 | charCode >> 6);\r\n            utf8data.push(0x80 | charCode & 0x3f);\r\n          } else if (charCode < 0xd800) {\r\n            utf8data.push(0xe0 | charCode >> 12);\r\n            utf8data.push(0x80 | (charCode >> 6)  & 0x3f);\r\n            utf8data.push(0x80 | charCode & 0x3f);\r\n          } else {\r\n            charCode = (charCode & 0x3ff) << 10;\r\n            charCode |= value.charCodeAt(++i) & 0x3ff;\r\n            charCode += 0x10000;\r\n\r\n            utf8data.push(0xf0 | charCode >> 18);\r\n            utf8data.push(0x80 | (charCode >> 12)  & 0x3f);\r\n            utf8data.push(0x80 | (charCode >> 6)  & 0x3f);\r\n            utf8data.push(0x80 | charCode & 0x3f);\r\n          }\r\n        }\r\n\r\n        writeTypeAndLength(3, utf8data.length);\r\n        return writeUint8Array(utf8data);\r\n\r\n      default:\r\n        let length;\r\n        if (Array.isArray(value)) {\r\n          length = value.length;\r\n          writeTypeAndLength(4, length);\r\n          for (i = 0; i < length; ++i)\r\n            encodeItem(value[i]);\r\n        } else if (value instanceof Uint8Array) {\r\n          writeTypeAndLength(2, value.length);\r\n          writeUint8Array(value);\r\n        } else {\r\n          let keys = Object.keys(value);\r\n          length = keys.length;\r\n          writeTypeAndLength(5, length);\r\n          for (i = 0; i < length; ++i) {\r\n            let key = keys[i];\r\n            encodeItem(key);\r\n            encodeItem(value[key]);\r\n          }\r\n        }\r\n    }\r\n  }\r\n\r\n  encodeItem(value);\r\n\r\n  if (\"slice\" in data)\r\n    return data.slice(0, offset);\r\n\r\n  let ret = new ArrayBuffer(offset);\r\n  let retView = new DataView(ret);\r\n  for (let i = 0; i < offset; ++i)\r\n    retView.setUint8(i, dataView.getUint8(i));\r\n  return ret;\r\n}\r\n\r\nfunction decode(data, tagger, simpleValue) {\r\n  let dataView = new DataView(data);\r\n  let offset = 0;\r\n\r\n  if (typeof tagger !== \"function\")\r\n    tagger = function(value) { return value; };\r\n  if (typeof simpleValue !== \"function\")\r\n    simpleValue = function() { return undefined; };\r\n\r\n  function commitRead(length, value) {\r\n    offset += length;\r\n    return value;\r\n  }\r\n  function readArrayBuffer(length) {\r\n    return commitRead(length, new Uint8Array(data, offset, length));\r\n  }\r\n  function readFloat16() {\r\n    let tempArrayBuffer = new ArrayBuffer(4);\r\n    let tempDataView = new DataView(tempArrayBuffer);\r\n    let value = readUint16();\r\n\r\n    let sign = value & 0x8000;\r\n    let exponent = value & 0x7c00;\r\n    let fraction = value & 0x03ff;\r\n\r\n    if (exponent === 0x7c00)\r\n      exponent = 0xff << 10;\r\n    else if (exponent !== 0)\r\n      exponent += (127 - 15) << 10;\r\n    else if (fraction !== 0)\r\n      return (sign ? -1 : 1) * fraction * POW_2_24;\r\n\r\n    tempDataView.setUint32(0, sign << 16 | exponent << 13 | fraction << 13);\r\n    return tempDataView.getFloat32(0);\r\n  }\r\n  function readFloat32() {\r\n    return commitRead(4, dataView.getFloat32(offset));\r\n  }\r\n  function readFloat64() {\r\n    return commitRead(8, dataView.getFloat64(offset));\r\n  }\r\n  function readUint8() {\r\n    return commitRead(1, dataView.getUint8(offset));\r\n  }\r\n  function readUint16() {\r\n    return commitRead(2, dataView.getUint16(offset));\r\n  }\r\n  function readUint32() {\r\n    return commitRead(4, dataView.getUint32(offset));\r\n  }\r\n  function readUint64() {\r\n    return readUint32() * POW_2_32 + readUint32();\r\n  }\r\n  function readBreak() {\r\n    if (dataView.getUint8(offset) !== 0xff)\r\n      return false;\r\n    offset += 1;\r\n    return true;\r\n  }\r\n  function readLength(additionalInformation) {\r\n    if (additionalInformation < 24)\r\n      return additionalInformation;\r\n    if (additionalInformation === 24)\r\n      return readUint8();\r\n    if (additionalInformation === 25)\r\n      return readUint16();\r\n    if (additionalInformation === 26)\r\n      return readUint32();\r\n    if (additionalInformation === 27)\r\n      return readUint64();\r\n    if (additionalInformation === 31)\r\n      return -1;\r\n    throw \"Invalid length encoding\";\r\n  }\r\n  function readIndefiniteStringLength(majorType) {\r\n    let initialByte = readUint8();\r\n    if (initialByte === 0xff)\r\n      return -1;\r\n    let length = readLength(initialByte & 0x1f);\r\n    if (length < 0 || (initialByte >> 5) !== majorType)\r\n      throw \"Invalid indefinite length element\";\r\n    return length;\r\n  }\r\n\r\n  function appendUtf16Data(utf16data, length) {\r\n    for (let i = 0; i < length; ++i) {\r\n      let value = readUint8();\r\n      if (value & 0x80) {\r\n        if (value < 0xe0) {\r\n          value = (value & 0x1f) <<  6\r\n                | (readUint8() & 0x3f);\r\n          length -= 1;\r\n        } else if (value < 0xf0) {\r\n          value = (value & 0x0f) << 12\r\n                | (readUint8() & 0x3f) << 6\r\n                | (readUint8() & 0x3f);\r\n          length -= 2;\r\n        } else {\r\n          value = (value & 0x0f) << 18\r\n                | (readUint8() & 0x3f) << 12\r\n                | (readUint8() & 0x3f) << 6\r\n                | (readUint8() & 0x3f);\r\n          length -= 3;\r\n        }\r\n      }\r\n\r\n      if (value < 0x10000) {\r\n        utf16data.push(value);\r\n      } else {\r\n        value -= 0x10000;\r\n        utf16data.push(0xd800 | (value >> 10));\r\n        utf16data.push(0xdc00 | (value & 0x3ff));\r\n      }\r\n    }\r\n  }\r\n\r\n  function decodeItem() {\r\n    let initialByte = readUint8();\r\n    let majorType = initialByte >> 5;\r\n    let additionalInformation = initialByte & 0x1f;\r\n    let i;\r\n    let length;\r\n\r\n    if (majorType === 7) {\r\n      switch (additionalInformation) {\r\n        case 25:\r\n          return readFloat16();\r\n        case 26:\r\n          return readFloat32();\r\n        case 27:\r\n          return readFloat64();\r\n      }\r\n    }\r\n\r\n    length = readLength(additionalInformation);\r\n    if (length < 0 && (majorType < 2 || 6 < majorType))\r\n      throw \"Invalid length\";\r\n\r\n    switch (majorType) {\r\n      case 0:\r\n        return length;\r\n      case 1:\r\n        return -1 - length;\r\n      case 2:\r\n        if (length < 0) {\r\n          let elements = [];\r\n          let fullArrayLength = 0;\r\n          while ((length = readIndefiniteStringLength(majorType)) >= 0) {\r\n            fullArrayLength += length;\r\n            elements.push(readArrayBuffer(length));\r\n          }\r\n          let fullArray = new Uint8Array(fullArrayLength);\r\n          let fullArrayOffset = 0;\r\n          for (i = 0; i < elements.length; ++i) {\r\n            fullArray.set(elements[i], fullArrayOffset);\r\n            fullArrayOffset += elements[i].length;\r\n          }\r\n          return fullArray;\r\n        }\r\n        return readArrayBuffer(length);\r\n      case 3:\r\n        let utf16data = [];\r\n        if (length < 0) {\r\n          while ((length = readIndefiniteStringLength(majorType)) >= 0)\r\n            appendUtf16Data(utf16data, length);\r\n        } else\r\n          appendUtf16Data(utf16data, length);\r\n        return String.fromCharCode.apply(null, utf16data);\r\n      case 4:\r\n        let retArray;\r\n        if (length < 0) {\r\n          retArray = [];\r\n          while (!readBreak())\r\n            retArray.push(decodeItem());\r\n        } else {\r\n          retArray = new Array(length);\r\n          for (i = 0; i < length; ++i)\r\n            retArray[i] = decodeItem();\r\n        }\r\n        return retArray;\r\n      case 5:\r\n        let retObject = {};\r\n        for (i = 0; i < length || length < 0 && !readBreak(); ++i) {\r\n          let key = decodeItem();\r\n          retObject[key] = decodeItem();\r\n        }\r\n        return retObject;\r\n      case 6:\r\n        return tagger(decodeItem(), length);\r\n      case 7:\r\n        switch (length) {\r\n          case 20:\r\n            return false;\r\n          case 21:\r\n            return true;\r\n          case 22:\r\n            return null;\r\n          case 23:\r\n            return undefined;\r\n          default:\r\n            return simpleValue(length);\r\n        }\r\n    }\r\n  }\r\n\r\n  let ret = decodeItem();\r\n  if (offset !== data.byteLength)\r\n    throw \"Remaining bytes\";\r\n  return ret;\r\n}\r\n\r\nmodule.exports = { encode: encode, decode: decode };\r\n","let CBOR = require(\"./cbor\");\r\n\r\nexport default class MCUManager {\r\n\r\n    // Opcodes\r\n    #MGMT_OP_READ = 0;\r\n    #MGMT_OP_WRITE = 2;\r\n\r\n    // Groups\r\n    #MGMT_GROUP_ID_OS = 0;\r\n    #MGMT_GROUP_ID_IMAGE = 1;\r\n\r\n    // OS group\r\n    #OS_MGMT_ID_ECHO = 0;\r\n    #OS_MGMT_ID_RESET = 5;\r\n\r\n    // Image group\r\n    #IMG_MGMT_ID_STATE = 0;\r\n    #IMG_MGMT_ID_UPLOAD = 1;\r\n    #IMG_MGMT_ID_ERASE = 5;\r\n\r\n    #otaUpdateServiceUuid = '8d53dc1d-1db7-4cd3-868b-8a527460aa84';\r\n    #otaUpdateCharacteristicUuid = 'da2e7828-fbce-4e01-ae9e-261174997c48';\r\n\r\n    #MTU = 200;\r\n\r\n    constructor(bleDevice) {\r\n        this._device = bleDevice;\r\n        this._service = null;\r\n        this._characteristic = null;\r\n        this._connectCallback = null;\r\n        this._connectingCallback = null;\r\n        this._disconnectCallback = null;\r\n        this._messageCallback = null;\r\n        this._imageUploadProgressCallback = null;\r\n        this._uploadIsInProgress = false;\r\n        this._buffer = new Uint8Array();\r\n        this._logger = { info: console.log, error: console.error };\r\n        this._seq = 0;\r\n    }\r\n    async connect() {\r\n        try {\r\n            if (this._connectingCallback) this._connectingCallback();\r\n            const server = this._device.gattServer;\r\n            this._logger.info(`Server connected.`);\r\n            this._service = await server.getPrimaryService(this.#otaUpdateServiceUuid);\r\n            this._logger.info(`Service connected.`);\r\n            this._characteristic = await this._service.getCharacteristic(this.#otaUpdateCharacteristicUuid);\r\n            this._logger.info(`Characteristic connected.`);\r\n            this._characteristic.addEventListener('characteristicvaluechanged', this._notification.bind(this));\r\n            await this._characteristic.startNotifications();\r\n            await this._connected();\r\n            if (this._uploadIsInProgress) {\r\n                await this._uploadNext();\r\n            }\r\n        } catch (error) {\r\n            this._logger.error(error);\r\n            await this._disconnected();\r\n        }\r\n    }\r\n    disconnect() {\r\n        this._userRequestedDisconnect = true;\r\n        return this._device.gatt.disconnect();\r\n    }\r\n    onConnecting(callback) {\r\n        this._connectingCallback = callback;\r\n        return this;\r\n    }\r\n    onConnect(callback) {\r\n        this._connectCallback = callback;\r\n        return this;\r\n    }\r\n    onDisconnect(callback) {\r\n        this._disconnectCallback = callback;\r\n        return this;\r\n    }\r\n    onMessage(callback) {\r\n        this._messageCallback = callback;\r\n        return this;\r\n    }\r\n    onImageUploadProgress(callback) {\r\n        this._imageUploadProgressCallback = callback;\r\n        return this;\r\n    }\r\n    onImageUploadFinished(callback) {\r\n        this._imageUploadFinishedCallback = callback;\r\n        return this;\r\n    }\r\n    async _connected() {\r\n        if (this._connectCallback) this._connectCallback();\r\n    }\r\n    async _disconnected() {\r\n        this._logger.info('Disconnected.');\r\n        if (this._disconnectCallback) this._disconnectCallback();\r\n        this._device = null;\r\n        this._service = null;\r\n        this._characteristic = null;\r\n        this._uploadIsInProgress = false;\r\n        this._userRequestedDisconnect = false;\r\n    }\r\n    get name() {\r\n        return this._device && this._device.name;\r\n    }\r\n    async _sendMessage(op, group, id, data) {\r\n        const _flags = 0;\r\n        let encodedData = [];\r\n        if (typeof data !== 'undefined') {\r\n            encodedData = [...new Uint8Array(CBOR.encode(data))];\r\n        }\r\n        const length_lo = encodedData.length & 255;\r\n        const length_hi = encodedData.length >> 8;\r\n        const group_lo = group & 255;\r\n        const group_hi = group >> 8;\r\n        const message = [op, _flags, length_hi, length_lo, group_hi, group_lo, this._seq, id, ...encodedData];\r\n        // console.log('>'  + message.map(x => x.toString(16).padStart(2, '0')).join(' '));\r\n        await this._characteristic.writeValueWithoutResponse(Uint8Array.from(message));\r\n        this._seq = (this._seq + 1) % 256;\r\n    }\r\n    _notification(event) {\r\n        // console.log('message received');\r\n        const message = new Uint8Array(event.target.value.buffer);\r\n        // console.log(message);\r\n        // console.log('<'  + [...message].map(x => x.toString(16).padStart(2, '0')).join(' '));\r\n        this._buffer = new Uint8Array([...this._buffer, ...message]);\r\n        const messageLength = this._buffer[2] * 256 + this._buffer[3];\r\n        if (this._buffer.length < messageLength + 8) return;\r\n        this._processMessage(this._buffer.slice(0, messageLength + 8));\r\n        this._buffer = this._buffer.slice(messageLength + 8);\r\n    }\r\n    _processMessage(message) {\r\n        const [op, _flags, length_hi, length_lo, group_hi, group_lo, _seq, id] = message;\r\n        const data = CBOR.decode(message.slice(8).buffer);\r\n        const length = length_hi * 256 + length_lo;\r\n        const group = group_hi * 256 + group_lo;\r\n        if (group === this.#MGMT_GROUP_ID_IMAGE && id === this.#IMG_MGMT_ID_UPLOAD && data.rc === 0 && data.off) {\r\n            this._uploadOffset = data.off;\r\n            this._uploadNext();\r\n            return;\r\n        }\r\n        if (this._messageCallback) this._messageCallback({ op, group, id, data, length });\r\n    }\r\n    cmdReset() {\r\n        return this._sendMessage(this.#MGMT_OP_WRITE, this.#MGMT_GROUP_ID_OS, this.#OS_MGMT_ID_RESET);\r\n    }\r\n    smpEcho(message) {\r\n        return this._sendMessage(this.#MGMT_OP_WRITE, this.#MGMT_GROUP_ID_OS, this.#OS_MGMT_ID_ECHO, { d: message });\r\n    }\r\n    cmdImageState() {\r\n        return this._sendMessage(this.#MGMT_OP_READ, this.#MGMT_GROUP_ID_IMAGE, this.#IMG_MGMT_ID_STATE);\r\n    }\r\n    cmdImageErase() {\r\n        return this._sendMessage(this.#MGMT_OP_WRITE, this.#MGMT_GROUP_ID_IMAGE, this.#IMG_MGMT_ID_ERASE, {});\r\n    }\r\n    cmdImageTest(hash) {\r\n        return this._sendMessage(this.#MGMT_OP_WRITE, this.#MGMT_GROUP_ID_IMAGE, this.#IMG_MGMT_ID_STATE, { hash, confirm: false });\r\n    }\r\n    cmdImageConfirm(hash) {\r\n        return this._sendMessage(this.#MGMT_OP_WRITE, this.#MGMT_GROUP_ID_IMAGE, this.#IMG_MGMT_ID_STATE, { hash, confirm: true });\r\n    }\r\n    _hash(image) {\r\n        return crypto.subtle.digest('SHA-256', image);\r\n    }\r\n    async _uploadNext() {\r\n        if (this._uploadOffset >= this._uploadImage.byteLength) {\r\n            this._uploadIsInProgress = false;\r\n            this._imageUploadFinishedCallback();\r\n            return;\r\n        }\r\n\r\n        const nmpOverhead = 8;\r\n        const message = { data: new Uint8Array(), off: this._uploadOffset };\r\n        if (this._uploadOffset === 0) {\r\n            message.len = this._uploadImage.byteLength;\r\n            message.sha = new Uint8Array(await this._hash(this._uploadImage));\r\n        }\r\n        this._imageUploadProgressCallback({ percentage: (Math.floor(this._uploadOffset / this._uploadImage.byteLength * 1000) / 10) });\r\n\r\n        const length = this.#MTU - CBOR.encode(message).byteLength - nmpOverhead;\r\n\r\n        message.data = new Uint8Array(this._uploadImage.slice(this._uploadOffset, this._uploadOffset + length));\r\n\r\n        this._uploadOffset += length;\r\n        await this.sendMessageTry(this.#MGMT_OP_WRITE, this.#MGMT_GROUP_ID_IMAGE, this.#IMG_MGMT_ID_UPLOAD, message, 0);\r\n    }\r\n\r\n    async sendMessageTry(op, group, id, data, t){\r\n\r\n        if(t > 20){\r\n            throw new DOMException(\"GATT operation failed for unknown reason\");\r\n        }\r\n\r\n        try{\r\n            await this._sendMessage(op, group, id, data);\r\n        }catch(e){\r\n            setTimeout(async ()=>{\r\n                console.log(\"[mcumgr] error while sending message, try number \" + t + \" error: \" + e);\r\n                await this.sendMessageTry(op, group, id, data, t+1);\r\n            }, 200);\r\n        }\r\n    }\r\n\r\n    async cmdUpload(image, slot = 0) {\r\n        if (this._uploadIsInProgress) {\r\n            this._logger.error('Upload is already in progress.');\r\n            return;\r\n        }\r\n        this._uploadIsInProgress = true;\r\n\r\n        this._uploadOffset = 0;\r\n        this._uploadImage = image;\r\n        this._uploadSlot = slot;\r\n\r\n        this._uploadNext();\r\n    }\r\n    async imageInfo(image) {\r\n        // https://interrupt.memfault.com/blog/mcuboot-overview#mcuboot-image-binaries\r\n\r\n        const info = {};\r\n        const view = new Uint8Array(image);\r\n\r\n        // check header length\r\n        if (view.length < 32) {\r\n            throw new Error('Invalid image (too short file)');\r\n        }\r\n\r\n        // check MAGIC bytes 0x96f3b83d\r\n        if (view[0] !== 0x3d || view[1] !== 0xb8 || view[2] !== 0xf3 || view[3] !== 0x96) {\r\n            throw new Error('Invalid image (wrong magic bytes)');\r\n        }\r\n\r\n        // check load address is 0x00000000\r\n        if (view[4] !== 0x00 || view[5] !== 0x00 || view[6] !== 0x00 || view[7] !== 0x00) {\r\n            throw new Error('Invalid image (wrong load address)');\r\n        }\r\n\r\n        const headerSize = view[8] + view[9] * 2**8;\r\n\r\n        // check protected TLV area size is 0\r\n        if (view[10] !== 0x00 || view[11] !== 0x00) {\r\n            throw new Error('Invalid image (wrong protected TLV area size)');\r\n        }\r\n\r\n        const imageSize = view[12] + view[13] * 2**8 + view[14] * 2**16 + view[15] * 2**24;\r\n        info.imageSize = imageSize;\r\n\r\n        // check image size is correct\r\n        if (view.length < imageSize + headerSize) {\r\n            throw new Error('Invalid image (wrong image size)');\r\n        }\r\n\r\n        // check flags is 0x00000000\r\n        if (view[16] !== 0x00 || view[17] !== 0x00 || view[18] !== 0x00 || view[19] !== 0x00) {\r\n            throw new Error('Invalid image (wrong flags)');\r\n        }\r\n\r\n        info.version = `${view[20]}.${view[21]}.${view[22] + view[23] * 2 ** 8}`;\r\n\r\n        info.hash = [...new Uint8Array(await this._hash(image.slice(0, imageSize + 32)))].map(b => b.toString(16).padStart(2, '0')).join('');\r\n\r\n        return info;\r\n    }\r\n}\r\n\r\n","import gui from \"../gui\";\r\nimport otaController from \"./otaController\";\r\nimport sf from \"../helpers/small_functions\";\r\n\r\nexport default class otaManager extends gui{\r\n\r\n    lastSelectedFirmware;\r\n    bmsController;\r\n\r\n    bmsDevice;\r\n    tachoDevice;\r\n\r\n    updateInProgress;\r\n\r\n    #prevSelectedFirmware = '';\r\n\r\n    constructor(bmsDevice, tachoDevice, deviceInfoMgr){\r\n        super();\r\n\r\n        this.bmsDevice = bmsDevice;\r\n        this.tachoDevice = tachoDevice;\r\n\r\n        this.deviceInfoMgr = deviceInfoMgr;\r\n\r\n        this.bmsController = new otaController(bmsDevice);\r\n        this.tachoController = new otaController(tachoDevice);\r\n\r\n        this.getAvailableOTAImages();\r\n\r\n    }\r\n\r\n\r\n    getAvailableOTAImages(){\r\n        this.getAvailableBMSOTAImages().then((res) => {\r\n            this.bmsImages = res;\r\n            console.log(\"[otaManager] got available BMS images!\");\r\n        });\r\n        this.getAvailableTachoOTAImages().then((res) => {\r\n            this.tachoImages = res;\r\n            console.log(\"[otaManager] got available Tacho images!\");\r\n        });\r\n    }\r\n\r\n\r\n    addEventListeners(){\r\n\r\n        // listener for opened select\r\n        this.availableOTAImagesSelect.addEventListener(\"click\", ()=>{\r\n\r\n            // fill dynamically with the needed tag names\r\n            switch (this.deviceInfoMgr.chosenDevice) {\r\n                case \"bms\":\r\n                    this.displayAvailableOTAImages(this.bmsImages);\r\n\r\n                    break;\r\n                case \"tacho\":\r\n                    this.displayAvailableOTAImages(this.tachoImages);\r\n\r\n                    break;\r\n                default:\r\n                    console.log(\"[otaManager] no device type selected!\");\r\n                    return;\r\n            }\r\n\r\n            // actually load in the firmware images\r\n            if(this.availableOTAImagesSelect.value !== \"\" && this.#prevSelectedFirmware !== ''){\r\n                // block all update actions if update is in progress\r\n                if(this.updateInProgress){\r\n                    return;\r\n                }\r\n\r\n                // reduce number of calls on the sad proxy\r\n                if (this.availableOTAImagesSelect.value === this.lastSelectedFirmware) {\r\n                    return;\r\n                }\r\n                this.lastSelectedFirmware = this.availableOTAImagesSelect.value;\r\n\r\n\r\n                // disable the upload button while firmware file is downloaded and parsed\r\n                this.deviceInfoMgr.blockChooser();\r\n                this.updateOTAButton.disabled = true;\r\n                this.availableOTAImagesSelect.disabled = true;\r\n\r\n                // inform user lol\r\n                this.otaUpdateInfoText.innerText = 'Downloading selected Firmware...';\r\n\r\n\r\n                switch (this.deviceInfoMgr.chosenDevice) {\r\n                    case \"bms\":\r\n                        this.loadBMSFirmware();\r\n\r\n                        break;\r\n                    case \"tacho\":\r\n                        this.loadTachoFirmware();\r\n\r\n                        break;\r\n                    default:\r\n\r\n                        // reset everything so the user isn't stuck\r\n\r\n                        this.deviceInfoMgr.unblockChooser();\r\n                        this.updateOTAButton.disabled = false;\r\n                        this.availableOTAImagesSelect.disabled = false;\r\n\r\n                        break;\r\n                }\r\n            }\r\n\r\n            this.#prevSelectedFirmware = this.availableOTAImagesSelect.value;\r\n        });\r\n\r\n            // listener for update button\r\n        this.updateOTAButton.addEventListener(\"click\", ()=>{\r\n\r\n            switch (this.deviceInfoMgr.chosenDevice) {\r\n                case \"bms\":\r\n                    console.log(\"bms selected\");\r\n\r\n                    this.performUpdateBMS();\r\n\r\n                    break;\r\n                case \"tacho\":\r\n                    console.log(\"tacho selected\");\r\n\r\n                    this.performUpdateTacho();\r\n\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    performUpdateTacho(){\r\n        // block all update actions if update is in progress\r\n        if(this.updateInProgress){\r\n            return;\r\n        }\r\n\r\n        this.updateOTAButton.disabled = true;\r\n\r\n        this.updateInProgress = true;\r\n\r\n        this.tachoDevice.pauseDataLogging().then(()=>{\r\n            this.tachoController.startUpdateProcess(()=>{\r\n\r\n                this.tachoDevice.unPauseDataLogging().then(()=>{\r\n\r\n                    console.log(\"OTA update finished!\");\r\n\r\n                    this.updateInProgress = false;\r\n                });\r\n\r\n            }).catch(()=>{\r\n                this.updateInProgress = false;\r\n            });\r\n        });\r\n    }\r\n\r\n    loadTachoFirmware() {\r\n        const url = \"https://api.github.com/repos/Dev-Voltaic/Voltaic_Tacho/releases/tags/\" + this.availableOTAImagesSelect.value;\r\n        this.loadFirmware(url, this.tachoController);\r\n    }\r\n\r\n    loadBMSFirmware() {\r\n        const url = \"https://api.github.com/repos/Dev-Voltaic/Voltaic_BMS/releases/tags/\" + this.availableOTAImagesSelect.value;\r\n        this.loadFirmware(url, this.bmsController);\r\n    }\r\n\r\n    loadFirmware(url, controller){\r\n        // get the link to the bin file\r\n        sf.fetchWithTimeout(url).then((response) => {\r\n            if(response.status !== 200){\r\n                this.#firmwareDownloadFailed();\r\n                return;\r\n            }\r\n\r\n            response.text().then((text) => {\r\n                let responseJSON = JSON.parse(text);\r\n\r\n                // go through all assets and get the first one that is a .bin file\r\n                responseJSON.assets.forEach((asset) => {\r\n                    if (asset.name.endsWith(\".bin\")) {\r\n                        // FUCK CORS\r\n                        let proxyUrl = 'https://api.codetabs.com/v1/proxy?quest=' + asset.browser_download_url;\r\n\r\n                        // download image file via cors proxy\r\n                        sf.fetchWithTimeout(proxyUrl,\r\n                            {\r\n                                method: \"GET\",\r\n                                headers: {},\r\n                                // follow redirect requests!!!\r\n                                redirect: \"follow\"\r\n                            }).then((fileResponse) => {\r\n\r\n                                if(fileResponse.status !== 200){\r\n                                    this.#firmwareDownloadFailed();\r\n                                    return;\r\n                                }\r\n\r\n                                // read the image file into the mcumgr\r\n                                fileResponse.blob().then(fileResponseBlob => {\r\n                                    controller.updateSelectedFile(fileResponseBlob, ()=>{\r\n\r\n                                        // re-enable user interaction\r\n                                        this.deviceInfoMgr.unblockChooser();\r\n                                        this.updateOTAButton.disabled = false;\r\n                                        this.availableOTAImagesSelect.disabled = false;\r\n\r\n                                        this.otaUpdateInfoText.innerText = 'Firmware ' + this.availableOTAImagesSelect.value + ' downloaded!';\r\n                                    });\r\n                                });\r\n                        }).catch(()=>{\r\n                            this.#firmwareDownloadFailed();\r\n                        });\r\n                    }\r\n                });\r\n            });\r\n        }).catch(()=>{\r\n            this.#firmwareDownloadFailed();\r\n        });\r\n    }\r\n\r\n    #firmwareDownloadFailed(){\r\n        // re-enable user interaction\r\n        this.deviceInfoMgr.unblockChooser();\r\n        this.updateOTAButton.disabled = true;\r\n        this.availableOTAImagesSelect.disabled = false;\r\n\r\n        this.otaUpdateInfoText.innerText = 'Firmware download failed!';\r\n    }\r\n\r\n\r\n    performUpdateBMS(){\r\n        // block all update actions if update is in progress\r\n        if(this.updateInProgress){\r\n            return;\r\n        }\r\n\r\n        this.updateOTAButton.disabled = true;\r\n\r\n        this.updateInProgress = true;\r\n\r\n        this.bmsDevice.pauseDataLogging().then(()=>{\r\n            this.bmsController.startUpdateProcess(()=>{\r\n\r\n                this.bmsDevice.unPauseDataLogging().then(()=>{\r\n\r\n                    console.log(\"OTA update finished!\");\r\n\r\n                    this.updateInProgress = false;\r\n                });\r\n\r\n            }).catch(()=>{\r\n                this.updateInProgress = false;\r\n            });\r\n        });\r\n    }\r\n\r\n\r\n    displayAvailableOTAImages(responseJSON){\r\n\r\n        // when the server responds with a rate limit response, the select can't be filled\r\n        // - user must be warned\r\n        if(typeof responseJSON.forEach !== \"function\"){\r\n            // clear-out select\r\n            this.availableOTAImagesSelect.innerHTML = \"\";\r\n\r\n            let opt = document.createElement(\"option\");\r\n            opt.innerHTML = \"Rate limit exceeded!\"; // just a simple warning\r\n\r\n            // append created warning to select\r\n            this.availableOTAImagesSelect.appendChild(opt);\r\n\r\n            return;\r\n        }\r\n\r\n        // before filling, check if it is already filled correctly\r\n        let alreadyFilledCorrectly = true;\r\n        this.availableOTAImagesSelect.childNodes.forEach((option) => {\r\n            let match = false;\r\n            responseJSON.forEach((release) => {\r\n                if(release.tag_name === option.value){\r\n                    match = true;\r\n                }\r\n            });\r\n\r\n            if(!match){\r\n                alreadyFilledCorrectly = false;\r\n            }\r\n        });\r\n\r\n        if(alreadyFilledCorrectly){\r\n            return;\r\n        }\r\n\r\n        // clear-out select\r\n        this.availableOTAImagesSelect.innerHTML = \"\";\r\n\r\n        // programmatically fill select\r\n        responseJSON.forEach((release) => {\r\n            const firmwareVersion = release.tag_name;\r\n\r\n            let opt = document.createElement(\"option\");\r\n            opt.value = firmwareVersion;\r\n            opt.innerHTML = firmwareVersion; // whatever property it has\r\n\r\n            // then append it to the select element\r\n            this.availableOTAImagesSelect.appendChild(opt);\r\n        });\r\n    }\r\n\r\n    async getAvailableTachoOTAImages(){\r\n        const url = 'https://api.codetabs.com/v1/proxy?quest=https://api.github.com/repos/Dev-Voltaic/Voltaic_Tacho/releases';\r\n\r\n        try{\r\n            // get all available releases from repo\r\n            let response = await sf.fetchWithTimeout(url);\r\n            if(response.status !== 200){\r\n                this.availableOTAImagesSelect.innerHtml = \"Failed to get versions!\";\r\n            }else{\r\n                return JSON.parse(await response.text());\r\n            }\r\n        }catch(e){\r\n            if (e instanceof TypeError){\r\n                this.availableOTAImagesSelect.innerHtml = \"No Internet connection!\";\r\n            }\r\n\r\n            return {};\r\n        }\r\n\r\n    }\r\n\r\n    async getAvailableBMSOTAImages(){\r\n        const url = 'https://api.codetabs.com/v1/proxy?quest=https://api.github.com/repos/Dev-Voltaic/Voltaic_BMS/releases';\r\n\r\n        try{\r\n            // get all available releases from repo\r\n            let response = await sf.fetchWithTimeout(url);\r\n            if(response.status !== 200){\r\n                this.availableOTAImagesSelect.innerHtml = \"Failed to get versions!\";\r\n            }else{\r\n                return JSON.parse(await response.text());\r\n            }\r\n        }catch(e){\r\n            if (e instanceof TypeError){\r\n                this.availableOTAImagesSelect.innerHtml = \"No Internet connection!\";\r\n            }\r\n\r\n            return {};\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}","import sf from \"./helpers/small_functions\";\r\nimport {zoom} from \"./helpers/zoom\";\r\nimport gui from \"./gui\";\r\n\r\nlet selected_cell = null;\r\n\r\nexport default class rearrangeManager extends gui{\r\n\r\n    tileMoveMode = false;\r\n\r\n    constructor(bmsObj) {\r\n        super();\r\n\r\n        this.bmsObj = bmsObj;\r\n\r\n        this.addEventListeners();\r\n    }\r\n\r\n    addEventListeners(){\r\n        this.table.addEventListener(\"click\", (e)=> {\r\n            this.tableEventListener(e.target);\r\n        });\r\n\r\n        sf.getId(\"capture-mode-table\").addEventListener(\"click\", (e)=> {\r\n            this.tableEventListener(e.target);\r\n        });\r\n\r\n\r\n        this.table.addEventListener('dblclick', (e) => {\r\n\r\n            let objToZoomOn = e.target;\r\n            // loop through all the subcomponents to only zoom on the target td, not for example the button\r\n            while(typeof objToZoomOn != \"undefined\" && !objToZoomOn.classList.contains(\"main-table-td-2row\")){\r\n                objToZoomOn = objToZoomOn.parentNode;\r\n            }\r\n            zoom.to({element: objToZoomOn, padding: 0, pan: false});\r\n\r\n            // hide settings since otherwise you can weirdly scroll into the settings\r\n            this.hideAllSettings();\r\n        })\r\n\r\n    }\r\n\r\n\r\n    toggleTileMoveMode(){\r\n        this.tileMoveMode = !this.tileMoveMode;\r\n\r\n        if(this.tileMoveMode){\r\n            this.tileBarInterfaceDropdown.classList.add(\"breathe-good\");\r\n            this.tileBarEditMode.classList.add(\"breathe-good\");\r\n        }else{\r\n            this.tileBarInterfaceDropdown.classList.remove(\"breathe-good\");\r\n            this.tileBarEditMode.classList.remove(\"breathe-good\");\r\n\r\n            if(selected_cell){\r\n                // same code as below to \"unselect\" the selected cell\r\n                if (this.bmsObj.isConnected()) {\r\n                    selected_cell.classList.remove(\"disabled\");\r\n                } else {\r\n                    selected_cell.classList.add(\"disabled\");\r\n\r\n                    // remove the disabled property from all children of the selected cell\r\n                    selected_cell.childNodes.forEach((child) => {\r\n                        if (child === this.inlineGaugeDiv) {\r\n                            selected_cell.classList.remove(\"disabled\");\r\n                        }\r\n                    });\r\n                }\r\n                selected_cell = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    tableEventListener(target){\r\n        if(this.tileMoveMode) {\r\n\r\n            let targetTd = target;\r\n            // loop through all the subcomponents to only zoom on the target td, not for example the button\r\n            while(typeof targetTd != \"undefined\" && !targetTd.classList.contains(\"main-table-td-2row\")){\r\n                targetTd = targetTd.parentNode;\r\n            }\r\n\r\n            // if there is no selected cell to swap the event target with, event target becomes the selected cell\r\n            if (selected_cell == null) {\r\n\r\n                selected_cell = targetTd;\r\n                // blur out the selected cell\r\n                selected_cell.classList.add(\"disabled\");\r\n\r\n            } else {\r\n\r\n                if (this.bmsObj.isConnected()) {\r\n                    selected_cell.classList.remove(\"disabled\");\r\n                } else {\r\n                    selected_cell.classList.add(\"disabled\");\r\n\r\n                    // remove the disabled property from all children of the selected cell\r\n                    selected_cell.childNodes.forEach((child) => {\r\n                        if (child === this.inlineGaugeDiv) {\r\n                            selected_cell.classList.remove(\"disabled\");\r\n                        }\r\n                    });\r\n                }\r\n\r\n                // actually do the swap\r\n                sf.swap(selected_cell, targetTd);\r\n\r\n                // reset the selected cell\r\n                selected_cell = null;\r\n\r\n            }\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n}","import sf from \"../helpers/small_functions\";\r\nimport gui_elements from \"../gui_elements\";\r\n\r\n\r\nexport default class serviceWorkerInit extends gui_elements{\r\n    constructor() {\r\n        super();\r\n\r\n        let windowLoaded = false;\r\n        window.onload = function () { windowLoaded = true; }\r\n\r\n\r\n        // get version number saved in serviceworker\r\n        navigator.serviceWorker.ready\r\n            // get access to serviceworker registration\r\n            .then( async (registration) => {\r\n                if (registration.active) {\r\n                    // wait until window is fully loaded for safety xD\r\n                    await sf.until(_ => windowLoaded);\r\n\r\n                    // only works because serviceworker is already active and has claimed the window client\r\n                    registration.active.postMessage('GET_VERSION');\r\n                }\r\n            });\r\n\r\n\r\n        // handle the response for the version number\r\n        navigator.serviceWorker.addEventListener(\"message\", (event) => {\r\n            if(event.data.msg === \"version\"){\r\n\r\n                // event.data.version is the cache name\r\n                // example: \"voltaic-interface-web-v3.93\"\r\n                const shortenedVersion = event.data.version.split(\"-v\")[1];\r\n\r\n                sf.setValueTexts(this.interfaceVersionFields, shortenedVersion);\r\n            }\r\n        });\r\n\r\n\r\n        // ui feedback for detected serviceworker update\r\n        function invokeServiceWorkerUpdateFlow(registration) {\r\n            // maybe do some nice banner, the popup is enough for now though\r\n            if(confirm(\"The deployment has a newer interface version. \" +\r\n                \"Would you like to update now?\" +\r\n                \"Note: to apply the update, after pressing ok, please close and reopen the app.\")){\r\n                if (registration.waiting) {\r\n                    // let waiting Service Worker know it should become active\r\n                    registration.waiting.postMessage('SKIP_WAITING');\r\n                }\r\n            }\r\n        }\r\n\r\n        // check if the browser supports serviceWorker at all\r\n        if ('serviceWorker' in navigator) {\r\n            // wait for the page to load\r\n            window.addEventListener('load', async () => {\r\n                // register the service worker from the file specified\r\n                const registration = await navigator.serviceWorker.register('serviceworker.js');\r\n\r\n                // ensure the case when the updatefound event was missed is also handled\r\n                // by re-invoking the prompt when there's a waiting Service Worker\r\n                if (registration.waiting) {\r\n                    invokeServiceWorkerUpdateFlow(registration);\r\n                }\r\n\r\n                // detect Service Worker update available and wait for it to become installed\r\n                registration.addEventListener('updatefound', () => {\r\n                    if (registration.installing) {\r\n                        // wait until the new Service worker is actually installed (ready to take over)\r\n                        registration.installing.addEventListener('statechange', () => {\r\n                            if (registration.waiting) {\r\n                                // if there's an existing controller (previous Service Worker), show the prompt\r\n                                if (navigator.serviceWorker.controller) {\r\n                                    invokeServiceWorkerUpdateFlow(registration)\r\n                                } else {\r\n                                    // otherwise it's the first install, nothing to do\r\n                                    console.log('Service Worker initialized for the first time');\r\n                                }\r\n                            }\r\n                        })\r\n                    }\r\n                })\r\n\r\n                let refreshing = false;\r\n\r\n                // detect controller change and refresh the page\r\n                navigator.serviceWorker.addEventListener('controllerchange', () => {\r\n                    if (!refreshing) {\r\n                        window.location.reload();\r\n                        refreshing = true;\r\n                    }\r\n                })\r\n            })\r\n        }\r\n    }\r\n}","import sf from \"../helpers/small_functions\";\r\nimport localConfigCalibManager from \"../helpers/configcalib_processing\";\r\nimport localConfigCalibGUI from \"../helpers/configcalib_processing\";\r\nimport {CharacteristicUnavailableError} from \"../ble/ble\";\r\n\r\n/* BMS Calib functions */\r\n\r\nexport default class bmsCalib extends localConfigCalibGUI{\r\n    inVolt1CorrectionVal;\r\n    inVolt2CorrectionVal;\r\n    inVolt3CorrectionVal;\r\n    outVoltCorrectionVal;\r\n\r\n    shunt1Val;\r\n    shunt2Val;\r\n    shunt3Val;\r\n\r\n    constructor(bmsObj){\r\n        super(bmsObj);\r\n\r\n        // add event listeners here since localConfigCalibGUI may be called when a standard calib device is connected\r\n\r\n        this.initialised = false;\r\n\r\n        this.bmsObj = bmsObj;\r\n    }\r\n\r\n    addEventListeners(){\r\n\r\n         this.addCalibGUIEventListeners();\r\n\r\n        // Calculate Button Event listeners\r\n        sf.getId(\"calculateInV1\").addEventListener(\"click\", () => {\r\n            this.inVolt1Correction.value = (this.inVolt1CorrectionVal * (parseFloat(this.inVolt1Actual.innerText) / parseFloat(this.inVolt1Target.value))).toFixed(0);\r\n        });\r\n        sf.getId(\"calculateInV2\").addEventListener(\"click\", () => {\r\n            this.inVolt2Correction.value = (this.inVolt2CorrectionVal * (parseFloat(this.inVolt2Actual.innerText) / parseFloat(this.inVolt2Target.value))).toFixed(0);\r\n        });\r\n        sf.getId(\"calculateInV3\").addEventListener(\"click\", () => {\r\n            this.inVolt3Correction.value = (this.inVolt3CorrectionVal * (parseFloat(this.inVolt3Actual.innerText) / parseFloat(this.inVolt3Target.value))).toFixed(0);\r\n        });\r\n        sf.getId(\"calculateOut\").addEventListener(\"click\", () => {\r\n            this.outVoltCorrection.value = (this.outVoltCorrectionVal * (parseFloat(this.outVoltActual.innerText) / parseFloat(this.outVoltTarget.value))).toFixed(0);\r\n        });\r\n        sf.getId(\"calculateShunt1\").addEventListener(\"click\", () => {\r\n            this.shunt1.value = (this.shunt1Val * (parseFloat(this.shunt1Actual.innerText) / parseFloat(this.shunt1Target.value))).toFixed(0);\r\n        });\r\n        sf.getId(\"calculateShunt2\").addEventListener(\"click\", () => {\r\n            this.shunt2.value = (this.shunt2Val * (parseFloat(this.shunt2Actual.innerText) / parseFloat(this.shunt2Target.value))).toFixed(0);\r\n        });\r\n        sf.getId(\"calculateShunt3\").addEventListener(\"click\", () => {\r\n            this.shunt3.value = (this.shunt3Val * (parseFloat(this.shunt3Actual.innerText) / parseFloat(this.shunt3Target.value))).toFixed(0);\r\n        });\r\n\r\n\r\n\r\n        sf.getId(\"board-calib-read\").addEventListener(\"click\", () => {\r\n            this.readBMSCalib((success, change)=>{\r\n                if(success){\r\n                    if(change){\r\n                        // indicate success on change\r\n                        this.indicateSuccess(500);\r\n                    }else{\r\n                        // warning on \"read successful but nothing changed\"\r\n                        this.indicateWarning(500);\r\n                    }\r\n                }else{\r\n                    this.indicateFailure();\r\n                }\r\n            });\r\n        });\r\n\r\n\r\n        sf.getId(\"board-calib-write\").addEventListener(\"click\", () => {\r\n            // getting GUI element data\r\n            this.readInGUIValues();\r\n\r\n            this.writeBMSCalib();\r\n        });\r\n\r\n\r\n    }\r\n\r\n\r\n    isStandardCalib(){\r\n        return (this.inVolt1CorrectionVal === 6000\r\n            &&  this.inVolt2CorrectionVal === 6000\r\n            &&  this.inVolt3CorrectionVal === 6000\r\n            &&  this.shunt1Val === 500\r\n            &&  this.shunt2Val === 500\r\n            &&  this.shunt3Val === 500)\r\n    }\r\n\r\n    indicateSuccess(duration) {\r\n        this.boardCalibTable.classList.add(\"success\");\r\n        setTimeout(() => {\r\n            this.boardCalibTable.classList.remove(\"success\");\r\n        }, duration);\r\n    }\r\n\r\n    indicateWarning(duration){\r\n        this.boardCalibTable.classList.add(\"warning\");\r\n        setTimeout(() => {\r\n            this.boardCalibTable.classList.remove(\"warning\");\r\n        }, duration);\r\n    }\r\n\r\n    indicateFailure() {\r\n        this.boardCalibTable.classList.add(\"fault\");\r\n        setTimeout(() => {\r\n            this.boardCalibTable.classList.remove(\"fault\");\r\n        }, 2000);\r\n    }\r\n\r\n    readInCalibObject(c){\r\n        this.inVolt1CorrectionVal = c.inVolt1Correction;\r\n        this.inVolt2CorrectionVal = c.inVolt2Correction;\r\n        this.inVolt3CorrectionVal = c.inVolt3Correction;\r\n        this.outVoltCorrectionVal = c.outVoltCorrection;\r\n        this.shunt1Val = c.shunt1;\r\n        this.shunt2Val = c.shunt2;\r\n        this.shunt3Val = c.shunt3;\r\n    }\r\n\r\n    getCalibObject(){\r\n        let calib = {};\r\n\r\n        calib.inVolt1Correction = this.inVolt1CorrectionVal;\r\n        calib.inVolt2Correction = this.inVolt2CorrectionVal;\r\n        calib.inVolt3Correction = this.inVolt3CorrectionVal;\r\n        calib.outVoltCorrection = this.outVoltCorrectionVal;\r\n        calib.shunt1 = this.shunt1Val;\r\n        calib.shunt2 = this.shunt2Val;\r\n        calib.shunt3 = this.shunt3Val;\r\n\r\n\r\n        return calib;\r\n    }\r\n\r\n    readInJSON(json){\r\n        // read as in past tense\r\n        let readInCalibObject;\r\n        try{\r\n            readInCalibObject =  JSON.parse(json);\r\n        }catch(e){\r\n            console.log(\"[bms calib] unable to read in JSON: \" + e);\r\n        }\r\n\r\n        if(typeof readInCalibObject === \"undefined\"){\r\n            return;\r\n        }\r\n\r\n        this.readInCalibObject(readInCalibObject);\r\n    }\r\n\r\n    getJSON(){\r\n        if(!this.initialised){\r\n            return;\r\n        }\r\n\r\n        return JSON.stringify(this.getCalibObject());\r\n    }\r\n\r\n    readInBuffer(buffer){\r\n        let bufferBefore = this.getBuffer();\r\n\r\n        this.inVolt1CorrectionVal = (buffer.getUint8(1) << 8) | buffer.getUint8(0);\r\n        this.inVolt2CorrectionVal = (buffer.getUint8(3) << 8) | buffer.getUint8(2);\r\n        this.inVolt3CorrectionVal = (buffer.getUint8(5) << 8) | buffer.getUint8(4);\r\n        this.outVoltCorrectionVal = (buffer.getUint8(7) << 8) | buffer.getUint8(6);\r\n\r\n        this.shunt1Val = (buffer.getUint8(9) << 8) | buffer.getUint8(8);\r\n        this.shunt2Val = (buffer.getUint8(11) << 8) | buffer.getUint8(10);\r\n        this.shunt3Val = (buffer.getUint8(13) << 8) | buffer.getUint8(12);\r\n\r\n\r\n        this.initialised = true;\r\n\r\n        // return if change has occurred\r\n        return !sf.arraysEqual(bufferBefore, this.getBuffer());\r\n    }\r\n\r\n    readInGUIValues(){\r\n        this.inVolt1CorrectionVal = parseInt(this.inVolt1Correction.value);\r\n        this.inVolt2CorrectionVal = parseInt(this.inVolt2Correction.value);\r\n        this.inVolt3CorrectionVal = parseInt(this.inVolt3Correction.value);\r\n\r\n        this.outVoltCorrectionVal = parseInt(this.outVoltCorrection.value);\r\n\r\n        this.shunt1Val = parseInt(this.shunt1.value);\r\n        this.shunt2Val = parseInt(this.shunt2.value);\r\n        this.shunt3Val = parseInt(this.shunt3.value);\r\n    }\r\n\r\n    setGUIValues(){\r\n        this.inVolt1Correction.value = this.inVolt1CorrectionVal;\r\n        this.inVolt2Correction.value = this.inVolt2CorrectionVal;\r\n        this.inVolt3Correction.value = this.inVolt3CorrectionVal;\r\n        this.outVoltCorrection.value = this.outVoltCorrectionVal;\r\n\r\n        this.shunt1.value = this.shunt1Val;\r\n        this.shunt2.value = this.shunt2Val;\r\n        this.shunt3.value = this.shunt3Val;\r\n    }\r\n\r\n    getBuffer(){\r\n        let buffer = [];\r\n\r\n        // voltage dividers\r\n        buffer[0] = sf.to16bit(this.inVolt1CorrectionVal)[0];\r\n        buffer[1] = sf.to16bit(this.inVolt1CorrectionVal)[1];\r\n\r\n        buffer[2] = sf.to16bit(this.inVolt2CorrectionVal)[0];\r\n        buffer[3] = sf.to16bit(this.inVolt2CorrectionVal)[1];\r\n\r\n        buffer[4] = sf.to16bit(this.inVolt3CorrectionVal)[0];\r\n        buffer[5] = sf.to16bit(this.inVolt3CorrectionVal)[1];\r\n\r\n        buffer[6] = sf.to16bit(this.outVoltCorrectionVal)[0];\r\n        buffer[7] = sf.to16bit(this.outVoltCorrectionVal)[1];\r\n\r\n        // shunts\r\n        buffer[8] = sf.to16bit(this.shunt1Val)[0];\r\n        buffer[9] = sf.to16bit(this.shunt1Val)[1];\r\n\r\n        buffer[10] = sf.to16bit(this.shunt2Val)[0];\r\n        buffer[11] = sf.to16bit(this.shunt2Val)[1];\r\n\r\n        buffer[12] = sf.to16bit(this.shunt3Val)[0];\r\n        buffer[13] = sf.to16bit(this.shunt3Val)[1];\r\n\r\n\r\n        return buffer;\r\n    }\r\n\r\n    updateActualData(data){\r\n        this.inVolt1Actual.innerHTML = data.u1;\r\n        this.inVolt2Actual.innerHTML = data.u2;\r\n        this.inVolt3Actual.innerHTML = data.u3;\r\n        this.shunt1Actual.innerHTML = data.i1;\r\n        this.shunt2Actual.innerHTML = data.i2;\r\n        this.shunt3Actual.innerHTML = data.i3;\r\n        this.outVoltActual.innerHTML = data.uOut;\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    readBMSCalib(cb){\r\n        this.bmsObj.characteristics.bmsCalibCharacteristic.readValue().then(calibValues => {\r\n\r\n            const originallyInitialised = this.initialised;\r\n\r\n            // first read in GUI Values so that there is actually a change when reading in the new Buffer\r\n            if(this.initialised){\r\n                this.readInGUIValues();\r\n            }\r\n            let changeOccurred = this.readInBuffer(calibValues);\r\n\r\n            // cheap way to not make it warn on the first read\r\n            if(!originallyInitialised){\r\n                changeOccurred = true;\r\n            }\r\n\r\n            this.setGUIValues();\r\n\r\n\r\n            // to make calib \"un-fuck-up-able\"\r\n            if(!this.isStandardCalib()){\r\n                this.addNewCalib(this, this.bmsObj);\r\n            }else{\r\n\r\n                // this is a problem when autostart is enabled!\r\n                // not the case in the default config tho, so probably alright\r\n                let localManager = new localConfigCalibManager(this.bmsObj);\r\n\r\n                let latestCalib = localManager.getLatestCalibForSerialNumber(this.bmsObj.serialNumber);\r\n\r\n                // only load backup and write it automatically if backup actually exists\r\n                if(typeof latestCalib !== \"undefined\"){\r\n                    this.readInCalibObject(latestCalib.calib);\r\n                    this.setGUIValues();\r\n\r\n                    this.writeBMSCalib();\r\n                }\r\n\r\n            }\r\n\r\n            this.fillInCalibBackupGUI();\r\n\r\n            cb(true, changeOccurred);\r\n        }).catch(()=>{\r\n            cb(false, false);\r\n        });\r\n    }\r\n\r\n\r\n    writeBMSCalib(){\r\n        // writing it to characteristic\r\n        this.bmsObj.characteristics.bmsCalibCharacteristic.writeValue(Uint8Array.from(this.getBuffer()).buffer).then(_ => {\r\n            console.log(\"[bmsCalib] successfully wrote calib\");\r\n\r\n            setTimeout(() => {\r\n                this.readBMSCalib((success)=>{\r\n                    if(success){\r\n                        // ignore change here since every successful write operation should give positive feedback\r\n                        // otherwise users will get annoyed\r\n                        this.indicateSuccess(3000);\r\n                    }else{\r\n                        this.indicateFailure();\r\n                    }\r\n                });\r\n            }, 200);\r\n        }).catch(error => {\r\n            this.indicateFailure();\r\n\r\n            // catch the \"characteristic no longer valid\" error\r\n            if(error instanceof DOMException && error.message.includes(\"no longer valid\")){\r\n                throw new CharacteristicUnavailableError();\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n}\r\n","import sf from \"../helpers/small_functions\";\r\nimport gui from \"../gui\";\r\nimport {CharacteristicUnavailableError} from \"../ble/ble\";\r\n\r\n// fucking finally,\r\n// let's start with class-based stuff\r\n\r\n\r\nexport default class bmsConfig extends gui{\r\n    battCellCount;\r\n    battNomCapacity;\r\n    protMaxCellVoltage;\r\n    protMinCellVoltage;\r\n    protMaxCurrent;\r\n    protMaxImbalanceCurrent;\r\n\r\n    protMaxLogicTemp;\r\n    protMaxPowerTemp;\r\n\r\n    prechargeCurrentLimit;\r\n    prechargeNomCapacity;\r\n\r\n    dataloggingUpdateInterval;\r\n\r\n    boardAutoStart;\r\n    boardPowerOffTime;\r\n\r\n    boardEnabledChannels;\r\n    boardUpdateCount;\r\n    protMaxReverseCurrent;\r\n\r\n    cellChemistry;\r\n    protSpikeSensitivity;\r\n\r\n\r\n    // these values are not part of the actual config, they are just calculated from the actual data\r\n    packOverVoltage;\r\n    packUnderVoltage;\r\n\r\n\r\n    bmsObj;\r\n\r\n    #bmsConfigObjBefore;\r\n\r\n    constructor(bmsObj, recursive = false){\r\n        super();\r\n        this.initialised = false;\r\n\r\n        this.bmsObj = bmsObj;\r\n\r\n        if(recursive){\r\n            this.#bmsConfigObjBefore = new bmsConfig(bmsObj);\r\n        }\r\n    }\r\n\r\n    addEventListeners(){\r\n        // gui element updates\r\n        [].forEach.call(document.getElementsByClassName(\"cell-field\"), (element) => {\r\n            element.addEventListener(\"input\", ()=>{\r\n                this.#calculatePackVoltages();\r\n            });\r\n        });\r\n        sf.getId(\"battery-cells\").addEventListener(\"input\", ()=>{\r\n            this.#calculatePackVoltages();\r\n        });\r\n\r\n        this.boardConfigBatterySelector.addEventListener(\"change\", ()=>{\r\n            this.#blurAppropriateVoltageFields();\r\n            this.#setStandardBatteryValues();\r\n        });\r\n\r\n        this.boardConfigTable.addEventListener(\"mousemove\", () => {\r\n            this.#checkBMSConfigPlausibility();\r\n        });\r\n        this.boardConfigTable.addEventListener(\"change\", () => {\r\n            this.#checkBMSConfigPlausibility();\r\n        });\r\n\r\n\r\n        sf.getId(\"board-config-read\").addEventListener(\"click\", () => {\r\n            this.readBMSConfig((success, change)=>{\r\n                if(success){\r\n                    if(change){\r\n                        // indicate success on change\r\n                        this.indicateSuccess(500);\r\n                    }else{\r\n                        // warning on \"read successful but nothing changed\"\r\n                        this.indicateWarning(500);\r\n                    }\r\n                }else{\r\n                    this.indicateFailure();\r\n                }\r\n            });\r\n        });\r\n\r\n\r\n\r\n        sf.getId(\"board-config-write\").addEventListener(\"click\", () => {\r\n            this.#bmsConfigObjBefore.readInGUIValues();\r\n            this.writeBoardConfig(0);\r\n        });\r\n\r\n    }\r\n\r\n    #getCellChemistry(){\r\n        const val = this.boardConfigBatterySelector.options[this.boardConfigBatterySelector.selectedIndex].value;\r\n\r\n        if(val === \"li-ion\")    return 1;\r\n        if(val === \"li-po\")     return 2;\r\n        if(val === \"li-fe-po\")  return 3;\r\n        if(val === \"custom-li\") return 4;\r\n        if(val === \"custom\")    return 0;\r\n    }\r\n    #setCellChemistry(value){\r\n        if(value === 0) this.boardConfigBatterySelector.value = \"custom\";\r\n        if(value === 1) this.boardConfigBatterySelector.value = \"li-ion\";\r\n        if(value === 2) this.boardConfigBatterySelector.value = \"li-po\";\r\n        if(value === 3) this.boardConfigBatterySelector.value = \"li-fe-po\";\r\n        if(value === 4) this.boardConfigBatterySelector.value = \"custom-li\";\r\n    }\r\n\r\n    #getCurrentSpikeSensitivity(){\r\n        let val = sf.getId(\"spike-sensitivity-select\").value;\r\n        if(val === \"0\") return 0; // low\r\n        if(val === \"1\") return 1; // normal\r\n        if(val === \"2\") return 2; // high\r\n\r\n        // default is normal\r\n        return 1;\r\n    }\r\n    #setCurrentSpikeSensitivity(value){\r\n        if(value === 0) sf.getId(\"spike-sensitivity-select\").value = \"0\";\r\n        if(value === 1) sf.getId(\"spike-sensitivity-select\").value = \"1\";\r\n        if(value === 2) sf.getId(\"spike-sensitivity-select\").value = \"2\";\r\n    }\r\n\r\n\r\n    #getEnabledChannelsByte() {\r\n        let byte = 0;\r\n        byte += sf.getIdChecked(\"enabled-channels-1\") * 1;\r\n        byte += sf.getIdChecked(\"enabled-channels-2\") * 2;\r\n        byte += sf.getIdChecked(\"enabled-channels-3\") * 4;\r\n        return byte;\r\n    }\r\n\r\n    #setEnabledChannelsByte(byte) {\r\n        sf.getId(\"enabled-channels-1\").checked = byte & 0b00000001;\r\n        sf.getId(\"enabled-channels-2\").checked = byte & 0b00000010;\r\n        sf.getId(\"enabled-channels-3\").checked = byte & 0b00000100;\r\n    }\r\n\r\n\r\n    indicateSuccess(duration){\r\n        this.boardConfigTable.classList.add(\"success\");\r\n        setTimeout(() => {\r\n            this.boardConfigTable.classList.remove(\"success\");\r\n        }, duration);\r\n    }\r\n\r\n    indicateWarning(duration){\r\n        this.boardConfigTable.classList.add(\"warning\");\r\n        setTimeout(() => {\r\n            this.boardConfigTable.classList.remove(\"warning\");\r\n        }, duration);\r\n    }\r\n\r\n    indicateFailure(){\r\n        this.boardConfigTable.classList.add(\"fault\");\r\n        setTimeout(() => {\r\n            this.boardConfigTable.classList.remove(\"fault\");\r\n        }, 2000);\r\n    }\r\n\r\n\r\n    readInGUIValues(){\r\n        this.initialised = true;\r\n\r\n        // guaranteed fields\r\n        this.battCellCount = sf.getIdValue(\"battery-cells\");\r\n        this.battNomCapacity = sf.getIdValue(\"battery-capacity\");\r\n\r\n        if(!this.fullyCustomChemistryOption.disabled){\r\n            this.cellChemistry = this.#getCellChemistry();\r\n        }\r\n\r\n        // if chemistry is set to completely custom\r\n        if(this.#getCellChemistry() === 0){\r\n            this.protMaxCellVoltage = sf.getIdValue(\"pack-overvoltage\") * 100;\r\n            this.protMinCellVoltage = sf.getIdValue(\"pack-undervoltage\") * 100;\r\n        }else{\r\n            this.protMaxCellVoltage = sf.getIdValue(\"max-cell-voltage\");\r\n            this.protMinCellVoltage = sf.getIdValue(\"min-cell-voltage\");\r\n        }\r\n\r\n        this.protMaxImbalanceCurrent = sf.getIdValue(\"strand-max-imbalance-current\") * 100;\r\n        this.protMaxCurrent = sf.getIdValue(\"strand-max-current\") * 100;\r\n        this.protMaxReverseCurrent = sf.getIdValue(\"strand-max-reverse-current\") * 100;\r\n\r\n        this.protMaxPowerTemp = sf.getIdValue(\"power-max-temp\");\r\n        this.protMaxLogicTemp = sf.getIdValue(\"logic-max-temp\");\r\n\r\n        this.prechargeCurrentLimit = 0;//getIdValue(\"precharge-current-limit\");\r\n        this.prechargeNomCapacity = sf.getIdValue(\"load-capacitance\");\r\n\r\n        this.dataloggingUpdateInterval = 1000/sf.getIdValue(\"datalogging-update-frequency\");\r\n\r\n        this.boardAutoStart = sf.getIdChecked(\"autostart\");\r\n        this.boardPowerOffTime = sf.getIdValue(\"bms-config-auto-power-off\");\r\n        this.boardEnabledChannels = this.#getEnabledChannelsByte();\r\n        this.boardUpdateCount = sf.getId(\"updatecount\").innerHTML;\r\n\r\n        // fields that might not be there dependent on the firmware version\r\n\r\n        if(!this.boardConfigSpikeSensitivitySelector.disabled){\r\n            this.protSpikeSensitivity = this.#getCurrentSpikeSensitivity();\r\n        }\r\n    }\r\n\r\n\r\n    readInBuffer(buffer){\r\n        let bufferBefore = this.getBuffer();\r\n\r\n        // ATTENTION: PARENTHESES FOR BIT SHIFTING ARE VERY IMPORTANT\r\n\r\n        // Battery stuff\r\n        this.battCellCount = buffer.getUint8(0);\r\n        this.battNomCapacity = ((buffer.getUint8(2) << 8) | buffer.getUint8(1)) * 100;\r\n        //Protection stuff\r\n        this.protMaxCellVoltage = (buffer.getUint8(4) << 8) | buffer.getUint8(3);\r\n        this.protMinCellVoltage = (buffer.getUint8(6) << 8) | buffer.getUint8(5);\r\n        this.protMaxCurrent = (buffer.getUint8(8) << 8) | buffer.getUint8(7);\r\n        this.protMaxImbalanceCurrent = (buffer.getUint8(10) << 8) | buffer.getUint8(9);\r\n        // Temperatures\r\n        this.protMaxLogicTemp = buffer.getUint8(11);\r\n        this.protMaxPowerTemp = buffer.getUint8(12);\r\n        // Precharge stuff\r\n        this.prechargeCurrentLimit = (buffer.getUint8(14) << 8) | buffer.getUint8(13);\r\n        this.prechargeNomCapacity = (buffer.getUint8(16) << 8) | buffer.getUint8(15);\r\n        // Data logging stuff\r\n        this.dataloggingUpdateInterval = (buffer.getUint8(18) << 8) | buffer.getUint8(17);\r\n        // Board stuff\r\n        this.boardAutoStart = buffer.getUint8(19);\r\n        this.boardPowerOffTime = (buffer.getUint8(21) << 8) | buffer.getUint8(20);\r\n        this.boardEnabledChannels = buffer.getUint8(22);\r\n        this.boardUpdateCount = (buffer.getUint8(24) << 8) | buffer.getUint8(23);\r\n        this.protMaxReverseCurrent = (buffer.getUint8(26) << 8) | buffer.getUint8(25);\r\n\r\n        // necessary for using old firmware\r\n        try {\r\n            this.protSpikeSensitivity = buffer.getUint8(27);\r\n        } catch (err) {\r\n            if (err.constructor === RangeError) {\r\n                console.log(\"[bms config] fw doesn't support proSpikeSensitivity\");\r\n            }\r\n        }\r\n        try {\r\n            this.cellChemistry = buffer.getUint8(28);\r\n        } catch (err) {\r\n            if (err.constructor === RangeError) {\r\n                console.log(\"[bms config] fw doesn't support cellChemistry\");\r\n            }\r\n        }\r\n\r\n\r\n        this.initialised = true;\r\n\r\n        // return if change has occurred\r\n        // remember, that the gui values need to be read in first for a change to even occur\r\n        return !sf.arraysEqual(bufferBefore, this.getBuffer());\r\n    }\r\n\r\n    #readInConfigObject(c){\r\n        this.battCellCount = c.battCellCount;\r\n        this.battNomCapacity = c.battNomCapacity;\r\n        this.protMaxCellVoltage = c.protMaxCellVoltage;\r\n        this.protMinCellVoltage = c.protMinCellVoltage;\r\n        this.protMaxCurrent = c.protMaxCurrent;\r\n        this.protMaxImbalanceCurrent = c.protMaxImbalanceCurrent;\r\n        this.protMaxLogicTemp = c.protMaxLogicTemp;\r\n        this.protMaxPowerTemp = c.protMaxPowerTemp;\r\n        this.prechargeCurrentLimit = c.prechargeCurrentLimit;\r\n        this.prechargeNomCapacity = c.prechargeNomCapacity;\r\n        this.dataloggingUpdateInterval = c.dataloggingUpdateInterval;\r\n        this.boardAutoStart = c.boardAutoStart;\r\n        this.boardPowerOffTime = c.boardPowerOffTime;\r\n        this.boardEnabledChannels = c.boardEnabledChannels;\r\n        this.boardUpdateCount = c.boardUpdateCount;\r\n        this.protMaxReverseCurrent = c.protMaxReverseCurrent;\r\n\r\n        // necessary for using old firmware\r\n        try {\r\n            this.protSpikeSensitivity = c.protSpikeSensitivity;\r\n        } catch (err) {\r\n            if (err.constructor === RangeError) {\r\n                console.log(\"[bms config] fw doesn't support proSpikeSensitivity\");\r\n            }\r\n        }\r\n        try {\r\n            this.cellChemistry = c.cellChemistry;\r\n        } catch (err) {\r\n            if (err.constructor === RangeError) {\r\n                console.log(\"[bms config] fw doesn't support cellChemistry\");\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    #getConfigObject(){\r\n        let conf = {};\r\n\r\n        conf.battCellCount = this.battCellCount;\r\n        conf.battNomCapacity = this.battNomCapacity;\r\n        conf.protMaxCellVoltage = this.protMaxCellVoltage;\r\n        conf.protMinCellVoltage = this.protMinCellVoltage;\r\n        conf.protMaxCurrent = this.protMaxCurrent;\r\n        conf.protMaxImbalanceCurrent = this.protMaxImbalanceCurrent;\r\n        conf.protMaxLogicTemp = this.protMaxLogicTemp;\r\n        conf.protMaxPowerTemp = this.protMaxPowerTemp;\r\n        conf.prechargeCurrentLimit = this.prechargeCurrentLimit;\r\n        conf.prechargeNomCapacity = this.prechargeNomCapacity;\r\n        conf.dataloggingUpdateInterval = this.dataloggingUpdateInterval;\r\n        conf.boardAutoStart = this.boardAutoStart;\r\n        conf.boardPowerOffTime = this.boardPowerOffTime;\r\n        conf.boardEnabledChannels = this.boardEnabledChannels;\r\n        conf.boardUpdateCount = this.boardUpdateCount;\r\n        conf.protMaxReverseCurrent = this.protMaxReverseCurrent;\r\n\r\n        // necessary for using old firmware\r\n        try {\r\n            conf.protSpikeSensitivity = this.protSpikeSensitivity;\r\n        } catch (err) {\r\n            if (err.constructor === RangeError) {\r\n                console.log(\"[bms config] fw doesn't support proSpikeSensitivity\");\r\n            }\r\n        }\r\n        try {\r\n            conf.cellChemistry = this.cellChemistry;\r\n        } catch (err) {\r\n            if (err.constructor === RangeError) {\r\n                console.log(\"[bms config] fw doesn't support cellChemistry\");\r\n            }\r\n        }\r\n\r\n        return conf;\r\n    }\r\n\r\n    readInJSON(json){\r\n        let readInConfigObject;\r\n        try{\r\n            readInConfigObject =  JSON.parse(json);\r\n        }catch(e){\r\n            console.log(\"[config] unable to read in JSON: \" + e);\r\n        }\r\n\r\n        if(typeof readInConfigObject === \"undefined\"){\r\n            return;\r\n        }\r\n\r\n        this.#readInConfigObject(readInConfigObject);\r\n    }\r\n\r\n    getJSON(){\r\n        if(!this.initialised){\r\n            return;\r\n        }\r\n\r\n        return JSON.stringify(this.#getConfigObject());\r\n    }\r\n\r\n    getBuffer(){\r\n        if(!this.initialised){\r\n            return;\r\n        }\r\n\r\n        let configValues = [];\r\n\r\n        //Battery stuff\r\n        configValues[0] = parseInt(this.battCellCount);\r\n\r\n        configValues[1] = sf.to16bit(Math.round(this.battNomCapacity / 100))[0];\r\n        configValues[2] = sf.to16bit(this.battNomCapacity / 100)[1];\r\n\r\n        //Protection\r\n        configValues[3] = sf.to16bit(this.protMaxCellVoltage)[0];\r\n        configValues[4] = sf.to16bit(this.protMaxCellVoltage)[1];\r\n\r\n        configValues[5] = sf.to16bit(this.protMinCellVoltage)[0];\r\n        configValues[6] = sf.to16bit(this.protMinCellVoltage)[1];\r\n\r\n        configValues[7] = sf.to16bit(this.protMaxCurrent)[0];\r\n        configValues[8] = sf.to16bit(this.protMaxCurrent)[1];\r\n\r\n        configValues[9] = sf.to16bit(this.protMaxImbalanceCurrent)[0];\r\n        configValues[10] = sf.to16bit(this.protMaxImbalanceCurrent)[1];\r\n\r\n        configValues[11] = parseInt(this.protMaxLogicTemp);\r\n\r\n        configValues[12] = parseInt(this.protMaxPowerTemp);\r\n\r\n        //Precharge\r\n        configValues[13] = sf.to16bit(this.prechargeCurrentLimit)[0];\r\n        configValues[14] = sf.to16bit(this.prechargeCurrentLimit)[1];\r\n\r\n        configValues[15] = sf.to16bit(this.prechargeNomCapacity)[0];\r\n        configValues[16] = sf.to16bit(this.prechargeNomCapacity)[1];\r\n\r\n        //Data logging\r\n        configValues[17] = sf.to16bit(this.dataloggingUpdateInterval)[0];\r\n        configValues[18] = sf.to16bit(this.dataloggingUpdateInterval)[1];\r\n\r\n        //Board\r\n        configValues[19] = ((this.boardAutoStart) ? 1 : 0);\r\n\r\n        configValues[20] = sf.to16bit(this.boardPowerOffTime)[0];\r\n        configValues[21] = sf.to16bit(this.boardPowerOffTime)[1];\r\n\r\n        configValues[22] = parseInt(this.boardEnabledChannels);\r\n\r\n        configValues[23] = sf.to16bit(this.boardUpdateCount)[0];\r\n        configValues[24] = sf.to16bit(this.boardUpdateCount)[1];\r\n\r\n        configValues[25] = sf.to16bit(this.protMaxReverseCurrent)[0];\r\n        configValues[26] = sf.to16bit(this.protMaxReverseCurrent)[1];\r\n\r\n        try {\r\n            if(typeof this.protSpikeSensitivity === \"undefined\" || isNaN(this.protSpikeSensitivity)){\r\n                console.log(\"firmware doesn't support protSpikeSensitivity\");\r\n            }else{\r\n                configValues[27] = parseInt(this.protSpikeSensitivity);\r\n            }\r\n        }catch (e) {\r\n            console.log(\"firmware doesn't support protSpikeSensitivity\");\r\n        }\r\n\r\n        try {\r\n            if(typeof this.cellChemistry === \"undefined\" || isNaN(this.cellChemistry)){\r\n                console.log(\"firmware doesn't support cellChemistry\");\r\n            }else{\r\n                configValues[28] = parseInt(this.cellChemistry);\r\n            }\r\n        }catch (e) {\r\n            console.log(\"[bms config] firmware doesn't support cellChemistry\");\r\n        }\r\n\r\n        return configValues;\r\n    }\r\n\r\n    setGUIValues(){\r\n        if(!this.initialised){\r\n            return;\r\n        }\r\n\r\n        sf.getId(\"battery-cells\").value = this.battCellCount;\r\n        sf.getId(\"battery-capacity\").value = this.battNomCapacity;\r\n\r\n\r\n        if(typeof this.cellChemistry !== 'undefined') {\r\n            this.#setCellChemistry(this.cellChemistry);\r\n            this.#blurAppropriateVoltageFields();\r\n\r\n            // 0 is cell chemistry fully custom\r\n            // this then ignores the amount of cells\r\n            if(this.cellChemistry === 0){\r\n                this.packOverVoltage = this.protMaxCellVoltage / 100;\r\n                this.packUnderVoltage = this.protMinCellVoltage / 100;\r\n\r\n            }else{\r\n\r\n                sf.getId(\"max-cell-voltage\").value = this.protMaxCellVoltage;\r\n                sf.getId(\"min-cell-voltage\").value = this.protMinCellVoltage;\r\n\r\n                this.packOverVoltage = this.protMaxCellVoltage * this.battCellCount / 1000;\r\n                this.packUnderVoltage = this.protMinCellVoltage * this.battCellCount / 1000;\r\n            }\r\n        }else{\r\n            this.fullyCustomChemistryOption.disabled = true;\r\n\r\n            sf.getId(\"max-cell-voltage\").value = this.protMaxCellVoltage;\r\n            sf.getId(\"min-cell-voltage\").value = this.protMinCellVoltage;\r\n\r\n            this.packOverVoltage = this.protMaxCellVoltage * this.battCellCount / 1000;\r\n            this.packUnderVoltage = this.protMinCellVoltage * this.battCellCount / 1000;\r\n        }\r\n\r\n\r\n        sf.getId(\"pack-overvoltage\").value = this.packOverVoltage;\r\n        sf.getId(\"pack-undervoltage\").value = this.packUnderVoltage;\r\n\r\n\r\n        sf.getId(\"strand-max-current\").value = this.protMaxCurrent / 100;\r\n        sf.getId(\"strand-max-reverse-current\").value = this.protMaxReverseCurrent / 100;\r\n        sf.getId(\"strand-max-imbalance-current\").value = this.protMaxImbalanceCurrent / 100;\r\n\r\n        if(typeof this.protSpikeSensitivity !== 'undefined') {\r\n            this.boardConfigSpikeSensitivitySelector.disabled = false;\r\n\r\n            this.#setCurrentSpikeSensitivity(this.protSpikeSensitivity);\r\n        }else{\r\n            this.boardConfigSpikeSensitivitySelector.disabled = true;\r\n        }\r\n\r\n        sf.getId(\"datalogging-update-frequency\").value = 1000/this.dataloggingUpdateInterval;\r\n\r\n        sf.getId(\"logic-max-temp\").value = this.protMaxLogicTemp;\r\n        sf.getId(\"power-max-temp\").value = this.protMaxPowerTemp;\r\n\r\n        //getId(\"precharge-current-limit\").value = config.prechargeCurrentLimit;\r\n\r\n        sf.getId(\"load-capacitance\").value = this.prechargeNomCapacity;\r\n        sf.getId(\"autostart\").checked = this.boardAutoStart;\r\n        sf.getId(\"bms-config-auto-power-off\").value = this.boardPowerOffTime;\r\n        this.#setEnabledChannelsByte(this.boardEnabledChannels);\r\n        sf.getId(\"updatecount\").innerHTML = this.boardUpdateCount;\r\n    }\r\n\r\n\r\n\r\n    //MAX VALUES\r\n    #checkBMSConfigPlausibility() {\r\n        sf.setValueBackToBoundaries(\"battery-cells\", 4, 30);\r\n        sf.setValueBackToBoundaries(\"battery-capacity\", 0, 10000000);\r\n\r\n        sf.setValueBackToBoundaries(\"max-cell-voltage\", 100, 6000);\r\n        sf.setValueBackToBoundaries(\"min-cell-voltage\", 100, 6000);\r\n        sf.setValueBackToBoundaries(\"strand-max-imbalance-current\", 0, 100);\r\n\r\n        const shunt1 = this.bmsObj.bmsCalibObj.shunt1;\r\n        const shunt2 = this.bmsObj.bmsCalibObj.shunt2;\r\n        const shunt3 = this.bmsObj.bmsCalibObj.shunt3;\r\n\r\n        //todo: make this dependant on the bms topology!!\r\n\r\n        // take the largest configuration shunt value as the voltage at the current measurement can't be above 100mV\r\n        // for any of the shunts (at max current)\r\n        const maxShuntValue = Math.max(shunt1, shunt2, shunt3); // in uR\r\n        // 100000V / 1uR = 0.1V / 1R = A\r\n        const maxConfigurationCurrent = (100000 / maxShuntValue) - 1;\r\n\r\n        sf.setValueBackToBoundaries(\"strand-max-current\", 1, maxConfigurationCurrent);\r\n        sf.setValueBackToBoundaries(\"strand-max-reverse-current\", 1, maxConfigurationCurrent);\r\n\r\n        sf.setValueBackToBoundaries(\"power-max-temp\", 0, 90);\r\n        sf.setValueBackToBoundaries(\"logic-max-temp\", 0, 90);\r\n\r\n        //setValueBackToBoundaries(\"precharge-current-limit\", 1, 50);\r\n        //setValueBackToBoundaries(\"load-capacitance\", 1, 100000);\r\n\r\n        sf.setValueBackToBoundaries(\"datalogging-update-frequency\", 1, 120);\r\n        sf.setValueBackToBoundaries(\"bms-config-auto-power-off\", 0, 65534);\r\n    }\r\n\r\n\r\n    #blurAppropriateVoltageFields(){\r\n        const val = this.boardConfigBatterySelector.options[this.boardConfigBatterySelector.selectedIndex].value;\r\n\r\n        if(val === \"li-ion\" || val === \"li-po\" || val === \"li-fe-po\"){\r\n            let toBeBlurred = document.getElementsByClassName(\"pack-field\");\r\n            for (let i = 0; i < toBeBlurred.length; i++) {\r\n                toBeBlurred[i].style.opacity = \"0.5\";\r\n                toBeBlurred[i].style.pointerEvents = \"none\";\r\n            }\r\n            toBeBlurred = document.getElementsByClassName(\"battery-field\");\r\n            for (let i = 0; i < toBeBlurred.length; i++) {\r\n                toBeBlurred[i].style.opacity = \"1\";\r\n                toBeBlurred[i].style.pointerEvents = \"\";\r\n            }\r\n            toBeBlurred = document.getElementsByClassName(\"cell-field\");\r\n            for (let i = 0; i < toBeBlurred.length; i++) {\r\n                toBeBlurred[i].style.opacity = \"0.5\";\r\n                toBeBlurred[i].style.pointerEvents = \"none\";\r\n            }\r\n            return;\r\n        }else{\r\n            let toBeBlurred = document.getElementsByClassName(\"pack-field\");\r\n            for (let i = 0; i < toBeBlurred.length; i++) {\r\n                toBeBlurred[i].style.opacity = \"1\";\r\n                toBeBlurred[i].style.pointerEvents = \"\";\r\n            }\r\n            toBeBlurred = document.getElementsByClassName(\"battery-field\");\r\n            for (let i = 0; i < toBeBlurred.length; i++) {\r\n                toBeBlurred[i].style.opacity = \"0.5\";\r\n                toBeBlurred[i].style.pointerEvents = \"none\";\r\n            }\r\n            toBeBlurred = document.getElementsByClassName(\"cell-field\");\r\n            for (let i = 0; i < toBeBlurred.length; i++) {\r\n                toBeBlurred[i].style.opacity = \"1\";\r\n                toBeBlurred[i].style.pointerEvents = \"\";\r\n            }\r\n        }\r\n\r\n        if(val === \"custom-li\"){\r\n            let toBeBlurred = document.getElementsByClassName(\"battery-field\");\r\n            for (let i = 0; i < toBeBlurred.length; i++) {\r\n                toBeBlurred[i].style.opacity = \"1\";\r\n                toBeBlurred[i].style.pointerEvents = \"\";\r\n            }\r\n            toBeBlurred = document.getElementsByClassName(\"pack-field\");\r\n            for (let i = 0; i < toBeBlurred.length; i++) {\r\n                toBeBlurred[i].style.opacity = \"0.5\";\r\n                toBeBlurred[i].style.pointerEvents = \"none\";\r\n            }\r\n            return;\r\n        }else{\r\n            let toBeBlurred = document.getElementsByClassName(\"battery-field\");\r\n            for (let i = 0; i < toBeBlurred.length; i++) {\r\n                toBeBlurred[i].style.opacity = \"1\";\r\n                toBeBlurred[i].style.pointerEvents = \"\";\r\n            }\r\n            toBeBlurred = document.getElementsByClassName(\"pack-field\");\r\n            for (let i = 0; i < toBeBlurred.length; i++) {\r\n                toBeBlurred[i].style.opacity = \"1\";\r\n                toBeBlurred[i].style.pointerEvents = \"\";\r\n            }\r\n        }\r\n\r\n\r\n        if(val === \"custom\"){\r\n            let toBeBlurred = document.getElementsByClassName(\"battery-field\");\r\n            for (let i = 0; i < toBeBlurred.length; i++) {\r\n                toBeBlurred[i].style.opacity = \"0.5\";\r\n                toBeBlurred[i].style.pointerEvents = \"none\";\r\n            }\r\n        }else{\r\n            let toBeBlurred = document.getElementsByClassName(\"battery-field\");\r\n            for (let i = 0; i < toBeBlurred.length; i++) {\r\n                toBeBlurred[i].style.opacity = \"1\";\r\n                toBeBlurred[i].style.pointerEvents = \"\";\r\n            }\r\n        }\r\n    }\r\n\r\n    //STANDART BATTERY CELL VALUES\r\n    #setStandardBatteryValues(){\r\n        let val = this.boardConfigBatterySelector.options[this.boardConfigBatterySelector.selectedIndex].value;\r\n\r\n        if(val === \"li-ion\"){\r\n            sf.getId(\"max-cell-voltage\").value = \"4250\";\r\n            sf.getId(\"min-cell-voltage\").value = \"2600\";\r\n\r\n            this.#calculatePackVoltages();\r\n            return;\r\n        }\r\n        if(val === \"li-po\"){\r\n            sf.getId(\"max-cell-voltage\").value = \"4250\";\r\n            sf.getId(\"min-cell-voltage\").value = \"2500\";\r\n\r\n            this.#calculatePackVoltages();\r\n            return;\r\n        }\r\n        if(val === \"li-fe-po\"){\r\n            sf.getId(\"max-cell-voltage\").value = \"3500\";\r\n            sf.getId(\"min-cell-voltage\").value = \"2400\";\r\n\r\n            this.#calculatePackVoltages();\r\n        }\r\n    }\r\n\r\n    #calculatePackVoltages(){\r\n        sf.getId(\"pack-overvoltage\").value = parseFloat(sf.getId(\"battery-cells\").value) *\r\n            parseFloat(sf.getId(\"max-cell-voltage\").value) / 1000;\r\n        sf.getId(\"pack-undervoltage\").value = parseFloat(sf.getId(\"battery-cells\").value) *\r\n            parseFloat(sf.getId(\"min-cell-voltage\").value) / 1000;\r\n    }\r\n\r\n\r\n    readBMSConfig(cb){\r\n        this.bmsObj.characteristics.bmsConfigCharacteristic.readValue().then(configValues => {\r\n\r\n            // first read in GUI Values so that there is actually a change when reading in the new Buffer\r\n            if(this.initialised){\r\n                this.readInGUIValues();\r\n            }\r\n            let changeOccurred = this.readInBuffer(configValues);\r\n\r\n            // cheap way to not make it warn on the first read\r\n            if(!this.initialised){\r\n                changeOccurred = true;\r\n            }\r\n\r\n            this.setGUIValues();\r\n\r\n            this.updateConfigRelatedGauges(this);\r\n            cb(true, changeOccurred);\r\n        }).catch((error)=>{\r\n            cb(false, false);\r\n        });\r\n    }\r\n\r\n\r\n    writeBoardConfig(counter){\r\n\r\n        // check if stateMachineState is in either \"ready\" or \"fault\", otherwise write gets aborted.\r\n        if(typeof this.bmsObj === \"undefined\"){\r\n            if(!(this.bmsObj.bmsDataProcessor.stateMachineState === 2\r\n                || this.bmsObj.bmsDataProcessor.stateMachineState.stateMachineState === 4)){\r\n                this.indicateFailure();\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (counter >= 10){\r\n            //alert(\"Failed to clear alerts: \" + error);\r\n            this.indicateFailure();\r\n\r\n            throw new CharacteristicUnavailableError();\r\n        }\r\n\r\n        this.bmsObj.pauseDataLogging().then();\r\n\r\n        // writing config characteristic\r\n        this.readInGUIValues();\r\n\r\n        this.bmsObj.characteristics.bmsConfigCharacteristic.writeValue(Uint8Array.from(this.getBuffer()).buffer).then(_ => {\r\n\r\n            if(sf.getIdValue(\"board-config-device-name\") !== this.bmsObj.name && typeof this.bmsObj.name !== \"undefined\"){\r\n                let encoder = new TextEncoder();\r\n                this.bmsObj.characteristics.bmsDeviceNameCharacteristic.writeValue(encoder.encode(sf.getIdValue(\"board-config-device-name\")).buffer).then(_ => {\r\n\r\n                    this.indicateSuccess(3000);\r\n\r\n                    console.log(\"successfully wrote config & updated name\");\r\n\r\n                    setTimeout(() => {\r\n                        this.readBMSConfig(async (success, change)=>{\r\n                            if(success){\r\n                                await this.bmsObj.getDeviceName();\r\n\r\n                                this.updateBMSNameFields(this.bmsObj.name);\r\n\r\n                                // there's always change in the update count\r\n                                // warning if update count doesn't change - would indicate firmware malfunction\r\n                                if (change) {\r\n                                    this.indicateSuccess(3000);\r\n                                } else {\r\n                                    // warning on \"read successful but nothing changed\"\r\n                                    this.indicateWarning(2000);\r\n                                }\r\n\r\n                                // as the last step - re-enables data logging\r\n                                this.bmsObj.dataLoggingCharacteristic.startNotifications().then();\r\n\r\n\r\n                                // recalculate SOC if cell number change is written to settings\r\n                                if (this.#bmsConfigObjBefore.battCellCount !== this.battCellCount) {\r\n                                    /*\r\n                                    remainingEnergy1 = 0;\r\n                                    remainingEnergy2 = 0;\r\n                                    remainingEnergy3 = 0;\r\n                                     */\r\n                                }\r\n                            }else{\r\n                                this.indicateFailure();\r\n                            }\r\n\r\n\r\n\r\n                            // as the last step - re-enable data logging\r\n                            this.bmsObj.unPauseDataLogging().then();\r\n\r\n                            // recalculate SOC if cell number change is written to settings\r\n                            if(this.#bmsConfigObjBefore.battCellCount !== this.battCellCount){\r\n                                /*\r\n                                remainingEnergy1 = 0;\r\n                                remainingEnergy2 = 0;\r\n                                remainingEnergy3 = 0;\r\n                                 */\r\n                            }\r\n                        });\r\n\r\n                    }, 200);\r\n                }).catch(e => {\r\n                    console.log(e);\r\n\r\n                    this.indicateFailure();\r\n                });\r\n            }else{\r\n                console.log(\"successfully wrote config\");\r\n                this.readBMSConfig((success, change)=>{\r\n                    if(success){\r\n                        if(change){\r\n                            // indicate success on change\r\n                            this.indicateSuccess(3000);\r\n                        }else{\r\n                            // warning on \"read successful but nothing changed\"\r\n                            this.indicateWarning(2000);\r\n                        }\r\n                    }else{\r\n                        this.indicateFailure();\r\n                    }\r\n\r\n                    // as the last step - re-enables data logging\r\n                    this.bmsObj.unPauseDataLogging().then();\r\n\r\n                    // recalculate SOC if cell number change is written to settings\r\n                    if(this.#bmsConfigObjBefore.battCellCount !== this.battCellCount){\r\n                        /*\r\n                        remainingEnergy1 = 0;\r\n                        remainingEnergy2 = 0;\r\n                        remainingEnergy3 = 0;\r\n                         */\r\n                    }\r\n                });\r\n\r\n            }\r\n        }).catch(error => {\r\n            setTimeout( ()=>{\r\n                // recursion for up to 10 tries\r\n                this.writeBoardConfig(counter + 1);\r\n            }, 100);\r\n        });\r\n    }\r\n\r\n\r\n\r\n\r\n}","import gui_elements from \"../gui_elements\";\r\nimport sf from \"../helpers/small_functions\";\r\n\r\nexport default class deviceInfoManager extends gui_elements{\r\n\r\n    chooser;\r\n\r\n    devicesInfo;\r\n\r\n    chosenDevice;\r\n\r\n    #blocked = false;\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.devicesInfo = new devicesInfos();\r\n\r\n        // if there is more than one instance, everything is fucked anyway\r\n        this.chooser = document.getElementsByClassName(\"device-info-device-chooser\")[0];\r\n\r\n        this.addEventListeners();\r\n    }\r\n\r\n\r\n\r\n    addEventListeners(){\r\n\r\n        if(this.#blocked){\r\n            return;\r\n        }\r\n\r\n        let options = this.#getDeviceOptions();\r\n\r\n        this.chooser.addEventListener(\"click\", (event)=>{\r\n\r\n            options.forEach((option) => {\r\n\r\n                // there are \"text\" nodes in between the actual h2 nodes, which for our purpose need to be ignored\r\n                if(typeof option.classList !== \"undefined\"){\r\n                    option.classList.add(\"device-info-device-not-chosen\");\r\n                }else{\r\n                    return;\r\n                }\r\n\r\n                if(option.isSameNode(event.target)){\r\n\r\n                    option.classList.remove(\"device-info-device-not-chosen\");\r\n\r\n                    this.chosenDevice = event.target.innerHTML.toLowerCase();\r\n                }\r\n            });\r\n\r\n            this.#updateGUIFields(this.devicesInfo.getDeviceInfo(this.chosenDevice));\r\n\r\n        });\r\n\r\n    }\r\n\r\n    #updateGUIFields(deviceInfo){\r\n        sf.setValueTexts(this.deviceModelFields, deviceInfo.modelNumber);\r\n        sf.setValueTexts(this.deviceHardwareRevisionFields, deviceInfo.hardwareRevision);\r\n        sf.setValueTexts(this.deviceFirmwareRevisionFields, deviceInfo.firmwareRevision);\r\n        sf.setValueTexts(this.deviceSerialNumberFields, deviceInfo.serialNumber);\r\n\r\n        if(deviceInfo.serialNumber === \"not supported\"){\r\n            sf.classListValueTextsAdd(this.deviceSerialNumberFields, \"fault\");\r\n        }\r\n\r\n        if(deviceInfo.modelNumber === \"not supported\"){\r\n            sf.classListValueTextsAdd(this.deviceModelFields, \"fault\");\r\n        }\r\n    }\r\n\r\n    #getDeviceOptions(){\r\n        let deviceOptions = [];\r\n\r\n        this.chooser.childNodes.forEach((childNode) => {\r\n            deviceOptions.push(childNode);\r\n        });\r\n\r\n        return deviceOptions;\r\n    }\r\n\r\n\r\n    blockChooser(){\r\n        this.#blocked = true;\r\n    }\r\n    unblockChooser(){\r\n        this.#blocked = false;\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport class devicesInfos{\r\n\r\n    deviceInfos = {};\r\n    constructor(){\r\n    }\r\n\r\n    getDeviceInfo(deviceType){\r\n        let info = {\r\n            modelNumber: \"not connected\",\r\n            hardwareRevision: \"not connected\",\r\n            firmwareRevision: \"not connected\",\r\n            serialNumber: \"not connected\"\r\n        };\r\n\r\n        if(Object.keys(this.deviceInfos).includes(deviceType.toLowerCase())){\r\n            info = this.deviceInfos[deviceType.toLowerCase()];\r\n        }\r\n\r\n        return info;\r\n    }\r\n\r\n    updateDeviceInfo(deviceType, deviceInfo){\r\n        this.deviceInfos[deviceType.toLowerCase()] = deviceInfo;\r\n    }\r\n}","// this file is supposed to serve as a parent class for both guis that need to handle imported files\r\n// - the dbc manager gui and the plugin gui\r\n\r\nimport sf from \"../helpers/small_functions\";\r\nimport fileObject from \"../helpers/fileObject\";\r\n\r\nexport default class importedFileManager{\r\n\r\n    guiTable;\r\n    guiImportButton;\r\n\r\n    fileNames = {};\r\n\r\n    constructor(usage, fileType){\r\n        this.usage = usage;\r\n        this.fileType = fileType;\r\n    }\r\n\r\n    setFileListUpdatedCallback(cb){\r\n        if(typeof cb === \"function\"){\r\n            this.fileListUpdatedCallback = cb;\r\n        }else{\r\n            console.warn(\"[imported Files Manager] passed callback parameter is not a function!\");\r\n        }\r\n    }\r\n\r\n    setGUI(guiTable, guiImportButton){\r\n        this.guiTable = guiTable;\r\n        this.guiImportButton = guiImportButton;\r\n\r\n        this.guiImportButton.addEventListener(\"click\", async () => {\r\n\r\n            let fileObj = await new fileObject(this.fileType);\r\n            await this.saveFileToLocalStorage(fileObj);\r\n\r\n            // afterwards, update the gui!\r\n            this.fillGUIWithFileList();\r\n\r\n            // and finally, call the callback which processes the entire file list depending on the file type\r\n            // (for dbc, all dbc files will be read in, for plugins, the plugins will be loaded)\r\n            this.callFileListUpdatedCallback();\r\n        });\r\n    }\r\n\r\n    async saveFileToLocalStorage(fileObj){\r\n        let newFileNamesEntry = {};\r\n\r\n        this.fileNames = this.getFileNamesFromLocalStorage();\r\n        let storageLocationsList = this.fileNames\r\n            .map(x => x.storageLocation);\r\n\r\n        let newStorageLocation = sf.random10Digit();\r\n\r\n        // make sure there are no doubles under any circumstances\r\n        while (storageLocationsList.includes(newStorageLocation)){\r\n            newStorageLocation = sf.random10Digit();\r\n        }\r\n\r\n        newFileNamesEntry.storageLocation = newStorageLocation;\r\n        newFileNamesEntry.metadata = fileObj.metadata;\r\n\r\n        // get the file contents to write them to local storage\r\n        let file = await fileObj.readFile();\r\n        let fileContent = await file.text();\r\n\r\n        // to make sure and to make webstorm happy\r\n        if(typeof fileContent === \"string\"){\r\n\r\n            // write to localstorage\r\n            localStorage.setItem(\"importedFilesList-\" + this.usage + \"-\" + newStorageLocation, fileContent);\r\n\r\n            // also write index to localstorage\r\n            this.addFileEntryToFileNames(newFileNamesEntry);\r\n        }\r\n    }\r\n\r\n    removeFileFromLocalStorage(storageLocation){\r\n        const loc = \"importedFilesList-\" + this.usage + \"-\" + storageLocation;\r\n        // only remove if it's not yet known\r\n        if(localStorage.getItem(loc) !== null){\r\n            localStorage.removeItem(loc);\r\n        }\r\n\r\n        this.removeFileEntryFromFileNames(storageLocation);\r\n    }\r\n\r\n    fillGUIWithFileList(){\r\n        // get the inner HTML of all the headers\r\n        let headerContents = [].slice.call(this.guiTable.getElementsByTagName(\"th\")) // get all \"th\" in an array\r\n            .map(x => x.getElementsByTagName(\"p\")[0].innerHTML); // get their respective p tag's innerHTML\r\n\r\n        let files = this.getFileNamesFromLocalStorage();\r\n\r\n        // clear out the old rows of the table\r\n        [].slice.call(this.guiTable.getElementsByTagName(\"tr\")).forEach((child) => {\r\n            if(child.childNodes.length > 0 && typeof child.childNodes[0].tagName !== \"undefined\"){\r\n                if(child.childNodes[0].tagName.toLowerCase() === \"td\"){\r\n                    this.guiTable.removeChild(child);\r\n                }\r\n            }\r\n        });\r\n\r\n        // sequentially fill the table\r\n        for (const fileElement of files) {\r\n            let tr = document.createElement(\"tr\");\r\n\r\n            tr.id = fileElement.storageLocation;\r\n\r\n\r\n            // this callback is used for the actions of the single files\r\n            tr.addEventListener(\"click\", (event) => {\r\n                let target = event.target;\r\n\r\n                // ignore the click if it wasn't a td\r\n                if(target.tagName.toLowerCase() !== \"td\"){\r\n                    return;\r\n                }\r\n\r\n                // DELETE FILE CALLBACK\r\n                if(typeof target.id !== \"undefined\" && target.id === \"delete-element-td\"){\r\n                    let parent = target.parentNode;\r\n\r\n                    if(typeof parent.id !== \"undefined\" && parent.id !== null){\r\n                        // remove the selected file\r\n                        this.removeFileFromLocalStorage(parent.id);\r\n\r\n                        // and update the table\r\n                        this.fillGUIWithFileList();\r\n\r\n                        // and finally, call the callback which processes the entire file list depending on the file type\r\n                        // (for dbc, all dbc files will be read in, for plugins, the plugins will be loaded)\r\n                        this.callFileListUpdatedCallback();\r\n                    }\r\n                }\r\n            });\r\n\r\n            headerContents.forEach((el) => {\r\n\r\n                let td = document.createElement(\"td\");\r\n\r\n                switch (el) {\r\n\r\n                    case \"File Name\":\r\n                        td.innerHTML = fileElement.metadata.name;\r\n\r\n                        break;\r\n\r\n                    case \"Size\":\r\n                        td.innerHTML = fileElement.metadata.size;\r\n\r\n                        break;\r\n\r\n                    case \"Actions\":\r\n\r\n                        // delete action\r\n                        // the event listener for this is hooked onto the tr element\r\n                        td.innerHTML = \"🗑️\";\r\n                        td.id = \"delete-element-td\";\r\n\r\n\r\n                        // todo: implement the \"details\" action\r\n\r\n                        break;\r\n\r\n                }\r\n\r\n                tr.appendChild(td);\r\n            });\r\n\r\n            this.guiTable.appendChild(tr);\r\n        }\r\n    }\r\n\r\n    getFileContentsFromLocalStorage(storageLocation){\r\n        return localStorage.getItem(\"importedFilesList-\" + this.usage + \"-\" + storageLocation);\r\n    }\r\n\r\n    getAllFilesFromLocalStorage(){\r\n        let fileNames = this.getFileNamesFromLocalStorage();\r\n\r\n        let files = [];\r\n\r\n        fileNames.forEach((element) => {\r\n            let entry = element;\r\n            entry.fileContent = this.getFileContentsFromLocalStorage(element.storageLocation);\r\n            files.push(entry);\r\n        });\r\n\r\n        return files;\r\n    }\r\n\r\n\r\n    // attention, the usage cannot be the same for multiple inheritors of this class\r\n    getFileNamesFromLocalStorage(){\r\n        // write the defaults if there is nothing set, or it should be reset\r\n        if(localStorage.getItem(\"importedFilesList-\" + this.usage) === null\r\n            || localStorage.getItem(\"importedFilesList-\" + this.usage) === \"\"){\r\n            console.log(\"[imported Files Manager] file list not defined! writing default value\");\r\n            localStorage.setItem(\"importedFilesList-\" + this.usage, \"\" +\r\n                '{' +\r\n                    '\"fileNames\": []' +\r\n                \"}\");\r\n\r\n            // recursive call\r\n            return this.getFileNamesFromLocalStorage();\r\n        }\r\n\r\n        try{\r\n            return JSON.parse(localStorage.getItem(\"importedFilesList-\" + this.usage)).fileNames;\r\n        }catch(error){\r\n            if(error instanceof SyntaxError){\r\n                console.warn(\"[imported Files Manager] resetting file list JSON as it's corrupted\");\r\n\r\n                localStorage.setItem(\"importedFilesList\" + this.usage, \"\");\r\n\r\n                return this.getFileNamesFromLocalStorage;\r\n            }\r\n        }\r\n    }\r\n\r\n    addFileEntryToFileNames(entry){\r\n        this.fileNames = this.getFileNamesFromLocalStorage();\r\n\r\n        this.fileNames.push(entry);\r\n\r\n        let jsonObj = {\r\n            fileNames: this.fileNames\r\n        }\r\n\r\n        localStorage.setItem(\"importedFilesList-\" + this.usage, JSON.stringify(jsonObj));\r\n    }\r\n\r\n    removeFileEntryFromFileNames(storageLocation){\r\n        this.fileNames = this.getFileNamesFromLocalStorage();\r\n\r\n        // remove the selected storage location\r\n        this.fileNames = this.fileNames.filter((x) => {\r\n            return x.storageLocation !== parseInt(storageLocation);\r\n        });\r\n\r\n        // create a json object, parse it and push it into localStorage\r\n        let jsonObj = {\r\n            fileNames: this.fileNames\r\n        }\r\n        localStorage.setItem(\"importedFilesList-\" + this.usage, JSON.stringify(jsonObj));\r\n    }\r\n\r\n\r\n    callFileListUpdatedCallback(){\r\n        if(typeof this.fileListUpdatedCallback === \"function\"){\r\n            this.fileListUpdatedCallback();\r\n        }\r\n    }\r\n\r\n\r\n}","import sf from \"../helpers/small_functions\";\r\nimport wakeLock from \"../helpers/wakelock\";\r\nimport colorMode from \"../helpers/color_mode\";\r\nimport gui from \"../gui\";\r\n\r\nimport Coloris from \"@melloware/coloris\";\r\n\r\n\r\nexport default class interfaceConfig extends gui {\r\n\r\n    colorModeObj = null;\r\n\r\n    filterBMSConnection;\r\n    connectionStepTimeout;\r\n\r\n    updateConnectionWatchDogCB;\r\n\r\n    constructor() {\r\n        super();\r\n        this.wakeLock1 = new wakeLock();\r\n\r\n        // get config values from localStorage\r\n        this.updateConfig();\r\n\r\n        //enable wakelock if set\r\n        if (this.wakeLock) {\r\n            this.wakeLock1.enable();\r\n        }\r\n\r\n        // hack to make color pickers render before filling them with their color\r\n        setTimeout(async () => {\r\n            await sf.until(()=>{return colorMode !== null})\r\n            // write values from localStorage into the input fields\r\n            this.setInterfaceConfigValues();\r\n        }, 100);\r\n\r\n\r\n        this.addEventListeners();\r\n\r\n\r\n        this.colorisInit();\r\n    }\r\n\r\n    initColorModeObj(colorModeObj){\r\n        this.colorModeObj = colorModeObj;\r\n    }\r\n\r\n    updateConfig() {\r\n        // default is true for mobile devices, false for desktop;\r\n        this.filterBMSConnection = JSON.parse(localStorage.getItem(\"filterBMSConnection\") || sf.mobileDevice());\r\n        // default is true for mobile devices, false for desktop;\r\n        this.wakeLock = JSON.parse(localStorage.getItem(\"wakeLockEnabled\") || sf.mobileDevice());\r\n\r\n        this.colorMode = localStorage.getItem(\"lastColorMode\") || \"dark\";\r\n\r\n        this.customColorForeground = localStorage.getItem(\"customColorForeground\") || \"rgb(255,255,255)\";\r\n        this.customColorBackground = localStorage.getItem(\"customColorBackground\") || \"rgb(0,0,0)\";\r\n        this.customColorAccent = localStorage.getItem(\"customColorAccent\") || \"rgb(0,193,220)\";\r\n\r\n        this.customColorCaptureModeBackground = localStorage.getItem(\"customColorCaptureModeBackground\") || \"rgba(255,255,255, 0.6)\";\r\n\r\n        // JSON.parse for string to boolean conversion\r\n        this.autoReadBMSConfigCalib = JSON.parse(localStorage.getItem(\"autoReadBMSConfigCalib\") || true);\r\n\r\n        this.devTileActive = JSON.parse(localStorage.getItem(\"devTileActive\") || true);\r\n\r\n        this.interfaceMode = localStorage.getItem(\"interfaceMode\") || \"normal\";\r\n\r\n        // Times for data logging averaging intervals for BMS\r\n        this.averagingIntervalU = parseFloat(localStorage.getItem('averagingIntervalU') || \"0.25\");\r\n        this.averagingIntervalI = parseFloat(localStorage.getItem(\"averagingIntervalI\") || \"0.3\");\r\n        this.averagingIntervalT = parseFloat(localStorage.getItem(\"averagingIntervalT\") || \"0.6\");\r\n        this.averagingIntervalCalib = parseFloat(localStorage.getItem(\"averagingIntervalCalib\") || \"0.5\");\r\n\r\n        // Times for data logging averaging intervals for tacho\r\n        this.tachoDataAveragingIntervalV = parseFloat(localStorage.getItem(\"tachoAveragingIntervalV\") || \"0.7\");\r\n        this.tachoDataAveragingIntervalT = parseFloat(localStorage.getItem(\"tachoAveragingIntervalT\") || \"5\");\r\n\r\n        this.maxAveragingInterval = Math.max(\r\n            this.averagingIntervalU,\r\n            this.averagingIntervalI,\r\n            this.averagingIntervalT,\r\n            this.averagingIntervalCalib\r\n        );\r\n\r\n        this.maxTachoAveragingInterval = Math.max(\r\n            this.tachoDataAveragingIntervalV,\r\n            this.tachoDataAveragingIntervalT\r\n        );\r\n\r\n        // time for the max value gauges\r\n        this.maxValueHoldOnTime = parseFloat(localStorage.getItem(\"maxValuesHoldOnTime\") || \"20\");\r\n\r\n        // time per step of the connection process before the watchdog cancels the process\r\n        this.connectionStepTimeout = parseFloat(localStorage.getItem(\"connectionStepTimeout\") || \"10.0\")\r\n\r\n        this.showBMSExtTemp = JSON.parse(localStorage.getItem(\"showBMSExtTemp\") || true);\r\n        this.showBMSIntTemp = JSON.parse(localStorage.getItem(\"showBMSIntTemp\") || true);\r\n        this.showMotorTemp = JSON.parse(localStorage.getItem(\"showMotorTemp\") || true);\r\n        this.showTachoExtTemp = JSON.parse(localStorage.getItem(\"showTachoExtTemp\") || true);\r\n    }\r\n\r\n\r\n    setInterfaceConfigValues(){\r\n        this.colorModeObj.adjust(this.colorMode);\r\n\r\n        this.interfaceBMSAutoReadConfigCalib.checked = this.autoReadBMSConfigCalib;\r\n\r\n        this.interfaceWakeLock.checked = this.wakeLock;\r\n\r\n        this.interfaceAveragingTimeU.value = this.averagingIntervalU;\r\n        this.interfaceAveragingTimeI.value = this.averagingIntervalI;\r\n        this.interfaceAveragingTimeT.value = this.averagingIntervalT;\r\n        this.interfaceAveragingTimeCalib.value = this.averagingIntervalCalib;\r\n\r\n        this.interfaceAveragingTimeTachoV.value = this.tachoDataAveragingIntervalV;\r\n        this.interfaceAveragingTimeTachoT.value = this.tachoDataAveragingIntervalT;\r\n\r\n        this.interfaceMaxValuesHoldOnTime.value = this.maxValueHoldOnTime;\r\n\r\n        this.interfaceConnectionStepTimeout.value = this.connectionStepTimeout;\r\n\r\n        this.interfaceBMSFilterConnection.checked = this.filterBMSConnection;\r\n\r\n        this.interfaceShowBMSExtTemp.checked = this.showBMSExtTemp;\r\n        this.interfaceShowBMSIntTemp.checked = this.showBMSIntTemp;\r\n        this.interfaceShowMotorTemp.checked = this.showMotorTemp;\r\n        this.interfaceShowTachoExtTemp.checked = this.showTachoExtTemp;\r\n\r\n        this.setTempGaugeVisibility(this);\r\n\r\n        this.enterInterfaceMode(this.interfaceMode);\r\n    }\r\n\r\n\r\n    addEventListeners() {\r\n        this.interfaceBMSFilterConnection.addEventListener(\"change\", () => {\r\n            localStorage.setItem('filterBMSConnection', this.interfaceBMSFilterConnection.checked);\r\n\r\n            this.updateConfig();\r\n        });\r\n\r\n        this.interfaceWakeLock.addEventListener(\"change\", () => {\r\n            localStorage.setItem('wakeLockEnabled', this.interfaceWakeLock.checked);\r\n\r\n            this.updateConfig();\r\n\r\n            if (interfaceConfig.wakeLock) {\r\n                this.wakeLock1.enable();\r\n            } else {\r\n                this.wakeLock1.disable();\r\n            }\r\n\r\n        });\r\n\r\n        this.interfaceBMSAutoReadConfigCalib.addEventListener(\"change\", () => {\r\n            localStorage.setItem('autoReadBMSConfigCalib', this.interfaceBMSAutoReadConfigCalib.checked);\r\n\r\n            this.updateConfig();\r\n        });\r\n\r\n        this.interfaceAveragingTimeU.addEventListener(\"change\", () => {\r\n            let val = this.interfaceAveragingTimeU.value;\r\n            if(!sf.isFloat(val) || parseFloat(val) === 0){\r\n                return;\r\n            }\r\n            localStorage.setItem('averagingIntervalU', String(parseFloat(this.interfaceAveragingTimeU.value)));\r\n            this.updateConfig();\r\n        });\r\n        this.interfaceAveragingTimeI.addEventListener(\"change\", () => {\r\n            let val = this.interfaceAveragingTimeI.value;\r\n            if(!sf.isFloat(val) || parseFloat(val) === 0){\r\n                return;\r\n            }\r\n            localStorage.setItem('averagingIntervalI', String(parseFloat(this.interfaceAveragingTimeI.value)));\r\n            this.updateConfig();\r\n        });\r\n        this.interfaceAveragingTimeT.addEventListener(\"change\", () => {\r\n            let val = this.interfaceAveragingTimeT.value;\r\n            if(!sf.isFloat(val) || parseFloat(val) === 0){\r\n                return;\r\n            }\r\n            localStorage.setItem('averagingIntervalT', String(parseFloat(this.interfaceAveragingTimeT.value)));\r\n            this.updateConfig();\r\n        });\r\n        this.interfaceAveragingTimeCalib.addEventListener(\"change\", () => {\r\n            let val = this.interfaceAveragingTimeCalib.value;\r\n            if(!sf.isFloat(val) || parseFloat(val) === 0){\r\n                return;\r\n            }\r\n            localStorage.setItem('averagingIntervalCalib', String(parseFloat(this.interfaceAveragingTimeCalib.value)));\r\n            this.updateConfig();\r\n        });\r\n\r\n        this.interfaceAveragingTimeTachoV.addEventListener(\"change\", () => {\r\n            let val = this.interfaceAveragingTimeTachoV.value;\r\n            if(!sf.isFloat(val) || parseFloat(val) === 0){\r\n                return;\r\n            }\r\n            localStorage.setItem('tachoAveragingIntervalV', String(parseFloat(this.interfaceAveragingTimeTachoV.value)));\r\n            this.updateConfig();\r\n        });\r\n\r\n        this.interfaceAveragingTimeTachoT.addEventListener(\"change\", () => {\r\n            let val = this.interfaceAveragingTimeTachoT.value;\r\n            if(!sf.isFloat(val) || parseFloat(val) === 0){\r\n                return;\r\n            }\r\n            localStorage.setItem('tachoAveragingIntervalT', String(parseFloat(this.interfaceAveragingTimeTachoT.value)));\r\n            this.updateConfig();\r\n        });\r\n\r\n        this.interfaceMaxValuesHoldOnTime.addEventListener(\"change\", () => {\r\n            let val = this.interfaceMaxValuesHoldOnTime.value;\r\n            if(!sf.isFloat(val) || parseFloat(val) === 0){\r\n                return;\r\n            }\r\n            localStorage.setItem('maxValuesHoldOnTime', String(parseFloat(this.interfaceMaxValuesHoldOnTime.value)));\r\n            this.updateConfig();\r\n        });\r\n\r\n        this.interfaceConnectionStepTimeout.addEventListener(\"change\", () => {\r\n            let val = this.interfaceConnectionStepTimeout.value;\r\n            if(!sf.isFloat(val) || parseFloat(val) === 0){\r\n                return;\r\n            }\r\n            localStorage.setItem('connectionStepTimeout', String(parseFloat(this.interfaceConnectionStepTimeout.value)));\r\n            this.updateConfig();\r\n\r\n            // call the hopefully registered callback to actually update the value within the bms class\r\n            if(typeof this.updateConnectionWatchDogCB === \"function\"){\r\n                this.updateConnectionWatchDogCB();\r\n            }\r\n        });\r\n\r\n\r\n        this.interfaceShowBMSExtTemp.addEventListener(\"change\", () => {\r\n            localStorage.setItem('showBMSExtTemp', this.interfaceShowBMSExtTemp.checked);\r\n            this.updateConfig();\r\n            this.setTempGaugeVisibility(this);\r\n        });\r\n        this.interfaceShowBMSIntTemp.addEventListener(\"change\", () => {\r\n            localStorage.setItem('showBMSIntTemp', this.interfaceShowBMSIntTemp.checked);\r\n            this.updateConfig();\r\n            this.setTempGaugeVisibility(this);\r\n        });\r\n        this.interfaceShowMotorTemp.addEventListener(\"change\", () => {\r\n            localStorage.setItem('showMotorTemp', this.interfaceShowMotorTemp.checked);\r\n            this.updateConfig();\r\n            this.setTempGaugeVisibility(this);\r\n        });\r\n        this.interfaceShowTachoExtTemp.addEventListener(\"change\", () => {\r\n            localStorage.setItem('showTachoExtTemp', this.interfaceShowTachoExtTemp.checked);\r\n            this.updateConfig();\r\n            this.setTempGaugeVisibility(this);\r\n        });\r\n    }\r\n\r\n    updateInterfaceMode(mode){\r\n        // only let the user go down-stream:\r\n        // normal -> experimental -> development\r\n        let modeToSet = \"\";\r\n        if(this.interfaceMode === \"normal\"){\r\n            if(mode === \"exp\"){modeToSet = mode;}\r\n            if(mode === \"dev\"){modeToSet = mode;}\r\n        }\r\n        if(this.interfaceMode === \"exp\"){\r\n            if(mode === \"dev\"){modeToSet = mode;}\r\n        }\r\n\r\n        localStorage.setItem('interfaceMode', modeToSet);\r\n\r\n        // update the config object\r\n        this.updateConfig();\r\n\r\n        // execute the changes in the gui\r\n        this.setInterfaceConfigValues();\r\n    }\r\n\r\n\r\n    // Color Picker configuration (don't touch xD)\r\n    colorisInit() {\r\n\r\n        Coloris.init();\r\n\r\n        Coloris({\r\n            theme: 'polaroid',\r\n        });\r\n\r\n\r\n        /** Default configuration **/\r\n\r\n        Coloris({\r\n            el: '.coloris',\r\n            swatches: [\r\n                '#264653',\r\n                '#2a9d8f',\r\n                '#e9c46a',\r\n                '#f4a261',\r\n                '#e76f51',\r\n                '#d62828',\r\n                '#023e8a',\r\n                '#0077b6',\r\n                '#0096c7',\r\n                '#00b4d8',\r\n                '#48cae4'\r\n            ],\r\n            focusInput: false,\r\n            selectInput: false,\r\n        });\r\n\r\n        Coloris.setInstance('.foreground-color', {\r\n            theme: 'polaroid'\r\n        });\r\n        Coloris.setInstance('.background-color', {\r\n            theme: 'polaroid'\r\n        });\r\n        Coloris.setInstance('.accent-color', {\r\n            theme: 'polaroid'\r\n        });\r\n\r\n        Coloris.setInstance('.capture-mode-background-color', {\r\n            theme: 'polaroid'\r\n        });\r\n\r\n    }\r\n}","\r\n\r\n/* Inline Board Config functions */\r\n\r\nimport gui_elements from \"../gui_elements\";\r\nimport sf from \"../helpers/small_functions\";\r\n\r\nexport default class tachoConfig extends gui_elements{\r\n    tempSensorType;\r\n    divider_r;\r\n    ntc_r;\r\n    ntc_b;\r\n    impulses;\r\n    reversed;\r\n    backwards_negative;\r\n    motor_poles;\r\n\r\n    initialised = false;\r\n\r\n\r\n    initialPulseValue = 0;\r\n    currentPulseValue = 0;\r\n\r\n    constructor(tachoObj) {\r\n        super();\r\n        this.initialised = false;\r\n\r\n        this.tachoObj = tachoObj;\r\n\r\n        this.#blurAppropriateTempFields();\r\n        this.#setStandardNTCValues();\r\n    }\r\n\r\n\r\n    addEventListeners(){\r\n\r\n        this.tempSensorSelector.addEventListener(\"change\", ()=>{\r\n            this.#blurAppropriateTempFields();\r\n            this.#setStandardNTCValues();\r\n        });\r\n\r\n\r\n        // for the \"calibration\"\r\n        sf.getId(\"resetPulses\").addEventListener(\"click\", (_) => {\r\n            this.initialPulseValue = this.currentPulseValue;\r\n        });\r\n\r\n        sf.getId(\"calculatedistperpulse\").addEventListener(\"click\", () => {\r\n            this.#calculateDistancePerPulse();\r\n        });\r\n\r\n        sf.getId(\"inline-config-write\").addEventListener(\"click\", () => {\r\n            // writing config characteristic\r\n            this.readInGUIElements();\r\n            this.tachoObj.characteristics.tachoConfigCharacteristic.writeValue(Uint8Array.from(this.getBuffer()).buffer).then(() => {\r\n                this.indicateSuccess(3000);\r\n                console.log(\"successfully wrote config\");\r\n\r\n                setTimeout(() => {\r\n                    this.readTachoConfig(()=>{});\r\n                }, 200);\r\n            }).catch(_ => {\r\n                this.indicateFailure();\r\n            });\r\n        });\r\n\r\n        sf.getId(\"inline-config-read\").addEventListener(\"click\", () => {\r\n            this.readTachoConfig(()=>{\r\n                this.indicateSuccess(500);\r\n            });\r\n        });\r\n\r\n\r\n\r\n\r\n\r\n// Odometer reset buttons\r\n        this.tachoResetTripOdoButton.addEventListener(\"click\", () => {\r\n            this.tachoObj.characteristics.tachoOdometerCharacteristic.writeValueWithoutResponse(Uint8Array.from([0x01]).buffer).catch(_ =>{\r\n                console.log(\"failed to reset trip odometer\");\r\n            });\r\n        });\r\n\r\n        this.tachoResetVehicleOdoButton.addEventListener(\"click\", () => {\r\n            this.tachoObj.characteristics.tachoOdometerCharacteristic.writeValueWithoutResponse(Uint8Array.from([0x02]).buffer).catch(_ =>{\r\n                console.log(\"failed to reset vehicle odometer\");\r\n            });\r\n        });\r\n    }\r\n\r\n    readTachoConfig(cb){\r\n        this.tachoObj.characteristics.tachoConfigCharacteristic.readValue().then((buffer) => {\r\n            this.readInBuffer(buffer);\r\n            this.setGUIElements();\r\n\r\n            // indicate success in the callback\r\n            cb(true);\r\n        }).catch(_ => {\r\n            this.indicateFailure();\r\n\r\n            // indicate failure in the callback\r\n            cb(false);\r\n        });\r\n    }\r\n\r\n\r\n    indicateSuccess(duration) {\r\n        this.inlineConfigContainer.classList.add(\"success\");\r\n        setTimeout(() => {\r\n            this.inlineConfigContainer.classList.remove(\"success\");\r\n        }, duration);\r\n    }\r\n\r\n    indicateFailure() {\r\n        this.inlineConfigContainer.classList.add(\"fault\");\r\n        setTimeout(() => {\r\n            this.inlineConfigContainer.classList.remove(\"fault\");\r\n        }, 2000);\r\n    }\r\n\r\n\r\n\r\n    #blurAppropriateTempFields(){\r\n        const val = this.tempSensorSelector.options[this.tempSensorSelector.selectedIndex].value;\r\n\r\n        if(val !== \"ntc_custom\" && val !== \"ptc_custom\"){\r\n            let customTempInputFields = document.getElementsByClassName(\"customTempInput\");\r\n            for (let i = 0; i < customTempInputFields.length; i++) {\r\n                customTempInputFields[i].style.opacity = \"0.5\";\r\n                customTempInputFields[i].style.pointerEvents = \"none\";\r\n            }\r\n        }else{\r\n            let customTempInputFields = document.getElementsByClassName(\"customTempInput\");\r\n            for (let i = 0; i < customTempInputFields.length; i++) {\r\n                customTempInputFields[i].style.opacity = \"1\";\r\n                customTempInputFields[i].style.pointerEvents = \"\";\r\n            }\r\n        }\r\n    }\r\n    #setStandardNTCValues(){\r\n        const val = this.tempSensorSelector.options[this.tempSensorSelector.selectedIndex].value;\r\n\r\n        if(val === \"ntc10k\"){\r\n            sf.getId(\"r-value\").value = \"29400\";\r\n            sf.getId(\"b-value\").value = \"3460\";\r\n            return;\r\n        }\r\n        if(val === \"ntc100k\"){\r\n            sf.getId(\"r-value\").value = \"350000\";\r\n            sf.getId(\"b-value\").value = \"4334\";\r\n            return;\r\n        }\r\n\r\n        sf.getId(\"r-value\").value = \"\";\r\n        sf.getId(\"b-value\").value = \"\";\r\n    }\r\n\r\n\r\n\r\n    // todo: IMPLEMENT\r\n    /*\r\n    #checkInlineConfigPlausibility() {\r\n        sf.setValueBackToBoundaries(\"battery-cells\", 4, 30);\r\n        sf.setValueBackToBoundaries(\"battery-capacity\", 0, 10000000);\r\n\r\n        sf.setValueBackToBoundaries(\"max-cell-voltage\", 2000, 5000);\r\n        sf.setValueBackToBoundaries(\"min-cell-voltage\", 2000, 5000);\r\n        sf.setValueBackToBoundaries(\"strand-max-imbalance-current\", 0, 100);\r\n        sf.setValueBackToBoundaries(\"strand-max-current\", 1, 300);\r\n\r\n        sf.setValueBackToBoundaries(\"power-max-temp\", 30, 90);\r\n        sf.setValueBackToBoundaries(\"logic-max-temp\", 30, 90);\r\n\r\n        sf.setValueBackToBoundaries(\"precharge-current-limit\", 1, 50);\r\n        sf.setValueBackToBoundaries(\"load-capacitance\", 1, 100000);\r\n\r\n        sf.setValueBackToBoundaries(\"datalogging-update-interval\", 20, 255);\r\n        sf.setValueBackToBoundaries(\"auto-poweroff\", 30, 90);\r\n\r\n    }\r\n    */\r\n\r\n\r\n    #getTempSensorType(){\r\n        let val = sf.getId(\"ntc-type-select\").value;\r\n        if(val === \"kty83\"){\r\n            return 1;\r\n        }\r\n        if(val === \"kty84\"){\r\n            return 2;\r\n        }\r\n\r\n        // fuck ptcs, all standard ntcs get their values set into appropriate fields\r\n        // -> they can be treated as manually input custom ntcs\r\n        return 0;\r\n    }\r\n    #setTempSensorType(value){\r\n        if(value === 1){\r\n            sf.getId(\"ntc-type-select\").value = \"kty83\";\r\n        }\r\n        if(value === 2){\r\n            sf.getId(\"ntc-type-select\").value = \"kty84\";\r\n        }\r\n        if(value === 0){\r\n            sf.getId(\"ntc-type-select\").value = \"ntc_custom\";\r\n        }\r\n\r\n        this.#blurAppropriateTempFields();\r\n        this.#setStandardNTCValues();\r\n    }\r\n\r\n\r\n\r\n    readInBuffer(buffer){\r\n        this.tempSensorType = buffer.getUint8(0);\r\n        this.divider_r = (buffer.getUint8(2) << 8) | buffer.getUint8(1);\r\n        this.ntc_r = (buffer.getUint8(4) << 8) | buffer.getUint8(3);\r\n        this.ntc_b = (buffer.getUint8(6) << 8) | buffer.getUint8(5);\r\n        this.impulses = (buffer.getUint8(8) << 8) | buffer.getUint8(7);\r\n        this.reversed = buffer.getUint8(9);\r\n        this.backwards_negative = buffer.getUint8(10);\r\n        this.motor_poles = buffer.getUint8(11);\r\n\r\n        // necessary for using old firmware\r\n        // -> only makes option available to edit and write if it's available to read\r\n        try {\r\n            this.dataLoggingUpdateInterval = (buffer.getUint8(15) << 8) | buffer.getUint8(14);\r\n        } catch (err) {\r\n            if (err.constructor === RangeError) {\r\n                console.log(\"[inline config] fw doesn't support dl_update_interval\");\r\n            }\r\n        }\r\n\r\n        this.initialised = true;\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    readInGUIElements(){\r\n        this.tempSensorType = this.#getTempSensorType();\r\n        this.ntc_r = sf.getIdValue(\"r-value\") / 10;\r\n        this.divider_r = sf.getIdValue(\"r-value-divider\") / 10;\r\n        this.ntc_b = parseInt(sf.getIdValue(\"b-value\"));\r\n        this.reversed = sf.getIdChecked(\"reversed\");\r\n        this.backwards_negative = sf.getIdChecked(\"back-neg\");\r\n        this.impulses = parseInt(sf.getIdValue(\"distperpulse\"));\r\n        this.motor_poles = parseInt(sf.getIdValue(\"motor-poles\"));\r\n\r\n\r\n        // fields that might not be there dependent on the firmware version\r\n\r\n        if(!this.inlineConfigDataLoggingFrequency.disabled){\r\n            this.dataLoggingUpdateInterval =  1000 / this.inlineConfigDataLoggingFrequency.value;\r\n        }\r\n    }\r\n\r\n\r\n    getBuffer(){\r\n        // don't even bother if not initialised\r\n        if(!this.initialised){\r\n            return;\r\n        }\r\n\r\n        let buffer = [];\r\n\r\n        buffer[0] = parseInt(this.tempSensorType);\r\n\r\n        buffer[1] = sf.to16bit(this.divider_r)[0];\r\n        buffer[2] = sf.to16bit(this.divider_r)[1];\r\n\r\n        buffer[3] = sf.to16bit(this.ntc_r)[0];\r\n        buffer[4] = sf.to16bit(this.ntc_r)[1];\r\n\r\n        buffer[5] = sf.to16bit(this.ntc_b)[0];\r\n        buffer[6] = sf.to16bit(this.ntc_b)[1];\r\n\r\n        buffer[7] = sf.to16bit(this.impulses)[0];\r\n        buffer[8] = sf.to16bit(this.impulses)[1];\r\n\r\n        buffer[9] = this.reversed;\r\n\r\n        buffer[10] = this.backwards_negative;\r\n        buffer[11] = this.motor_poles;\r\n\r\n\r\n        //Data logging update interval (needed for older firmware)\r\n        if(typeof this.dataLoggingUpdateInterval !== \"undefined\") {\r\n            buffer[15] = sf.to16bit(this.dataLoggingUpdateInterval)[0];\r\n            buffer[14] = sf.to16bit(this.dataLoggingUpdateInterval)[1];\r\n\r\n\r\n            // update count - only needed when putting values behind it since it doesn't need to get written\r\n            buffer[12] = 0;\r\n            buffer[13] = 0;\r\n        }else {\r\n            console.log(\"[tacho config] fw doesn't support dl_update_interval\");\r\n        }\r\n\r\n        return buffer;\r\n    }\r\n\r\n\r\n    setGUIElements(){\r\n        this.#setTempSensorType(this.tempSensorType);\r\n        sf.getId(\"r-value\").value = this.ntc_r * 10;\r\n        sf.getId(\"r-value-divider\").value = this.divider_r * 10;\r\n        sf.getId(\"b-value\").value = this.ntc_b;\r\n        sf.getId(\"reversed\").checked = this.reversed;\r\n        sf.getId(\"back-neg\").checked = this.backwards_negative;\r\n        sf.getId(\"distperpulse\").value = this.impulses;\r\n        sf.getId(\"motor-poles\").value = this.motor_poles;\r\n\r\n        if(typeof this.dataLoggingUpdateInterval !== 'undefined') {\r\n            this.inlineConfigDataLoggingFrequency.disabled = false;\r\n\r\n            sf.getId(\"inline-dl-frequency\").value = this.dataLoggingUpdateInterval;\r\n        }else{\r\n            this.inlineConfigDataLoggingFrequency.disabled = true;\r\n        }\r\n    }\r\n\r\n\r\n    updatePulseCount(data){\r\n        this.currentPulseValue = data;\r\n        sf.getId(\"pulses\").innerHTML = String(parseFloat(data) - this.initialPulseValue);\r\n    }\r\n\r\n    #calculateDistancePerPulse(){\r\n        let pulses = parseFloat(sf.getId(\"pulses\").innerHTML);\r\n        let dist = parseFloat(sf.getId(\"distance\").value);\r\n        if(pulses === 0){\r\n            sf.getId(\"pulses\").style.color = \"red\";\r\n            setTimeout(()=>{\r\n                sf.getId(\"pulses\").style.color = \"\";\r\n            }, 500);\r\n            return;\r\n        }\r\n        sf.getId(\"distperpulse\").value = Math.abs(Math.round(10 * dist / pulses));\r\n    }\r\n\r\n}","import sf from \"../helpers/small_functions\";\r\nimport gui_elements from \"../gui_elements\";\r\n\r\nimport Keyboard from 'simple-keyboard';\r\n\r\n\r\nexport default class virtualKeyboard extends gui_elements{\r\n\r\n    focussedInput;\r\n\r\n    hideKeyboard = false;\r\n\r\n    interfaceSettingsContainerLastSeen = 0;\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        if(sf.mobileDevice()) {\r\n            this.keyboard = new Keyboard({\r\n                onChange: input => this.onChange(input),\r\n                layout: {\r\n                    default: [\"1 2 3\", \"4 5 6\", \"7 8 9\", \". 0 {bksp}\"]\r\n                },\r\n                theme: \"hg-theme-default hg-layout-numeric numeric-theme\",\r\n                display: {\r\n                    '{bksp}': 'del'\r\n                }\r\n            });\r\n\r\n\r\n\r\n\r\n            // I don't really know about performance\r\n            window.addEventListener('scroll', () => {\r\n                // show keyboard if settings are scrolled into view\r\n                if (this.keyboardShouldBeVisible() && this.keyboardContainer.classList.contains(\"visibility-hidden\")) {\r\n                    if(!this.hideKeyboard){\r\n                        this.keyboardContainer.classList.remove(\"visibility-hidden\");\r\n\r\n                        this.keyboardContainer.addEventListener(\"animationend\", ()=>{\r\n                            this.keyboardContainer.classList.remove(\"blend-in\");\r\n                        }, {once : true});\r\n\r\n                        this.keyboardContainer.classList.add(\"blend-in\");\r\n                    }\r\n                }\r\n\r\n                if(!this.keyboardShouldBeVisible() && !this.keyboardContainer.classList.contains(\"visibility-hidden\")){\r\n\r\n                    this.keyboardContainer.addEventListener(\"animationend\", ()=>{\r\n                        this.keyboardContainer.classList.add(\"visibility-hidden\");\r\n                        this.keyboardContainer.classList.remove(\"blend-out\");\r\n                    }, {once : true});\r\n\r\n                    this.keyboardContainer.classList.add(\"blend-out\");\r\n                }\r\n\r\n\r\n\r\n                // disable interface settings if they haven't been in view for over a second\r\n                if(sf.isScrolledIntoView(this.interfaceSettingsContainer)){\r\n                    this.interfaceSettingsContainerLastSeen = Date.now();\r\n                }\r\n                if((Date.now() - this.interfaceSettingsContainerLastSeen) > 1000\r\n                    && !this.interfaceSettingsContainer.classList.contains(\"display-none\")){\r\n                    this.interfaceSettingsContainer.classList.add(\"display-none\");\r\n                }\r\n            });\r\n\r\n\r\n            // set the cursor to the right on all input fields (a bit whack but there is no nicer solution)\r\n            document.querySelectorAll(\"input[type='number']\").forEach(item => {\r\n                item.addEventListener('focus', event => {\r\n                    // disable the stock virtual keyboard\r\n                    event.target.blur();\r\n\r\n\r\n                    // clear all other focussed animations\r\n                    document.querySelectorAll(\"input\").forEach(item => {\r\n                        item.classList.remove(\"accent\");\r\n                    });\r\n                    event.target.classList.add(\"accent\");\r\n\r\n                    const value = event.target.value;\r\n                    event.target.value = '';\r\n                    setTimeout(() => {\r\n                        event.target.value = value;\r\n                    }, 1);\r\n\r\n                    // set keyboard input target and keyboard input\r\n                    this.focussedInput = event.target;\r\n                    this.keyboard.setInput(value);\r\n                });\r\n            });\r\n\r\n\r\n            // event listener for all coloris inputs to instantly blur the selected input field\r\n            document.querySelectorAll(\".coloris\").forEach((element)=>{\r\n                element.addEventListener(\"click\", (event)=>{\r\n                    event.target.blur();\r\n                });\r\n            });\r\n\r\n\r\n\r\n            // focus logic for bms name input\r\n            document.querySelectorAll(\"input[type='text']\").forEach(item => {\r\n                item.addEventListener('focus', event => {\r\n                    document.querySelectorAll(\"input\").forEach(item => {\r\n                        item.classList.remove(\"accent\");\r\n                    });\r\n                    event.target.classList.add(\"accent\");\r\n\r\n                    // hide virtual keyboard to use os keyboard (emojis and stuff)\r\n                    this.keyboardContainer.classList.add(\"display-none\");\r\n                    this.hideKeyboard = true;\r\n\r\n                    const value = event.target.value;\r\n                    event.target.value = '';\r\n                    setTimeout(() => {\r\n                        event.target.value = value;\r\n                    }, 1);\r\n                });\r\n\r\n                item.addEventListener('focusout', event => {\r\n                    event.target.classList.remove(\"accent\");\r\n\r\n                    this.hideKeyboard = false;\r\n                    this.keyboardContainer.classList.remove(\"display-none\");\r\n                });\r\n            });\r\n\r\n        }else{\r\n            // i don't really know about performance\r\n            window.addEventListener('scroll', () => {\r\n                // disable interface settings if they haven't been in view for over a second\r\n                if(sf.isScrolledIntoView(this.interfaceSettingsContainer)){\r\n                    this.interfaceSettingsContainerLastSeen = Date.now();\r\n                }\r\n                if((Date.now() - this.interfaceSettingsContainerLastSeen) > 1000\r\n                    && !this.interfaceSettingsContainer.classList.contains(\"display-none\")){\r\n                    this.interfaceSettingsContainer.classList.add(\"display-none\");\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange(input) {\r\n        // check if the value is inside view and scroll to the element if not\r\n\r\n        // only use last \".\" in input\r\n        if (input.split(\".\").length - 1 > 1) {\r\n            input = input.split('.').slice(0, -1).join('') + \".\" + input.split('.').slice(-1);\r\n        }\r\n\r\n        let keyboardDecimal = false;\r\n        if (input.charAt(input.length - 1) !== '.'){\r\n            if (keyboardDecimal) {\r\n                this.focussedInput.value = input.substring(0, input.length - 1);\r\n            } else {\r\n                this.focussedInput.value = input;\r\n            }\r\n        }\r\n\r\n\r\n        // create a new change event and dispatch it\r\n        // otherwise the input does not recognize the change,\r\n        // and therefore the interface config does not work\r\n        this.focussedInput.dispatchEvent(new Event('change'));\r\n    }\r\n\r\n    keyboardShouldBeVisible(){\r\n\r\n        let settingsNumberInputs = [\r\n            ...document.querySelectorAll(\"#board-configuration-div [type='number']\"),\r\n            ...document.querySelectorAll(\"#inline-configuration-div [type='number']\"),\r\n            ...document.querySelectorAll(\"#board-calibration-div [type='number']\"),\r\n            ...document.querySelectorAll(\"#interface-settings-container [type='number']\")\r\n        ];\r\n\r\n        let settingsScrolledIntoView = false;\r\n        settingsNumberInputs.forEach((element) => {\r\n            if(sf.isScrolledIntoViewWithKeyboard(element)){\r\n                settingsScrolledIntoView = true;\r\n            }\r\n        });\r\n\r\n        // it's complicated\r\n        return (settingsScrolledIntoView\r\n            || sf.isScrolledIntoViewWithKeyboard(this.boardConfigContainer)\r\n            || sf.isScrolledIntoViewWithKeyboard(this.boardCalibContainer)\r\n            || sf.isScrolledIntoViewWithKeyboard(this.inlineConfigContainer)\r\n            || sf.isScrolledIntoViewWithKeyboard(this.interfaceSettingsContainer));\r\n    }\r\n\r\n}\r\n","import sf from \"./helpers/small_functions\";\r\nimport {zoom} from \"./helpers/zoom\";\r\nimport gui from \"./gui\";\r\n\r\n\r\nexport default class tilebar extends gui{\r\n    constructor(\r\n        bmsObj,\r\n        tachoObj,\r\n        captureModeManager,\r\n        dataLoggingManager,\r\n        colorModeObj,\r\n        interfaceConfigObj,\r\n        rearrangeManager,\r\n        otaManager,\r\n        dataDistributionGUIMgr,\r\n        dbcGUIManager\r\n    ) {\r\n        super();\r\n\r\n        this.bmsObj = bmsObj;\r\n        this.tachoObj = tachoObj;\r\n        this.captureModeMgr = captureModeManager;\r\n        this.dataLoggingMgr = dataLoggingManager;\r\n        this.colorModeObj = colorModeObj;\r\n        this.rearrangeManager = rearrangeManager;\r\n        this.interfaceConfigObj = interfaceConfigObj;\r\n        this.otaManager = otaManager;\r\n        this.dataDistributionGUIMgr = dataDistributionGUIMgr;\r\n        this.dbcGUIManager = dbcGUIManager;\r\n\r\n\r\n        // Chrome detection to warn the user as BLE probably isn't available\r\n\r\n        if(!sf.isChrome()){\r\n            this.table.classList.add(\"visibility-hidden\");\r\n            this.nothingConnectedOverlay.classList.add(\"visibility-hidden\");\r\n            this.tilebarDOM.classList.add(\"disabled\");\r\n            alert(\"This site is tailored around Progressive Wep App services that are only supported in full by Chrome.\\nPlease open this site in Chrome only as we can't ensure functionality otherwise ;)\");\r\n        }\r\n    }\r\n\r\n    addEventListeners(){\r\n        // BLUETOOTH\r\n        document.getElementById(\"tileBarConnectBMS\").addEventListener(\"click\", ()=>{\r\n            this.bmsObj.connect();\r\n        });\r\n\r\n        document.getElementById(\"tileBarConnectTacho\").addEventListener(\"click\", ()=>{\r\n            this.tachoObj.connect();\r\n        });\r\n\r\n        document.getElementById(\"tileBarDisconnect\").addEventListener(\"click\", async ()=>{\r\n            this.resetAutoconnectBMSSilentInstant();\r\n            this.resetAutoconnectTachoSilentInstant();\r\n\r\n            // disable reconnect\r\n            this.bmsObj.reconnect = false;\r\n            this.tachoObj.reconnect = false;\r\n\r\n            await this.bmsObj.disconnect();\r\n            await this.tachoObj.disconnect();\r\n        });\r\n\r\n\r\n\r\n\r\n        // TILEBAR DBC\r\n/*\r\n        document.getElementById(\"tileBarDBC\").addEventListener(\"click\", async ()=>{\r\n            await this.dbcGUIManager.dbcMgr.addDBC();\r\n\r\n            console.log(this.dbcGUIManager.dbcMgr.getMessages());\r\n        });\r\n*/\r\n\r\n        document.getElementById(\"tileBarFileManager\").addEventListener(\"click\", async ()=>{\r\n            if(this.dbcFileManagerContainer.classList.contains(\"display-none\")){\r\n                this.dbcFileManagerContainer.classList.remove(\"display-none\");\r\n\r\n\r\n\r\n                // zoom out if not already\r\n                // and only move to settings afterward (otherwise the magnification screws up the destination)\r\n                if(sf.zoomedIn()){\r\n                    zoom.out({\r\n                        callback: ()=>{\r\n                            sf.scrollToElement(this.dbcFileManagerContainer);\r\n                        }\r\n                    });\r\n                }else{\r\n                    sf.scrollToElement(this.dbcFileManagerContainer);\r\n                }\r\n            }else{\r\n                sf.scrollToElement(this.table);\r\n            }\r\n        });\r\n\r\n\r\n        // BOARD\r\n\r\n        document.getElementById(\"tileBarDeviceInfo\").addEventListener(\"click\", ()=>{\r\n            this.captureModeMgr.closeCaptureMode();\r\n            this.hideAllSettings();\r\n\r\n            if(this.boardInfoContainer.classList.contains(\"display-none\")){\r\n                if(this.bmsObj.isConnected() || this.tachoObj.isConnected()){\r\n                    this.boardInfoContainer.classList.remove(\"display-none\");\r\n\r\n                    // initiate another update for the available OTA images (because franz wished so)\r\n                    this.otaManager.getAvailableOTAImages();\r\n\r\n                    // zoom out if not already\r\n                    // and only move to settings afterward (otherwise the magnification screws up the destination)\r\n                    if(sf.zoomedIn()){\r\n                        zoom.out({\r\n                            callback: ()=>{\r\n                                sf.scrollToElement(this.boardInfoContainer);\r\n                            }\r\n                        });\r\n                    }else{\r\n                        sf.scrollToElement(this.boardInfoContainer);\r\n                    }\r\n                }\r\n            }else{\r\n                sf.scrollToElement(this.table);\r\n            }\r\n        });\r\n\r\n\r\n        document.getElementById(\"tileBarBoardConfig\").addEventListener(\"click\", () => {\r\n\r\n            this.captureModeMgr.closeCaptureMode();\r\n\r\n            this.hideAllSettings();\r\n\r\n\r\n            if(this.boardConfigContainer.classList.contains(\"display-none\")){\r\n                if(this.bmsObj.isConnected()){\r\n                    // show settings container\r\n                    this.boardConfigContainer.classList.remove(\"display-none\");\r\n\r\n                    // zoom out if not already\r\n                    // and only move to settings afterward (otherwise the magnification screws up the destination)\r\n                    if(sf.zoomedIn()){\r\n                        zoom.out({\r\n                            callback: ()=>{\r\n                                sf.scrollToElement(this.boardConfigContainer);\r\n                            }\r\n                        });\r\n                    }else{\r\n                        sf.scrollToElement(this.boardConfigContainer);\r\n                    }\r\n                }\r\n            }else{\r\n                sf.scrollToElement(this.table);\r\n            }\r\n\r\n            // normally there would be an \"else: add hidden to the class list\"\r\n            // here, there is not, because there is a separate \"hide settings\" option\r\n        });\r\n        document.getElementById(\"tileBarBoardCalib\").addEventListener(\"click\", () => {\r\n\r\n            this.captureModeMgr.closeCaptureMode();\r\n\r\n            this.hideAllSettings();\r\n\r\n            if(this.boardCalibContainer.classList.contains(\"display-none\")){\r\n                if(this.bmsObj.isConnected()){\r\n\r\n                    // zoom out if not already\r\n                    // and only move to settings afterward (otherwise the magnification screws up the destination)\r\n                    if(sf.zoomedIn()){\r\n                        zoom.out({\r\n                            callback: ()=>{\r\n                                this.boardCalibContainer.classList.remove(\"display-none\");\r\n\r\n                                sf.scrollToElement(this.boardCalibContainer);\r\n                            }\r\n                        });\r\n                    }else{\r\n                        this.boardCalibContainer.classList.remove(\"display-none\");\r\n                        sf.scrollToElement(this.boardCalibContainer);\r\n                    }\r\n                }\r\n            }else{\r\n                sf.scrollToElement(this.table);\r\n            }\r\n        });\r\n        document.getElementById(\"tileBarTachoConfig\").addEventListener(\"click\", () => {\r\n\r\n            this.captureModeMgr.closeCaptureMode();\r\n\r\n            this.hideAllSettings();\r\n\r\n            if(this.inlineConfigContainer.classList.contains(\"display-none\")){\r\n                if(this.tachoObj.isConnected()){\r\n                    // show settings container\r\n                    this.inlineConfigContainer.classList.remove(\"display-none\");\r\n\r\n                    // zoom out if not already\r\n                    // and only move to settings afterward (otherwise the magnification screws up the destination)\r\n                    if(sf.zoomedIn()){\r\n                        zoom.out({\r\n                            callback: ()=>{\r\n                                sf.scrollToElement(this.inlineConfigContainer);\r\n                            }\r\n                        });\r\n                    }else{\r\n                        sf.scrollToElement(this.inlineConfigContainer);\r\n                    }\r\n                }\r\n            }else{\r\n                sf.scrollToElement(this.table);\r\n            }\r\n        });\r\n\r\n\r\n        // DATA DISTRIBUTION\r\n\r\n        document.getElementById(\"tileBarDataDistribution\").addEventListener(\"click\", () => {\r\n\r\n            this.captureModeMgr.closeCaptureMode();\r\n\r\n            this.hideAllSettings();\r\n\r\n            if(this.dataDistributionGUIMgr.dataDistributionGUI.classList.contains(\"display-none\")){\r\n\r\n                // remove nothingConnectedOverlay\r\n                // as per Franz's wish, it should enable users to go to the tiles without overlay\r\n                this.disableNothingConnectedOverlay();\r\n\r\n                // zoom out if not already\r\n                // and only move to settings afterward\r\n                // (otherwise the magnification screws up the destination)\r\n                if(sf.zoomedIn()){\r\n                    zoom.out({\r\n                        callback: ()=>{\r\n                            // not the nicest solution, but it works\r\n                            this.dataDistributionGUIMgr.dataDistributionGUI.classList.remove(\"display-none\");\r\n\r\n                            this.dataDistributionGUIMgr.fillMappingTable();\r\n                            this.dataDistributionGUIMgr.fillInputTable();\r\n                            this.dataDistributionGUIMgr.dataDistributionGUI.scrollIntoView({ behavior: \"smooth\"});\r\n                        }\r\n                    });\r\n                }else{\r\n                    // I suppose commenting this out works, because it is redundant with the scroll listener\r\n                    // that listener is contained in virtual keyboard\r\n                    // not the nicest solution, but it works\r\n\r\n                    this.dataDistributionGUIMgr.dataDistributionGUI.classList.remove(\"display-none\");\r\n                    sf.scrollToElement(this.dataDistributionGUIMgr.dataDistributionGUI);\r\n                }\r\n            }else{\r\n                // reverse all changes when clicking on settings again\r\n                if(!this.bmsObj.isConnected()\r\n                    && !this.tachoObj.isConnected()){\r\n                    this.enableNothingConnectedOverlay();\r\n                }\r\n\r\n                this.table.scrollIntoView({ behavior: \"smooth\"});\r\n                this.dataDistributionGUIMgr.dataDistributionGUI.classList.add(\"display-none\");\r\n            }\r\n        });\r\n\r\n\r\n\r\n\r\n        // LOGGING\r\n\r\n        document.getElementById(\"tileBarSelectDataLoggingFile\").addEventListener(\"click\", () => {\r\n            // disables button if either no devices are connected or data logging is already running\r\n            if ((this.bmsObj.isConnected() && this.tachoObj.isConnected())\r\n                || this.dataLoggingMgr.dataLoggingEnabled) {\r\n                return;\r\n            }\r\n            this.dataLoggingMgr.newFile().then();\r\n        });\r\n\r\n\r\n        document.getElementById(\"tileBarStartDataLogging\").addEventListener(\"click\", () => {\r\n            // disables button if no devices are connected\r\n            if (!this.bmsObj.isConnected() && !this.tachoObj.isConnected()) {\r\n                return;\r\n            }\r\n\r\n            console.log(this.dataLoggingMgr.loggingFileObj)\r\n\r\n            // if there is no logging data file object, get one\r\n            if(typeof this.dataLoggingMgr.loggingFileObj === \"undefined\" || this.dataLoggingMgr.loggingFileObj === null){\r\n                this.dataLoggingMgr.newFile().then(()=>{\r\n\r\n                    this.dataLoggingMgr.dataLoggingEnabled = true;\r\n\r\n                    document.getElementById(\"logging-span\").classList.add(\"recording\");\r\n                });\r\n            }else{\r\n                this.dataLoggingMgr.dataLoggingEnabled = true;\r\n\r\n                document.getElementById(\"logging-span\").classList.add(\"recording\");\r\n            }\r\n        });\r\n\r\n        document.getElementById(\"tileBarStopDataLogging\").addEventListener(\"click\", ()=>{\r\n\r\n            // don't do anything if already closed\r\n            if(!this.dataLoggingMgr.dataLoggingEnabled){\r\n                return;\r\n            }\r\n\r\n            document.getElementById(\"logging-span\").classList.remove(\"recording\");\r\n\r\n            this.dataLoggingMgr.closeFile();\r\n        });\r\n\r\n\r\n\r\n        // ABOUT (INTERFACE SETTINGS)\r\n\r\n        // toggle the about-window\r\n        document.getElementById(\"tileBar-about\").addEventListener(\"click\", ()=>{\r\n\r\n            this.captureModeMgr.closeCaptureMode();\r\n\r\n            this.hideAllSettings();\r\n\r\n            if(this.interfaceSettingsContainer.classList.contains(\"display-none\")){\r\n\r\n                // remove nothingConnectedOverlay\r\n                // as per Franz's wish, it should enable users to go to the tiles without overlay\r\n                this.disableNothingConnectedOverlay();\r\n\r\n                // zoom out if not already\r\n                // and only move to settings afterward (otherwise the magnification screws up the destination)\r\n                if(sf.zoomedIn()){\r\n                    zoom.out({\r\n                        callback: ()=>{\r\n                            // not the nicest solution, but it works\r\n                            //interfaceSettingsContainerLastSeen = Date.now();\r\n\r\n                            this.interfaceSettingsContainer.classList.remove(\"display-none\");\r\n                            this.interfaceSettingsContainer.scrollIntoView({ behavior: \"smooth\"});\r\n                        }\r\n                    });\r\n                }else{\r\n                    // I suppose commenting this out works, because it is redundant with the scroll listener\r\n                    // that listener is contained in virtual keyboard\r\n                    // not the nicest solution, but it works\r\n                    //interfaceSettingsContainerLastSeen = Date.now();\r\n\r\n                    this.interfaceSettingsContainer.classList.remove(\"display-none\");\r\n                    sf.scrollToElement(this.interfaceSettingsContainer);\r\n                    //this.interfaceSettingsContainer.scrollIntoView({ behavior: \"smooth\"});\r\n                }\r\n            }else{\r\n                // reverse all changes when clicking on settings again\r\n                if(!this.bmsObj.isConnected()\r\n                    && !this.tachoObj.isConnected()){\r\n                    this.enableNothingConnectedOverlay();\r\n                }\r\n\r\n                this.table.scrollIntoView({ behavior: \"smooth\"});\r\n                this.interfaceSettingsContainer.classList.add(\"display-none\");\r\n            }\r\n        });\r\n\r\n\r\n\r\n\r\n        // DARKMODE\r\n\r\n        document.getElementById(\"tileBar-colormode\").addEventListener(\"click\", ()=>{\r\n            this.colorModeObj.toggle();\r\n        });\r\n\r\n\r\n\r\n        this.tileBarEditMode.addEventListener(\"click\", ()=>{\r\n            this.rearrangeManager.toggleTileMoveMode();\r\n        });\r\n\r\n\r\n\r\n        // only show \"capture mode\" if the device supports and has a camera\r\n        if ('mediaDevices' in navigator && 'getUserMedia' in navigator.mediaDevices) {\r\n            this.tileBarCaptureMode.addEventListener(\"click\", ()=>{\r\n\r\n                this.hideAllSettings();\r\n\r\n                if(this.captureModeContainer.classList.contains(\"display-none\")){\r\n\r\n                    if(sf.zoomedIn()){\r\n                        zoom.out({\r\n                            callback: ()=>{\r\n                                this.captureModeMgr.activateCaptureMode();\r\n\r\n                                // scrollIntoView is used here because the offset of the tilebar is unwanted!\r\n                                this.captureModeContainer.scrollIntoView({ behavior: \"smooth\"});\r\n                            }\r\n                        });\r\n                    }else{\r\n                        this.captureModeMgr.activateCaptureMode();\r\n\r\n                        // scrollIntoView is used here because the offset of the tilebar is unwanted!\r\n                        this.captureModeContainer.scrollIntoView({ behavior: \"smooth\"});\r\n                    }\r\n                }else{\r\n                    this.captureModeMgr.closeCaptureMode();\r\n                    this.table.scrollIntoView({behavior: \"smooth\"});\r\n                }\r\n            });\r\n        }else{\r\n            this.tileBarCaptureMode.classList.add(\"display-none\");\r\n        }\r\n\r\n        document.getElementById(\"tilebar-interface-mode\").addEventListener(\"click\", ()=>{\r\n            let entered_pw = window.prompt(\"Password\",\"\");\r\n\r\n            let prev_version = \"\";\r\n            let prev_version_shortened = \"\";\r\n\r\n            try{\r\n                prev_version = document.getElementsByClassName(\"version-number-field\")[0].innerHTML;\r\n                prev_version_shortened = prev_version.split(\"-\")[0];\r\n            }catch(e){\r\n                console.log(\"[serviceworker] no version found, serviceworker not installed!\");\r\n            }\r\n\r\n\r\n            // DEV OPTIONS\r\n            if(prev_version.includes(\"dev\")){\r\n                return;\r\n            }\r\n            if(entered_pw === \"devpassword\"){\r\n                sf.setValueTexts(this.interfaceVersionFields, prev_version_shortened + \"-dev\");\r\n\r\n                this.interfaceConfigObj.updateInterfaceMode(\"dev\");\r\n            }\r\n\r\n\r\n            // EXPERIMENTAL OPTIONS\r\n            if(prev_version.includes(\"exp\")){\r\n                return;\r\n            }\r\n            if(entered_pw === \"exppassword\"){\r\n                sf.setValueTexts(this.interfaceVersionFields, prev_version_shortened + \"-exp\");\r\n\r\n                this.interfaceConfigObj.updateInterfaceMode(\"exp\");\r\n            }\r\n\r\n        });\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    scrollToBoardInfo(){\r\n        this.hideAllSettings();\r\n\r\n        this.boardInfoContainer.classList.remove(\"display-none\");\r\n\r\n        // should be zoomed out since this is only called after firmware update reset,\r\n        // but double-checking doesn't hurt xD\r\n\r\n        // zoom out if not already\r\n        // and only move to settings afterward (otherwise the magnification screws up the destination)\r\n        if(sf.zoomedIn()){\r\n            zoom.out({\r\n                callback: ()=>{\r\n                    sf.scrollToElement(this.boardInfoContainer);\r\n                }\r\n            });\r\n        }else{\r\n            sf.scrollToElement(this.boardInfoContainer);\r\n        }\r\n    }\r\n\r\n}","import gui_elements from \"./gui_elements\";\r\nimport SVGInject from \"@iconfu/svg-inject\";\r\n\r\nexport default class vehicleModel extends gui_elements{\r\n\r\n    /*\r\n    todo: implement rpm values\r\n    todo: make the limits configurable & save them\r\n    todo: make the svg configurable and save it in localstorage\r\n     */\r\n\r\n    expectedDataLabels = [\r\n        \"torqueFL\",\r\n        \"torqueFR\",\r\n        \"torqueRL\",\r\n        \"torqueRR\",\r\n\r\n        \"rpmFL\",\r\n        \"rpmFR\",\r\n        \"rpmRL\",\r\n        \"rpmRR\",\r\n\r\n        \"tempFL\",\r\n        \"tempFR\",\r\n        \"tempRL\",\r\n        \"tempRR\",\r\n    ]\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        SVGInject(document.getElementsByClassName('vehicle-model-image'));\r\n\r\n        this.torqueGaugeFL = new torqueGauge(\"vehicle-model-torque-fl\");\r\n        this.torqueGaugeFR = new torqueGauge(\"vehicle-model-torque-fr\");\r\n        this.torqueGaugeRL = new torqueGauge(\"vehicle-model-torque-rl\");\r\n        this.torqueGaugeRR = new torqueGauge(\"vehicle-model-torque-rr\");\r\n\r\n        this.enabled = true;\r\n    }\r\n\r\n    initDataDistribution(dd){\r\n        this.dd = dd;\r\n\r\n        // todo: add identifier, which component expects the label, then economic (on demand) updating will be possible\r\n        this.dd.addExpectedDataLabels(this.expectedDataLabels);\r\n\r\n        // updateOnDataInput will be called when data distribution has new data available\r\n        this.dd.registerExpecterUpdate((data)=>{\r\n            this.updateOnDataInput(data);\r\n        });\r\n    }\r\n\r\n    updateOnDataInput(data){\r\n\r\n        if(typeof data[\"torqueFL\"] !== \"undefined\"){\r\n            if(typeof data[\"rpmFL\"] !== \"undefined\"){\r\n                let direction = ((data[\"rpmFL\"] < 0) ? 'backward' : 'forward')\r\n                this.torqueGaugeFL.setTorqueDirection(data[\"torqueFL\"], direction);\r\n            }else{\r\n                this.torqueGaugeFL.setTorqueDirection(data[\"torqueFL\"], \"forward\");\r\n            }\r\n        }\r\n\r\n        if(typeof data[\"torqueFR\"] !== \"undefined\"){\r\n            if(typeof data[\"rpmFR\"] !== \"undefined\"){\r\n                let direction = ((data[\"rpmFR\"] < 0) ? 'backward' : 'forward')\r\n                this.torqueGaugeFR.setTorqueDirection(data[\"torqueFR\"], direction);\r\n            }else{\r\n                this.torqueGaugeFR.setTorqueDirection(data[\"torqueFR\"], \"forward\");\r\n            }\r\n        }\r\n\r\n        if(typeof data[\"torqueRL\"] !== \"undefined\"){\r\n            if(typeof data[\"rpmRL\"] !== \"undefined\"){\r\n                let direction = ((data[\"rpmRL\"] < 0) ? 'backward' : 'forward')\r\n                this.torqueGaugeRL.setTorqueDirection(data[\"torqueRL\"], direction);\r\n            }else{\r\n                this.torqueGaugeRL.setTorqueDirection(data[\"torqueRL\"], \"forward\");\r\n            }\r\n        }\r\n\r\n        if(typeof data[\"torqueRR\"] !== \"undefined\"){\r\n            if(typeof data[\"rpmRR\"] !== \"undefined\"){\r\n                let direction = ((data[\"rpmRR\"] < 0) ? 'backward' : 'forward')\r\n                this.torqueGaugeRR.setTorqueDirection(data[\"torqueRR\"], direction);\r\n            }else{\r\n                this.torqueGaugeRR.setTorqueDirection(data[\"torqueRR\"], \"forward\");\r\n            }\r\n        }\r\n\r\n        // to be implemented: rpm and temp\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\nclass torqueGauge{\r\n\r\n    forward = \"forward\";\r\n    backward = \"backward\";\r\n\r\n    constructor(className){\r\n\r\n        let gaugeElements = document.getElementsByClassName(className);\r\n\r\n\r\n        // catch the case that HTML is configured wrong\r\n        if(gaugeElements.length !== 2){\r\n            return;\r\n        }\r\n\r\n        // set positive and negative gauges\r\n        for (let gauge of gaugeElements) {\r\n            if(gauge.classList.contains(\"vehicle-model-torque-positive\")){\r\n                this.positiveGauge = gauge;\r\n            }\r\n\r\n            if(gauge.classList.contains(\"vehicle-model-torque-negative\")){\r\n                this.negativeGauge = gauge;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    setTorqueDirection(torquePercent, direction){\r\n        if(direction === this.forward){\r\n\r\n            // make the positive gauge green\r\n            this.positiveGauge.classList.remove(\"vehicle-model-negative-bg\");\r\n            this.positiveGauge.classList.add(\"vehicle-model-positive-bg\");\r\n\r\n            // make the negative gauge red\r\n            this.negativeGauge.classList.remove(\"vehicle-model-positive-bg\");\r\n            this.negativeGauge.classList.add(\"vehicle-model-negative-bg\");\r\n\r\n\r\n            if(torquePercent >= 0){\r\n                this.negativeGauge.style.backgroundSize = \"0 0\";\r\n                this.positiveGauge.style.backgroundSize = \"100% \" + torquePercent + \"%\";\r\n            }\r\n\r\n            if(torquePercent < 0){\r\n                this.positiveGauge.style.backgroundSize = \"0 0\";\r\n                this.negativeGauge.style.backgroundSize = \"100% \" + (-torquePercent) + \"%\";\r\n            }\r\n        }\r\n\r\n\r\n        if(direction === this.backward){\r\n\r\n            // make the positive gauge red\r\n            this.positiveGauge.classList.remove(\"vehicle-model-positive-bg\");\r\n            this.positiveGauge.classList.add(\"vehicle-model-negative-bg\");\r\n\r\n            // make the negative gauge green\r\n            this.negativeGauge.classList.remove(\"vehicle-model-negative-bg\");\r\n            this.negativeGauge.classList.add(\"vehicle-model-positive-bg\");\r\n\r\n\r\n            if(torquePercent >= 0){\r\n                this.negativeGauge.style.backgroundSize = \"0 0\";\r\n                this.positiveGauge.style.backgroundSize = \"100% \" + torquePercent + \"%\";\r\n            }\r\n\r\n            if(torquePercent < 0){\r\n                this.positiveGauge.style.backgroundSize = \"0\";\r\n                this.negativeGauge.style.backgroundSize = \"100% \" + (-torquePercent) + \"%\";\r\n            }\r\n        }\r\n\r\n    }\r\n}","/**\n * SVGInject - Version 1.2.3\n * A tiny, intuitive, robust, caching solution for injecting SVG files inline into the DOM.\n *\n * https://github.com/iconfu/svg-inject\n *\n * Copyright (c) 2018 INCORS, the creators of iconfu.com\n * @license MIT License - https://github.com/iconfu/svg-inject/blob/master/LICENSE\n */\n\n(function(window, document) {\n  // constants for better minification\n  var _CREATE_ELEMENT_ = 'createElement';\n  var _GET_ELEMENTS_BY_TAG_NAME_ = 'getElementsByTagName';\n  var _LENGTH_ = 'length';\n  var _STYLE_ = 'style';\n  var _TITLE_ = 'title';\n  var _UNDEFINED_ = 'undefined';\n  var _SET_ATTRIBUTE_ = 'setAttribute';\n  var _GET_ATTRIBUTE_ = 'getAttribute';\n\n  var NULL = null;\n\n  // constants\n  var __SVGINJECT = '__svgInject';\n  var ID_SUFFIX = '--inject-';\n  var ID_SUFFIX_REGEX = new RegExp(ID_SUFFIX + '\\\\d+', \"g\");\n  var LOAD_FAIL = 'LOAD_FAIL';\n  var SVG_NOT_SUPPORTED = 'SVG_NOT_SUPPORTED';\n  var SVG_INVALID = 'SVG_INVALID';\n  var ATTRIBUTE_EXCLUSION_NAMES = ['src', 'alt', 'onload', 'onerror'];\n  var A_ELEMENT = document[_CREATE_ELEMENT_]('a');\n  var IS_SVG_SUPPORTED = typeof SVGRect != _UNDEFINED_;\n  var DEFAULT_OPTIONS = {\n    useCache: true,\n    copyAttributes: true,\n    makeIdsUnique: true\n  };\n  // Map of IRI referenceable tag names to properties that can reference them. This is defined in\n  // https://www.w3.org/TR/SVG11/linking.html#processingIRI\n  var IRI_TAG_PROPERTIES_MAP = {\n    clipPath: ['clip-path'],\n    'color-profile': NULL,\n    cursor: NULL,\n    filter: NULL,\n    linearGradient: ['fill', 'stroke'],\n    marker: ['marker', 'marker-end', 'marker-mid', 'marker-start'],\n    mask: NULL,\n    pattern: ['fill', 'stroke'],\n    radialGradient: ['fill', 'stroke']\n  };\n  var INJECTED = 1;\n  var FAIL = 2;\n\n  var uniqueIdCounter = 1;\n  var xmlSerializer;\n  var domParser;\n\n\n  // creates an SVG document from an SVG string\n  function svgStringToSvgDoc(svgStr) {\n    domParser = domParser || new DOMParser();\n    return domParser.parseFromString(svgStr, 'text/xml');\n  }\n\n\n  // searializes an SVG element to an SVG string\n  function svgElemToSvgString(svgElement) {\n    xmlSerializer = xmlSerializer || new XMLSerializer();\n    return xmlSerializer.serializeToString(svgElement);\n  }\n\n\n  // Returns the absolute url for the specified url\n  function getAbsoluteUrl(url) {\n    A_ELEMENT.href = url;\n    return A_ELEMENT.href;\n  }\n\n\n  // Load svg with an XHR request\n  function loadSvg(url, callback, errorCallback) {\n    if (url) {\n      var req = new XMLHttpRequest();\n      req.onreadystatechange = function() {\n        if (req.readyState == 4) {\n          // readyState is DONE\n          var status = req.status;\n          if (status == 200) {\n            // request status is OK\n            callback(req.responseXML, req.responseText.trim());\n          } else if (status >= 400) {\n            // request status is error (4xx or 5xx)\n            errorCallback();\n          } else if (status == 0) {\n            // request status 0 can indicate a failed cross-domain call\n            errorCallback();\n          }\n        }\n      };\n      req.open('GET', url, true);\n      req.send();\n    }\n  }\n\n\n  // Copy attributes from img element to svg element\n  function copyAttributes(imgElem, svgElem) {\n    var attribute;\n    var attributeName;\n    var attributeValue;\n    var attributes = imgElem.attributes;\n    for (var i = 0; i < attributes[_LENGTH_]; i++) {\n      attribute = attributes[i];\n      attributeName = attribute.name;\n      // Only copy attributes not explicitly excluded from copying\n      if (ATTRIBUTE_EXCLUSION_NAMES.indexOf(attributeName) == -1) {\n        attributeValue = attribute.value;\n        // If img attribute is \"title\", insert a title element into SVG element\n        if (attributeName == _TITLE_) {\n          var titleElem;\n          var firstElementChild = svgElem.firstElementChild;\n          if (firstElementChild && firstElementChild.localName.toLowerCase() == _TITLE_) {\n            // If the SVG element's first child is a title element, keep it as the title element\n            titleElem = firstElementChild;\n          } else {\n            // If the SVG element's first child element is not a title element, create a new title\n            // ele,emt and set it as the first child\n            titleElem = document[_CREATE_ELEMENT_ + 'NS']('http://www.w3.org/2000/svg', _TITLE_);\n            svgElem.insertBefore(titleElem, firstElementChild);\n          }\n          // Set new title content\n          titleElem.textContent = attributeValue;\n        } else {\n          // Set img attribute to svg element\n          svgElem[_SET_ATTRIBUTE_](attributeName, attributeValue);\n        }\n      }\n    }\n  }\n\n\n  // This function appends a suffix to IDs of referenced elements in the <defs> in order to  to avoid ID collision\n  // between multiple injected SVGs. The suffix has the form \"--inject-X\", where X is a running number which is\n  // incremented with each injection. References to the IDs are adjusted accordingly.\n  // We assume tha all IDs within the injected SVG are unique, therefore the same suffix can be used for all IDs of one\n  // injected SVG.\n  // If the onlyReferenced argument is set to true, only those IDs will be made unique that are referenced from within the SVG\n  function makeIdsUnique(svgElem, onlyReferenced) {\n    var idSuffix = ID_SUFFIX + uniqueIdCounter++;\n    // Regular expression for functional notations of an IRI references. This will find occurences in the form\n    // url(#anyId) or url(\"#anyId\") (for Internet Explorer) and capture the referenced ID\n    var funcIriRegex = /url\\(\"?#([a-zA-Z][\\w:.-]*)\"?\\)/g;\n    // Get all elements with an ID. The SVG spec recommends to put referenced elements inside <defs> elements, but\n    // this is not a requirement, therefore we have to search for IDs in the whole SVG.\n    var idElements = svgElem.querySelectorAll('[id]');\n    var idElem;\n    // An object containing referenced IDs  as keys is used if only referenced IDs should be uniquified.\n    // If this object does not exist, all IDs will be uniquified.\n    var referencedIds = onlyReferenced ? [] : NULL;\n    var tagName;\n    var iriTagNames = {};\n    var iriProperties = [];\n    var changed = false;\n    var i, j;\n\n    if (idElements[_LENGTH_]) {\n      // Make all IDs unique by adding the ID suffix and collect all encountered tag names\n      // that are IRI referenceable from properities.\n      for (i = 0; i < idElements[_LENGTH_]; i++) {\n        tagName = idElements[i].localName; // Use non-namespaced tag name\n        // Make ID unique if tag name is IRI referenceable\n        if (tagName in IRI_TAG_PROPERTIES_MAP) {\n          iriTagNames[tagName] = 1;\n        }\n      }\n      // Get all properties that are mapped to the found IRI referenceable tags\n      for (tagName in iriTagNames) {\n        (IRI_TAG_PROPERTIES_MAP[tagName] || [tagName]).forEach(function (mappedProperty) {\n          // Add mapped properties to array of iri referencing properties.\n          // Use linear search here because the number of possible entries is very small (maximum 11)\n          if (iriProperties.indexOf(mappedProperty) < 0) {\n            iriProperties.push(mappedProperty);\n          }\n        });\n      }\n      if (iriProperties[_LENGTH_]) {\n        // Add \"style\" to properties, because it may contain references in the form 'style=\"fill:url(#myFill)\"'\n        iriProperties.push(_STYLE_);\n      }\n      // Run through all elements of the SVG and replace IDs in references.\n      // To get all descending elements, getElementsByTagName('*') seems to perform faster than querySelectorAll('*').\n      // Since svgElem.getElementsByTagName('*') does not return the svg element itself, we have to handle it separately.\n      var descElements = svgElem[_GET_ELEMENTS_BY_TAG_NAME_]('*');\n      var element = svgElem;\n      var propertyName;\n      var value;\n      var newValue;\n      for (i = -1; element != NULL;) {\n        if (element.localName == _STYLE_) {\n          // If element is a style element, replace IDs in all occurences of \"url(#anyId)\" in text content\n          value = element.textContent;\n          newValue = value && value.replace(funcIriRegex, function(match, id) {\n            if (referencedIds) {\n              referencedIds[id] = 1;\n            }\n            return 'url(#' + id + idSuffix + ')';\n          });\n          if (newValue !== value) {\n            element.textContent = newValue;\n          }\n        } else if (element.hasAttributes()) {\n          // Run through all property names for which IDs were found\n          for (j = 0; j < iriProperties[_LENGTH_]; j++) {\n            propertyName = iriProperties[j];\n            value = element[_GET_ATTRIBUTE_](propertyName);\n            newValue = value && value.replace(funcIriRegex, function(match, id) {\n              if (referencedIds) {\n                referencedIds[id] = 1;\n              }\n                return 'url(#' + id + idSuffix + ')';\n            });\n            if (newValue !== value) {\n              element[_SET_ATTRIBUTE_](propertyName, newValue);\n            }\n          }\n          // Replace IDs in xlink:ref and href attributes\n          ['xlink:href', 'href'].forEach(function(refAttrName) {\n            var iri = element[_GET_ATTRIBUTE_](refAttrName);\n            if (/^\\s*#/.test(iri)) { // Check if iri is non-null and internal reference\n              iri = iri.trim();\n              element[_SET_ATTRIBUTE_](refAttrName, iri + idSuffix);\n              if (referencedIds) {\n                // Add ID to referenced IDs\n                referencedIds[iri.substring(1)] = 1;\n              }\n            }\n          });\n        }\n        element = descElements[++i];\n      }\n      for (i = 0; i < idElements[_LENGTH_]; i++) {\n        idElem = idElements[i];\n        // If set of referenced IDs exists, make only referenced IDs unique,\n        // otherwise make all IDs unique.\n        if (!referencedIds || referencedIds[idElem.id]) {\n          // Add suffix to element's ID\n          idElem.id += idSuffix;\n          changed = true;\n        }\n      }\n    }\n    // return true if SVG element has changed\n    return changed;\n  }\n\n\n  // For cached SVGs the IDs are made unique by simply replacing the already inserted unique IDs with a\n  // higher ID counter. This is much more performant than a call to makeIdsUnique().\n  function makeIdsUniqueCached(svgString) {\n    return svgString.replace(ID_SUFFIX_REGEX, ID_SUFFIX + uniqueIdCounter++);\n  }\n\n\n  // Inject SVG by replacing the img element with the SVG element in the DOM\n  function inject(imgElem, svgElem, absUrl, options) {\n    if (svgElem) {\n      svgElem[_SET_ATTRIBUTE_]('data-inject-url', absUrl);\n      var parentNode = imgElem.parentNode;\n      if (parentNode) {\n        if (options.copyAttributes) {\n          copyAttributes(imgElem, svgElem);\n        }\n        // Invoke beforeInject hook if set\n        var beforeInject = options.beforeInject;\n        var injectElem = (beforeInject && beforeInject(imgElem, svgElem)) || svgElem;\n        // Replace img element with new element. This is the actual injection.\n        parentNode.replaceChild(injectElem, imgElem);\n        // Mark img element as injected\n        imgElem[__SVGINJECT] = INJECTED;\n        removeOnLoadAttribute(imgElem);\n        // Invoke afterInject hook if set\n        var afterInject = options.afterInject;\n        if (afterInject) {\n          afterInject(imgElem, injectElem);\n        }\n      }\n    } else {\n      svgInvalid(imgElem, options);\n    }\n  }\n\n\n  // Merges any number of options objects into a new object\n  function mergeOptions() {\n    var mergedOptions = {};\n    var args = arguments;\n    // Iterate over all specified options objects and add all properties to the new options object\n    for (var i = 0; i < args[_LENGTH_]; i++) {\n      var argument = args[i];\n        for (var key in argument) {\n          if (argument.hasOwnProperty(key)) {\n            mergedOptions[key] = argument[key];\n          }\n        }\n      }\n    return mergedOptions;\n  }\n\n\n  // Adds the specified CSS to the document's <head> element\n  function addStyleToHead(css) {\n    var head = document[_GET_ELEMENTS_BY_TAG_NAME_]('head')[0];\n    if (head) {\n      var style = document[_CREATE_ELEMENT_](_STYLE_);\n      style.type = 'text/css';\n      style.appendChild(document.createTextNode(css));\n      head.appendChild(style);\n    }\n  }\n\n\n  // Builds an SVG element from the specified SVG string\n  function buildSvgElement(svgStr, verify) {\n    if (verify) {\n      var svgDoc;\n      try {\n        // Parse the SVG string with DOMParser\n        svgDoc = svgStringToSvgDoc(svgStr);\n      } catch(e) {\n        return NULL;\n      }\n      if (svgDoc[_GET_ELEMENTS_BY_TAG_NAME_]('parsererror')[_LENGTH_]) {\n        // DOMParser does not throw an exception, but instead puts parsererror tags in the document\n        return NULL;\n      }\n      return svgDoc.documentElement;\n    } else {\n      var div = document.createElement('div');\n      div.innerHTML = svgStr;\n      return div.firstElementChild;\n    }\n  }\n\n\n  function removeOnLoadAttribute(imgElem) {\n    // Remove the onload attribute. Should only be used to remove the unstyled image flash protection and\n    // make the element visible, not for removing the event listener.\n    imgElem.removeAttribute('onload');\n  }\n\n\n  function errorMessage(msg) {\n    console.error('SVGInject: ' + msg);\n  }\n\n\n  function fail(imgElem, status, options) {\n    imgElem[__SVGINJECT] = FAIL;\n    if (options.onFail) {\n      options.onFail(imgElem, status);\n    } else {\n      errorMessage(status);\n    }\n  }\n\n\n  function svgInvalid(imgElem, options) {\n    removeOnLoadAttribute(imgElem);\n    fail(imgElem, SVG_INVALID, options);\n  }\n\n\n  function svgNotSupported(imgElem, options) {\n    removeOnLoadAttribute(imgElem);\n    fail(imgElem, SVG_NOT_SUPPORTED, options);\n  }\n\n\n  function loadFail(imgElem, options) {\n    fail(imgElem, LOAD_FAIL, options);\n  }\n\n\n  function removeEventListeners(imgElem) {\n    imgElem.onload = NULL;\n    imgElem.onerror = NULL;\n  }\n\n\n  function imgNotSet(msg) {\n    errorMessage('no img element');\n  }\n\n\n  function createSVGInject(globalName, options) {\n    var defaultOptions = mergeOptions(DEFAULT_OPTIONS, options);\n    var svgLoadCache = {};\n\n    if (IS_SVG_SUPPORTED) {\n      // If the browser supports SVG, add a small stylesheet that hides the <img> elements until\n      // injection is finished. This avoids showing the unstyled SVGs before style is applied.\n      addStyleToHead('img[onload^=\"' + globalName + '(\"]{visibility:hidden;}');\n    }\n\n\n    /**\n     * SVGInject\n     *\n     * Injects the SVG specified in the `src` attribute of the specified `img` element or array of `img`\n     * elements. Returns a Promise object which resolves if all passed in `img` elements have either been\n     * injected or failed to inject (Only if a global Promise object is available like in all modern browsers\n     * or through a polyfill).\n     *\n     * Options:\n     * useCache: If set to `true` the SVG will be cached using the absolute URL. Default value is `true`.\n     * copyAttributes: If set to `true` the attributes will be copied from `img` to `svg`. Dfault value\n     *     is `true`.\n     * makeIdsUnique: If set to `true` the ID of elements in the `<defs>` element that can be references by\n     *     property values (for example 'clipPath') are made unique by appending \"--inject-X\", where X is a\n     *     running number which increases with each injection. This is done to avoid duplicate IDs in the DOM.\n     * beforeLoad: Hook before SVG is loaded. The `img` element is passed as a parameter. If the hook returns\n     *     a string it is used as the URL instead of the `img` element's `src` attribute.\n     * afterLoad: Hook after SVG is loaded. The loaded `svg` element and `svg` string are passed as a\n     *     parameters. If caching is active this hook will only get called once for injected SVGs with the\n     *     same absolute path. Changes to the `svg` element in this hook will be applied to all injected SVGs\n     *     with the same absolute path. It's also possible to return an `svg` string or `svg` element which\n     *     will then be used for the injection.\n     * beforeInject: Hook before SVG is injected. The `img` and `svg` elements are passed as parameters. If\n     *     any html element is returned it gets injected instead of applying the default SVG injection.\n     * afterInject: Hook after SVG is injected. The `img` and `svg` elements are passed as parameters.\n     * onAllFinish: Hook after all `img` elements passed to an SVGInject() call have either been injected or\n     *     failed to inject.\n     * onFail: Hook after injection fails. The `img` element and a `status` string are passed as an parameter.\n     *     The `status` can be either `'SVG_NOT_SUPPORTED'` (the browser does not support SVG),\n     *     `'SVG_INVALID'` (the SVG is not in a valid format) or `'LOAD_FAILED'` (loading of the SVG failed).\n     *\n     * @param {HTMLImageElement} img - an img element or an array of img elements\n     * @param {Object} [options] - optional parameter with [options](#options) for this injection.\n     */\n    function SVGInject(img, options) {\n      options = mergeOptions(defaultOptions, options);\n\n      var run = function(resolve) {\n        var allFinish = function() {\n          var onAllFinish = options.onAllFinish;\n          if (onAllFinish) {\n            onAllFinish();\n          }\n          resolve && resolve();\n        };\n\n        if (img && typeof img[_LENGTH_] != _UNDEFINED_) {\n          // an array like structure of img elements\n          var injectIndex = 0;\n          var injectCount = img[_LENGTH_];\n\n          if (injectCount == 0) {\n            allFinish();\n          } else {\n            var finish = function() {\n              if (++injectIndex == injectCount) {\n                allFinish();\n              }\n            };\n\n            for (var i = 0; i < injectCount; i++) {\n              SVGInjectElement(img[i], options, finish);\n            }\n          }\n        } else {\n          // only one img element\n          SVGInjectElement(img, options, allFinish);\n        }\n      };\n\n      // return a Promise object if globally available\n      return typeof Promise == _UNDEFINED_ ? run() : new Promise(run);\n    }\n\n\n    // Injects a single svg element. Options must be already merged with the default options.\n    function SVGInjectElement(imgElem, options, callback) {\n      if (imgElem) {\n        var svgInjectAttributeValue = imgElem[__SVGINJECT];\n        if (!svgInjectAttributeValue) {\n          removeEventListeners(imgElem);\n\n          if (!IS_SVG_SUPPORTED) {\n            svgNotSupported(imgElem, options);\n            callback();\n            return;\n          }\n          // Invoke beforeLoad hook if set. If the beforeLoad returns a value use it as the src for the load\n          // URL path. Else use the imgElem's src attribute value.\n          var beforeLoad = options.beforeLoad;\n          var src = (beforeLoad && beforeLoad(imgElem)) || imgElem[_GET_ATTRIBUTE_]('src');\n\n          if (!src) {\n            // If no image src attribute is set do no injection. This can only be reached by using javascript\n            // because if no src attribute is set the onload and onerror events do not get called\n            if (src === '') {\n              loadFail(imgElem, options);\n            }\n            callback();\n            return;\n          }\n\n          // set array so later calls can register callbacks\n          var onFinishCallbacks = [];\n          imgElem[__SVGINJECT] = onFinishCallbacks;\n\n          var onFinish = function() {\n            callback();\n            onFinishCallbacks.forEach(function(onFinishCallback) {\n              onFinishCallback();\n            });\n          };\n\n          var absUrl = getAbsoluteUrl(src);\n          var useCacheOption = options.useCache;\n          var makeIdsUniqueOption = options.makeIdsUnique;\n          \n          var setSvgLoadCacheValue = function(val) {\n            if (useCacheOption) {\n              svgLoadCache[absUrl].forEach(function(svgLoad) {\n                svgLoad(val);\n              });\n              svgLoadCache[absUrl] = val;\n            }\n          };\n\n          if (useCacheOption) {\n            var svgLoad = svgLoadCache[absUrl];\n\n            var handleLoadValue = function(loadValue) {\n              if (loadValue === LOAD_FAIL) {\n                loadFail(imgElem, options);\n              } else if (loadValue === SVG_INVALID) {\n                svgInvalid(imgElem, options);\n              } else {\n                var hasUniqueIds = loadValue[0];\n                var svgString = loadValue[1];\n                var uniqueIdsSvgString = loadValue[2];\n                var svgElem;\n\n                if (makeIdsUniqueOption) {\n                  if (hasUniqueIds === NULL) {\n                    // IDs for the SVG string have not been made unique before. This may happen if previous\n                    // injection of a cached SVG have been run with the option makedIdsUnique set to false\n                    svgElem = buildSvgElement(svgString, false);\n                    hasUniqueIds = makeIdsUnique(svgElem, false);\n\n                    loadValue[0] = hasUniqueIds;\n                    loadValue[2] = hasUniqueIds && svgElemToSvgString(svgElem);\n                  } else if (hasUniqueIds) {\n                    // Make IDs unique for already cached SVGs with better performance\n                    svgString = makeIdsUniqueCached(uniqueIdsSvgString);\n                  }\n                }\n\n                svgElem = svgElem || buildSvgElement(svgString, false);\n\n                inject(imgElem, svgElem, absUrl, options);\n              }\n              onFinish();\n            };\n\n            if (typeof svgLoad != _UNDEFINED_) {\n              // Value for url exists in cache\n              if (svgLoad.isCallbackQueue) {\n                // Same url has been cached, but value has not been loaded yet, so add to callbacks\n                svgLoad.push(handleLoadValue);\n              } else {\n                handleLoadValue(svgLoad);\n              }\n              return;\n            } else {\n              var svgLoad = [];\n              // set property isCallbackQueue to Array to differentiate from array with cached loaded values\n              svgLoad.isCallbackQueue = true;\n              svgLoadCache[absUrl] = svgLoad;\n            }\n          }\n\n          // Load the SVG because it is not cached or caching is disabled\n          loadSvg(absUrl, function(svgXml, svgString) {\n            // Use the XML from the XHR request if it is an instance of Document. Otherwise\n            // (for example of IE9), create the svg document from the svg string.\n            var svgElem = svgXml instanceof Document ? svgXml.documentElement : buildSvgElement(svgString, true);\n\n            var afterLoad = options.afterLoad;\n            if (afterLoad) {\n              // Invoke afterLoad hook which may modify the SVG element. After load may also return a new\n              // svg element or svg string\n              var svgElemOrSvgString = afterLoad(svgElem, svgString) || svgElem;\n              if (svgElemOrSvgString) {\n                // Update svgElem and svgString because of modifications to the SVG element or SVG string in\n                // the afterLoad hook, so the modified SVG is also used for all later cached injections\n                var isString = typeof svgElemOrSvgString == 'string';\n                svgString = isString ? svgElemOrSvgString : svgElemToSvgString(svgElem);\n                svgElem = isString ? buildSvgElement(svgElemOrSvgString, true) : svgElemOrSvgString;\n              }\n            }\n\n            if (svgElem instanceof SVGElement) {\n              var hasUniqueIds = NULL;\n              if (makeIdsUniqueOption) {\n                hasUniqueIds = makeIdsUnique(svgElem, false);\n              }\n\n              if (useCacheOption) {\n                var uniqueIdsSvgString = hasUniqueIds && svgElemToSvgString(svgElem);\n                // set an array with three entries to the load cache\n                setSvgLoadCacheValue([hasUniqueIds, svgString, uniqueIdsSvgString]);\n              }\n\n              inject(imgElem, svgElem, absUrl, options);\n            } else {\n              svgInvalid(imgElem, options);\n              setSvgLoadCacheValue(SVG_INVALID);\n            }\n            onFinish();\n          }, function() {\n            loadFail(imgElem, options);\n            setSvgLoadCacheValue(LOAD_FAIL);\n            onFinish();\n          });\n        } else {\n          if (Array.isArray(svgInjectAttributeValue)) {\n            // svgInjectAttributeValue is an array. Injection is not complete so register callback\n            svgInjectAttributeValue.push(callback);\n          } else {\n            callback();\n          }\n        }\n      } else {\n        imgNotSet();\n      }\n    }\n\n\n    /**\n     * Sets the default [options](#options) for SVGInject.\n     *\n     * @param {Object} [options] - default [options](#options) for an injection.\n     */\n    SVGInject.setOptions = function(options) {\n      defaultOptions = mergeOptions(defaultOptions, options);\n    };\n\n\n    // Create a new instance of SVGInject\n    SVGInject.create = createSVGInject;\n\n\n    /**\n     * Used in onerror Event of an `<img>` element to handle cases when the loading the original src fails\n     * (for example if file is not found or if the browser does not support SVG). This triggers a call to the\n     * options onFail hook if available. The optional second parameter will be set as the new src attribute\n     * for the img element.\n     *\n     * @param {HTMLImageElement} img - an img element\n     * @param {String} [fallbackSrc] - optional parameter fallback src\n     */\n    SVGInject.err = function(img, fallbackSrc) {\n      if (img) {\n        if (img[__SVGINJECT] != FAIL) {\n          removeEventListeners(img);\n\n          if (!IS_SVG_SUPPORTED) {\n            svgNotSupported(img, defaultOptions);\n          } else {\n            removeOnLoadAttribute(img);\n            loadFail(img, defaultOptions);\n          }\n          if (fallbackSrc) {\n            removeOnLoadAttribute(img);\n            img.src = fallbackSrc;\n          }\n        }\n      } else {\n        imgNotSet();\n      }\n    };\n\n    window[globalName] = SVGInject;\n\n    return SVGInject;\n  }\n\n  var SVGInjectInstance = createSVGInject('SVGInject');\n\n  if (typeof module == 'object' && typeof module.exports == 'object') {\n    module.exports = SVGInjectInstance;\n  }\n})(window, document);","function table2Enum(table) {\n    const regEx = /(?<value>[0-9-]+) \"(?<description>(?:[^\"\\\\]|\\\\.)*)\"/gi;\n    const matches = table.matchAll(regEx);\n    const definitions = new Map();\n    for (const match of matches) {\n        if (match.groups) {\n            definitions.set(parseInt(match.groups.value, 10), match.groups.description);\n        }\n    }\n    return definitions;\n}\nfunction cleanComment(comment) {\n    const noSemiColon = comment.replace(';', '');\n    const final = noSemiColon.replace(/\"/gi, '');\n    return final.trim();\n}\nfunction extractAttrType(str) {\n    const match = str.match(/BO_|BU_|SG_|EV_/);\n    if (match) {\n        switch (match === null || match === void 0 ? void 0 : match.toString()) {\n            case 'BO_':\n                return 'Message';\n            case 'BU_':\n                return 'Node';\n            case 'SG_':\n                return 'Signal';\n            case 'EV_':\n                return 'EnvironmentVariable';\n            default:\n                return 'Global';\n        }\n    }\n    else {\n        return 'Global';\n    }\n}\nfunction extractAttrNode(type, str) {\n    let matches;\n    switch (type) {\n        case 'Message':\n            return '';\n        case 'Signal':\n            return '';\n        case 'Node':\n            matches = str.match(/BU_\\s(?<node>[a-zA-Z0-9_]+)\\s(?<value>.*)\\s*;/);\n            if (matches) {\n                if (matches.groups) {\n                    return matches.groups.node;\n                }\n            }\n        case 'Global':\n            return '';\n        case 'EnvironmentVariable':\n            matches = str.match(/EV_\\s(?<node>[a-zA-Z0-9_]+)\\s(?<value>.*)\\s*;/);\n            if (matches) {\n                if (matches.groups) {\n                    return matches.groups.node;\n                }\n            }\n        default:\n            return '';\n    }\n}\nfunction extractAttrVal(type, str) {\n    let matches;\n    switch (type) {\n        case 'Message':\n            matches = str.match(/BO_\\s(?<id>[0-9]+)\\s(?<value>.*);/);\n            if (matches) {\n                if (matches.groups) {\n                    return cleanComment(matches.groups.value);\n                }\n            }\n        case 'Signal':\n            matches = str.match(/SG_\\s(?<id>[0-9]+)\\s(?<signalName>[a-zA-Z0-9_]+)\\s(?<value>.*);/);\n            if (matches) {\n                if (matches.groups) {\n                    return cleanComment(matches.groups.value);\n                }\n            }\n        case 'Node':\n            matches = str.match(/BU_\\s(?<node>[a-zA-Z0-9_]+)\\s(?<value>.*)\\s*;/);\n            if (matches) {\n                if (matches.groups) {\n                    return cleanComment(matches.groups.value);\n                }\n            }\n        case 'Global':\n            matches = str.match(/(?<value>.*)\\s*;/);\n            if (matches) {\n                if (matches.groups) {\n                    return cleanComment(matches.groups.value);\n                }\n            }\n        case 'EnvironmentVariable':\n            matches = str.match(/EV_\\s(?<node>[a-zA-Z0-9_]+)\\s(?<value>.*)\\s*;/);\n            if (matches) {\n                if (matches.groups) {\n                    return cleanComment(matches.groups.value);\n                }\n            }\n        default:\n            return '';\n    }\n}\nfunction extractAttrSignalName(type, str) {\n    let matches;\n    let signalName = '';\n    switch (type) {\n        case 'Message':\n            break;\n        case 'Signal':\n            matches = str.match(/SG_\\s(?<id>[0-9]+)\\s(?<signalName>[a-zA-Z0-9_]+)\\s(?<value>.*);/);\n            if (matches) {\n                if (matches.groups) {\n                    signalName = matches.groups.signalName;\n                }\n            }\n            break;\n    }\n    return signalName;\n}\nfunction extractAttrId(type, str) {\n    let matches;\n    switch (type) {\n        case 'Message':\n            matches = str.match(/BO_\\s(?<id>[0-9]+)\\s(?<value>.*);/);\n            if (matches) {\n                if (matches.groups) {\n                    return matches.groups.id;\n                }\n            }\n        case 'Signal':\n            matches = str.match(/SG_\\s(?<id>[0-9]+)\\s(?<signalName>[a-zA-Z0-9_]+)\\s(?<value>.*);/);\n            if (matches) {\n                if (matches.groups) {\n                    return matches.groups.id;\n                }\n            }\n        case 'Node':\n            return '';\n        case 'Global':\n            return '';\n        default:\n            return '';\n    }\n}\nfunction extractMinVal(type, str) {\n    let min = 0;\n    switch (type) {\n        case 'FLOAT':\n            const floatMatches = str.match(/\\s*(?<min>[0-9.]+)\\s(?<max>[0-9.]+)\\s*;/);\n            if (floatMatches && floatMatches.groups) {\n                min = parseFloat(floatMatches.groups.min);\n            }\n            break;\n        case 'STRING':\n            break;\n        case 'HEX':\n            const hexMatches = str.match(/\\s*(?<min>[0-9.]+)\\s(?<max>[0-9.]+)\\s*;/);\n            if (hexMatches && hexMatches.groups) {\n                min = parseFloat(hexMatches.groups.min);\n            }\n            break;\n        case 'ENUM':\n            break;\n        case 'INT':\n            const intMatches = str.match(/\\s*(?<min>[0-9.]+)\\s(?<max>[0-9.]+)\\s*;/);\n            if (intMatches && intMatches.groups) {\n                min = parseFloat(intMatches.groups.min);\n            }\n            break;\n    }\n    return min;\n}\nfunction extractMaxVal(type, str) {\n    let max = 0;\n    switch (type) {\n        case 'FLOAT':\n            const floatMatches = str.match(/\\s*(?<min>[0-9.]+)\\s(?<max>[0-9.]+)\\s*;/);\n            if (floatMatches && floatMatches.groups) {\n                max = parseFloat(floatMatches.groups.max);\n            }\n            break;\n        case 'STRING':\n            break;\n        case 'HEX':\n            const hexMatches = str.match(/\\s*(?<min>[0-9.]+)\\s(?<max>[0-9.]+)\\s*;/);\n            if (hexMatches && hexMatches.groups) {\n                max = parseFloat(hexMatches.groups.max);\n            }\n            break;\n        case 'ENUM':\n            break;\n        case 'INT':\n            const intMatches = str.match(/\\s*(?<min>[0-9.]+)\\s(?<max>[0-9.]+)\\s*;/);\n            if (intMatches && intMatches.groups) {\n                max = parseFloat(intMatches.groups.max);\n            }\n            break;\n    }\n    return max;\n}\nfunction extractOptions(type, str) {\n    if (type !== 'ENUM') {\n        return [];\n    }\n    const newStr = str.replace(';', '');\n    const strArr = newStr.split(',');\n    const final = strArr.map((s) => {\n        return s.replace(/\"/gi, '').trim();\n    });\n    return final;\n}\n\n/* AutoGenerated Code, changes may be overwritten\n* INPUT GRAMMAR:\n* ---\n* import { table2Enum, cleanComment, extractAttrType,\n* extractAttrNode, extractAttrVal, extractAttrId, extractMinVal,\n* extractMaxVal, extractOptions, extractAttrSignalName } from \"./parserHelpers\";\n* ---\n* Choice := CanNode | CanMessage | SignalMultiplexVal | CanSignal | ValTable | Val | SignalComment | MessageComment | NodeComment |\n* GlobalAttribute | MessageAttribute | SignalAttribute | NodeAttribute | AttributeDefault | AttributeValue |\n* Version | NewSymbolValue | BlankLine | NewSymbol | BusSpeed | Comment | CanEnvironmentVariable | EnvironmentVarData |\n* EnvironmentVariableComment | MessageTransmitter | EnvironmentAttribute | EnvironmentVal | CanSignalGroup | SigValType\n* BlankLine := ''$\n* CanSignalGroup := 'SIG_GROUP_\\s+' raw_id={'[0-9]+'} '\\s+' name={'[a-zA-Z0-9_]+'} '\\s+' raw_group_number={'[0-9]+'} '\\s+:\\s*' raw_signal_string={'[a-zA-Z0-9_\\s]*'} '\\s*'\n*     .signals = string[] { return raw_signal_string.replace(';', '').split(' '); }\n*     .id = number {return parseInt(raw_id,10);}\n*     .group_number = number {return parseInt(raw_group_number,10);}\n* MessageTransmitter := 'BO_TX_BU_\\s+' raw_id={'[0-9]+'} '\\s*:\\s*' raw_nodes = {'.*'}\n*     .id = number {return parseInt(raw_id,10);}\n*     .nodes = string[] {return raw_nodes.replace(';', '').split(',');}\n* CanEnvironmentVariable := 'EV_\\s+' name={'[a-zA-Z0-9_]+'} '\\s*:\\s*' type={'0|1|2'} '\\s+\\[' raw_min={'[\\-0-9.]+'} '\\|' raw_max={'[\\-0-9.]+'} '\\]\\s' raw_unit={'\".*\"'} '\\s+' raw_inital_value={'[\\-0-9.]+'} '\\s+' raw_ev_id={'[0-9]+'} '\\s+' access_type={'[a-zA-Z0-9_]+'} '\\s+' node={'[a-zA-Z0-9_]+'}\n*     .min = number {return parseFloat(raw_min);}\n*     .max = number {return parseFloat(raw_max);}\n*     .unit = string {return cleanComment(raw_unit);}\n*     .initial_value = number {return parseFloat(raw_inital_value);}\n*     .ev_id = number {return parseInt(raw_ev_id,10);}\n* EnvironmentVarData := 'ENVVAR_DATA_\\s+' name={'[a-zA-Z0-9_]+'} '\\s*:\\s*' raw_value={'[0-9]+'}\n*     .value = number {return parseInt(raw_value);}\n* EnvironmentVariableComment := 'CM_ EV_\\s+' name={'[a-zA-Z0-9_]+'} '\\s' raw_comment={'.*'}\n*     .comment = string {return cleanComment(raw_comment);}\n* Version := 'VERSION' '\\s+' raw_version={'.*'}\n*     .version = string {return cleanComment(raw_version);}\n* NewSymbol := 'NS_\\s*:'\n* BusSpeed := 'BS_:'\n* NewSymbolValue := '\\s+' symbol={'[a-zA-Z_]+_'} '$'?\n* CanNode := 'BU_:\\s*' raw_node_string={'[a-zA-Z0-9_\\s]*'} '\\s*' ';'?\n*     .node_names = string[] { return raw_node_string.split(' '); }\n* CanMessage := 'BO_\\s' raw_id={'[0-9]+'} '\\s*' name={'[a-zA-Z0-9_]*'} ':\\s*' raw_dlc={'[0-9]'} '\\s*' node={'[a-zA-Z0-9_]*'}\n*     .id = number {return parseInt(raw_id,10);}\n*     .dlc = number {return parseInt(raw_dlc,10);}\n* CanSignal := '\\s*SG_\\s' name={'[a-zA-Z0-9_]+'} '\\s*' multiplex={'M|[m0-9M]*|\\s'} '\\s*:\\s' raw_start_bit={'[0-9]+'} '\\|' raw_length={'[0-9]+'} '@' raw_endian={'[1|0]'} raw_signed={'[+|-]'} '\\s\\(' raw_factor={'[\\-0-9.]+'} ',' raw_offset={'[\\-0-9.]+'} '\\)\\s\\[' raw_min={'[\\-0-9.]+'} '\\|' raw_max={'[\\-0-9.]+'} '\\]\\s' raw_unit={'\".*\"'} '\\s' raw_node_str={'.*'}\n*     .multiplexer = boolean {return multiplex.includes('M');}\n*     .unit = string {return cleanComment(raw_unit);}\n*     .nodes = string[] {return raw_node_str.trim().split(',');}\n*     .start_bit = number {return parseInt(raw_start_bit,10);}\n*     .length = number {return parseInt(raw_length,10);}\n*     .endian = string {return raw_endian === '1' ? 'Intel' : 'Motorola'}\n*     .signed = boolean {return raw_signed === '-' ? true : false;}\n*     .factor = number {return parseFloat(raw_factor);}\n*     .offset = number {return parseFloat(raw_offset);}\n*     .min = number {return parseFloat(raw_min);}\n*     .max = number {return parseFloat(raw_max);}\n* SignalMultiplexVal := 'SG_MUL_VAL_\\s' raw_id={'[0-9]+'} '\\s*' name={'[a-zA-Z0-9_]+'} '\\s*' switch_name={'[a-zA-Z0-9_]+'} '\\s*' raw_value_ranges={'[0-9-,\\s]+;'}\n*     .id = number {return parseInt(raw_id,10);}\n*     .value_ranges = string[][] {return raw_value_ranges.replace(';','').replace(/\\s/g,'').split(',').map((value)=>{return value.split('-');});}\n* ValTable := 'VAL_TABLE_\\s' name={'[a-zA-Z0-9_]+'} '\\s' raw_table={'.*'}\n*     .enum = Map<number,string> {return table2Enum(raw_table.replace(';',''));}\n* Val := 'VAL_\\s' raw_id={'[0-9]+'} '\\s' name={'[a-zA-Z0-9_]+'} '\\s' raw_table={'.*'}\n*     .id = number {return parseInt(raw_id,10);}\n*     .enum = Map<number,string> {return table2Enum(raw_table.replace(';',''));}\n* EnvironmentVal := 'VAL_\\s' !'0-9' name={'[a-zA-Z0-9_]+'} '\\s' raw_table={'.*'}\n*     .enum = Map<number,string> {return table2Enum(raw_table.replace(';',''));}\n* Comment := 'CM_\\s' !'[SG_|BO_|BU_|EV_]' raw_comment={'.*'}\n*     .comment = string {return cleanComment(raw_comment);}\n* SignalComment := 'CM_ SG_\\s' raw_id={'[0-9]+'} '\\s' name={'[a-zA-Z0-9_]+'} '\\s' raw_comment={'.*'}\n*     .comment = string {return cleanComment(raw_comment);}\n*     .id = number {return parseInt(raw_id,10);}\n* MessageComment := 'CM_ BO_\\s' raw_id={'[0-9]+'} '\\s' raw_comment={'.*'}\n*     .comment = string {return cleanComment(raw_comment);}\n*     .id = number {return parseInt(raw_id,10);}\n* NodeComment := 'CM_ BU_\\s' name={'[a-zA-Z0-9_]+'} '\\s' raw_comment={'.*'}\n*     .comment = string {return cleanComment(raw_comment);}\n* GlobalAttribute := 'BA_DEF_\\s+' '\"'name={'[a-zA-Z0-9_]+'}'\"' '\\s' type={'[A-Z]+'} '\\s' raw_value={'.*'}\n*     .min = number {return extractMinVal(type, raw_value);}\n*     .max = number {return extractMaxVal(type, raw_value);}\n*     .enum = string[] {return extractOptions(type, raw_value);}\n* MessageAttribute := 'BA_DEF_ BO_\\s+' '\"'name={'[a-zA-Z0-9_]+'}'\"' '\\s' type={'[A-Z]+'} '\\s'? raw_value={'.*'}\n*     .min = number {return extractMinVal(type, raw_value);}\n*     .max = number {return extractMaxVal(type, raw_value);}\n*     .enum = string[] {return extractOptions(type, raw_value);}\n* EnvironmentAttribute := 'BA_DEF_ EV_\\s+' '\"'name={'[a-zA-Z0-9_]+'}'\"' '\\s' type={'[A-Z]+'} '\\s'? raw_value={'.*'}\n*     .min = number {return extractMinVal(type, raw_value);}\n*     .max = number {return extractMaxVal(type, raw_value);}\n*     .enum = string[] {return extractOptions(type, raw_value);}\n* NodeAttribute := 'BA_DEF_ BU_\\s+' '\"'name={'[a-zA-Z0-9_]+'}'\"' '\\s' type={'[A-Z]+'} '\\s'? raw_value={'.*'}\n*     .min = number {return extractMinVal(type, raw_value);}\n*     .max = number {return extractMaxVal(type, raw_value);}\n*     .enum = string[] {return extractOptions(type, raw_value);}\n* SignalAttribute := 'BA_DEF_ SG_\\s+' '\"'name={'[a-zA-Z0-9_]+'}'\"' '\\s' type={'[A-Z]+'} '\\s'? raw_value={'.*'}\n*     .min = number {return extractMinVal(type, raw_value);}\n*     .max = number {return extractMaxVal(type, raw_value);}\n*     .enum = string[] {return extractOptions(type, raw_value);}\n* AttributeDefault := 'BA_DEF_DEF_\\s+' '\"'name={'[a-zA-Z0-9_]+'}'\"' '\\s' raw_value={'.*'}\n*     .value = string {return cleanComment(raw_value);}\n* AttributeValue := 'BA_\\s+' '\"'name={'[a-zA-Z0-9_]+'}'\"' '\\s' raw={'.*'}\n*     .type = string {return extractAttrType(raw);}\n*     .node = string {return extractAttrNode(this.type,raw);}\n*     .id = number {return parseInt(extractAttrId(this.type,raw),10);}\n*     .signal = string {return extractAttrSignalName(this.type,raw);}\n*     .value = string {return extractAttrVal(this.type,raw);}\n* SigValType := 'SIG_VALTYPE_\\s+' raw_id={'[0-9]+'} '\\s+' name={'[a-zA-Z0-9_]+'} '\\s*:\\s*' raw_type={'1|2'}\n*     .id = number {return parseInt(raw_id,10);}\n*     .type = number {return parseInt(raw_type,10);}\n*/\nvar ASTKinds;\n(function (ASTKinds) {\n    ASTKinds[\"Choice_1\"] = \"Choice_1\";\n    ASTKinds[\"Choice_2\"] = \"Choice_2\";\n    ASTKinds[\"Choice_3\"] = \"Choice_3\";\n    ASTKinds[\"Choice_4\"] = \"Choice_4\";\n    ASTKinds[\"Choice_5\"] = \"Choice_5\";\n    ASTKinds[\"Choice_6\"] = \"Choice_6\";\n    ASTKinds[\"Choice_7\"] = \"Choice_7\";\n    ASTKinds[\"Choice_8\"] = \"Choice_8\";\n    ASTKinds[\"Choice_9\"] = \"Choice_9\";\n    ASTKinds[\"Choice_10\"] = \"Choice_10\";\n    ASTKinds[\"Choice_11\"] = \"Choice_11\";\n    ASTKinds[\"Choice_12\"] = \"Choice_12\";\n    ASTKinds[\"Choice_13\"] = \"Choice_13\";\n    ASTKinds[\"Choice_14\"] = \"Choice_14\";\n    ASTKinds[\"Choice_15\"] = \"Choice_15\";\n    ASTKinds[\"Choice_16\"] = \"Choice_16\";\n    ASTKinds[\"Choice_17\"] = \"Choice_17\";\n    ASTKinds[\"Choice_18\"] = \"Choice_18\";\n    ASTKinds[\"Choice_19\"] = \"Choice_19\";\n    ASTKinds[\"Choice_20\"] = \"Choice_20\";\n    ASTKinds[\"Choice_21\"] = \"Choice_21\";\n    ASTKinds[\"Choice_22\"] = \"Choice_22\";\n    ASTKinds[\"Choice_23\"] = \"Choice_23\";\n    ASTKinds[\"Choice_24\"] = \"Choice_24\";\n    ASTKinds[\"Choice_25\"] = \"Choice_25\";\n    ASTKinds[\"Choice_26\"] = \"Choice_26\";\n    ASTKinds[\"Choice_27\"] = \"Choice_27\";\n    ASTKinds[\"Choice_28\"] = \"Choice_28\";\n    ASTKinds[\"Choice_29\"] = \"Choice_29\";\n    ASTKinds[\"BlankLine\"] = \"BlankLine\";\n    ASTKinds[\"CanSignalGroup\"] = \"CanSignalGroup\";\n    ASTKinds[\"CanSignalGroup_$0\"] = \"CanSignalGroup_$0\";\n    ASTKinds[\"CanSignalGroup_$1\"] = \"CanSignalGroup_$1\";\n    ASTKinds[\"CanSignalGroup_$2\"] = \"CanSignalGroup_$2\";\n    ASTKinds[\"CanSignalGroup_$3\"] = \"CanSignalGroup_$3\";\n    ASTKinds[\"MessageTransmitter\"] = \"MessageTransmitter\";\n    ASTKinds[\"MessageTransmitter_$0\"] = \"MessageTransmitter_$0\";\n    ASTKinds[\"MessageTransmitter_$1\"] = \"MessageTransmitter_$1\";\n    ASTKinds[\"CanEnvironmentVariable\"] = \"CanEnvironmentVariable\";\n    ASTKinds[\"CanEnvironmentVariable_$0\"] = \"CanEnvironmentVariable_$0\";\n    ASTKinds[\"CanEnvironmentVariable_$1\"] = \"CanEnvironmentVariable_$1\";\n    ASTKinds[\"CanEnvironmentVariable_$2\"] = \"CanEnvironmentVariable_$2\";\n    ASTKinds[\"CanEnvironmentVariable_$3\"] = \"CanEnvironmentVariable_$3\";\n    ASTKinds[\"CanEnvironmentVariable_$4\"] = \"CanEnvironmentVariable_$4\";\n    ASTKinds[\"CanEnvironmentVariable_$5\"] = \"CanEnvironmentVariable_$5\";\n    ASTKinds[\"CanEnvironmentVariable_$6\"] = \"CanEnvironmentVariable_$6\";\n    ASTKinds[\"CanEnvironmentVariable_$7\"] = \"CanEnvironmentVariable_$7\";\n    ASTKinds[\"CanEnvironmentVariable_$8\"] = \"CanEnvironmentVariable_$8\";\n    ASTKinds[\"EnvironmentVarData\"] = \"EnvironmentVarData\";\n    ASTKinds[\"EnvironmentVarData_$0\"] = \"EnvironmentVarData_$0\";\n    ASTKinds[\"EnvironmentVarData_$1\"] = \"EnvironmentVarData_$1\";\n    ASTKinds[\"EnvironmentVariableComment\"] = \"EnvironmentVariableComment\";\n    ASTKinds[\"EnvironmentVariableComment_$0\"] = \"EnvironmentVariableComment_$0\";\n    ASTKinds[\"EnvironmentVariableComment_$1\"] = \"EnvironmentVariableComment_$1\";\n    ASTKinds[\"Version\"] = \"Version\";\n    ASTKinds[\"Version_$0\"] = \"Version_$0\";\n    ASTKinds[\"NewSymbol\"] = \"NewSymbol\";\n    ASTKinds[\"BusSpeed\"] = \"BusSpeed\";\n    ASTKinds[\"NewSymbolValue\"] = \"NewSymbolValue\";\n    ASTKinds[\"NewSymbolValue_$0\"] = \"NewSymbolValue_$0\";\n    ASTKinds[\"CanNode\"] = \"CanNode\";\n    ASTKinds[\"CanNode_$0\"] = \"CanNode_$0\";\n    ASTKinds[\"CanMessage\"] = \"CanMessage\";\n    ASTKinds[\"CanMessage_$0\"] = \"CanMessage_$0\";\n    ASTKinds[\"CanMessage_$1\"] = \"CanMessage_$1\";\n    ASTKinds[\"CanMessage_$2\"] = \"CanMessage_$2\";\n    ASTKinds[\"CanMessage_$3\"] = \"CanMessage_$3\";\n    ASTKinds[\"CanSignal\"] = \"CanSignal\";\n    ASTKinds[\"CanSignal_$0\"] = \"CanSignal_$0\";\n    ASTKinds[\"CanSignal_$1\"] = \"CanSignal_$1\";\n    ASTKinds[\"CanSignal_$2\"] = \"CanSignal_$2\";\n    ASTKinds[\"CanSignal_$3\"] = \"CanSignal_$3\";\n    ASTKinds[\"CanSignal_$4\"] = \"CanSignal_$4\";\n    ASTKinds[\"CanSignal_$5\"] = \"CanSignal_$5\";\n    ASTKinds[\"CanSignal_$6\"] = \"CanSignal_$6\";\n    ASTKinds[\"CanSignal_$7\"] = \"CanSignal_$7\";\n    ASTKinds[\"CanSignal_$8\"] = \"CanSignal_$8\";\n    ASTKinds[\"CanSignal_$9\"] = \"CanSignal_$9\";\n    ASTKinds[\"CanSignal_$10\"] = \"CanSignal_$10\";\n    ASTKinds[\"CanSignal_$11\"] = \"CanSignal_$11\";\n    ASTKinds[\"SignalMultiplexVal\"] = \"SignalMultiplexVal\";\n    ASTKinds[\"SignalMultiplexVal_$0\"] = \"SignalMultiplexVal_$0\";\n    ASTKinds[\"SignalMultiplexVal_$1\"] = \"SignalMultiplexVal_$1\";\n    ASTKinds[\"SignalMultiplexVal_$2\"] = \"SignalMultiplexVal_$2\";\n    ASTKinds[\"SignalMultiplexVal_$3\"] = \"SignalMultiplexVal_$3\";\n    ASTKinds[\"ValTable\"] = \"ValTable\";\n    ASTKinds[\"ValTable_$0\"] = \"ValTable_$0\";\n    ASTKinds[\"ValTable_$1\"] = \"ValTable_$1\";\n    ASTKinds[\"Val\"] = \"Val\";\n    ASTKinds[\"Val_$0\"] = \"Val_$0\";\n    ASTKinds[\"Val_$1\"] = \"Val_$1\";\n    ASTKinds[\"Val_$2\"] = \"Val_$2\";\n    ASTKinds[\"EnvironmentVal\"] = \"EnvironmentVal\";\n    ASTKinds[\"EnvironmentVal_$0\"] = \"EnvironmentVal_$0\";\n    ASTKinds[\"EnvironmentVal_$1\"] = \"EnvironmentVal_$1\";\n    ASTKinds[\"Comment\"] = \"Comment\";\n    ASTKinds[\"Comment_$0\"] = \"Comment_$0\";\n    ASTKinds[\"SignalComment\"] = \"SignalComment\";\n    ASTKinds[\"SignalComment_$0\"] = \"SignalComment_$0\";\n    ASTKinds[\"SignalComment_$1\"] = \"SignalComment_$1\";\n    ASTKinds[\"SignalComment_$2\"] = \"SignalComment_$2\";\n    ASTKinds[\"MessageComment\"] = \"MessageComment\";\n    ASTKinds[\"MessageComment_$0\"] = \"MessageComment_$0\";\n    ASTKinds[\"MessageComment_$1\"] = \"MessageComment_$1\";\n    ASTKinds[\"NodeComment\"] = \"NodeComment\";\n    ASTKinds[\"NodeComment_$0\"] = \"NodeComment_$0\";\n    ASTKinds[\"NodeComment_$1\"] = \"NodeComment_$1\";\n    ASTKinds[\"GlobalAttribute\"] = \"GlobalAttribute\";\n    ASTKinds[\"GlobalAttribute_$0\"] = \"GlobalAttribute_$0\";\n    ASTKinds[\"GlobalAttribute_$1\"] = \"GlobalAttribute_$1\";\n    ASTKinds[\"GlobalAttribute_$2\"] = \"GlobalAttribute_$2\";\n    ASTKinds[\"MessageAttribute\"] = \"MessageAttribute\";\n    ASTKinds[\"MessageAttribute_$0\"] = \"MessageAttribute_$0\";\n    ASTKinds[\"MessageAttribute_$1\"] = \"MessageAttribute_$1\";\n    ASTKinds[\"MessageAttribute_$2\"] = \"MessageAttribute_$2\";\n    ASTKinds[\"EnvironmentAttribute\"] = \"EnvironmentAttribute\";\n    ASTKinds[\"EnvironmentAttribute_$0\"] = \"EnvironmentAttribute_$0\";\n    ASTKinds[\"EnvironmentAttribute_$1\"] = \"EnvironmentAttribute_$1\";\n    ASTKinds[\"EnvironmentAttribute_$2\"] = \"EnvironmentAttribute_$2\";\n    ASTKinds[\"NodeAttribute\"] = \"NodeAttribute\";\n    ASTKinds[\"NodeAttribute_$0\"] = \"NodeAttribute_$0\";\n    ASTKinds[\"NodeAttribute_$1\"] = \"NodeAttribute_$1\";\n    ASTKinds[\"NodeAttribute_$2\"] = \"NodeAttribute_$2\";\n    ASTKinds[\"SignalAttribute\"] = \"SignalAttribute\";\n    ASTKinds[\"SignalAttribute_$0\"] = \"SignalAttribute_$0\";\n    ASTKinds[\"SignalAttribute_$1\"] = \"SignalAttribute_$1\";\n    ASTKinds[\"SignalAttribute_$2\"] = \"SignalAttribute_$2\";\n    ASTKinds[\"AttributeDefault\"] = \"AttributeDefault\";\n    ASTKinds[\"AttributeDefault_$0\"] = \"AttributeDefault_$0\";\n    ASTKinds[\"AttributeDefault_$1\"] = \"AttributeDefault_$1\";\n    ASTKinds[\"AttributeValue\"] = \"AttributeValue\";\n    ASTKinds[\"AttributeValue_$0\"] = \"AttributeValue_$0\";\n    ASTKinds[\"AttributeValue_$1\"] = \"AttributeValue_$1\";\n    ASTKinds[\"SigValType\"] = \"SigValType\";\n    ASTKinds[\"SigValType_$0\"] = \"SigValType_$0\";\n    ASTKinds[\"SigValType_$1\"] = \"SigValType_$1\";\n    ASTKinds[\"SigValType_$2\"] = \"SigValType_$2\";\n    ASTKinds[\"$EOF\"] = \"$EOF\";\n})(ASTKinds || (ASTKinds = {}));\nclass CanSignalGroup {\n    constructor(raw_id, name, raw_group_number, raw_signal_string) {\n        this.kind = ASTKinds.CanSignalGroup;\n        this.raw_id = raw_id;\n        this.name = name;\n        this.raw_group_number = raw_group_number;\n        this.raw_signal_string = raw_signal_string;\n        this.signals = (() => {\n            return raw_signal_string.replace(';', '').split(' ');\n        })();\n        this.id = (() => {\n            return parseInt(raw_id, 10);\n        })();\n        this.group_number = (() => {\n            return parseInt(raw_group_number, 10);\n        })();\n    }\n}\nclass MessageTransmitter {\n    constructor(raw_id, raw_nodes) {\n        this.kind = ASTKinds.MessageTransmitter;\n        this.raw_id = raw_id;\n        this.raw_nodes = raw_nodes;\n        this.id = (() => {\n            return parseInt(raw_id, 10);\n        })();\n        this.nodes = (() => {\n            return raw_nodes.replace(';', '').split(',');\n        })();\n    }\n}\nclass CanEnvironmentVariable {\n    constructor(name, type, raw_min, raw_max, raw_unit, raw_inital_value, raw_ev_id, access_type, node) {\n        this.kind = ASTKinds.CanEnvironmentVariable;\n        this.name = name;\n        this.type = type;\n        this.raw_min = raw_min;\n        this.raw_max = raw_max;\n        this.raw_unit = raw_unit;\n        this.raw_inital_value = raw_inital_value;\n        this.raw_ev_id = raw_ev_id;\n        this.access_type = access_type;\n        this.node = node;\n        this.min = (() => {\n            return parseFloat(raw_min);\n        })();\n        this.max = (() => {\n            return parseFloat(raw_max);\n        })();\n        this.unit = (() => {\n            return cleanComment(raw_unit);\n        })();\n        this.initial_value = (() => {\n            return parseFloat(raw_inital_value);\n        })();\n        this.ev_id = (() => {\n            return parseInt(raw_ev_id, 10);\n        })();\n    }\n}\nclass EnvironmentVarData {\n    constructor(name, raw_value) {\n        this.kind = ASTKinds.EnvironmentVarData;\n        this.name = name;\n        this.raw_value = raw_value;\n        this.value = (() => {\n            return parseInt(raw_value);\n        })();\n    }\n}\nclass EnvironmentVariableComment {\n    constructor(name, raw_comment) {\n        this.kind = ASTKinds.EnvironmentVariableComment;\n        this.name = name;\n        this.raw_comment = raw_comment;\n        this.comment = (() => {\n            return cleanComment(raw_comment);\n        })();\n    }\n}\nclass Version {\n    constructor(raw_version) {\n        this.kind = ASTKinds.Version;\n        this.raw_version = raw_version;\n        this.version = (() => {\n            return cleanComment(raw_version);\n        })();\n    }\n}\nclass CanNode {\n    constructor(raw_node_string) {\n        this.kind = ASTKinds.CanNode;\n        this.raw_node_string = raw_node_string;\n        this.node_names = (() => {\n            return raw_node_string.split(' ');\n        })();\n    }\n}\nclass CanMessage {\n    constructor(raw_id, name, raw_dlc, node) {\n        this.kind = ASTKinds.CanMessage;\n        this.raw_id = raw_id;\n        this.name = name;\n        this.raw_dlc = raw_dlc;\n        this.node = node;\n        this.id = (() => {\n            return parseInt(raw_id, 10);\n        })();\n        this.dlc = (() => {\n            return parseInt(raw_dlc, 10);\n        })();\n    }\n}\nclass CanSignal {\n    constructor(name, multiplex, raw_start_bit, raw_length, raw_endian, raw_signed, raw_factor, raw_offset, raw_min, raw_max, raw_unit, raw_node_str) {\n        this.kind = ASTKinds.CanSignal;\n        this.name = name;\n        this.multiplex = multiplex;\n        this.raw_start_bit = raw_start_bit;\n        this.raw_length = raw_length;\n        this.raw_endian = raw_endian;\n        this.raw_signed = raw_signed;\n        this.raw_factor = raw_factor;\n        this.raw_offset = raw_offset;\n        this.raw_min = raw_min;\n        this.raw_max = raw_max;\n        this.raw_unit = raw_unit;\n        this.raw_node_str = raw_node_str;\n        this.multiplexer = (() => {\n            return multiplex.includes('M');\n        })();\n        this.unit = (() => {\n            return cleanComment(raw_unit);\n        })();\n        this.nodes = (() => {\n            return raw_node_str.trim().split(',');\n        })();\n        this.start_bit = (() => {\n            return parseInt(raw_start_bit, 10);\n        })();\n        this.length = (() => {\n            return parseInt(raw_length, 10);\n        })();\n        this.endian = (() => {\n            return raw_endian === '1' ? 'Intel' : 'Motorola';\n        })();\n        this.signed = (() => {\n            return raw_signed === '-' ? true : false;\n        })();\n        this.factor = (() => {\n            return parseFloat(raw_factor);\n        })();\n        this.offset = (() => {\n            return parseFloat(raw_offset);\n        })();\n        this.min = (() => {\n            return parseFloat(raw_min);\n        })();\n        this.max = (() => {\n            return parseFloat(raw_max);\n        })();\n    }\n}\nclass SignalMultiplexVal {\n    constructor(raw_id, name, switch_name, raw_value_ranges) {\n        this.kind = ASTKinds.SignalMultiplexVal;\n        this.raw_id = raw_id;\n        this.name = name;\n        this.switch_name = switch_name;\n        this.raw_value_ranges = raw_value_ranges;\n        this.id = (() => {\n            return parseInt(raw_id, 10);\n        })();\n        this.value_ranges = (() => {\n            return raw_value_ranges.replace(';', '').replace(/\\s/g, '').split(',').map((value) => { return value.split('-'); });\n        })();\n    }\n}\nclass ValTable {\n    constructor(name, raw_table) {\n        this.kind = ASTKinds.ValTable;\n        this.name = name;\n        this.raw_table = raw_table;\n        this.enum = (() => {\n            return table2Enum(raw_table.replace(';', ''));\n        })();\n    }\n}\nclass Val {\n    constructor(raw_id, name, raw_table) {\n        this.kind = ASTKinds.Val;\n        this.raw_id = raw_id;\n        this.name = name;\n        this.raw_table = raw_table;\n        this.id = (() => {\n            return parseInt(raw_id, 10);\n        })();\n        this.enum = (() => {\n            return table2Enum(raw_table.replace(';', ''));\n        })();\n    }\n}\nclass EnvironmentVal {\n    constructor(name, raw_table) {\n        this.kind = ASTKinds.EnvironmentVal;\n        this.name = name;\n        this.raw_table = raw_table;\n        this.enum = (() => {\n            return table2Enum(raw_table.replace(';', ''));\n        })();\n    }\n}\nclass Comment {\n    constructor(raw_comment) {\n        this.kind = ASTKinds.Comment;\n        this.raw_comment = raw_comment;\n        this.comment = (() => {\n            return cleanComment(raw_comment);\n        })();\n    }\n}\nclass SignalComment {\n    constructor(raw_id, name, raw_comment) {\n        this.kind = ASTKinds.SignalComment;\n        this.raw_id = raw_id;\n        this.name = name;\n        this.raw_comment = raw_comment;\n        this.comment = (() => {\n            return cleanComment(raw_comment);\n        })();\n        this.id = (() => {\n            return parseInt(raw_id, 10);\n        })();\n    }\n}\nclass MessageComment {\n    constructor(raw_id, raw_comment) {\n        this.kind = ASTKinds.MessageComment;\n        this.raw_id = raw_id;\n        this.raw_comment = raw_comment;\n        this.comment = (() => {\n            return cleanComment(raw_comment);\n        })();\n        this.id = (() => {\n            return parseInt(raw_id, 10);\n        })();\n    }\n}\nclass NodeComment {\n    constructor(name, raw_comment) {\n        this.kind = ASTKinds.NodeComment;\n        this.name = name;\n        this.raw_comment = raw_comment;\n        this.comment = (() => {\n            return cleanComment(raw_comment);\n        })();\n    }\n}\nclass GlobalAttribute {\n    constructor(name, type, raw_value) {\n        this.kind = ASTKinds.GlobalAttribute;\n        this.name = name;\n        this.type = type;\n        this.raw_value = raw_value;\n        this.min = (() => {\n            return extractMinVal(type, raw_value);\n        })();\n        this.max = (() => {\n            return extractMaxVal(type, raw_value);\n        })();\n        this.enum = (() => {\n            return extractOptions(type, raw_value);\n        })();\n    }\n}\nclass MessageAttribute {\n    constructor(name, type, raw_value) {\n        this.kind = ASTKinds.MessageAttribute;\n        this.name = name;\n        this.type = type;\n        this.raw_value = raw_value;\n        this.min = (() => {\n            return extractMinVal(type, raw_value);\n        })();\n        this.max = (() => {\n            return extractMaxVal(type, raw_value);\n        })();\n        this.enum = (() => {\n            return extractOptions(type, raw_value);\n        })();\n    }\n}\nclass EnvironmentAttribute {\n    constructor(name, type, raw_value) {\n        this.kind = ASTKinds.EnvironmentAttribute;\n        this.name = name;\n        this.type = type;\n        this.raw_value = raw_value;\n        this.min = (() => {\n            return extractMinVal(type, raw_value);\n        })();\n        this.max = (() => {\n            return extractMaxVal(type, raw_value);\n        })();\n        this.enum = (() => {\n            return extractOptions(type, raw_value);\n        })();\n    }\n}\nclass NodeAttribute {\n    constructor(name, type, raw_value) {\n        this.kind = ASTKinds.NodeAttribute;\n        this.name = name;\n        this.type = type;\n        this.raw_value = raw_value;\n        this.min = (() => {\n            return extractMinVal(type, raw_value);\n        })();\n        this.max = (() => {\n            return extractMaxVal(type, raw_value);\n        })();\n        this.enum = (() => {\n            return extractOptions(type, raw_value);\n        })();\n    }\n}\nclass SignalAttribute {\n    constructor(name, type, raw_value) {\n        this.kind = ASTKinds.SignalAttribute;\n        this.name = name;\n        this.type = type;\n        this.raw_value = raw_value;\n        this.min = (() => {\n            return extractMinVal(type, raw_value);\n        })();\n        this.max = (() => {\n            return extractMaxVal(type, raw_value);\n        })();\n        this.enum = (() => {\n            return extractOptions(type, raw_value);\n        })();\n    }\n}\nclass AttributeDefault {\n    constructor(name, raw_value) {\n        this.kind = ASTKinds.AttributeDefault;\n        this.name = name;\n        this.raw_value = raw_value;\n        this.value = (() => {\n            return cleanComment(raw_value);\n        })();\n    }\n}\nclass AttributeValue {\n    constructor(name, raw) {\n        this.kind = ASTKinds.AttributeValue;\n        this.name = name;\n        this.raw = raw;\n        this.type = (() => {\n            return extractAttrType(raw);\n        })();\n        this.node = (() => {\n            return extractAttrNode(this.type, raw);\n        })();\n        this.id = (() => {\n            return parseInt(extractAttrId(this.type, raw), 10);\n        })();\n        this.signal = (() => {\n            return extractAttrSignalName(this.type, raw);\n        })();\n        this.value = (() => {\n            return extractAttrVal(this.type, raw);\n        })();\n    }\n}\nclass SigValType {\n    constructor(raw_id, name, raw_type) {\n        this.kind = ASTKinds.SigValType;\n        this.raw_id = raw_id;\n        this.name = name;\n        this.raw_type = raw_type;\n        this.id = (() => {\n            return parseInt(raw_id, 10);\n        })();\n        this.type = (() => {\n            return parseInt(raw_type, 10);\n        })();\n    }\n}\nclass Parser {\n    constructor(input) {\n        this.negating = false;\n        this.memoSafe = true;\n        this.pos = { overallPos: 0, line: 1, offset: 0 };\n        this.input = input;\n    }\n    reset(pos) {\n        this.pos = pos;\n    }\n    finished() {\n        return this.pos.overallPos === this.input.length;\n    }\n    clearMemos() {\n    }\n    matchChoice($$dpth, $$cr) {\n        return this.choice([\n            () => this.matchChoice_1($$dpth + 1, $$cr),\n            () => this.matchChoice_2($$dpth + 1, $$cr),\n            () => this.matchChoice_3($$dpth + 1, $$cr),\n            () => this.matchChoice_4($$dpth + 1, $$cr),\n            () => this.matchChoice_5($$dpth + 1, $$cr),\n            () => this.matchChoice_6($$dpth + 1, $$cr),\n            () => this.matchChoice_7($$dpth + 1, $$cr),\n            () => this.matchChoice_8($$dpth + 1, $$cr),\n            () => this.matchChoice_9($$dpth + 1, $$cr),\n            () => this.matchChoice_10($$dpth + 1, $$cr),\n            () => this.matchChoice_11($$dpth + 1, $$cr),\n            () => this.matchChoice_12($$dpth + 1, $$cr),\n            () => this.matchChoice_13($$dpth + 1, $$cr),\n            () => this.matchChoice_14($$dpth + 1, $$cr),\n            () => this.matchChoice_15($$dpth + 1, $$cr),\n            () => this.matchChoice_16($$dpth + 1, $$cr),\n            () => this.matchChoice_17($$dpth + 1, $$cr),\n            () => this.matchChoice_18($$dpth + 1, $$cr),\n            () => this.matchChoice_19($$dpth + 1, $$cr),\n            () => this.matchChoice_20($$dpth + 1, $$cr),\n            () => this.matchChoice_21($$dpth + 1, $$cr),\n            () => this.matchChoice_22($$dpth + 1, $$cr),\n            () => this.matchChoice_23($$dpth + 1, $$cr),\n            () => this.matchChoice_24($$dpth + 1, $$cr),\n            () => this.matchChoice_25($$dpth + 1, $$cr),\n            () => this.matchChoice_26($$dpth + 1, $$cr),\n            () => this.matchChoice_27($$dpth + 1, $$cr),\n            () => this.matchChoice_28($$dpth + 1, $$cr),\n            () => this.matchChoice_29($$dpth + 1, $$cr),\n        ]);\n    }\n    matchChoice_1($$dpth, $$cr) {\n        return this.matchCanNode($$dpth + 1, $$cr);\n    }\n    matchChoice_2($$dpth, $$cr) {\n        return this.matchCanMessage($$dpth + 1, $$cr);\n    }\n    matchChoice_3($$dpth, $$cr) {\n        return this.matchSignalMultiplexVal($$dpth + 1, $$cr);\n    }\n    matchChoice_4($$dpth, $$cr) {\n        return this.matchCanSignal($$dpth + 1, $$cr);\n    }\n    matchChoice_5($$dpth, $$cr) {\n        return this.matchValTable($$dpth + 1, $$cr);\n    }\n    matchChoice_6($$dpth, $$cr) {\n        return this.matchVal($$dpth + 1, $$cr);\n    }\n    matchChoice_7($$dpth, $$cr) {\n        return this.matchSignalComment($$dpth + 1, $$cr);\n    }\n    matchChoice_8($$dpth, $$cr) {\n        return this.matchMessageComment($$dpth + 1, $$cr);\n    }\n    matchChoice_9($$dpth, $$cr) {\n        return this.matchNodeComment($$dpth + 1, $$cr);\n    }\n    matchChoice_10($$dpth, $$cr) {\n        return this.matchGlobalAttribute($$dpth + 1, $$cr);\n    }\n    matchChoice_11($$dpth, $$cr) {\n        return this.matchMessageAttribute($$dpth + 1, $$cr);\n    }\n    matchChoice_12($$dpth, $$cr) {\n        return this.matchSignalAttribute($$dpth + 1, $$cr);\n    }\n    matchChoice_13($$dpth, $$cr) {\n        return this.matchNodeAttribute($$dpth + 1, $$cr);\n    }\n    matchChoice_14($$dpth, $$cr) {\n        return this.matchAttributeDefault($$dpth + 1, $$cr);\n    }\n    matchChoice_15($$dpth, $$cr) {\n        return this.matchAttributeValue($$dpth + 1, $$cr);\n    }\n    matchChoice_16($$dpth, $$cr) {\n        return this.matchVersion($$dpth + 1, $$cr);\n    }\n    matchChoice_17($$dpth, $$cr) {\n        return this.matchNewSymbolValue($$dpth + 1, $$cr);\n    }\n    matchChoice_18($$dpth, $$cr) {\n        return this.matchBlankLine($$dpth + 1, $$cr);\n    }\n    matchChoice_19($$dpth, $$cr) {\n        return this.matchNewSymbol($$dpth + 1, $$cr);\n    }\n    matchChoice_20($$dpth, $$cr) {\n        return this.matchBusSpeed($$dpth + 1, $$cr);\n    }\n    matchChoice_21($$dpth, $$cr) {\n        return this.matchComment($$dpth + 1, $$cr);\n    }\n    matchChoice_22($$dpth, $$cr) {\n        return this.matchCanEnvironmentVariable($$dpth + 1, $$cr);\n    }\n    matchChoice_23($$dpth, $$cr) {\n        return this.matchEnvironmentVarData($$dpth + 1, $$cr);\n    }\n    matchChoice_24($$dpth, $$cr) {\n        return this.matchEnvironmentVariableComment($$dpth + 1, $$cr);\n    }\n    matchChoice_25($$dpth, $$cr) {\n        return this.matchMessageTransmitter($$dpth + 1, $$cr);\n    }\n    matchChoice_26($$dpth, $$cr) {\n        return this.matchEnvironmentAttribute($$dpth + 1, $$cr);\n    }\n    matchChoice_27($$dpth, $$cr) {\n        return this.matchEnvironmentVal($$dpth + 1, $$cr);\n    }\n    matchChoice_28($$dpth, $$cr) {\n        return this.matchCanSignalGroup($$dpth + 1, $$cr);\n    }\n    matchChoice_29($$dpth, $$cr) {\n        return this.matchSigValType($$dpth + 1, $$cr);\n    }\n    matchBlankLine($$dpth, $$cr) {\n        return this.run($$dpth, () => {\n            let $$res = null;\n            if (this.regexAccept(String.raw `(?:)`, $$dpth + 1, $$cr) !== null\n                && this.match$EOF($$cr) !== null) {\n                $$res = { kind: ASTKinds.BlankLine, };\n            }\n            return $$res;\n        });\n    }\n    matchCanSignalGroup($$dpth, $$cr) {\n        return this.run($$dpth, () => {\n            let $scope$raw_id;\n            let $scope$name;\n            let $scope$raw_group_number;\n            let $scope$raw_signal_string;\n            let $$res = null;\n            if (this.regexAccept(String.raw `(?:SIG_GROUP_\\s+)`, $$dpth + 1, $$cr) !== null\n                && ($scope$raw_id = this.matchCanSignalGroup_$0($$dpth + 1, $$cr)) !== null\n                && this.regexAccept(String.raw `(?:\\s+)`, $$dpth + 1, $$cr) !== null\n                && ($scope$name = this.matchCanSignalGroup_$1($$dpth + 1, $$cr)) !== null\n                && this.regexAccept(String.raw `(?:\\s+)`, $$dpth + 1, $$cr) !== null\n                && ($scope$raw_group_number = this.matchCanSignalGroup_$2($$dpth + 1, $$cr)) !== null\n                && this.regexAccept(String.raw `(?:\\s+:\\s*)`, $$dpth + 1, $$cr) !== null\n                && ($scope$raw_signal_string = this.matchCanSignalGroup_$3($$dpth + 1, $$cr)) !== null\n                && this.regexAccept(String.raw `(?:\\s*)`, $$dpth + 1, $$cr) !== null) {\n                $$res = new CanSignalGroup($scope$raw_id, $scope$name, $scope$raw_group_number, $scope$raw_signal_string);\n            }\n            return $$res;\n        });\n    }\n    matchCanSignalGroup_$0($$dpth, $$cr) {\n        return this.regexAccept(String.raw `(?:[0-9]+)`, $$dpth + 1, $$cr);\n    }\n    matchCanSignalGroup_$1($$dpth, $$cr) {\n        return this.regexAccept(String.raw `(?:[a-zA-Z0-9_]+)`, $$dpth + 1, $$cr);\n    }\n    matchCanSignalGroup_$2($$dpth, $$cr) {\n        return this.regexAccept(String.raw `(?:[0-9]+)`, $$dpth + 1, $$cr);\n    }\n    matchCanSignalGroup_$3($$dpth, $$cr) {\n        return this.regexAccept(String.raw `(?:[a-zA-Z0-9_\\s]*)`, $$dpth + 1, $$cr);\n    }\n    matchMessageTransmitter($$dpth, $$cr) {\n        return this.run($$dpth, () => {\n            let $scope$raw_id;\n            let $scope$raw_nodes;\n            let $$res = null;\n            if (this.regexAccept(String.raw `(?:BO_TX_BU_\\s+)`, $$dpth + 1, $$cr) !== null\n                && ($scope$raw_id = this.matchMessageTransmitter_$0($$dpth + 1, $$cr)) !== null\n                && this.regexAccept(String.raw `(?:\\s*:\\s*)`, $$dpth + 1, $$cr) !== null\n                && ($scope$raw_nodes = this.matchMessageTransmitter_$1($$dpth + 1, $$cr)) !== null) {\n                $$res = new MessageTransmitter($scope$raw_id, $scope$raw_nodes);\n            }\n            return $$res;\n        });\n    }\n    matchMessageTransmitter_$0($$dpth, $$cr) {\n        return this.regexAccept(String.raw `(?:[0-9]+)`, $$dpth + 1, $$cr);\n    }\n    matchMessageTransmitter_$1($$dpth, $$cr) {\n        return this.regexAccept(String.raw `(?:.*)`, $$dpth + 1, $$cr);\n    }\n    matchCanEnvironmentVariable($$dpth, $$cr) {\n        return this.run($$dpth, () => {\n            let $scope$name;\n            let $scope$type;\n            let $scope$raw_min;\n            let $scope$raw_max;\n            let $scope$raw_unit;\n            let $scope$raw_inital_value;\n            let $scope$raw_ev_id;\n            let $scope$access_type;\n            let $scope$node;\n            let $$res = null;\n            if (this.regexAccept(String.raw `(?:EV_\\s+)`, $$dpth + 1, $$cr) !== null\n                && ($scope$name = this.matchCanEnvironmentVariable_$0($$dpth + 1, $$cr)) !== null\n                && this.regexAccept(String.raw `(?:\\s*:\\s*)`, $$dpth + 1, $$cr) !== null\n                && ($scope$type = this.matchCanEnvironmentVariable_$1($$dpth + 1, $$cr)) !== null\n                && this.regexAccept(String.raw `(?:\\s+\\[)`, $$dpth + 1, $$cr) !== null\n                && ($scope$raw_min = this.matchCanEnvironmentVariable_$2($$dpth + 1, $$cr)) !== null\n                && this.regexAccept(String.raw `(?:\\|)`, $$dpth + 1, $$cr) !== null\n                && ($scope$raw_max = this.matchCanEnvironmentVariable_$3($$dpth + 1, $$cr)) !== null\n                && this.regexAccept(String.raw `(?:\\]\\s)`, $$dpth + 1, $$cr) !== null\n                && ($scope$raw_unit = this.matchCanEnvironmentVariable_$4($$dpth + 1, $$cr)) !== null\n                && this.regexAccept(String.raw `(?:\\s+)`, $$dpth + 1, $$cr) !== null\n                && ($scope$raw_inital_value = this.matchCanEnvironmentVariable_$5($$dpth + 1, $$cr)) !== null\n                && this.regexAccept(String.raw `(?:\\s+)`, $$dpth + 1, $$cr) !== null\n                && ($scope$raw_ev_id = this.matchCanEnvironmentVariable_$6($$dpth + 1, $$cr)) !== null\n                && this.regexAccept(String.raw `(?:\\s+)`, $$dpth + 1, $$cr) !== null\n                && ($scope$access_type = this.matchCanEnvironmentVariable_$7($$dpth + 1, $$cr)) !== null\n                && this.regexAccept(String.raw `(?:\\s+)`, $$dpth + 1, $$cr) !== null\n                && ($scope$node = this.matchCanEnvironmentVariable_$8($$dpth + 1, $$cr)) !== null) {\n                $$res = new CanEnvironmentVariable($scope$name, $scope$type, $scope$raw_min, $scope$raw_max, $scope$raw_unit, $scope$raw_inital_value, $scope$raw_ev_id, $scope$access_type, $scope$node);\n            }\n            return $$res;\n        });\n    }\n    matchCanEnvironmentVariable_$0($$dpth, $$cr) {\n        return this.regexAccept(String.raw `(?:[a-zA-Z0-9_]+)`, $$dpth + 1, $$cr);\n    }\n    matchCanEnvironmentVariable_$1($$dpth, $$cr) {\n        return this.regexAccept(String.raw `(?:0|1|2)`, $$dpth + 1, $$cr);\n    }\n    matchCanEnvironmentVariable_$2($$dpth, $$cr) {\n        return this.regexAccept(String.raw `(?:[\\-0-9.]+)`, $$dpth + 1, $$cr);\n    }\n    matchCanEnvironmentVariable_$3($$dpth, $$cr) {\n        return this.regexAccept(String.raw `(?:[\\-0-9.]+)`, $$dpth + 1, $$cr);\n    }\n    matchCanEnvironmentVariable_$4($$dpth, $$cr) {\n        return this.regexAccept(String.raw `(?:\".*\")`, $$dpth + 1, $$cr);\n    }\n    matchCanEnvironmentVariable_$5($$dpth, $$cr) {\n        return this.regexAccept(String.raw `(?:[\\-0-9.]+)`, $$dpth + 1, $$cr);\n    }\n    matchCanEnvironmentVariable_$6($$dpth, $$cr) {\n        return this.regexAccept(String.raw `(?:[0-9]+)`, $$dpth + 1, $$cr);\n    }\n    matchCanEnvironmentVariable_$7($$dpth, $$cr) {\n        return this.regexAccept(String.raw `(?:[a-zA-Z0-9_]+)`, $$dpth + 1, $$cr);\n    }\n    matchCanEnvironmentVariable_$8($$dpth, $$cr) {\n        return this.regexAccept(String.raw `(?:[a-zA-Z0-9_]+)`, $$dpth + 1, $$cr);\n    }\n    matchEnvironmentVarData($$dpth, $$cr) {\n        return this.run($$dpth, () => {\n            let $scope$name;\n            let $scope$raw_value;\n            let $$res = null;\n            if (this.regexAccept(String.raw `(?:ENVVAR_DATA_\\s+)`, $$dpth + 1, $$cr) !== null\n                && ($scope$name = this.matchEnvironmentVarData_$0($$dpth + 1, $$cr)) !== null\n                && this.regexAccept(String.raw `(?:\\s*:\\s*)`, $$dpth + 1, $$cr) !== null\n                && ($scope$raw_value = this.matchEnvironmentVarData_$1($$dpth + 1, $$cr)) !== null) {\n                $$res = new EnvironmentVarData($scope$name, $scope$raw_value);\n            }\n            return $$res;\n        });\n    }\n    matchEnvironmentVarData_$0($$dpth, $$cr) {\n        return this.regexAccept(String.raw `(?:[a-zA-Z0-9_]+)`, $$dpth + 1, $$cr);\n    }\n    matchEnvironmentVarData_$1($$dpth, $$cr) {\n        return this.regexAccept(String.raw `(?:[0-9]+)`, $$dpth + 1, $$cr);\n    }\n    matchEnvironmentVariableComment($$dpth, $$cr) {\n        return this.run($$dpth, () => {\n            let $scope$name;\n            let $scope$raw_comment;\n            let $$res = null;\n            if (this.regexAccept(String.raw `(?:CM_ EV_\\s+)`, $$dpth + 1, $$cr) !== null\n                && ($scope$name = this.matchEnvironmentVariableComment_$0($$dpth + 1, $$cr)) !== null\n                && this.regexAccept(String.raw `(?:\\s)`, $$dpth + 1, $$cr) !== null\n                && ($scope$raw_comment = this.matchEnvironmentVariableComment_$1($$dpth + 1, $$cr)) !== null) {\n                $$res = new EnvironmentVariableComment($scope$name, $scope$raw_comment);\n            }\n            return $$res;\n        });\n    }\n    matchEnvironmentVariableComment_$0($$dpth, $$cr) {\n        return this.regexAccept(String.raw `(?:[a-zA-Z0-9_]+)`, $$dpth + 1, $$cr);\n    }\n    matchEnvironmentVariableComment_$1($$dpth, $$cr) {\n        return this.regexAccept(String.raw `(?:.*)`, $$dpth + 1, $$cr);\n    }\n    matchVersion($$dpth, $$cr) {\n        return this.run($$dpth, () => {\n            let $scope$raw_version;\n            let $$res = null;\n            if (this.regexAccept(String.raw `(?:VERSION)`, $$dpth + 1, $$cr) !== null\n                && this.regexAccept(String.raw `(?:\\s+)`, $$dpth + 1, $$cr) !== null\n                && ($scope$raw_version = this.matchVersion_$0($$dpth + 1, $$cr)) !== null) {\n                $$res = new Version($scope$raw_version);\n            }\n            return $$res;\n        });\n    }\n    matchVersion_$0($$dpth, $$cr) {\n        return this.regexAccept(String.raw `(?:.*)`, $$dpth + 1, $$cr);\n    }\n    matchNewSymbol($$dpth, $$cr) {\n        return this.regexAccept(String.raw `(?:NS_\\s*:)`, $$dpth + 1, $$cr);\n    }\n    matchBusSpeed($$dpth, $$cr) {\n        return this.regexAccept(String.raw `(?:BS_:)`, $$dpth + 1, $$cr);\n    }\n    matchNewSymbolValue($$dpth, $$cr) {\n        return this.run($$dpth, () => {\n            let $scope$symbol;\n            let $$res = null;\n            if (this.regexAccept(String.raw `(?:\\s+)`, $$dpth + 1, $$cr) !== null\n                && ($scope$symbol = this.matchNewSymbolValue_$0($$dpth + 1, $$cr)) !== null\n                && ((this.regexAccept(String.raw `(?:$)`, $$dpth + 1, $$cr)) || true)) {\n                $$res = { kind: ASTKinds.NewSymbolValue, symbol: $scope$symbol };\n            }\n            return $$res;\n        });\n    }\n    matchNewSymbolValue_$0($$dpth, $$cr) {\n        return this.regexAccept(String.raw `(?:[a-zA-Z_]+_)`, $$dpth + 1, $$cr);\n    }\n    matchCanNode($$dpth, $$cr) {\n        return this.run($$dpth, () => {\n            let $scope$raw_node_string;\n            let $$res = null;\n            if (this.regexAccept(String.raw `(?:BU_:\\s*)`, $$dpth + 1, $$cr) !== null\n                && ($scope$raw_node_string = this.matchCanNode_$0($$dpth + 1, $$cr)) !== null\n                && this.regexAccept(String.raw `(?:\\s*)`, $$dpth + 1, $$cr) !== null\n                && ((this.regexAccept(String.raw `(?:;)`, $$dpth + 1, $$cr)) || true)) {\n                $$res = new CanNode($scope$raw_node_string);\n            }\n            return $$res;\n        });\n    }\n    matchCanNode_$0($$dpth, $$cr) {\n        return this.regexAccept(String.raw `(?:[a-zA-Z0-9_\\s]*)`, $$dpth + 1, $$cr);\n    }\n    matchCanMessage($$dpth, $$cr) {\n        return this.run($$dpth, () => {\n            let $scope$raw_id;\n            let $scope$name;\n            let $scope$raw_dlc;\n            let $scope$node;\n            let $$res = null;\n            if (this.regexAccept(String.raw `(?:BO_\\s)`, $$dpth + 1, $$cr) !== null\n                && ($scope$raw_id = this.matchCanMessage_$0($$dpth + 1, $$cr)) !== null\n                && this.regexAccept(String.raw `(?:\\s*)`, $$dpth + 1, $$cr) !== null\n                && ($scope$name = this.matchCanMessage_$1($$dpth + 1, $$cr)) !== null\n                && this.regexAccept(String.raw `(?::\\s*)`, $$dpth + 1, $$cr) !== null\n                && ($scope$raw_dlc = this.matchCanMessage_$2($$dpth + 1, $$cr)) !== null\n                && this.regexAccept(String.raw `(?:\\s*)`, $$dpth + 1, $$cr) !== null\n                && ($scope$node = this.matchCanMessage_$3($$dpth + 1, $$cr)) !== null) {\n                $$res = new CanMessage($scope$raw_id, $scope$name, $scope$raw_dlc, $scope$node);\n            }\n            return $$res;\n        });\n    }\n    matchCanMessage_$0($$dpth, $$cr) {\n        return this.regexAccept(String.raw `(?:[0-9]+)`, $$dpth + 1, $$cr);\n    }\n    matchCanMessage_$1($$dpth, $$cr) {\n        return this.regexAccept(String.raw `(?:[a-zA-Z0-9_]*)`, $$dpth + 1, $$cr);\n    }\n    matchCanMessage_$2($$dpth, $$cr) {\n        return this.regexAccept(String.raw `(?:[0-9])`, $$dpth + 1, $$cr);\n    }\n    matchCanMessage_$3($$dpth, $$cr) {\n        return this.regexAccept(String.raw `(?:[a-zA-Z0-9_]*)`, $$dpth + 1, $$cr);\n    }\n    matchCanSignal($$dpth, $$cr) {\n        return this.run($$dpth, () => {\n            let $scope$name;\n            let $scope$multiplex;\n            let $scope$raw_start_bit;\n            let $scope$raw_length;\n            let $scope$raw_endian;\n            let $scope$raw_signed;\n            let $scope$raw_factor;\n            let $scope$raw_offset;\n            let $scope$raw_min;\n            let $scope$raw_max;\n            let $scope$raw_unit;\n            let $scope$raw_node_str;\n            let $$res = null;\n            if (this.regexAccept(String.raw `(?:\\s*SG_\\s)`, $$dpth + 1, $$cr) !== null\n                && ($scope$name = this.matchCanSignal_$0($$dpth + 1, $$cr)) !== null\n                && this.regexAccept(String.raw `(?:\\s*)`, $$dpth + 1, $$cr) !== null\n                && ($scope$multiplex = this.matchCanSignal_$1($$dpth + 1, $$cr)) !== null\n                && this.regexAccept(String.raw `(?:\\s*:\\s)`, $$dpth + 1, $$cr) !== null\n                && ($scope$raw_start_bit = this.matchCanSignal_$2($$dpth + 1, $$cr)) !== null\n                && this.regexAccept(String.raw `(?:\\|)`, $$dpth + 1, $$cr) !== null\n                && ($scope$raw_length = this.matchCanSignal_$3($$dpth + 1, $$cr)) !== null\n                && this.regexAccept(String.raw `(?:@)`, $$dpth + 1, $$cr) !== null\n                && ($scope$raw_endian = this.matchCanSignal_$4($$dpth + 1, $$cr)) !== null\n                && ($scope$raw_signed = this.matchCanSignal_$5($$dpth + 1, $$cr)) !== null\n                && this.regexAccept(String.raw `(?:\\s\\()`, $$dpth + 1, $$cr) !== null\n                && ($scope$raw_factor = this.matchCanSignal_$6($$dpth + 1, $$cr)) !== null\n                && this.regexAccept(String.raw `(?:,)`, $$dpth + 1, $$cr) !== null\n                && ($scope$raw_offset = this.matchCanSignal_$7($$dpth + 1, $$cr)) !== null\n                && this.regexAccept(String.raw `(?:\\)\\s\\[)`, $$dpth + 1, $$cr) !== null\n                && ($scope$raw_min = this.matchCanSignal_$8($$dpth + 1, $$cr)) !== null\n                && this.regexAccept(String.raw `(?:\\|)`, $$dpth + 1, $$cr) !== null\n                && ($scope$raw_max = this.matchCanSignal_$9($$dpth + 1, $$cr)) !== null\n                && this.regexAccept(String.raw `(?:\\]\\s)`, $$dpth + 1, $$cr) !== null\n                && ($scope$raw_unit = this.matchCanSignal_$10($$dpth + 1, $$cr)) !== null\n                && this.regexAccept(String.raw `(?:\\s)`, $$dpth + 1, $$cr) !== null\n                && ($scope$raw_node_str = this.matchCanSignal_$11($$dpth + 1, $$cr)) !== null) {\n                $$res = new CanSignal($scope$name, $scope$multiplex, $scope$raw_start_bit, $scope$raw_length, $scope$raw_endian, $scope$raw_signed, $scope$raw_factor, $scope$raw_offset, $scope$raw_min, $scope$raw_max, $scope$raw_unit, $scope$raw_node_str);\n            }\n            return $$res;\n        });\n    }\n    matchCanSignal_$0($$dpth, $$cr) {\n        return this.regexAccept(String.raw `(?:[a-zA-Z0-9_]+)`, $$dpth + 1, $$cr);\n    }\n    matchCanSignal_$1($$dpth, $$cr) {\n        return this.regexAccept(String.raw `(?:M|[m0-9M]*|\\s)`, $$dpth + 1, $$cr);\n    }\n    matchCanSignal_$2($$dpth, $$cr) {\n        return this.regexAccept(String.raw `(?:[0-9]+)`, $$dpth + 1, $$cr);\n    }\n    matchCanSignal_$3($$dpth, $$cr) {\n        return this.regexAccept(String.raw `(?:[0-9]+)`, $$dpth + 1, $$cr);\n    }\n    matchCanSignal_$4($$dpth, $$cr) {\n        return this.regexAccept(String.raw `(?:[1|0])`, $$dpth + 1, $$cr);\n    }\n    matchCanSignal_$5($$dpth, $$cr) {\n        return this.regexAccept(String.raw `(?:[+|-])`, $$dpth + 1, $$cr);\n    }\n    matchCanSignal_$6($$dpth, $$cr) {\n        return this.regexAccept(String.raw `(?:[\\-0-9.]+)`, $$dpth + 1, $$cr);\n    }\n    matchCanSignal_$7($$dpth, $$cr) {\n        return this.regexAccept(String.raw `(?:[\\-0-9.]+)`, $$dpth + 1, $$cr);\n    }\n    matchCanSignal_$8($$dpth, $$cr) {\n        return this.regexAccept(String.raw `(?:[\\-0-9.]+)`, $$dpth + 1, $$cr);\n    }\n    matchCanSignal_$9($$dpth, $$cr) {\n        return this.regexAccept(String.raw `(?:[\\-0-9.]+)`, $$dpth + 1, $$cr);\n    }\n    matchCanSignal_$10($$dpth, $$cr) {\n        return this.regexAccept(String.raw `(?:\".*\")`, $$dpth + 1, $$cr);\n    }\n    matchCanSignal_$11($$dpth, $$cr) {\n        return this.regexAccept(String.raw `(?:.*)`, $$dpth + 1, $$cr);\n    }\n    matchSignalMultiplexVal($$dpth, $$cr) {\n        return this.run($$dpth, () => {\n            let $scope$raw_id;\n            let $scope$name;\n            let $scope$switch_name;\n            let $scope$raw_value_ranges;\n            let $$res = null;\n            if (this.regexAccept(String.raw `(?:SG_MUL_VAL_\\s)`, $$dpth + 1, $$cr) !== null\n                && ($scope$raw_id = this.matchSignalMultiplexVal_$0($$dpth + 1, $$cr)) !== null\n                && this.regexAccept(String.raw `(?:\\s*)`, $$dpth + 1, $$cr) !== null\n                && ($scope$name = this.matchSignalMultiplexVal_$1($$dpth + 1, $$cr)) !== null\n                && this.regexAccept(String.raw `(?:\\s*)`, $$dpth + 1, $$cr) !== null\n                && ($scope$switch_name = this.matchSignalMultiplexVal_$2($$dpth + 1, $$cr)) !== null\n                && this.regexAccept(String.raw `(?:\\s*)`, $$dpth + 1, $$cr) !== null\n                && ($scope$raw_value_ranges = this.matchSignalMultiplexVal_$3($$dpth + 1, $$cr)) !== null) {\n                $$res = new SignalMultiplexVal($scope$raw_id, $scope$name, $scope$switch_name, $scope$raw_value_ranges);\n            }\n            return $$res;\n        });\n    }\n    matchSignalMultiplexVal_$0($$dpth, $$cr) {\n        return this.regexAccept(String.raw `(?:[0-9]+)`, $$dpth + 1, $$cr);\n    }\n    matchSignalMultiplexVal_$1($$dpth, $$cr) {\n        return this.regexAccept(String.raw `(?:[a-zA-Z0-9_]+)`, $$dpth + 1, $$cr);\n    }\n    matchSignalMultiplexVal_$2($$dpth, $$cr) {\n        return this.regexAccept(String.raw `(?:[a-zA-Z0-9_]+)`, $$dpth + 1, $$cr);\n    }\n    matchSignalMultiplexVal_$3($$dpth, $$cr) {\n        return this.regexAccept(String.raw `(?:[0-9-,\\s]+;)`, $$dpth + 1, $$cr);\n    }\n    matchValTable($$dpth, $$cr) {\n        return this.run($$dpth, () => {\n            let $scope$name;\n            let $scope$raw_table;\n            let $$res = null;\n            if (this.regexAccept(String.raw `(?:VAL_TABLE_\\s)`, $$dpth + 1, $$cr) !== null\n                && ($scope$name = this.matchValTable_$0($$dpth + 1, $$cr)) !== null\n                && this.regexAccept(String.raw `(?:\\s)`, $$dpth + 1, $$cr) !== null\n                && ($scope$raw_table = this.matchValTable_$1($$dpth + 1, $$cr)) !== null) {\n                $$res = new ValTable($scope$name, $scope$raw_table);\n            }\n            return $$res;\n        });\n    }\n    matchValTable_$0($$dpth, $$cr) {\n        return this.regexAccept(String.raw `(?:[a-zA-Z0-9_]+)`, $$dpth + 1, $$cr);\n    }\n    matchValTable_$1($$dpth, $$cr) {\n        return this.regexAccept(String.raw `(?:.*)`, $$dpth + 1, $$cr);\n    }\n    matchVal($$dpth, $$cr) {\n        return this.run($$dpth, () => {\n            let $scope$raw_id;\n            let $scope$name;\n            let $scope$raw_table;\n            let $$res = null;\n            if (this.regexAccept(String.raw `(?:VAL_\\s)`, $$dpth + 1, $$cr) !== null\n                && ($scope$raw_id = this.matchVal_$0($$dpth + 1, $$cr)) !== null\n                && this.regexAccept(String.raw `(?:\\s)`, $$dpth + 1, $$cr) !== null\n                && ($scope$name = this.matchVal_$1($$dpth + 1, $$cr)) !== null\n                && this.regexAccept(String.raw `(?:\\s)`, $$dpth + 1, $$cr) !== null\n                && ($scope$raw_table = this.matchVal_$2($$dpth + 1, $$cr)) !== null) {\n                $$res = new Val($scope$raw_id, $scope$name, $scope$raw_table);\n            }\n            return $$res;\n        });\n    }\n    matchVal_$0($$dpth, $$cr) {\n        return this.regexAccept(String.raw `(?:[0-9]+)`, $$dpth + 1, $$cr);\n    }\n    matchVal_$1($$dpth, $$cr) {\n        return this.regexAccept(String.raw `(?:[a-zA-Z0-9_]+)`, $$dpth + 1, $$cr);\n    }\n    matchVal_$2($$dpth, $$cr) {\n        return this.regexAccept(String.raw `(?:.*)`, $$dpth + 1, $$cr);\n    }\n    matchEnvironmentVal($$dpth, $$cr) {\n        return this.run($$dpth, () => {\n            let $scope$name;\n            let $scope$raw_table;\n            let $$res = null;\n            if (this.regexAccept(String.raw `(?:VAL_\\s)`, $$dpth + 1, $$cr) !== null\n                && this.negate(() => this.regexAccept(String.raw `(?:0-9)`, $$dpth + 1, $$cr)) !== null\n                && ($scope$name = this.matchEnvironmentVal_$0($$dpth + 1, $$cr)) !== null\n                && this.regexAccept(String.raw `(?:\\s)`, $$dpth + 1, $$cr) !== null\n                && ($scope$raw_table = this.matchEnvironmentVal_$1($$dpth + 1, $$cr)) !== null) {\n                $$res = new EnvironmentVal($scope$name, $scope$raw_table);\n            }\n            return $$res;\n        });\n    }\n    matchEnvironmentVal_$0($$dpth, $$cr) {\n        return this.regexAccept(String.raw `(?:[a-zA-Z0-9_]+)`, $$dpth + 1, $$cr);\n    }\n    matchEnvironmentVal_$1($$dpth, $$cr) {\n        return this.regexAccept(String.raw `(?:.*)`, $$dpth + 1, $$cr);\n    }\n    matchComment($$dpth, $$cr) {\n        return this.run($$dpth, () => {\n            let $scope$raw_comment;\n            let $$res = null;\n            if (this.regexAccept(String.raw `(?:CM_\\s)`, $$dpth + 1, $$cr) !== null\n                && this.negate(() => this.regexAccept(String.raw `(?:[SG_|BO_|BU_|EV_])`, $$dpth + 1, $$cr)) !== null\n                && ($scope$raw_comment = this.matchComment_$0($$dpth + 1, $$cr)) !== null) {\n                $$res = new Comment($scope$raw_comment);\n            }\n            return $$res;\n        });\n    }\n    matchComment_$0($$dpth, $$cr) {\n        return this.regexAccept(String.raw `(?:.*)`, $$dpth + 1, $$cr);\n    }\n    matchSignalComment($$dpth, $$cr) {\n        return this.run($$dpth, () => {\n            let $scope$raw_id;\n            let $scope$name;\n            let $scope$raw_comment;\n            let $$res = null;\n            if (this.regexAccept(String.raw `(?:CM_ SG_\\s)`, $$dpth + 1, $$cr) !== null\n                && ($scope$raw_id = this.matchSignalComment_$0($$dpth + 1, $$cr)) !== null\n                && this.regexAccept(String.raw `(?:\\s)`, $$dpth + 1, $$cr) !== null\n                && ($scope$name = this.matchSignalComment_$1($$dpth + 1, $$cr)) !== null\n                && this.regexAccept(String.raw `(?:\\s)`, $$dpth + 1, $$cr) !== null\n                && ($scope$raw_comment = this.matchSignalComment_$2($$dpth + 1, $$cr)) !== null) {\n                $$res = new SignalComment($scope$raw_id, $scope$name, $scope$raw_comment);\n            }\n            return $$res;\n        });\n    }\n    matchSignalComment_$0($$dpth, $$cr) {\n        return this.regexAccept(String.raw `(?:[0-9]+)`, $$dpth + 1, $$cr);\n    }\n    matchSignalComment_$1($$dpth, $$cr) {\n        return this.regexAccept(String.raw `(?:[a-zA-Z0-9_]+)`, $$dpth + 1, $$cr);\n    }\n    matchSignalComment_$2($$dpth, $$cr) {\n        return this.regexAccept(String.raw `(?:.*)`, $$dpth + 1, $$cr);\n    }\n    matchMessageComment($$dpth, $$cr) {\n        return this.run($$dpth, () => {\n            let $scope$raw_id;\n            let $scope$raw_comment;\n            let $$res = null;\n            if (this.regexAccept(String.raw `(?:CM_ BO_\\s)`, $$dpth + 1, $$cr) !== null\n                && ($scope$raw_id = this.matchMessageComment_$0($$dpth + 1, $$cr)) !== null\n                && this.regexAccept(String.raw `(?:\\s)`, $$dpth + 1, $$cr) !== null\n                && ($scope$raw_comment = this.matchMessageComment_$1($$dpth + 1, $$cr)) !== null) {\n                $$res = new MessageComment($scope$raw_id, $scope$raw_comment);\n            }\n            return $$res;\n        });\n    }\n    matchMessageComment_$0($$dpth, $$cr) {\n        return this.regexAccept(String.raw `(?:[0-9]+)`, $$dpth + 1, $$cr);\n    }\n    matchMessageComment_$1($$dpth, $$cr) {\n        return this.regexAccept(String.raw `(?:.*)`, $$dpth + 1, $$cr);\n    }\n    matchNodeComment($$dpth, $$cr) {\n        return this.run($$dpth, () => {\n            let $scope$name;\n            let $scope$raw_comment;\n            let $$res = null;\n            if (this.regexAccept(String.raw `(?:CM_ BU_\\s)`, $$dpth + 1, $$cr) !== null\n                && ($scope$name = this.matchNodeComment_$0($$dpth + 1, $$cr)) !== null\n                && this.regexAccept(String.raw `(?:\\s)`, $$dpth + 1, $$cr) !== null\n                && ($scope$raw_comment = this.matchNodeComment_$1($$dpth + 1, $$cr)) !== null) {\n                $$res = new NodeComment($scope$name, $scope$raw_comment);\n            }\n            return $$res;\n        });\n    }\n    matchNodeComment_$0($$dpth, $$cr) {\n        return this.regexAccept(String.raw `(?:[a-zA-Z0-9_]+)`, $$dpth + 1, $$cr);\n    }\n    matchNodeComment_$1($$dpth, $$cr) {\n        return this.regexAccept(String.raw `(?:.*)`, $$dpth + 1, $$cr);\n    }\n    matchGlobalAttribute($$dpth, $$cr) {\n        return this.run($$dpth, () => {\n            let $scope$name;\n            let $scope$type;\n            let $scope$raw_value;\n            let $$res = null;\n            if (this.regexAccept(String.raw `(?:BA_DEF_\\s+)`, $$dpth + 1, $$cr) !== null\n                && this.regexAccept(String.raw `(?:\")`, $$dpth + 1, $$cr) !== null\n                && ($scope$name = this.matchGlobalAttribute_$0($$dpth + 1, $$cr)) !== null\n                && this.regexAccept(String.raw `(?:\")`, $$dpth + 1, $$cr) !== null\n                && this.regexAccept(String.raw `(?:\\s)`, $$dpth + 1, $$cr) !== null\n                && ($scope$type = this.matchGlobalAttribute_$1($$dpth + 1, $$cr)) !== null\n                && this.regexAccept(String.raw `(?:\\s)`, $$dpth + 1, $$cr) !== null\n                && ($scope$raw_value = this.matchGlobalAttribute_$2($$dpth + 1, $$cr)) !== null) {\n                $$res = new GlobalAttribute($scope$name, $scope$type, $scope$raw_value);\n            }\n            return $$res;\n        });\n    }\n    matchGlobalAttribute_$0($$dpth, $$cr) {\n        return this.regexAccept(String.raw `(?:[a-zA-Z0-9_]+)`, $$dpth + 1, $$cr);\n    }\n    matchGlobalAttribute_$1($$dpth, $$cr) {\n        return this.regexAccept(String.raw `(?:[A-Z]+)`, $$dpth + 1, $$cr);\n    }\n    matchGlobalAttribute_$2($$dpth, $$cr) {\n        return this.regexAccept(String.raw `(?:.*)`, $$dpth + 1, $$cr);\n    }\n    matchMessageAttribute($$dpth, $$cr) {\n        return this.run($$dpth, () => {\n            let $scope$name;\n            let $scope$type;\n            let $scope$raw_value;\n            let $$res = null;\n            if (this.regexAccept(String.raw `(?:BA_DEF_ BO_\\s+)`, $$dpth + 1, $$cr) !== null\n                && this.regexAccept(String.raw `(?:\")`, $$dpth + 1, $$cr) !== null\n                && ($scope$name = this.matchMessageAttribute_$0($$dpth + 1, $$cr)) !== null\n                && this.regexAccept(String.raw `(?:\")`, $$dpth + 1, $$cr) !== null\n                && this.regexAccept(String.raw `(?:\\s)`, $$dpth + 1, $$cr) !== null\n                && ($scope$type = this.matchMessageAttribute_$1($$dpth + 1, $$cr)) !== null\n                && ((this.regexAccept(String.raw `(?:\\s)`, $$dpth + 1, $$cr)) || true)\n                && ($scope$raw_value = this.matchMessageAttribute_$2($$dpth + 1, $$cr)) !== null) {\n                $$res = new MessageAttribute($scope$name, $scope$type, $scope$raw_value);\n            }\n            return $$res;\n        });\n    }\n    matchMessageAttribute_$0($$dpth, $$cr) {\n        return this.regexAccept(String.raw `(?:[a-zA-Z0-9_]+)`, $$dpth + 1, $$cr);\n    }\n    matchMessageAttribute_$1($$dpth, $$cr) {\n        return this.regexAccept(String.raw `(?:[A-Z]+)`, $$dpth + 1, $$cr);\n    }\n    matchMessageAttribute_$2($$dpth, $$cr) {\n        return this.regexAccept(String.raw `(?:.*)`, $$dpth + 1, $$cr);\n    }\n    matchEnvironmentAttribute($$dpth, $$cr) {\n        return this.run($$dpth, () => {\n            let $scope$name;\n            let $scope$type;\n            let $scope$raw_value;\n            let $$res = null;\n            if (this.regexAccept(String.raw `(?:BA_DEF_ EV_\\s+)`, $$dpth + 1, $$cr) !== null\n                && this.regexAccept(String.raw `(?:\")`, $$dpth + 1, $$cr) !== null\n                && ($scope$name = this.matchEnvironmentAttribute_$0($$dpth + 1, $$cr)) !== null\n                && this.regexAccept(String.raw `(?:\")`, $$dpth + 1, $$cr) !== null\n                && this.regexAccept(String.raw `(?:\\s)`, $$dpth + 1, $$cr) !== null\n                && ($scope$type = this.matchEnvironmentAttribute_$1($$dpth + 1, $$cr)) !== null\n                && ((this.regexAccept(String.raw `(?:\\s)`, $$dpth + 1, $$cr)) || true)\n                && ($scope$raw_value = this.matchEnvironmentAttribute_$2($$dpth + 1, $$cr)) !== null) {\n                $$res = new EnvironmentAttribute($scope$name, $scope$type, $scope$raw_value);\n            }\n            return $$res;\n        });\n    }\n    matchEnvironmentAttribute_$0($$dpth, $$cr) {\n        return this.regexAccept(String.raw `(?:[a-zA-Z0-9_]+)`, $$dpth + 1, $$cr);\n    }\n    matchEnvironmentAttribute_$1($$dpth, $$cr) {\n        return this.regexAccept(String.raw `(?:[A-Z]+)`, $$dpth + 1, $$cr);\n    }\n    matchEnvironmentAttribute_$2($$dpth, $$cr) {\n        return this.regexAccept(String.raw `(?:.*)`, $$dpth + 1, $$cr);\n    }\n    matchNodeAttribute($$dpth, $$cr) {\n        return this.run($$dpth, () => {\n            let $scope$name;\n            let $scope$type;\n            let $scope$raw_value;\n            let $$res = null;\n            if (this.regexAccept(String.raw `(?:BA_DEF_ BU_\\s+)`, $$dpth + 1, $$cr) !== null\n                && this.regexAccept(String.raw `(?:\")`, $$dpth + 1, $$cr) !== null\n                && ($scope$name = this.matchNodeAttribute_$0($$dpth + 1, $$cr)) !== null\n                && this.regexAccept(String.raw `(?:\")`, $$dpth + 1, $$cr) !== null\n                && this.regexAccept(String.raw `(?:\\s)`, $$dpth + 1, $$cr) !== null\n                && ($scope$type = this.matchNodeAttribute_$1($$dpth + 1, $$cr)) !== null\n                && ((this.regexAccept(String.raw `(?:\\s)`, $$dpth + 1, $$cr)) || true)\n                && ($scope$raw_value = this.matchNodeAttribute_$2($$dpth + 1, $$cr)) !== null) {\n                $$res = new NodeAttribute($scope$name, $scope$type, $scope$raw_value);\n            }\n            return $$res;\n        });\n    }\n    matchNodeAttribute_$0($$dpth, $$cr) {\n        return this.regexAccept(String.raw `(?:[a-zA-Z0-9_]+)`, $$dpth + 1, $$cr);\n    }\n    matchNodeAttribute_$1($$dpth, $$cr) {\n        return this.regexAccept(String.raw `(?:[A-Z]+)`, $$dpth + 1, $$cr);\n    }\n    matchNodeAttribute_$2($$dpth, $$cr) {\n        return this.regexAccept(String.raw `(?:.*)`, $$dpth + 1, $$cr);\n    }\n    matchSignalAttribute($$dpth, $$cr) {\n        return this.run($$dpth, () => {\n            let $scope$name;\n            let $scope$type;\n            let $scope$raw_value;\n            let $$res = null;\n            if (this.regexAccept(String.raw `(?:BA_DEF_ SG_\\s+)`, $$dpth + 1, $$cr) !== null\n                && this.regexAccept(String.raw `(?:\")`, $$dpth + 1, $$cr) !== null\n                && ($scope$name = this.matchSignalAttribute_$0($$dpth + 1, $$cr)) !== null\n                && this.regexAccept(String.raw `(?:\")`, $$dpth + 1, $$cr) !== null\n                && this.regexAccept(String.raw `(?:\\s)`, $$dpth + 1, $$cr) !== null\n                && ($scope$type = this.matchSignalAttribute_$1($$dpth + 1, $$cr)) !== null\n                && ((this.regexAccept(String.raw `(?:\\s)`, $$dpth + 1, $$cr)) || true)\n                && ($scope$raw_value = this.matchSignalAttribute_$2($$dpth + 1, $$cr)) !== null) {\n                $$res = new SignalAttribute($scope$name, $scope$type, $scope$raw_value);\n            }\n            return $$res;\n        });\n    }\n    matchSignalAttribute_$0($$dpth, $$cr) {\n        return this.regexAccept(String.raw `(?:[a-zA-Z0-9_]+)`, $$dpth + 1, $$cr);\n    }\n    matchSignalAttribute_$1($$dpth, $$cr) {\n        return this.regexAccept(String.raw `(?:[A-Z]+)`, $$dpth + 1, $$cr);\n    }\n    matchSignalAttribute_$2($$dpth, $$cr) {\n        return this.regexAccept(String.raw `(?:.*)`, $$dpth + 1, $$cr);\n    }\n    matchAttributeDefault($$dpth, $$cr) {\n        return this.run($$dpth, () => {\n            let $scope$name;\n            let $scope$raw_value;\n            let $$res = null;\n            if (this.regexAccept(String.raw `(?:BA_DEF_DEF_\\s+)`, $$dpth + 1, $$cr) !== null\n                && this.regexAccept(String.raw `(?:\")`, $$dpth + 1, $$cr) !== null\n                && ($scope$name = this.matchAttributeDefault_$0($$dpth + 1, $$cr)) !== null\n                && this.regexAccept(String.raw `(?:\")`, $$dpth + 1, $$cr) !== null\n                && this.regexAccept(String.raw `(?:\\s)`, $$dpth + 1, $$cr) !== null\n                && ($scope$raw_value = this.matchAttributeDefault_$1($$dpth + 1, $$cr)) !== null) {\n                $$res = new AttributeDefault($scope$name, $scope$raw_value);\n            }\n            return $$res;\n        });\n    }\n    matchAttributeDefault_$0($$dpth, $$cr) {\n        return this.regexAccept(String.raw `(?:[a-zA-Z0-9_]+)`, $$dpth + 1, $$cr);\n    }\n    matchAttributeDefault_$1($$dpth, $$cr) {\n        return this.regexAccept(String.raw `(?:.*)`, $$dpth + 1, $$cr);\n    }\n    matchAttributeValue($$dpth, $$cr) {\n        return this.run($$dpth, () => {\n            let $scope$name;\n            let $scope$raw;\n            let $$res = null;\n            if (this.regexAccept(String.raw `(?:BA_\\s+)`, $$dpth + 1, $$cr) !== null\n                && this.regexAccept(String.raw `(?:\")`, $$dpth + 1, $$cr) !== null\n                && ($scope$name = this.matchAttributeValue_$0($$dpth + 1, $$cr)) !== null\n                && this.regexAccept(String.raw `(?:\")`, $$dpth + 1, $$cr) !== null\n                && this.regexAccept(String.raw `(?:\\s)`, $$dpth + 1, $$cr) !== null\n                && ($scope$raw = this.matchAttributeValue_$1($$dpth + 1, $$cr)) !== null) {\n                $$res = new AttributeValue($scope$name, $scope$raw);\n            }\n            return $$res;\n        });\n    }\n    matchAttributeValue_$0($$dpth, $$cr) {\n        return this.regexAccept(String.raw `(?:[a-zA-Z0-9_]+)`, $$dpth + 1, $$cr);\n    }\n    matchAttributeValue_$1($$dpth, $$cr) {\n        return this.regexAccept(String.raw `(?:.*)`, $$dpth + 1, $$cr);\n    }\n    matchSigValType($$dpth, $$cr) {\n        return this.run($$dpth, () => {\n            let $scope$raw_id;\n            let $scope$name;\n            let $scope$raw_type;\n            let $$res = null;\n            if (this.regexAccept(String.raw `(?:SIG_VALTYPE_\\s+)`, $$dpth + 1, $$cr) !== null\n                && ($scope$raw_id = this.matchSigValType_$0($$dpth + 1, $$cr)) !== null\n                && this.regexAccept(String.raw `(?:\\s+)`, $$dpth + 1, $$cr) !== null\n                && ($scope$name = this.matchSigValType_$1($$dpth + 1, $$cr)) !== null\n                && this.regexAccept(String.raw `(?:\\s*:\\s*)`, $$dpth + 1, $$cr) !== null\n                && ($scope$raw_type = this.matchSigValType_$2($$dpth + 1, $$cr)) !== null) {\n                $$res = new SigValType($scope$raw_id, $scope$name, $scope$raw_type);\n            }\n            return $$res;\n        });\n    }\n    matchSigValType_$0($$dpth, $$cr) {\n        return this.regexAccept(String.raw `(?:[0-9]+)`, $$dpth + 1, $$cr);\n    }\n    matchSigValType_$1($$dpth, $$cr) {\n        return this.regexAccept(String.raw `(?:[a-zA-Z0-9_]+)`, $$dpth + 1, $$cr);\n    }\n    matchSigValType_$2($$dpth, $$cr) {\n        return this.regexAccept(String.raw `(?:1|2)`, $$dpth + 1, $$cr);\n    }\n    test() {\n        const mrk = this.mark();\n        const res = this.matchChoice(0);\n        const ans = res !== null;\n        this.reset(mrk);\n        return ans;\n    }\n    parse() {\n        const mrk = this.mark();\n        const res = this.matchChoice(0);\n        if (res)\n            return { ast: res, errs: [] };\n        this.reset(mrk);\n        const rec = new ErrorTracker();\n        this.clearMemos();\n        this.matchChoice(0, rec);\n        const err = rec.getErr();\n        return { ast: res, errs: err !== null ? [err] : [] };\n    }\n    mark() {\n        return this.pos;\n    }\n    loop(func, star = false) {\n        const mrk = this.mark();\n        const res = [];\n        for (;;) {\n            const t = func();\n            if (t === null) {\n                break;\n            }\n            res.push(t);\n        }\n        if (star || res.length > 0) {\n            return res;\n        }\n        this.reset(mrk);\n        return null;\n    }\n    run($$dpth, fn) {\n        const mrk = this.mark();\n        const res = fn();\n        if (res !== null)\n            return res;\n        this.reset(mrk);\n        return null;\n    }\n    choice(fns) {\n        for (const f of fns) {\n            const res = f();\n            if (res !== null) {\n                return res;\n            }\n        }\n        return null;\n    }\n    regexAccept(match, dpth, cr) {\n        return this.run(dpth, () => {\n            const reg = new RegExp(match, \"y\");\n            const mrk = this.mark();\n            reg.lastIndex = mrk.overallPos;\n            const res = this.tryConsume(reg);\n            if (cr) {\n                cr.record(mrk, res, {\n                    kind: \"RegexMatch\",\n                    // We substring from 3 to len - 1 to strip off the\n                    // non-capture group syntax added as a WebKit workaround\n                    literal: match.substring(3, match.length - 1),\n                    negated: this.negating,\n                });\n            }\n            return res;\n        });\n    }\n    tryConsume(reg) {\n        const res = reg.exec(this.input);\n        if (res) {\n            let lineJmp = 0;\n            let lind = -1;\n            for (let i = 0; i < res[0].length; ++i) {\n                if (res[0][i] === \"\\n\") {\n                    ++lineJmp;\n                    lind = i;\n                }\n            }\n            this.pos = {\n                overallPos: reg.lastIndex,\n                line: this.pos.line + lineJmp,\n                offset: lind === -1 ? this.pos.offset + res[0].length : (res[0].length - lind - 1)\n            };\n            return res[0];\n        }\n        return null;\n    }\n    noConsume(fn) {\n        const mrk = this.mark();\n        const res = fn();\n        this.reset(mrk);\n        return res;\n    }\n    negate(fn) {\n        const mrk = this.mark();\n        const oneg = this.negating;\n        this.negating = !oneg;\n        const res = fn();\n        this.negating = oneg;\n        this.reset(mrk);\n        return res === null ? true : null;\n    }\n    memoise(rule, memo) {\n        const $scope$pos = this.mark();\n        const $scope$memoRes = memo.get($scope$pos.overallPos);\n        if (this.memoSafe && $scope$memoRes !== undefined) {\n            this.reset($scope$memoRes[1]);\n            return $scope$memoRes[0];\n        }\n        const $scope$result = rule();\n        if (this.memoSafe)\n            memo.set($scope$pos.overallPos, [$scope$result, this.mark()]);\n        return $scope$result;\n    }\n    match$EOF(et) {\n        const res = this.finished() ? { kind: ASTKinds.$EOF } : null;\n        if (et)\n            et.record(this.mark(), res, { kind: \"EOF\", negated: this.negating });\n        return res;\n    }\n}\nclass SyntaxErr {\n    constructor(pos, expmatches) {\n        this.pos = pos;\n        this.expmatches = [...expmatches];\n    }\n    toString() {\n        return `Syntax Error at line ${this.pos.line}:${this.pos.offset}. Expected one of ${this.expmatches.map(x => x.kind === \"EOF\" ? \" EOF\" : ` ${x.negated ? 'not ' : ''}'${x.literal}'`)}`;\n    }\n}\nclass ErrorTracker {\n    constructor() {\n        this.mxpos = { overallPos: -1, line: -1, offset: -1 };\n        this.regexset = new Set();\n        this.pmatches = [];\n    }\n    record(pos, result, att) {\n        if ((result === null) === att.negated)\n            return;\n        if (pos.overallPos > this.mxpos.overallPos) {\n            this.mxpos = pos;\n            this.pmatches = [];\n            this.regexset.clear();\n        }\n        if (this.mxpos.overallPos === pos.overallPos) {\n            if (att.kind === \"RegexMatch\") {\n                if (!this.regexset.has(att.literal))\n                    this.pmatches.push(att);\n                this.regexset.add(att.literal);\n            }\n            else {\n                this.pmatches.push(att);\n            }\n        }\n    }\n    getErr() {\n        if (this.mxpos.overallPos !== -1)\n            return new SyntaxErr(this.mxpos, this.pmatches);\n        return null;\n    }\n}\n\nconst computeDataType = (numOfBits, isSigned, isFloat = false) => {\n    if (numOfBits === 64 && isFloat) {\n        return 'double';\n    }\n    else if (numOfBits === 32 && isFloat) {\n        return 'float';\n    }\n    if (numOfBits <= 8) {\n        if (!isSigned) {\n            return 'uint8';\n        }\n        return 'int8';\n    }\n    else if (numOfBits <= 16) {\n        if (!isSigned) {\n            return 'uint16';\n        }\n        return 'int16';\n    }\n    else if (numOfBits <= 32) {\n        if (!isSigned) {\n            return 'uint32';\n        }\n        return 'int32';\n    }\n    else if (numOfBits <= 64) {\n        if (!isSigned) {\n            return 'uint64';\n        }\n        return 'int64';\n    }\n    else if (numOfBits > 64) {\n        throw new Error(`Number of bits ${numOfBits} exceeds maximum possible data type`);\n    }\n    else {\n        throw new Error(`Could not compute data type from inputs: bits ->${numOfBits} signed-> ${isSigned} float ->${isFloat}`);\n    }\n};\n\nclass DbcParser extends Parser {\n    constructor(rawString) {\n        super(rawString);\n        this.parseResult = this.parse();\n    }\n    updateData(data) {\n        if (this.hasKindProp(this.parseResult.ast)) {\n            this.parseResult.ast;\n            switch (this.parseResult.ast.kind) {\n                case ASTKinds.CanMessage:\n                    this.addMessage(data, this.parseResult.ast);\n                    break;\n                case ASTKinds.SignalMultiplexVal:\n                    this.addSignalMultiplexValue(data, this.parseResult.ast);\n                    break;\n                case ASTKinds.CanSignal:\n                    this.addSignal(data, this.parseResult.ast);\n                    break;\n                case ASTKinds.Version:\n                    this.addVersion(data, this.parseResult.ast);\n                    break;\n                case ASTKinds.NewSymbolValue:\n                    this.addNewSymbolValue(data, this.parseResult.ast);\n                    break;\n                case ASTKinds.Val:\n                    this.addVal(data, this.parseResult.ast);\n                    break;\n                case ASTKinds.ValTable:\n                    this.addValTable(data, this.parseResult.ast);\n                    break;\n                case ASTKinds.AttributeValue:\n                    this.addAttributeValue(data, this.parseResult.ast);\n                    break;\n                case ASTKinds.AttributeDefault:\n                    this.addAttributeDefaultValue(data, this.parseResult.ast);\n                    break;\n                case ASTKinds.GlobalAttribute:\n                    this.addGlobalAttribute(data, this.parseResult.ast);\n                    break;\n                case ASTKinds.MessageAttribute:\n                    this.addMessageAttribute(data, this.parseResult.ast);\n                    break;\n                case ASTKinds.SignalAttribute:\n                    this.addSignalAttribute(data, this.parseResult.ast);\n                    break;\n                case ASTKinds.NodeAttribute:\n                    this.addNodeAttribute(data, this.parseResult.ast);\n                    break;\n                case ASTKinds.CanNode:\n                    this.addNode(data, this.parseResult.ast);\n                    break;\n                case ASTKinds.SignalComment:\n                    this.addSignalComment(data, this.parseResult.ast);\n                    break;\n                case ASTKinds.MessageComment:\n                    this.addMessageComment(data, this.parseResult.ast);\n                    break;\n                case ASTKinds.NodeComment:\n                    this.addNodeComment(data, this.parseResult.ast);\n                    break;\n                case ASTKinds.Comment:\n                    this.addComment(data, this.parseResult.ast);\n                    break;\n                case ASTKinds.CanEnvironmentVariable:\n                    this.addEnvironmentVariable(data, this.parseResult.ast);\n                    break;\n                case ASTKinds.EnvironmentAttribute:\n                    this.addEnvironmentAttribute(data, this.parseResult.ast);\n                    break;\n                case ASTKinds.EnvironmentVal:\n                    this.addEnvironmentVal(data, this.parseResult.ast);\n                    break;\n                case ASTKinds.EnvironmentVariableComment:\n                    this.addEnvironmentVariableComment(data, this.parseResult.ast);\n                    break;\n                case ASTKinds.EnvironmentVarData:\n                    this.addEnvironmentVariableData(data, this.parseResult.ast);\n                    break;\n                case ASTKinds.MessageTransmitter:\n                    this.addMessageTransmitter(data, this.parseResult.ast);\n                    break;\n                case ASTKinds.CanSignalGroup:\n                    this.addSignalGroup(data, this.parseResult.ast);\n                    break;\n                case ASTKinds.SigValType:\n                    this.addSignalValType(data, this.parseResult.ast);\n                    break;\n            }\n        }\n        return data;\n    }\n    /* START OF HELPER FUNCTIONS FOR UPDATEDATA CALLBACK */\n    addComment(dbc, data) {\n        dbc.description = data.comment;\n    }\n    addNode(dbc, data) {\n        data.node_names.forEach((nodeName) => {\n            const node = {};\n            node.name = nodeName;\n            node.description = null;\n            node.attributes = new Map();\n            if (node.name !== '') {\n                dbc.nodes.set(nodeName, node);\n            }\n        });\n    }\n    addEnvironmentVariableData(dbc, data) {\n        const envVar = dbc.environmentVariables.get(data.name);\n        if (envVar) {\n            envVar.dataBytesLength = data.value;\n        }\n    }\n    addEnvironmentVariable(dbc, data) {\n        const envVar = {};\n        envVar.name = data.name;\n        envVar.type = this.convert2EnvType(data.type);\n        envVar.initialValue = data.initial_value;\n        envVar.min = data.min;\n        envVar.max = data.max;\n        envVar.evId = data.ev_id;\n        envVar.accessNode = data.node;\n        envVar.accessType = this.convert2AccessType(data.access_type);\n        envVar.attributes = new Map();\n        envVar.valueTable = null;\n        envVar.dataBytesLength = null;\n        envVar.description = null;\n        envVar.unit = data.unit;\n        dbc.environmentVariables.set(envVar.name, envVar);\n    }\n    addMessage(dbc, data) {\n        const message = {};\n        message.id = data.id;\n        message.dlc = data.dlc;\n        message.name = data.name;\n        message.sendingNode = data.node;\n        message.signals = new Map();\n        message.baseSignals = new Map();\n        message.multiplexSignals = new Map();\n        message.description = null;\n        message.attributes = new Map();\n        message.signalGroups = new Map();\n        dbc.messages.set(message.name, message);\n    }\n    addSignalMultiplexValue(dbc, data) {\n        const message = Array.from(dbc.messages.values()).find((value) => value.id === data.id);\n        if (message) {\n            const mulPlexSig = message.multiplexSignals.get(data.switch_name);\n            const mulPlexSigBase = message.multiplexSignals.get(data.name);\n            const dataSignal = message.signals.get(data.name);\n            if (mulPlexSig && dataSignal) {\n                let multiplexSignal = {};\n                if (mulPlexSigBase) {\n                    multiplexSignal = mulPlexSigBase;\n                    message.multiplexSignals.delete(data.name);\n                }\n                else {\n                    multiplexSignal = {};\n                    multiplexSignal.signal = dataSignal;\n                    multiplexSignal.children = new Map();\n                }\n                data.value_ranges.forEach((valRange) => {\n                    const start = parseInt(valRange[0], 10);\n                    const end = parseInt(valRange[1], 10);\n                    for (let i = start; i <= end; i++) {\n                        let children = mulPlexSig.children.get(i);\n                        if (!children) {\n                            mulPlexSig.children.set(i, []);\n                            children = mulPlexSig.children.get(i);\n                        }\n                        children === null || children === void 0 ? void 0 : children.push(multiplexSignal);\n                    }\n                });\n            }\n        }\n    }\n    addSignal(dbc, data) {\n        var _a;\n        const signal = {};\n        signal.name = data.name;\n        signal.endian = data.endian === 'Motorola' ? 'Motorola' : 'Intel';\n        signal.startBit = data.start_bit;\n        signal.length = data.length;\n        signal.signed = data.signed;\n        signal.max = data.max;\n        signal.min = data.min;\n        signal.factor = data.factor;\n        signal.offset = data.offset;\n        signal.multiplex = data.multiplex;\n        signal.multiplexer = data.multiplexer;\n        signal.receivingNodes = data.nodes;\n        signal.unit = data.unit;\n        signal.valueTable = null;\n        signal.description = null;\n        signal.attributes = new Map();\n        signal.dataType = computeDataType(signal.length, signal.signed);\n        /* Signals come directly after a message tag, so we can just append\n                the current signal instance to the last message found in the array */\n        const messageList = Array.from(dbc.messages.keys());\n        const lastKey = messageList[messageList.length - 1];\n        let msg;\n        if (dbc.messages.has(lastKey)) {\n            msg = dbc.messages.get(lastKey);\n            msg === null || msg === void 0 ? void 0 : msg.signals.set(signal.name, signal);\n            if (!signal.multiplexer && ((_a = signal.multiplex) !== null && _a !== void 0 ? _a : '').length === 0) {\n                msg === null || msg === void 0 ? void 0 : msg.baseSignals.set(signal.name, signal);\n            }\n            else if (signal.multiplexer) {\n                const multiplexSignal = {};\n                multiplexSignal.signal = signal;\n                multiplexSignal.children = new Map();\n                msg === null || msg === void 0 ? void 0 : msg.multiplexSignals.set(multiplexSignal.signal.name, multiplexSignal);\n            }\n        }\n    }\n    addSignalComment(dbc, data) {\n        const msgName = this.getMessageNameFromId(dbc, data.id);\n        if (msgName) {\n            const msg = dbc.messages.get(msgName);\n            const signal = msg === null || msg === void 0 ? void 0 : msg.signals.get(data.name);\n            if (signal) {\n                signal.description = data.comment;\n            }\n        }\n    }\n    addEnvironmentVariableComment(dbc, data) {\n        const envVars = dbc.environmentVariables;\n        const envVar = envVars.get(data.name);\n        if (envVar) {\n            envVar.description = data.comment;\n        }\n    }\n    addMessageComment(dbc, data) {\n        const msgName = this.getMessageNameFromId(dbc, data.id);\n        if (msgName) {\n            const msg = dbc.messages.get(msgName);\n            if (msg) {\n                msg.description = data.comment;\n            }\n        }\n    }\n    addNodeComment(dbc, data) {\n        const node = dbc.nodes.get(data.name);\n        if (node) {\n            node.description = data.comment;\n        }\n    }\n    addVersion(dbc, data) {\n        dbc.version = data.version;\n    }\n    addNewSymbolValue(dbc, data) {\n        dbc.newSymbols.push(data.symbol);\n    }\n    addEnvironmentVal(dbc, data) {\n        const envVar = dbc.environmentVariables.get(data.name);\n        if (envVar) {\n            envVar.valueTable = data.enum;\n        }\n    }\n    addVal(dbc, data) {\n        for (const [key, value] of dbc.messages) {\n            const msg = dbc.messages.get(key);\n            if (msg && msg.id === data.id) {\n                const signals = msg.signals;\n                const signal = signals.get(data.name);\n                const table = data.enum;\n                if (signal) {\n                    signal.valueTable = table;\n                }\n                return;\n            }\n        }\n    }\n    addValTable(dbc, data) {\n        var _a;\n        const table = data.enum;\n        (_a = dbc.valueTables) === null || _a === void 0 ? void 0 : _a.set(data.name, table);\n    }\n    convert2AttributeType(str) {\n        switch (str) {\n            case 'INT':\n                return 'INT';\n            case 'STRING':\n                return 'STRING';\n            case 'FLOAT':\n                return 'FLOAT';\n            case 'ENUM':\n                return 'ENUM';\n            case 'HEX':\n                return 'HEX';\n            default:\n                // Uknown type encountered, conver to string so the remaining props are not parsed\n                return 'STRING';\n        }\n    }\n    addGlobalAttribute(dbc, data) {\n        const attribute = {};\n        const dataType = this.convert2AttributeType(data.type);\n        attribute.name = data.name;\n        attribute.type = 'Global';\n        attribute.dataType = dataType;\n        attribute.options = new Array();\n        attribute.defaultValue = null;\n        attribute.value = null;\n        attribute.min = dataType === 'FLOAT' || dataType === 'INT' || dataType === 'HEX' ? data.min : null;\n        attribute.max = dataType === 'FLOAT' || dataType === 'INT' || dataType === 'HEX' ? data.max : null;\n        attribute.options = dataType === 'ENUM' ? data.enum : null;\n        if (attribute.name && attribute.name !== '') {\n            dbc.attributes.set(attribute.name, attribute);\n        }\n    }\n    addMessageAttribute(dbc, data) {\n        const attribute = {};\n        const dataType = this.convert2AttributeType(data.type);\n        attribute.name = data.name;\n        attribute.type = 'Message';\n        attribute.dataType = this.convert2AttributeType(data.type);\n        attribute.options = new Array();\n        attribute.defaultValue = null;\n        attribute.value = null;\n        attribute.min = dataType === 'FLOAT' || dataType === 'INT' || dataType === 'HEX' ? data.min : null;\n        attribute.max = dataType === 'FLOAT' || dataType === 'INT' || dataType === 'HEX' ? data.max : null;\n        attribute.options = dataType === 'ENUM' ? data.enum : null;\n        if (attribute.name && attribute.name !== '') {\n            dbc.attributes.set(attribute.name, attribute);\n        }\n    }\n    addSignalAttribute(dbc, data) {\n        const attribute = {};\n        const dataType = this.convert2AttributeType(data.type);\n        attribute.name = data.name;\n        attribute.type = 'Signal';\n        attribute.dataType = this.convert2AttributeType(data.type);\n        attribute.options = new Array();\n        attribute.defaultValue = null;\n        attribute.value = null;\n        attribute.min = dataType === 'FLOAT' || dataType === 'INT' || dataType === 'HEX' ? data.min : null;\n        attribute.max = dataType === 'FLOAT' || dataType === 'INT' || dataType === 'HEX' ? data.max : null;\n        attribute.options = dataType === 'ENUM' ? data.enum : null;\n        if (attribute.name && attribute.name !== '') {\n            dbc.attributes.set(attribute.name, attribute);\n        }\n    }\n    addNodeAttribute(dbc, data) {\n        const attribute = {};\n        const dataType = this.convert2AttributeType(data.type);\n        attribute.name = data.name;\n        attribute.type = 'Node';\n        attribute.dataType = this.convert2AttributeType(data.type);\n        attribute.options = new Array();\n        attribute.defaultValue = null;\n        attribute.value = null;\n        attribute.min = dataType === 'FLOAT' || dataType === 'INT' || dataType === 'HEX' ? data.min : null;\n        attribute.max = dataType === 'FLOAT' || dataType === 'INT' || dataType === 'HEX' ? data.max : null;\n        attribute.options = dataType === 'ENUM' ? data.enum : null;\n        if (attribute.name && attribute.name !== '') {\n            dbc.attributes.set(attribute.name, attribute);\n        }\n    }\n    addEnvironmentAttribute(dbc, data) {\n        const attribute = {};\n        const dataType = this.convert2AttributeType(data.type);\n        attribute.name = data.name;\n        attribute.type = 'EnvironmentVariable';\n        attribute.dataType = this.convert2AttributeType(data.type);\n        attribute.options = new Array();\n        attribute.defaultValue = null;\n        attribute.value = null;\n        attribute.min = dataType === 'FLOAT' || dataType === 'INT' || dataType === 'HEX' ? data.min : null;\n        attribute.max = dataType === 'FLOAT' || dataType === 'INT' || dataType === 'HEX' ? data.max : null;\n        attribute.options = dataType === 'ENUM' ? data.enum : null;\n        if (attribute.name && attribute.name !== '') {\n            dbc.attributes.set(attribute.name, attribute);\n        }\n    }\n    addAttributeDefaultValue(dbc, data) {\n        const attr = dbc.attributes.get(data.name);\n        if (attr) {\n            attr.defaultValue = data.value;\n            attr.value = data.value;\n        }\n    }\n    addAttributeValue(dbc, data) {\n        if (!dbc.attributes.has(data.name))\n            return;\n        const attr = Object.assign({}, dbc.attributes.get(data.name), { value: data.value });\n        attr.value = data.value;\n        const msgName = this.getMessageNameFromId(dbc, data.id);\n        switch (data.type) {\n            // Add existing attribute to proper type\n            case 'Signal':\n                if (msgName) {\n                    const msg = dbc.messages.get(msgName);\n                    if (msg) {\n                        const signal = msg.signals.get(data.signal);\n                        if (signal) {\n                            signal.attributes.set(attr.name, attr);\n                        }\n                    }\n                }\n                break;\n            case 'Message':\n                if (msgName) {\n                    const msg = dbc.messages.get(msgName);\n                    if (msg) {\n                        msg.attributes.set(attr.name, attr);\n                    }\n                }\n                break;\n            case 'Node':\n                const node = dbc.nodes.get(data.node);\n                if (node) {\n                    node.attributes.set(attr.name, attr);\n                }\n                break;\n            case 'Global':\n                dbc.attributes.set(data.name, attr);\n                break;\n            case 'EnvironmentVariable':\n                const ev = dbc.environmentVariables.get(data.node);\n                if (ev) {\n                    ev.attributes.set(attr.name, attr);\n                }\n                break;\n        }\n    }\n    addMessageTransmitter(dbc, data) {\n        dbc.networkBridges.set(data.id, data.nodes);\n    }\n    addSignalGroup(dbc, data) {\n        const name = this.getMessageNameFromId(dbc, data.id);\n        if (name) {\n            const msg = dbc.messages.get(name);\n            if (msg) {\n                const groupData = {\n                    name: data.name,\n                    id: data.id,\n                    groupId: data.group_number,\n                    signals: data.signals,\n                };\n                msg.signalGroups.set(data.name, groupData);\n            }\n        }\n    }\n    addSignalValType(dbc, data) {\n        const msgName = this.getMessageNameFromId(dbc, data.id);\n        if (msgName) {\n            const msg = dbc.messages.get(msgName);\n            if (msg) {\n                const signal = msg.signals.get(data.name);\n                if (signal) {\n                    switch (data.type) {\n                        // TODO: Should we enforce that the data type is float/double even if bits dont match?\n                        case 1:\n                            signal.dataType = computeDataType(signal.length, signal.signed, true);\n                            break;\n                        case 2:\n                            signal.dataType = computeDataType(signal.length, signal.signed, true);\n                            break;\n                    }\n                }\n            }\n        }\n    }\n    convert2EnvType(type) {\n        switch (type) {\n            case '0':\n                return 'Integer';\n            case '1':\n                return 'Float';\n            case '2':\n                return 'String';\n            default:\n                return 'String';\n        }\n    }\n    convert2AccessType(type) {\n        switch (type.trim().slice(-1)) {\n            case '0':\n                return 'Unrestricted';\n            case '1':\n                return 'Read';\n            case '2':\n                return 'Write';\n            case '3':\n                return 'ReadWrite';\n            default:\n                return 'Read';\n        }\n    }\n    getMessageNameFromId(dbc, id) {\n        const msgNames = Array.from(dbc.messages.keys());\n        let msgName = null;\n        for (const name of msgNames) {\n            const msg = dbc.messages.get(name);\n            if (msg && msg.id === id) {\n                msgName = name;\n                break;\n            }\n        }\n        return msgName;\n    }\n    hasKindProp(obj) {\n        return typeof obj === 'object' && obj !== null && 'kind' in obj;\n    }\n}\n\nclass Writer {\n    constructor() {\n        this.dbcString = '';\n    }\n    /**\n     * Main constructor class that will organize and write all\n     * attributes of DbcData structure\n     * @param data dbc data loaded or created using main DBC class\n     */\n    constructFile(data) {\n        this.dbcString = '';\n        // Main file attributes\n        this.writeVersion(data.version ? data.version : '');\n        this.writeNamespace(data.newSymbols);\n        this.writeBusSpeed(data.busSpeed);\n        this.writeNodes(Array.from(data.nodes.keys()));\n        if (data.valueTables) {\n            this.writeValTable(data.valueTables);\n        }\n        // Both messages and signals\n        this.writeMessagesAndSignals(data.messages);\n        this.writeMessageTransmitters(data.networkBridges);\n        // Write all comments\n        if (data.description) {\n            this.writeBaseComment(data.description);\n        }\n        this.writeMessageAndSignalComments(data.messages);\n        this.writeAttributeDefinitions(data);\n        this.writeAttributeDefaults(data);\n        this.writeAttributeValues(data);\n        this.writeSignalGroups(data.messages);\n        this.writeSignalTables(data.messages);\n        this.writeEnvVarTables(data.environmentVariables);\n        this.writeSignalDataType(data.messages);\n        return this.dbcString;\n    }\n    /**\n     *\n     * @param version Version of the dbc file\n     */\n    writeVersion(version) {\n        const lineContent = `VERSION \"${version}\"`;\n        this.writeLine(lineContent);\n        this.writeLine('');\n    }\n    writeMessageTransmitters(transmitters) {\n        transmitters.forEach((transmitter, canId) => {\n            const lineContent = `BO_TX_BU_ ${canId} : ${transmitter.join(',')};`;\n            this.writeLine(lineContent);\n            this.writeLine('');\n        });\n        this.writeLine('');\n    }\n    writeNamespace(ns = null) {\n        const lineContent = `NS_:`;\n        this.writeLine(lineContent);\n        if (ns) {\n            ns.forEach((newSymbol) => {\n                this.writeLine(`    ${newSymbol}`);\n            });\n        }\n        this.writeLine('');\n    }\n    /**\n     * Speed of the CAN bus, typically expressed as 250, 500, etc\n     * @param busConfiguration Speed of the CAN bus\n     */\n    writeBusSpeed(busConfiguration) {\n        let lineContent = '';\n        if (busConfiguration === null) {\n            lineContent = `BS_:`;\n        }\n        else {\n            lineContent = `BS_: ${busConfiguration}`;\n        }\n        this.writeLine(lineContent);\n        this.writeLine('');\n    }\n    /**\n     * Generic list of nodes that exist for the CAN architecture\n     * @param nodes List of nodes that are attached to messages and signals\n     */\n    writeNodes(nodes) {\n        let lineContent = '';\n        if (nodes === null || nodes.length === 0) {\n            lineContent = `BU_:`;\n        }\n        else {\n            // TODO: Actually enumerate list out\n            lineContent = `BU_: ${nodes.join(' ')}`;\n        }\n        this.writeLine(lineContent);\n        this.writeLine('');\n    }\n    /**\n     * Generic the signal groups as provided from the model\n     * @param groups Map of available signal groups to write\n     */\n    writeSignalGroups(messages) {\n        messages.forEach((message) => {\n            message.signalGroups.forEach((group) => {\n                const signalList = group.signals.join(' ');\n                const lineContent = `SIG_GROUP_ ${group.id} ${group.name} ${group.groupId} : ${signalList};`;\n                this.writeLine(lineContent);\n            });\n        });\n        this.writeLine('');\n    }\n    /**\n     *\n     * @param message Individual message to be written to the file\n     */\n    writeMessagesAndSignals(messages) {\n        for (const [name, message] of messages) {\n            let node;\n            if (message.sendingNode) {\n                node = message.sendingNode;\n            }\n            else {\n                // Default that is typically generated from CANDB++ (from Vector)\n                node = 'Vector___XXX';\n            }\n            const lineContent = `BO_ ${message.id.toString()} ${message.name}: ${message.dlc.toString()} ${node}`;\n            this.writeLine(lineContent);\n            // Extract signals and exand in file\n            for (const [signalName, signal] of message.signals) {\n                this.writeSignal(signal);\n            }\n            this.writeLine('');\n        }\n    }\n    /**\n     *\n     * @param signal Signal to be writen to dbc file\n     */\n    writeSignal(signal) {\n        const endian = signal.endian === 'Motorola' ? '0' : '1';\n        const sign = signal.signed ? '-' : '+';\n        const nodes = signal.receivingNodes.length === 0 ? 'Vector___XXXX' : signal.receivingNodes.join(',');\n        const name = signal.multiplex ? signal.name + ' ' + signal.multiplex : signal.name;\n        // Format: SG_ Signal0 : 0|32@1- (1,0) [0|0] \"\" Node1\n        const lineContent = ` SG_ ` +\n            `${name} : ${signal.startBit.toString()}|${signal.length.toString()}@${endian}${sign}` +\n            ` (${signal.factor.toString()},${signal.offset.toString()}) [${signal.min.toString()}|${signal.max.toString()}] ` +\n            `\"${signal.unit}\" ${nodes}`;\n        this.writeLine(lineContent);\n    }\n    writeBaseComment(comment) {\n        this.writeLine(`CM_ \"${comment}\" ;`);\n    }\n    writeMessageAndSignalComments(messages) {\n        for (const [name, msg] of messages) {\n            if (msg.description) {\n                this.writeLine(`CM_ BO_ ${msg.id.toString()} \"${msg.description}\" ;`);\n            }\n            for (const [signalName, signal] of msg.signals) {\n                if (signal.description) {\n                    this.writeLine(`CM_ SG_ ${msg.id.toString()} ${signalName} \"${signal.description}\" ;`);\n                }\n            }\n        }\n    }\n    generateEnumTable(tableMembers) {\n        let members = '';\n        for (const [enumVal, enumName] of tableMembers) {\n            members = members + enumVal.toString() + ' ' + `\"${enumName}\"` + ' ';\n        }\n        return `${members}`;\n    }\n    writeValTable(valueTable) {\n        for (const [name, tableMembers] of valueTable) {\n            const members = this.generateEnumTable(tableMembers);\n            const lineContent = `VAL_TABLE_ ${name} ${members};`;\n            this.writeLine(lineContent);\n        }\n        this.writeLine('');\n    }\n    writeSignalTables(messages) {\n        for (const [name, msg] of messages) {\n            for (const [signalName, signal] of msg.signals) {\n                if (signal.valueTable) {\n                    const members = this.generateEnumTable(signal.valueTable);\n                    const lineContent = `VAL_ ${msg.id.toString()} ${signal.name} ${members};`;\n                    this.writeLine(lineContent);\n                }\n            }\n        }\n        this.writeLine('');\n    }\n    writeEnvVarTables(environmentVariables) {\n        environmentVariables.forEach((ev) => {\n            if (ev.valueTable) {\n                const members = this.generateEnumTable(ev.valueTable);\n                const lineContent = `VAL_ ${ev.name} ${members};`;\n                this.writeLine(lineContent);\n            }\n        });\n    }\n    enumListToString(enumList) {\n        return enumList.reduce((accumulator, currentValue, idx) => {\n            let str = '';\n            if (idx === 0) {\n                str = `\"${currentValue.trim()}\"`;\n            }\n            else {\n                str = `, \"${currentValue.trim()}\"`;\n            }\n            return accumulator + str;\n        }, '');\n    }\n    createAttributeDefinitionStr(value, type) {\n        let lineContent;\n        if (type) {\n            lineContent = `BA_DEF_ ${type} \"${value.name}\" ${value.dataType}`;\n        }\n        else {\n            lineContent = `BA_DEF_ \"${value.name}\" ${value.dataType}`;\n        }\n        switch (value.dataType) {\n            case 'INT':\n                lineContent = lineContent + ` ${value.min} ${value.max};`;\n                break;\n            case 'FLOAT':\n                lineContent = lineContent + ` ${value.min} ${value.max};`;\n                break;\n            case 'ENUM':\n                if (value.options) {\n                    lineContent = lineContent + ' ' + this.enumListToString(value.options) + ';';\n                }\n                break;\n            case 'STRING':\n                lineContent = lineContent + ';';\n                break;\n            case 'HEX':\n                lineContent = lineContent + ` ${value.min} ${value.max};`;\n                break;\n        }\n        return lineContent;\n    }\n    writeAttributeDefinitions(data) {\n        // Write global attributes\n        data.attributes.forEach((value, key) => {\n            this.writeLine(this.createAttributeDefinitionStr(value, null));\n        });\n        // Write node attributes\n        data.nodes.forEach((node) => {\n            node.attributes.forEach((value, key) => {\n                this.writeLine(this.createAttributeDefinitionStr(value, 'BU_'));\n            });\n        });\n        // Write message attributes\n        const messages = data.messages;\n        messages.forEach((message) => {\n            message.attributes.forEach((value, key) => {\n                this.writeLine(this.createAttributeDefinitionStr(value, 'BO_'));\n            });\n        });\n        // Write signal attributes\n        messages.forEach((message) => {\n            const signals = message.signals;\n            if (signals) {\n                signals.forEach((signal, key) => {\n                    signal.attributes.forEach((value, name) => {\n                        this.writeLine(this.createAttributeDefinitionStr(value, 'SG_'));\n                    });\n                });\n            }\n        });\n        this.writeLine('');\n    }\n    createAttributeDefaultString(value) {\n        let lineContent = `BA_DEF_DEF_ \"${value.name}\"`;\n        switch (value.dataType) {\n            case 'STRING':\n                lineContent = lineContent + ` \"${value.defaultValue}\";`;\n                break;\n            case 'ENUM':\n                lineContent = lineContent + ` \"${value.defaultValue}\";`;\n                break;\n            default:\n                lineContent = lineContent + ` ${value.defaultValue};`;\n                break;\n        }\n        return lineContent;\n    }\n    writeAttributeDefaults(data) {\n        // Write global attributes\n        data.attributes.forEach((value, key) => {\n            this.writeLine(this.createAttributeDefaultString(value));\n        });\n        // Write node attributes\n        data.nodes.forEach((node) => {\n            node.attributes.forEach((value, key) => {\n                this.writeLine(this.createAttributeDefaultString(value));\n            });\n        });\n        // Write message attributes\n        const messages = data.messages;\n        messages.forEach((message) => {\n            message.attributes.forEach((value, key) => {\n                this.writeLine(this.createAttributeDefaultString(value));\n            });\n        });\n        // Write signal attributes\n        messages.forEach((message) => {\n            const signals = message.signals;\n            if (signals) {\n                signals.forEach((signal, key) => {\n                    signal.attributes.forEach((value, name) => {\n                        this.writeLine(this.createAttributeDefaultString(value));\n                    });\n                });\n            }\n        });\n        this.writeLine('');\n    }\n    createAttributeValueString(value, type, id, node, signal) {\n        let lineContent = `BA_ \"${value.name}\"`;\n        if (!type) {\n            if (value.dataType === 'STRING') {\n                lineContent = lineContent + ` \"${value.value}\";`;\n            }\n            else {\n                lineContent = lineContent + ` ${value.value};`;\n            }\n            return lineContent;\n        }\n        // BA_ \"BUIntAttribute\" BU_ Node0 100;\n        // BA_ \"BOStringAttribute\" BO_ 1234 \"MessageAttribute\";\n        // BA_ \"SGEnumAttribute\" SG_ 1234 Signal0 2;\n        switch (type) {\n            case 'BU_':\n                if (value.dataType === 'STRING') {\n                    lineContent = lineContent + ` ${type} ${node} \"${value.value}\";`;\n                }\n                else {\n                    lineContent = lineContent + ` ${type} ${node} ${value.value};`;\n                }\n                break;\n            case 'BO_':\n                if (value.dataType === 'STRING') {\n                    lineContent = lineContent + ` ${type} ${id} \"${value.value}\";`;\n                }\n                else {\n                    lineContent = lineContent + ` ${type} ${id} ${value.value};`;\n                }\n                break;\n            case 'SG_':\n                if (value.dataType === 'STRING') {\n                    lineContent = lineContent + ` ${type} ${id} ${signal} \"${value.value}\";`;\n                }\n                else {\n                    lineContent = lineContent + ` ${type} ${id} ${signal} ${value.value};`;\n                }\n                break;\n        }\n        return lineContent;\n    }\n    writeAttributeValues(data) {\n        // Write global attributes\n        data.attributes.forEach((value, key) => {\n            // skip if default = value so its no double defined in the dbc file output\n            if (value.defaultValue !== value.value) {\n                this.writeLine(this.createAttributeValueString(value, null, null, null, null));\n            }\n        });\n        // Write node attributes\n        data.nodes.forEach((node) => {\n            node.attributes.forEach((value, key) => {\n                if (value.defaultValue !== value.value) {\n                    this.writeLine(this.createAttributeValueString(value, 'BU_', null, node.name, null));\n                }\n            });\n        });\n        // Write message attributes\n        const messages = data.messages;\n        messages.forEach((message) => {\n            message.attributes.forEach((value, key) => {\n                if (value.defaultValue !== value.value) {\n                    this.writeLine(this.createAttributeValueString(value, 'BO_', message.id, null, null));\n                }\n            });\n        });\n        // Write signal attributes\n        messages.forEach((message) => {\n            const signals = message.signals;\n            if (signals) {\n                signals.forEach((signal, key) => {\n                    signal.attributes.forEach((value, name) => {\n                        if (value.defaultValue !== value.value) {\n                            this.writeLine(this.createAttributeValueString(value, 'SG_', message.id, null, signal.name));\n                        }\n                    });\n                });\n            }\n        });\n        this.writeLine('');\n    }\n    writeSignalDataType(messages) {\n        for (const [name, msg] of messages) {\n            for (const [signalName, signal] of msg.signals) {\n                if (signal.dataType && (signal.dataType === 'float' || signal.dataType === 'double')) {\n                    let type;\n                    if (signal.dataType === 'double') {\n                        type = '2';\n                    }\n                    else {\n                        type = '1';\n                    }\n                    const lineContent = `SIG_VALTYPE_ ${msg.id.toString()} ${signal.name} : ${type};`;\n                    this.writeLine(lineContent);\n                }\n            }\n        }\n        this.writeLine('');\n    }\n    /**\n     * Main writer function for class. New line character will be added automatically\n     * to each line, so subsquent calls to this function\n     * will automatically start on the next line.\n     *\n     * @param line Line content to write to file\n     */\n    writeLine(line) {\n        this.dbcString += `${line}\\n`;\n    }\n}\n\n/**\n *\n * Base exception and errors that program can throw\n *\n */\nclass MessageDoesNotExist extends Error {\n    constructor(message) {\n        super(message);\n        this.__proto__ = Error;\n        Object.setPrototypeOf(this, MessageDoesNotExist.prototype);\n    }\n}\nclass SignalDoesNotExist extends Error {\n    constructor(message) {\n        super(message);\n        this.__proto__ = Error;\n        Object.setPrototypeOf(this, SignalDoesNotExist.prototype);\n    }\n}\n\n/**\n * Creates a DBC instance that allows for parsing/loading of an existing DBC file\n * or write data to a new DBC file.\n *\n * If loading data from an existing file, simply call:\n * const dbc = new Dbc();\n * dbc.load(fileContent)\n *\n * By default, when a new Dbc() instance is created, the encapsulated data will be empty.\n * If you are wanting to create fresh data you can call createMessage or createSignal to\n * create messages and signals, respectively.\n * Calls to createMessage and createSignal do not by default add the messages to the data,\n * you will need to make subsequent calls to addMessage or addSignal to add the data\n * to the class.\n *\n */\nclass Dbc {\n    constructor() {\n        this.errors = new Map();\n        this.data = this.initDbcDataObj();\n    }\n    /**\n     * Adds a version number to dbc data\n     */\n    set version(version) {\n        this.data.version = version;\n    }\n    /**\n     * Adds a short description for the DBC data\n     */\n    set description(description) {\n        this.data.description = description;\n    }\n    createNode(name, options) {\n        let description;\n        let attributes;\n        options && options.description ? (description = options.description) : (description = null);\n        options && options.attributes ? (attributes = options.attributes) : (attributes = new Map());\n        const node = {\n            name,\n            description,\n            attributes,\n            add: () => {\n                this.data.nodes.set(node.name, node);\n                return node;\n            },\n            updateDescription: (content) => {\n                node.description = content;\n                return node;\n            },\n            addAttribute: (attrName, type, attrProps, attrOptions) => {\n                if (attrProps) {\n                    attrProps.type = 'Node';\n                }\n                else {\n                    attrProps = { type: 'Node' };\n                }\n                const attr = this.createAttribute(attrName, type, attrProps, attrOptions);\n                this.addAttribute(attr, { node: node.name });\n                return node;\n            },\n        };\n        return node;\n    }\n    /**\n     *\n     * Creates a Message instance that can later be added using addMessage()\n     * or using the attached method .add()\n     *\n     * Ex.\n     * let msg = dbc.createMessage('MessageName',100,8);\n     * msg.add(); or dbc.addMessage(msg);\n     *\n     * @param name Name of CAN message\n     * @param id ID of CAN message\n     * @param dlc Data Length Code (data length) of CAN message\n     * @param options Optional attributes that can be used when creating a message: signals, attributes, signalGroups,\n     * sendingNode, and description\n     * @returns Message\n     */\n    createMessage(name, id, dlc, options) {\n        // TODO: Check that ID does not exceed max range\n        let signals;\n        let baseSignals;\n        let multiplexSignals;\n        let attributes;\n        let signalGroups;\n        let sendingNode;\n        let description;\n        options && options.signals ? (signals = options.signals) : (signals = new Map());\n        options && options.baseSignals ? (baseSignals = options.baseSignals) : (baseSignals = new Map());\n        options && options.multiplexSignals\n            ? (multiplexSignals = options.multiplexSignals)\n            : (multiplexSignals = new Map());\n        options && options.attributes ? (attributes = options.attributes) : (attributes = new Map());\n        options && options.signalGroups ? (signalGroups = options.signalGroups) : (signalGroups = new Map());\n        options && options.description ? (description = options.description) : (description = null);\n        options && options.sendingNode ? (sendingNode = options.sendingNode) : (sendingNode = null);\n        if (sendingNode) {\n            this.createNode(sendingNode).add();\n        }\n        const message = {\n            name,\n            id,\n            dlc,\n            sendingNode,\n            signals,\n            baseSignals,\n            multiplexSignals,\n            description,\n            attributes,\n            signalGroups,\n            add: () => {\n                this.addMessage(message);\n                return message;\n            },\n            addSignal: (signalName, startBit, length, additionalOptions) => {\n                const signal = this.createSignal(signalName, startBit, length, additionalOptions);\n                this.addSignal(message.name, signal);\n                return message;\n            },\n            updateDescription: (content) => {\n                message.description = content;\n                return message;\n            },\n            updateNode: (node) => {\n                message.sendingNode = node;\n                this.createNode(node).add();\n                return message;\n            },\n            addAttribute: (attrName, type, attrProps, attrOptions) => {\n                if (attrProps) {\n                    attrProps.type = 'Message';\n                }\n                else {\n                    attrProps = { type: 'Message' };\n                }\n                const attr = this.createAttribute(attrName, type, attrProps, attrOptions);\n                this.addAttribute(attr, { id: message.id });\n                return message;\n            },\n        };\n        return message;\n    }\n    /**\n     *\n     * Adds/appends message to existing message list\n     *\n     * @param message Message object to be added\n     */\n    addMessage(message) {\n        const errorOnDuplicate = (name) => {\n            if (this.data.messages.has(name)) {\n                throw new Error(`Can not add message ${name} as ${name} already exists. Unique message names are required.`);\n            }\n        };\n        if (Array.isArray(message)) {\n            message.forEach((msg) => {\n                errorOnDuplicate(msg.name);\n                this.data.messages.set(msg.name, msg);\n            });\n        }\n        else {\n            errorOnDuplicate(message.name);\n            this.data.messages.set(message.name, message);\n        }\n    }\n    /**\n     * Removes an existing message from the DBC data\n     * @param messageName Name of the message to remove\n     */\n    removeMessage(messageName) {\n        const ret = this.data.messages.delete(messageName);\n        if (!ret)\n            throw new Error(`${messageName} does not exist in the database`);\n    }\n    /**\n     * Creates a signal based on characteristics such as start bit and length\n     * @param name Name of the signal\n     * @param startBit Bit position of where the signal is to start in the Message bitfield\n     * @param length Length of the signal\n     * @param options Additional options, such as signed, endian, etc.\n     */\n    createSignal(name, startBit, length, options) {\n        let min;\n        let max;\n        let factor;\n        let offset;\n        let isFloat;\n        let signed;\n        let endian;\n        let dataType;\n        let unit;\n        let description;\n        let multiplex;\n        let multiplexer;\n        let receivingNodes;\n        let valueTable;\n        let attributes;\n        options && options.signed ? (signed = options.signed) : (signed = false);\n        options && options.endian ? (endian = options.endian) : (endian = 'Intel');\n        options && options.min ? (min = options.min) : (min = 0);\n        options && options.max ? (max = options.max) : (max = 0);\n        options && options.offset ? (offset = options.offset) : (offset = 0);\n        options && options.factor ? (factor = options.factor) : (factor = 1);\n        options && options.isFloat ? (isFloat = options.isFloat) : (isFloat = false);\n        options && options.unit ? (unit = options.unit) : (unit = '');\n        options && options.description ? (description = options.description) : (description = null);\n        options && options.multiplex ? (multiplex = options.multiplex) : (multiplex = null);\n        options && options.multiplexer ? (multiplexer = options.multiplexer) : (multiplexer = false);\n        options && options.receivingNodes ? (receivingNodes = options.receivingNodes) : (receivingNodes = []);\n        options && options.valueTable ? (valueTable = options.valueTable) : (valueTable = null);\n        options && options.attributes ? (attributes = options.attributes) : (attributes = new Map());\n        dataType = computeDataType(length, signed, isFloat);\n        if (receivingNodes.length) {\n            receivingNodes.forEach((node) => {\n                this.createNode(node).add();\n            });\n        }\n        const signal = {\n            name,\n            multiplex,\n            multiplexer,\n            startBit,\n            length,\n            endian,\n            signed,\n            factor,\n            offset,\n            min,\n            max,\n            unit,\n            receivingNodes,\n            description,\n            valueTable,\n            attributes,\n            dataType,\n            add: (messageName) => {\n                this.addSignal(messageName, signal);\n                return signal;\n            },\n            updateDescription: (content) => {\n                signal.description = content;\n                return signal;\n            },\n            addAttribute: (attrName, messageId, type, attrProps, attrOptions) => {\n                if (attrProps) {\n                    attrProps.type = 'Signal';\n                }\n                else {\n                    attrProps = { type: 'Signal' };\n                }\n                const attr = this.createAttribute(attrName, type, attrProps, attrOptions);\n                this.addAttribute(attr, { id: messageId, signalName: signal.name });\n                return signal;\n            },\n            isMultiplex: () => {\n                var _a;\n                return signal.multiplexer || ((_a = signal.multiplex) !== null && _a !== void 0 ? _a : '').length > 0;\n            },\n        };\n        return signal;\n    }\n    /**\n     * Removes a signal from an existing message\n     * @param signalName Name of the signal\n     * @param messageName Name of the message containing the signal\n     */\n    removeSignal(signalName, messageName) {\n        const msg = this.getMessageByName(messageName);\n        if (msg) {\n            const ret = msg.signals.delete(signalName);\n            if (!ret)\n                throw new Error(`${signalName} does not exist in message ${messageName}`);\n        }\n    }\n    /**\n     *\n     * Adds a Signal object to a specified Message\n     *\n     * @param messageName Name of the message the signal will be added to\n     * @param signal Signal object to be added to the specified message\n     */\n    addSignal(messageName, signal) {\n        const message = this.data.messages.get(messageName);\n        if (message) {\n            if (Array.isArray(signal)) {\n                signal.forEach((sig) => {\n                    message.signals.set(sig.name, sig);\n                });\n            }\n            else {\n                message.signals.set(signal.name, signal);\n            }\n        }\n        else {\n            throw new MessageDoesNotExist(`No message with name ${messageName} exists in the database.`);\n        }\n    }\n    /**\n     *\n     * Returns a message with the corresponding CAN ID. If message does not exist\n     * a MessageDoesNotExist error will be thrown.\n     *\n     * @param id The CAN ID of the message wanting to be found\n     * @returns Message\n     * @throws MessageDoesNotExist\n     */\n    getMessageById(id) {\n        const messages = this.data.messages;\n        for (const [name, message] of messages) {\n            if (message.id === id) {\n                return message;\n            }\n        }\n        throw new MessageDoesNotExist(`No message with id ${id} exists in the database.`);\n    }\n    /**\n     *\n     * Finds a specific message within the DBC file data by name\n     *\n     * @param name string\n     * @returns Message\n     * @error MessageDoesNotExist\n     */\n    getMessageByName(name) {\n        try {\n            return this.data.messages.get(name);\n        }\n        catch (e) {\n            throw new MessageDoesNotExist(`No message with name ${name} exists in the database.`);\n        }\n    }\n    /**\n     *\n     * Returns a signal object located in a specific CAN message by name\n     *\n     * @param name string\n     * @param messageName string\n     * @returns Signal\n     * @error SignalDoesNotExist\n     */\n    getSignalByName(name, messageName) {\n        const msg = this.getMessageByName(messageName);\n        const signals = msg === null || msg === void 0 ? void 0 : msg.signals;\n        if (signals) {\n            for (const [signal, signalObj] of signals) {\n                if (signal === name) {\n                    return signalObj;\n                }\n            }\n        }\n        else {\n            throw new SignalDoesNotExist(`Signal could not be found in ${messageName}, because the\n      signal list for that message is empty.`);\n        }\n        throw new SignalDoesNotExist(`Could not find ${name} in signal list.`);\n    }\n    /**\n     * Convenience method that will create an Attribute object that can be appended to DBC data\n     * @param name Name to be assigned to the attribute\n     * @param type Attribute type: FLOAT, HEX, ENUM, INT, STRING\n     * @param props Required properties of the attribute based on the type provided\n     * @param options Additional attribute options that can be added\n     */\n    createAttribute(name, type, props, options) {\n        let attrType = 'Global';\n        let enumMembers = null;\n        let min = null;\n        let max = null;\n        let value = null;\n        let defaultValue = null;\n        if (props) {\n            if (props.type)\n                attrType = props.type;\n            if (type === 'ENUM' && !props.enumMembers) {\n                throw new Error('enumMembers is a required property when defining an attribute with type ENUM');\n            }\n            else if (type === 'ENUM') {\n                if (props.enumMembers) {\n                    enumMembers = props.enumMembers;\n                }\n            }\n            if (type !== 'ENUM' && type !== 'STRING' && !props.min && !props.max) {\n                throw new Error('min and max are required properties when defining anything other than type ENUM and STRING');\n            }\n            else {\n                if (props.min !== undefined)\n                    min = props.min;\n                if (props.max !== undefined)\n                    max = props.max;\n            }\n            if (options) {\n                if (options.defaultValue !== undefined) {\n                    defaultValue = options.defaultValue;\n                }\n                else if (options.value !== undefined && options.defaultValue === undefined) {\n                    value = options.value;\n                    defaultValue = value;\n                }\n            }\n        }\n        else if (!props && type !== 'STRING') {\n            throw new Error('Additional attribute properties are required for any type other than STRING');\n        }\n        const attribute = {\n            name,\n            type: attrType,\n            dataType: type,\n            min,\n            max,\n            options: enumMembers,\n            value,\n            defaultValue,\n        };\n        return attribute;\n    }\n    /**\n     * Adds an existing attribute to the DBC data based on the supplied type\n     * @param attribute Attribute\n     * @param options node, id, signalName, or evName\n     */\n    addAttribute(attribute, options) {\n        switch (attribute.type) {\n            case 'Message':\n                if (options && !options.id) {\n                    throw new Error('ID is a required option for adding a Message attribute');\n                }\n                if (options === null || options === void 0 ? void 0 : options.id) {\n                    const msg = this.getMessageById(options.id);\n                    msg.attributes.set(attribute.name, attribute);\n                }\n                break;\n            case 'Signal':\n                if ((options && !options.id) || !(options === null || options === void 0 ? void 0 : options.signalName)) {\n                    throw new Error('Signal name/and message ID are required options for adding a Signal attribute');\n                }\n                if ((options === null || options === void 0 ? void 0 : options.id) && (options === null || options === void 0 ? void 0 : options.signalName)) {\n                    const signal = this.getSignalByName(options.signalName, this.messageIdToName(options.id));\n                    signal.attributes.set(attribute.name, attribute);\n                }\n                break;\n            case 'Node':\n                if (options && !options.node) {\n                    throw new Error('Node name is a required option for adding a Node attribute');\n                }\n                if (options === null || options === void 0 ? void 0 : options.node) {\n                    const node = this.getNode(options.node);\n                    node.attributes.set(attribute.name, attribute);\n                }\n                break;\n            case 'EnvironmentVariable':\n                if (options && !options.evName) {\n                    throw new Error('Environmental Variable name is a required option for adding EV Attribute');\n                }\n                if (options === null || options === void 0 ? void 0 : options.evName) {\n                    const ev = this.getEnvironmentalVariable(options.evName);\n                    ev.attributes.set(attribute.name, attribute);\n                }\n                break;\n            case 'Global':\n                this.data.attributes.set(attribute.name, attribute);\n                break;\n        }\n    }\n    /**\n     * Returns an environmental variable by name\n     * @param name Name of environmental variable\n     * @throws Error if environmental variable does not exist in database\n     */\n    getEnvironmentalVariable(name) {\n        const ev = this.data.environmentVariables.get(name);\n        if (!ev) {\n            throw new Error('${name} is not an existing environmental variable in the database');\n        }\n        return ev;\n    }\n    /**\n     * Returns a node if it exists in the database\n     * @param name Name of the node (string)\n     * @throws Error if node does not exist\n     */\n    getNode(name) {\n        const node = this.data.nodes.get(name);\n        if (!node) {\n            throw new Error(`${name} is not an existing node in the database`);\n        }\n        return node;\n    }\n    /**\n     * Returns the mapped name in the database based on the supplied CAN ID\n     * @param id Message ID (number)\n     * @throws Error if no message with the corresponding ID exists\n     */\n    messageIdToName(id) {\n        const name = this.getMessageById(id).name;\n        if (!name) {\n            throw new Error(`Could not find ${id} in the database`);\n        }\n        return name;\n    }\n    /**\n     *\n     * Loads a DBC file, as opposed to the default method 'load', which is\n     * a non-blocking/async call whose promise must be caught for the return data to be used.\n     *\n     * @param fileContent Full file path to the dbc file, including extension\n     * @param throwOnError\n     * @returns DbcData Data contained in the dbc file\n     */\n    load(fileContent, throwOnError = false) {\n        let data = this.initDbcDataObj();\n        let lineNum = 1;\n        const errMap = new Map();\n        const lines = fileContent.split('\\n');\n        lines.forEach((line) => {\n            const parser = new DbcParser(line);\n            const parseErrors = parser.parseResult.errs;\n            if (parseErrors.length === 0) {\n                data = parser.updateData(data);\n            }\n            else {\n                if (throwOnError) {\n                    throw new Error(`A syntax error occurred on line ${lineNum} - Reason: ${parseErrors}`);\n                }\n                errMap.set(lineNum, parseErrors);\n            }\n            lineNum++;\n        });\n        // Clean up attributes that are not global/scoped\n        Array.from(data.attributes.entries()).forEach(([key, attribute]) => {\n            if (attribute.type !== 'Global')\n                data.attributes.delete(key);\n        });\n        // Set parsing errors\n        this.errors = errMap;\n        // Add table data to class instance for future referencing\n        this.data = data;\n        return data;\n    }\n    /**\n     *\n     * Writes the encapsulated data of a Dbc class instance to a dbc file\n     */\n    write() {\n        const writer = new Writer();\n        writer.constructFile(this.data);\n        return writer.dbcString;\n    }\n    /**\n     *\n     * Transforms the internal DBC data from class instance into a JSON object/string\n     *\n     * @param options Additional formatting options, such as pretty print.\n     * @returns JSON representation of loaded DBC data\n     */\n    toJson(options) {\n        const replacer = (key, value) => {\n            if (value instanceof Map) {\n                if (key === 'valueTable' || key === 'valueTables') {\n                    return Object.fromEntries(value.entries());\n                }\n                return Array.from(value.values()); // or with spread: value: [...value]\n            }\n            else {\n                return value;\n            }\n        };\n        let indent = 0;\n        let pretty;\n        options && options.pretty ? (pretty = options.pretty) : (pretty = true);\n        if (pretty) {\n            indent = 2;\n        }\n        let json;\n        if (options && options.preserveFormat) {\n            json = JSON.stringify(this.data, undefined, indent);\n        }\n        else {\n            json = JSON.stringify(this.data, replacer, indent);\n        }\n        return json;\n    }\n    initDbcDataObj() {\n        return {\n            version: null,\n            messages: new Map(),\n            description: null,\n            busSpeed: null,\n            nodes: new Map(),\n            valueTables: new Map(),\n            attributes: new Map(),\n            newSymbols: [],\n            environmentVariables: new Map(),\n            networkBridges: new Map(),\n        };\n    }\n}\n\n/**\n *\n * Base exception and errors that program can throw\n *\n */\n/* tslint:disable:max-classes-per-file */\n/* tslint:disable:variable-name */\nclass InvalidPayloadLength extends Error {\n    constructor(message) {\n        super(message);\n        this.__proto__ = Error;\n        Object.setPrototypeOf(this, InvalidPayloadLength.prototype);\n    }\n}\n\nclass BitUtils {\n    bitGet(num, idx) {\n        const bitField = this.uint8ToBinary(num).split('');\n        // Assumes least significant bit starts at the end of the array\n        return bitField[idx];\n    }\n    bitSet(num, idx, val) {\n        num[num.length - idx - 1] = val;\n        return num;\n    }\n    bin2decSigned(bits) {\n        const negative = bits[0] === '1';\n        if (negative) {\n            let inverse = '';\n            for (let i = 0; i < bits.length; i++) {\n                inverse += bits[i] === '0' ? '1' : '0';\n            }\n            return (parseInt(inverse, 2) + 1) * -1;\n        }\n        else {\n            return parseInt(bits, 2);\n        }\n    }\n    bin2dec(bin) {\n        return parseInt(bin, 2);\n    }\n    uint8ToBinary(dec) {\n        const paddedBin = '000000000' + (dec >>> 0).toString(2);\n        return paddedBin.substring(paddedBin.length - 8);\n    }\n    /**\n     * Converts an uint8[] payload to a binary string\n     * @param payload number[] CAN payload in decimal.\n     * @param endian The type of encoding, Intel vs Motorola for the payload\n     */\n    payload2Binary(payload, endian) {\n        let byteArray;\n        if (endian === 'Intel') {\n            // The splice method is here because reverse modifies\n            // the original array. This could cause errors to\n            // subsequent calls to this function when the top level reference is the\n            // same\n            byteArray = payload.slice().reverse();\n        }\n        else {\n            byteArray = payload;\n        }\n        // Convert payload into binary string\n        const bitField = byteArray\n            .reduce((previous, current) => {\n            return previous + this.uint8ToBinary(current);\n        }, '')\n            .split('');\n        return bitField;\n    }\n    extractBitRange(binary, startBit, bitRange, endian) {\n        let startOfBit;\n        if (endian === 'Intel') {\n            startOfBit = binary.length - startBit - bitRange;\n        }\n        else {\n            const endOfBitField = 8 * Math.floor(startBit / 8) + (7 - (startBit % 8));\n            // Need to account for sawtooth bit numbering in CAN messages\n            startOfBit = endOfBitField - bitRange + 1;\n            // startOfBit = binary.length - (binary.length - startBit + bitRange);\n        }\n        return binary.slice(startOfBit, startOfBit + bitRange);\n    }\n}\n\n/**\n * The Can class offers utility functions that aid in the processing of general CAN data/information\n * It aids in the encoding/decoding of CAN messages, CAN frame creation, and more.\n *\n * The class can be loaded with a database using the setter function 'database'\n * i.e. const can = new Can(); can.database = data.\n * data in this context will need to be of the specified type (DbcData) and not the database file itself. Use the other\n * built in class for actually getting this data, such as the Dbc() class.\n */\nclass Can extends BitUtils {\n    constructor() {\n        super();\n        this.idMap = new Map();\n    }\n    /**\n     * Setter that allows you to load in a CAN database object to used in\n     * message/signal encoding and decoding\n     * @param dbc DbcData\n     */\n    set database(dbc) {\n        this._database = dbc;\n        this.idMap = this.messageMapTransform(this._database.messages);\n    }\n    messageMapTransform(messages) {\n        const idMap = new Map();\n        for (const [key, value] of messages) {\n            idMap.set(value.id, value);\n        }\n        return idMap;\n    }\n    /**\n     *\n     * @param id CAN ID of the message\n     * @param payload Payload of the CAN message as an Uint8 Array. i.e. [255, 20, 10]\n     * @param isExtended Whether or not the CAN ID is extended or standard. false by default.\n     */\n    createFrame(id, payload, isExtended = false) {\n        if (payload.length > 8) {\n            throw new InvalidPayloadLength(`Can not have payloads over 8 bytes: ${payload}`);\n        }\n        else if (payload.length === 0) {\n            throw new InvalidPayloadLength(`Payload is either empty or undefined: ${payload}`);\n        }\n        // Uint8Array will ensure values don't exceed 255\n        const byteArray = new Uint8ClampedArray(payload);\n        return {\n            id,\n            dlc: payload.length,\n            isExtended,\n            payload: Array.from(byteArray),\n        };\n    }\n    /**\n     * General purpose CAN message decode function. Expects a CAN frame and will return a\n     * BoundMessage type. The BoundMessage will have BoundSignals attached that will have\n     * the decoded physical values.\n     *\n     * A database needs to be loaded using the database setter before messages can be decoded,\n     * otherwise an error is returned.\n     *\n     * When decoding a message and the ID does not exist in the provided database, undefined will be\n     * returned from the function. If you are live decoding data, make sure to check for the undefined condition\n     * before trying to do anything with the returned data\n     * @param frame CAN Frame\n     * @returns BoundMessage | undefined\n     */\n    decode(frame) {\n        if (this._database === undefined) {\n            throw new Error('No database is attached to class instance');\n        }\n        const msg = this.getMessageById(frame.id);\n        // return undefined and make user handle non-decoded frames\n        if (!msg)\n            return msg;\n        if (msg.dlc !== frame.dlc) {\n            return undefined;\n        }\n        const signals = new Map();\n        for (const [name, signal] of msg.signals) {\n            const bndSig = this.decodeSignal(frame.payload, signal);\n            signals.set(name, bndSig);\n        }\n        return {\n            name: msg.name,\n            id: msg.id,\n            boundSignals: signals,\n            boundData: {\n                frame,\n                message: msg,\n            },\n            setSignalValue: (signal, value) => {\n                return {};\n            },\n        };\n    }\n    getMessageById(id) {\n        return this.idMap.get(id);\n    }\n    applyPropsToSignalValue(signal, rawValue) {\n        // Apply scaling and offset\n        let prcValue = rawValue * signal.factor + signal.offset;\n        // Determine if we need to enforce min/maxs on the value\n        if (signal.min === 0 && signal.max === 0) {\n            prcValue = prcValue;\n        }\n        else if (prcValue < signal.min) {\n            prcValue = signal.min;\n        }\n        else if (prcValue > signal.max) {\n            prcValue = signal.max;\n        }\n        // If we have an enumeration, return enumeration member for physical value, otherwise return with units\n        let physValue;\n        if (signal.valueTable) {\n            const enumMem = signal.valueTable.get(prcValue);\n            if (enumMem) {\n                physValue = enumMem;\n            }\n            else {\n                physValue = prcValue.toString() + (signal.unit ? ' ' + signal.unit : '');\n            }\n        }\n        else {\n            physValue = prcValue.toString() + (signal.unit ? ' ' + signal.unit : '');\n        }\n        return {\n            rawValue,\n            prcValue,\n            physValue,\n        };\n    }\n    /**\n     * Similar to the decode method, but operates on a Signal specific context. Will only decode the signal provided\n     * to the function. This function is useful if wanting to decode an individual signal rather than a whole message.\n     *\n     * signal needs to a type Signal. You can grab the signal you want referencing the Can class's _database property or\n     * by providing your own by either creating it with the Dbc() class or using one provided by loading a DBC file into\n     * the Dbc() class with .load() or .loadSync()\n     * @param payload Uint8 number[]\n     * @param signal Signal\n     */\n    decodeSignal(payload, signal) {\n        const rawValue = this.extractValFromPayload(payload, signal.startBit, signal.length, signal.endian, signal.signed);\n        const signalValues = this.applyPropsToSignalValue(signal, rawValue);\n        return {\n            boundData: {\n                payload,\n                signal,\n            },\n            setValue(value) {\n                return {};\n            },\n            value: signalValues.prcValue,\n            rawValue: signalValues.rawValue,\n            physValue: signalValues.physValue,\n        };\n    }\n    /**\n     *\n     * Generalized function for extracting an individual value from a CAN message payload.\n     *\n     * @param payload number[]\n     * @param startBit number\n     * @param signalLength number\n     * @param endian 'Motorola' | 'Intel'\n     * @param signed boolean\n     */\n    extractValFromPayload(payload, startBit, signalLength, endian, signed) {\n        const bitField = this.payload2Binary(payload, endian);\n        const valBitField = this.extractBitRange(bitField, startBit, signalLength, endian);\n        let prcValue;\n        if (signed) {\n            prcValue = Number(this.bin2decSigned(valBitField.join('')));\n        }\n        else {\n            prcValue = Number(this.bin2dec(valBitField.join('')));\n        }\n        return prcValue;\n    }\n    setSignalValues() {\n        return null;\n    }\n    createBoundSignal(signal, payload, initalValue = 0) {\n        const signalValues = this.applyPropsToSignalValue(signal, initalValue);\n        const boundSignal = {\n            boundData: {\n                signal,\n                payload,\n            },\n            value: signalValues.prcValue,\n            rawValue: signalValues.rawValue,\n            physValue: signalValues.physValue,\n            setValue: (value) => {\n                const newValues = this.applyPropsToSignalValue(signal, value);\n                boundSignal.value = newValues.prcValue;\n                boundSignal.rawValue = newValues.rawValue;\n                boundSignal.physValue = newValues.physValue;\n            },\n        };\n        return boundSignal;\n    }\n    /**\n     * This function will create a BoundMessage from an existing database Message. If frameData is not entered as\n     * an input parameter to the function, createBoundMessage() will create a BoundMessage payload based on the DLC of\n     * the message. The payload will be initialized to all 0s. Assumes the message is not extended by default.\n     *\n     * If createBoundMessage is provided frameData, the boundMessage will be created on that context.\n     * @param message Message\n     * @param frameData {payload: number[], isExtended: boolean} | null\n     */\n    createBoundMessage(message, frameData = null) {\n        // Initialize an empty payload based on message dlc if payload is not specified\n        let boundPayload;\n        if (frameData && frameData.payload) {\n            if (frameData.payload.length !== message.dlc) {\n                throw new Error(`Supplied payload length: ${frameData.payload.length} does not match message DLC length: ${message.dlc}`);\n            }\n            boundPayload = frameData.payload;\n        }\n        else {\n            boundPayload = new Array(message.dlc).fill(0);\n        }\n        let extended;\n        if (frameData && frameData.isExtended) {\n            extended = frameData.isExtended;\n        }\n        else {\n            extended = false;\n        }\n        const frame = this.createFrame(message.id, boundPayload, extended);\n        const boundSignals = new Map();\n        message.signals.forEach((signal) => {\n            boundSignals.set(signal.name, this.createBoundSignal(signal, boundPayload, 0));\n        });\n        const boundMessage = {\n            name: message.name,\n            id: message.id,\n            boundSignals,\n            boundData: {\n                frame,\n                message,\n            },\n            setSignalValue: (signal, value) => {\n                const bndSignal = boundMessage.boundSignals.get(signal);\n                if (bndSignal) {\n                    bndSignal.setValue(value);\n                }\n            },\n        };\n        return boundMessage;\n    }\n}\n\nexport { Can, Dbc };\n","/**\n *\n * Base exception and errors that program can throw\n *\n */\n/* tslint:disable:max-classes-per-file */\n/* tslint:disable:variable-name */\nexport class LineDoesNotContainToken extends Error {\n    constructor(message) {\n        super(message);\n        this.__proto__ = Error;\n        Object.setPrototypeOf(this, LineDoesNotContainToken.prototype);\n    }\n}\nexport class MessageDoesNotExist extends Error {\n    constructor(message) {\n        super(message);\n        this.__proto__ = Error;\n        Object.setPrototypeOf(this, MessageDoesNotExist.prototype);\n    }\n}\nexport class ParseError extends Error {\n    constructor(message) {\n        super(message);\n        this.__proto__ = Error;\n        Object.setPrototypeOf(this, ParseError.prototype);\n    }\n}\nexport class TokenError extends Error {\n    constructor(message) {\n        super(message);\n        this.__proto__ = Error;\n        Object.setPrototypeOf(this, TokenError.prototype);\n    }\n}\nexport class InvalidPayloadLength extends Error {\n    constructor(message) {\n        super(message);\n        this.__proto__ = Error;\n        Object.setPrototypeOf(this, InvalidPayloadLength.prototype);\n    }\n}\nexport class SignalDoesNotExist extends Error {\n    constructor(message) {\n        super(message);\n        this.__proto__ = Error;\n        Object.setPrototypeOf(this, SignalDoesNotExist.prototype);\n    }\n}\nexport class IncorrectFileExtension extends Error {\n    constructor(message) {\n        super(message);\n        this.__proto__ = Error;\n        Object.setPrototypeOf(this, IncorrectFileExtension.prototype);\n    }\n}\n//# sourceMappingURL=Errors.js.map","/**\n * Utility function for unloading the raw contents of a DBC file into a string that can\n * then be passed to the .load function provided by the Dbc class.\n *\n * @param file File to unload\n * @param onLoad Optional callback function that can be provided that will be called after\n * file has been loaded. Function is provided the raw contents of the file so that it can be used\n * in the callback\n */\nexport const dbcReader = (file, onLoad) => {\n    if (file.name.endsWith('.dbc')) {\n        const reader = new FileReader();\n        // Set the onload event handler\n        reader.onload = (event) => {\n            // Get the file contents\n            if (event && event.target) {\n                event.preventDefault();\n                const fileContents = event.target.result;\n                if (onLoad) {\n                    onLoad(fileContents);\n                }\n            }\n        };\n        // Read the file contents\n        return reader.readAsText(file);\n    }\n};\n//# sourceMappingURL=DbcWebFs.js.map","/*!\n * \n *   simple-keyboard v3.6.8\n *   https://github.com/hodgef/simple-keyboard\n *\n *   Copyright (c) Francisco Hodge (https://github.com/hodgef) and project contributors.\n *\n *   This source code is licensed under the MIT license found in the\n *   LICENSE file in the root directory of this source tree.\n *\n */\n!function(t,e){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define([],e):\"object\"==typeof exports?exports.SimpleKeyboard=e():t.SimpleKeyboard=e()}(this,(function(){return function(){var t={9662:function(t,e,n){var o=n(614),r=n(6330),i=TypeError;t.exports=function(t){if(o(t))return t;throw i(r(t)+\" is not a function\")}},9483:function(t,e,n){var o=n(4411),r=n(6330),i=TypeError;t.exports=function(t){if(o(t))return t;throw i(r(t)+\" is not a constructor\")}},6077:function(t,e,n){var o=n(614),r=String,i=TypeError;t.exports=function(t){if(\"object\"==typeof t||o(t))return t;throw i(\"Can't set \"+r(t)+\" as a prototype\")}},1223:function(t,e,n){var o=n(5112),r=n(30),i=n(3070).f,a=o(\"unscopables\"),s=Array.prototype;null==s[a]&&i(s,a,{configurable:!0,value:r(null)}),t.exports=function(t){s[a][t]=!0}},1530:function(t,e,n){\"use strict\";var o=n(8710).charAt;t.exports=function(t,e,n){return e+(n?o(t,e).length:1)}},9670:function(t,e,n){var o=n(111),r=String,i=TypeError;t.exports=function(t){if(o(t))return t;throw i(r(t)+\" is not an object\")}},8533:function(t,e,n){\"use strict\";var o=n(2092).forEach,r=n(9341)(\"forEach\");t.exports=r?[].forEach:function(t){return o(this,t,arguments.length>1?arguments[1]:void 0)}},8457:function(t,e,n){\"use strict\";var o=n(9974),r=n(6916),i=n(7908),a=n(3411),s=n(7659),u=n(4411),c=n(6244),l=n(6135),f=n(4121),d=n(1246),p=Array;t.exports=function(t){var e=i(t),n=u(this),h=arguments.length,v=h>1?arguments[1]:void 0,y=void 0!==v;y&&(v=o(v,h>2?arguments[2]:void 0));var g,m,b,x,w,E,S=d(e),O=0;if(!S||this===p&&s(S))for(g=c(e),m=n?new this(g):p(g);g>O;O++)E=y?v(e[O],O):e[O],l(m,O,E);else for(w=(x=f(e,S)).next,m=n?new this:[];!(b=r(w,x)).done;O++)E=y?a(x,v,[b.value,O],!0):b.value,l(m,O,E);return m.length=O,m}},1318:function(t,e,n){var o=n(5656),r=n(1400),i=n(6244),a=function(t){return function(e,n,a){var s,u=o(e),c=i(u),l=r(a,c);if(t&&n!=n){for(;c>l;)if((s=u[l++])!=s)return!0}else for(;c>l;l++)if((t||l in u)&&u[l]===n)return t||l||0;return!t&&-1}};t.exports={includes:a(!0),indexOf:a(!1)}},2092:function(t,e,n){var o=n(9974),r=n(1702),i=n(8361),a=n(7908),s=n(6244),u=n(5417),c=r([].push),l=function(t){var e=1==t,n=2==t,r=3==t,l=4==t,f=6==t,d=7==t,p=5==t||f;return function(h,v,y,g){for(var m,b,x=a(h),w=i(x),E=o(v,y),S=s(w),O=0,k=g||u,P=e?k(h,S):n||d?k(h,0):void 0;S>O;O++)if((p||O in w)&&(b=E(m=w[O],O,x),t))if(e)P[O]=b;else if(b)switch(t){case 3:return!0;case 5:return m;case 6:return O;case 2:c(P,m)}else switch(t){case 4:return!1;case 7:c(P,m)}return f?-1:r||l?l:P}};t.exports={forEach:l(0),map:l(1),filter:l(2),some:l(3),every:l(4),find:l(5),findIndex:l(6),filterReject:l(7)}},1194:function(t,e,n){var o=n(7293),r=n(5112),i=n(7392),a=r(\"species\");t.exports=function(t){return i>=51||!o((function(){var e=[];return(e.constructor={})[a]=function(){return{foo:1}},1!==e[t](Boolean).foo}))}},9341:function(t,e,n){\"use strict\";var o=n(7293);t.exports=function(t,e){var n=[][t];return!!n&&o((function(){n.call(null,e||function(){return 1},1)}))}},3671:function(t,e,n){var o=n(9662),r=n(7908),i=n(8361),a=n(6244),s=TypeError,u=function(t){return function(e,n,u,c){o(n);var l=r(e),f=i(l),d=a(l),p=t?d-1:0,h=t?-1:1;if(u<2)for(;;){if(p in f){c=f[p],p+=h;break}if(p+=h,t?p<0:d<=p)throw s(\"Reduce of empty array with no initial value\")}for(;t?p>=0:d>p;p+=h)p in f&&(c=n(c,f[p],p,l));return c}};t.exports={left:u(!1),right:u(!0)}},3658:function(t,e,n){\"use strict\";var o=n(9781),r=n(3157),i=TypeError,a=Object.getOwnPropertyDescriptor,s=o&&!function(){if(void 0!==this)return!0;try{Object.defineProperty([],\"length\",{writable:!1}).length=1}catch(t){return t instanceof TypeError}}();t.exports=s?function(t,e){if(r(t)&&!a(t,\"length\").writable)throw i(\"Cannot set read only .length\");return t.length=e}:function(t,e){return t.length=e}},1589:function(t,e,n){var o=n(1400),r=n(6244),i=n(6135),a=Array,s=Math.max;t.exports=function(t,e,n){for(var u=r(t),c=o(e,u),l=o(void 0===n?u:n,u),f=a(s(l-c,0)),d=0;c<l;c++,d++)i(f,d,t[c]);return f.length=d,f}},206:function(t,e,n){var o=n(1702);t.exports=o([].slice)},4362:function(t,e,n){var o=n(1589),r=Math.floor,i=function(t,e){var n=t.length,u=r(n/2);return n<8?a(t,e):s(t,i(o(t,0,u),e),i(o(t,u),e),e)},a=function(t,e){for(var n,o,r=t.length,i=1;i<r;){for(o=i,n=t[i];o&&e(t[o-1],n)>0;)t[o]=t[--o];o!==i++&&(t[o]=n)}return t},s=function(t,e,n,o){for(var r=e.length,i=n.length,a=0,s=0;a<r||s<i;)t[a+s]=a<r&&s<i?o(e[a],n[s])<=0?e[a++]:n[s++]:a<r?e[a++]:n[s++];return t};t.exports=i},7475:function(t,e,n){var o=n(3157),r=n(4411),i=n(111),a=n(5112)(\"species\"),s=Array;t.exports=function(t){var e;return o(t)&&(e=t.constructor,(r(e)&&(e===s||o(e.prototype))||i(e)&&null===(e=e[a]))&&(e=void 0)),void 0===e?s:e}},5417:function(t,e,n){var o=n(7475);t.exports=function(t,e){return new(o(t))(0===e?0:e)}},3411:function(t,e,n){var o=n(9670),r=n(9212);t.exports=function(t,e,n,i){try{return i?e(o(n)[0],n[1]):e(n)}catch(e){r(t,\"throw\",e)}}},7072:function(t,e,n){var o=n(5112)(\"iterator\"),r=!1;try{var i=0,a={next:function(){return{done:!!i++}},return:function(){r=!0}};a[o]=function(){return this},Array.from(a,(function(){throw 2}))}catch(t){}t.exports=function(t,e){if(!e&&!r)return!1;var n=!1;try{var i={};i[o]=function(){return{next:function(){return{done:n=!0}}}},t(i)}catch(t){}return n}},4326:function(t,e,n){var o=n(1702),r=o({}.toString),i=o(\"\".slice);t.exports=function(t){return i(r(t),8,-1)}},648:function(t,e,n){var o=n(1694),r=n(614),i=n(4326),a=n(5112)(\"toStringTag\"),s=Object,u=\"Arguments\"==i(function(){return arguments}());t.exports=o?i:function(t){var e,n,o;return void 0===t?\"Undefined\":null===t?\"Null\":\"string\"==typeof(n=function(t,e){try{return t[e]}catch(t){}}(e=s(t),a))?n:u?i(e):\"Object\"==(o=i(e))&&r(e.callee)?\"Arguments\":o}},9920:function(t,e,n){var o=n(2597),r=n(3887),i=n(1236),a=n(3070);t.exports=function(t,e,n){for(var s=r(e),u=a.f,c=i.f,l=0;l<s.length;l++){var f=s[l];o(t,f)||n&&o(n,f)||u(t,f,c(e,f))}}},4964:function(t,e,n){var o=n(5112)(\"match\");t.exports=function(t){var e=/./;try{\"/./\"[t](e)}catch(n){try{return e[o]=!1,\"/./\"[t](e)}catch(t){}}return!1}},8544:function(t,e,n){var o=n(7293);t.exports=!o((function(){function t(){}return t.prototype.constructor=null,Object.getPrototypeOf(new t)!==t.prototype}))},6178:function(t){t.exports=function(t,e){return{value:t,done:e}}},8880:function(t,e,n){var o=n(9781),r=n(3070),i=n(9114);t.exports=o?function(t,e,n){return r.f(t,e,i(1,n))}:function(t,e,n){return t[e]=n,t}},9114:function(t){t.exports=function(t,e){return{enumerable:!(1&t),configurable:!(2&t),writable:!(4&t),value:e}}},6135:function(t,e,n){\"use strict\";var o=n(4948),r=n(3070),i=n(9114);t.exports=function(t,e,n){var a=o(e);a in t?r.f(t,a,i(0,n)):t[a]=n}},8709:function(t,e,n){\"use strict\";var o=n(9670),r=n(2140),i=TypeError;t.exports=function(t){if(o(this),\"string\"===t||\"default\"===t)t=\"string\";else if(\"number\"!==t)throw i(\"Incorrect hint\");return r(this,t)}},7045:function(t,e,n){var o=n(6339),r=n(3070);t.exports=function(t,e,n){return n.get&&o(n.get,e,{getter:!0}),n.set&&o(n.set,e,{setter:!0}),r.f(t,e,n)}},8052:function(t,e,n){var o=n(614),r=n(3070),i=n(6339),a=n(3072);t.exports=function(t,e,n,s){s||(s={});var u=s.enumerable,c=void 0!==s.name?s.name:e;if(o(n)&&i(n,c,s),s.global)u?t[e]=n:a(e,n);else{try{s.unsafe?t[e]&&(u=!0):delete t[e]}catch(t){}u?t[e]=n:r.f(t,e,{value:n,enumerable:!1,configurable:!s.nonConfigurable,writable:!s.nonWritable})}return t}},3072:function(t,e,n){var o=n(7854),r=Object.defineProperty;t.exports=function(t,e){try{r(o,t,{value:e,configurable:!0,writable:!0})}catch(n){o[t]=e}return e}},5117:function(t,e,n){\"use strict\";var o=n(6330),r=TypeError;t.exports=function(t,e){if(!delete t[e])throw r(\"Cannot delete property \"+o(e)+\" of \"+o(t))}},9781:function(t,e,n){var o=n(7293);t.exports=!o((function(){return 7!=Object.defineProperty({},1,{get:function(){return 7}})[1]}))},4154:function(t){var e=\"object\"==typeof document&&document.all,n=void 0===e&&void 0!==e;t.exports={all:e,IS_HTMLDDA:n}},317:function(t,e,n){var o=n(7854),r=n(111),i=o.document,a=r(i)&&r(i.createElement);t.exports=function(t){return a?i.createElement(t):{}}},7207:function(t){var e=TypeError;t.exports=function(t){if(t>9007199254740991)throw e(\"Maximum allowed index exceeded\");return t}},8324:function(t){t.exports={CSSRuleList:0,CSSStyleDeclaration:0,CSSValueList:0,ClientRectList:0,DOMRectList:0,DOMStringList:0,DOMTokenList:1,DataTransferItemList:0,FileList:0,HTMLAllCollection:0,HTMLCollection:0,HTMLFormElement:0,HTMLSelectElement:0,MediaList:0,MimeTypeArray:0,NamedNodeMap:0,NodeList:1,PaintRequestList:0,Plugin:0,PluginArray:0,SVGLengthList:0,SVGNumberList:0,SVGPathSegList:0,SVGPointList:0,SVGStringList:0,SVGTransformList:0,SourceBufferList:0,StyleSheetList:0,TextTrackCueList:0,TextTrackList:0,TouchList:0}},8509:function(t,e,n){var o=n(317)(\"span\").classList,r=o&&o.constructor&&o.constructor.prototype;t.exports=r===Object.prototype?void 0:r},8886:function(t,e,n){var o=n(8113).match(/firefox\\/(\\d+)/i);t.exports=!!o&&+o[1]},256:function(t,e,n){var o=n(8113);t.exports=/MSIE|Trident/.test(o)},5268:function(t,e,n){var o=n(4326);t.exports=\"undefined\"!=typeof process&&\"process\"==o(process)},8113:function(t){t.exports=\"undefined\"!=typeof navigator&&String(navigator.userAgent)||\"\"},7392:function(t,e,n){var o,r,i=n(7854),a=n(8113),s=i.process,u=i.Deno,c=s&&s.versions||u&&u.version,l=c&&c.v8;l&&(r=(o=l.split(\".\"))[0]>0&&o[0]<4?1:+(o[0]+o[1])),!r&&a&&(!(o=a.match(/Edge\\/(\\d+)/))||o[1]>=74)&&(o=a.match(/Chrome\\/(\\d+)/))&&(r=+o[1]),t.exports=r},8008:function(t,e,n){var o=n(8113).match(/AppleWebKit\\/(\\d+)\\./);t.exports=!!o&&+o[1]},748:function(t){t.exports=[\"constructor\",\"hasOwnProperty\",\"isPrototypeOf\",\"propertyIsEnumerable\",\"toLocaleString\",\"toString\",\"valueOf\"]},2109:function(t,e,n){var o=n(7854),r=n(1236).f,i=n(8880),a=n(8052),s=n(3072),u=n(9920),c=n(4705);t.exports=function(t,e){var n,l,f,d,p,h=t.target,v=t.global,y=t.stat;if(n=v?o:y?o[h]||s(h,{}):(o[h]||{}).prototype)for(l in e){if(d=e[l],f=t.dontCallGetSet?(p=r(n,l))&&p.value:n[l],!c(v?l:h+(y?\".\":\"#\")+l,t.forced)&&void 0!==f){if(typeof d==typeof f)continue;u(d,f)}(t.sham||f&&f.sham)&&i(d,\"sham\",!0),a(n,l,d,t)}}},7293:function(t){t.exports=function(t){try{return!!t()}catch(t){return!0}}},7007:function(t,e,n){\"use strict\";n(4916);var o=n(1470),r=n(8052),i=n(2261),a=n(7293),s=n(5112),u=n(8880),c=s(\"species\"),l=RegExp.prototype;t.exports=function(t,e,n,f){var d=s(t),p=!a((function(){var e={};return e[d]=function(){return 7},7!=\"\"[t](e)})),h=p&&!a((function(){var e=!1,n=/a/;return\"split\"===t&&((n={}).constructor={},n.constructor[c]=function(){return n},n.flags=\"\",n[d]=/./[d]),n.exec=function(){return e=!0,null},n[d](\"\"),!e}));if(!p||!h||n){var v=o(/./[d]),y=e(d,\"\"[t],(function(t,e,n,r,a){var s=o(t),u=e.exec;return u===i||u===l.exec?p&&!a?{done:!0,value:v(e,n,r)}:{done:!0,value:s(n,e,r)}:{done:!1}}));r(String.prototype,t,y[0]),r(l,d,y[1])}f&&u(l[d],\"sham\",!0)}},2104:function(t,e,n){var o=n(4374),r=Function.prototype,i=r.apply,a=r.call;t.exports=\"object\"==typeof Reflect&&Reflect.apply||(o?a.bind(i):function(){return a.apply(i,arguments)})},9974:function(t,e,n){var o=n(1470),r=n(9662),i=n(4374),a=o(o.bind);t.exports=function(t,e){return r(t),void 0===e?t:i?a(t,e):function(){return t.apply(e,arguments)}}},4374:function(t,e,n){var o=n(7293);t.exports=!o((function(){var t=function(){}.bind();return\"function\"!=typeof t||t.hasOwnProperty(\"prototype\")}))},6916:function(t,e,n){var o=n(4374),r=Function.prototype.call;t.exports=o?r.bind(r):function(){return r.apply(r,arguments)}},6530:function(t,e,n){var o=n(9781),r=n(2597),i=Function.prototype,a=o&&Object.getOwnPropertyDescriptor,s=r(i,\"name\"),u=s&&\"something\"===function(){}.name,c=s&&(!o||o&&a(i,\"name\").configurable);t.exports={EXISTS:s,PROPER:u,CONFIGURABLE:c}},5668:function(t,e,n){var o=n(1702),r=n(9662);t.exports=function(t,e,n){try{return o(r(Object.getOwnPropertyDescriptor(t,e)[n]))}catch(t){}}},1470:function(t,e,n){var o=n(4326),r=n(1702);t.exports=function(t){if(\"Function\"===o(t))return r(t)}},1702:function(t,e,n){var o=n(4374),r=Function.prototype,i=r.call,a=o&&r.bind.bind(i,i);t.exports=o?a:function(t){return function(){return i.apply(t,arguments)}}},5005:function(t,e,n){var o=n(7854),r=n(614);t.exports=function(t,e){return arguments.length<2?(n=o[t],r(n)?n:void 0):o[t]&&o[t][e];var n}},1246:function(t,e,n){var o=n(648),r=n(8173),i=n(8554),a=n(7497),s=n(5112)(\"iterator\");t.exports=function(t){if(!i(t))return r(t,s)||r(t,\"@@iterator\")||a[o(t)]}},4121:function(t,e,n){var o=n(6916),r=n(9662),i=n(9670),a=n(6330),s=n(1246),u=TypeError;t.exports=function(t,e){var n=arguments.length<2?s(t):e;if(r(n))return i(o(n,t));throw u(a(t)+\" is not iterable\")}},8044:function(t,e,n){var o=n(1702),r=n(3157),i=n(614),a=n(4326),s=n(1340),u=o([].push);t.exports=function(t){if(i(t))return t;if(r(t)){for(var e=t.length,n=[],o=0;o<e;o++){var c=t[o];\"string\"==typeof c?u(n,c):\"number\"!=typeof c&&\"Number\"!=a(c)&&\"String\"!=a(c)||u(n,s(c))}var l=n.length,f=!0;return function(t,e){if(f)return f=!1,e;if(r(this))return e;for(var o=0;o<l;o++)if(n[o]===t)return e}}}},8173:function(t,e,n){var o=n(9662),r=n(8554);t.exports=function(t,e){var n=t[e];return r(n)?void 0:o(n)}},647:function(t,e,n){var o=n(1702),r=n(7908),i=Math.floor,a=o(\"\".charAt),s=o(\"\".replace),u=o(\"\".slice),c=/\\$([$&'`]|\\d{1,2}|<[^>]*>)/g,l=/\\$([$&'`]|\\d{1,2})/g;t.exports=function(t,e,n,o,f,d){var p=n+t.length,h=o.length,v=l;return void 0!==f&&(f=r(f),v=c),s(d,v,(function(r,s){var c;switch(a(s,0)){case\"$\":return\"$\";case\"&\":return t;case\"`\":return u(e,0,n);case\"'\":return u(e,p);case\"<\":c=f[u(s,1,-1)];break;default:var l=+s;if(0===l)return r;if(l>h){var d=i(l/10);return 0===d?r:d<=h?void 0===o[d-1]?a(s,1):o[d-1]+a(s,1):r}c=o[l-1]}return void 0===c?\"\":c}))}},7854:function(t,e,n){var o=function(t){return t&&t.Math==Math&&t};t.exports=o(\"object\"==typeof globalThis&&globalThis)||o(\"object\"==typeof window&&window)||o(\"object\"==typeof self&&self)||o(\"object\"==typeof n.g&&n.g)||function(){return this}()||this||Function(\"return this\")()},2597:function(t,e,n){var o=n(1702),r=n(7908),i=o({}.hasOwnProperty);t.exports=Object.hasOwn||function(t,e){return i(r(t),e)}},3501:function(t){t.exports={}},490:function(t,e,n){var o=n(5005);t.exports=o(\"document\",\"documentElement\")},4664:function(t,e,n){var o=n(9781),r=n(7293),i=n(317);t.exports=!o&&!r((function(){return 7!=Object.defineProperty(i(\"div\"),\"a\",{get:function(){return 7}}).a}))},8361:function(t,e,n){var o=n(1702),r=n(7293),i=n(4326),a=Object,s=o(\"\".split);t.exports=r((function(){return!a(\"z\").propertyIsEnumerable(0)}))?function(t){return\"String\"==i(t)?s(t,\"\"):a(t)}:a},9587:function(t,e,n){var o=n(614),r=n(111),i=n(7674);t.exports=function(t,e,n){var a,s;return i&&o(a=e.constructor)&&a!==n&&r(s=a.prototype)&&s!==n.prototype&&i(t,s),t}},2788:function(t,e,n){var o=n(1702),r=n(614),i=n(5465),a=o(Function.toString);r(i.inspectSource)||(i.inspectSource=function(t){return a(t)}),t.exports=i.inspectSource},9909:function(t,e,n){var o,r,i,a=n(4811),s=n(7854),u=n(111),c=n(8880),l=n(2597),f=n(5465),d=n(6200),p=n(3501),h=\"Object already initialized\",v=s.TypeError,y=s.WeakMap;if(a||f.state){var g=f.state||(f.state=new y);g.get=g.get,g.has=g.has,g.set=g.set,o=function(t,e){if(g.has(t))throw v(h);return e.facade=t,g.set(t,e),e},r=function(t){return g.get(t)||{}},i=function(t){return g.has(t)}}else{var m=d(\"state\");p[m]=!0,o=function(t,e){if(l(t,m))throw v(h);return e.facade=t,c(t,m,e),e},r=function(t){return l(t,m)?t[m]:{}},i=function(t){return l(t,m)}}t.exports={set:o,get:r,has:i,enforce:function(t){return i(t)?r(t):o(t,{})},getterFor:function(t){return function(e){var n;if(!u(e)||(n=r(e)).type!==t)throw v(\"Incompatible receiver, \"+t+\" required\");return n}}}},7659:function(t,e,n){var o=n(5112),r=n(7497),i=o(\"iterator\"),a=Array.prototype;t.exports=function(t){return void 0!==t&&(r.Array===t||a[i]===t)}},3157:function(t,e,n){var o=n(4326);t.exports=Array.isArray||function(t){return\"Array\"==o(t)}},614:function(t,e,n){var o=n(4154),r=o.all;t.exports=o.IS_HTMLDDA?function(t){return\"function\"==typeof t||t===r}:function(t){return\"function\"==typeof t}},4411:function(t,e,n){var o=n(1702),r=n(7293),i=n(614),a=n(648),s=n(5005),u=n(2788),c=function(){},l=[],f=s(\"Reflect\",\"construct\"),d=/^\\s*(?:class|function)\\b/,p=o(d.exec),h=!d.exec(c),v=function(t){if(!i(t))return!1;try{return f(c,l,t),!0}catch(t){return!1}},y=function(t){if(!i(t))return!1;switch(a(t)){case\"AsyncFunction\":case\"GeneratorFunction\":case\"AsyncGeneratorFunction\":return!1}try{return h||!!p(d,u(t))}catch(t){return!0}};y.sham=!0,t.exports=!f||r((function(){var t;return v(v.call)||!v(Object)||!v((function(){t=!0}))||t}))?y:v},4705:function(t,e,n){var o=n(7293),r=n(614),i=/#|\\.prototype\\./,a=function(t,e){var n=u[s(t)];return n==l||n!=c&&(r(e)?o(e):!!e)},s=a.normalize=function(t){return String(t).replace(i,\".\").toLowerCase()},u=a.data={},c=a.NATIVE=\"N\",l=a.POLYFILL=\"P\";t.exports=a},5988:function(t,e,n){var o=n(111),r=Math.floor;t.exports=Number.isInteger||function(t){return!o(t)&&isFinite(t)&&r(t)===t}},8554:function(t){t.exports=function(t){return null==t}},111:function(t,e,n){var o=n(614),r=n(4154),i=r.all;t.exports=r.IS_HTMLDDA?function(t){return\"object\"==typeof t?null!==t:o(t)||t===i}:function(t){return\"object\"==typeof t?null!==t:o(t)}},1913:function(t){t.exports=!1},7850:function(t,e,n){var o=n(111),r=n(4326),i=n(5112)(\"match\");t.exports=function(t){var e;return o(t)&&(void 0!==(e=t[i])?!!e:\"RegExp\"==r(t))}},2190:function(t,e,n){var o=n(5005),r=n(614),i=n(7976),a=n(3307),s=Object;t.exports=a?function(t){return\"symbol\"==typeof t}:function(t){var e=o(\"Symbol\");return r(e)&&i(e.prototype,s(t))}},9212:function(t,e,n){var o=n(6916),r=n(9670),i=n(8173);t.exports=function(t,e,n){var a,s;r(t);try{if(!(a=i(t,\"return\"))){if(\"throw\"===e)throw n;return n}a=o(a,t)}catch(t){s=!0,a=t}if(\"throw\"===e)throw n;if(s)throw a;return r(a),n}},3061:function(t,e,n){\"use strict\";var o=n(3383).IteratorPrototype,r=n(30),i=n(9114),a=n(8003),s=n(7497),u=function(){return this};t.exports=function(t,e,n,c){var l=e+\" Iterator\";return t.prototype=r(o,{next:i(+!c,n)}),a(t,l,!1,!0),s[l]=u,t}},1656:function(t,e,n){\"use strict\";var o=n(2109),r=n(6916),i=n(1913),a=n(6530),s=n(614),u=n(3061),c=n(9518),l=n(7674),f=n(8003),d=n(8880),p=n(8052),h=n(5112),v=n(7497),y=n(3383),g=a.PROPER,m=a.CONFIGURABLE,b=y.IteratorPrototype,x=y.BUGGY_SAFARI_ITERATORS,w=h(\"iterator\"),E=\"keys\",S=\"values\",O=\"entries\",k=function(){return this};t.exports=function(t,e,n,a,h,y,P){u(n,e,a);var I,C,A,M=function(t){if(t===h&&R)return R;if(!x&&t in j)return j[t];switch(t){case E:case S:case O:return function(){return new n(this,t)}}return function(){return new n(this)}},T=e+\" Iterator\",D=!1,j=t.prototype,N=j[w]||j[\"@@iterator\"]||h&&j[h],R=!x&&N||M(h),L=\"Array\"==e&&j.entries||N;if(L&&(I=c(L.call(new t)))!==Object.prototype&&I.next&&(i||c(I)===b||(l?l(I,b):s(I[w])||p(I,w,k)),f(I,T,!0,!0),i&&(v[T]=k)),g&&h==S&&N&&N.name!==S&&(!i&&m?d(j,\"name\",S):(D=!0,R=function(){return r(N,this)})),h)if(C={values:M(S),keys:y?R:M(E),entries:M(O)},P)for(A in C)(x||D||!(A in j))&&p(j,A,C[A]);else o({target:e,proto:!0,forced:x||D},C);return i&&!P||j[w]===R||p(j,w,R,{name:h}),v[e]=R,C}},3383:function(t,e,n){\"use strict\";var o,r,i,a=n(7293),s=n(614),u=n(111),c=n(30),l=n(9518),f=n(8052),d=n(5112),p=n(1913),h=d(\"iterator\"),v=!1;[].keys&&(\"next\"in(i=[].keys())?(r=l(l(i)))!==Object.prototype&&(o=r):v=!0),!u(o)||a((function(){var t={};return o[h].call(t)!==t}))?o={}:p&&(o=c(o)),s(o[h])||f(o,h,(function(){return this})),t.exports={IteratorPrototype:o,BUGGY_SAFARI_ITERATORS:v}},7497:function(t){t.exports={}},6244:function(t,e,n){var o=n(7466);t.exports=function(t){return o(t.length)}},6339:function(t,e,n){var o=n(1702),r=n(7293),i=n(614),a=n(2597),s=n(9781),u=n(6530).CONFIGURABLE,c=n(2788),l=n(9909),f=l.enforce,d=l.get,p=String,h=Object.defineProperty,v=o(\"\".slice),y=o(\"\".replace),g=o([].join),m=s&&!r((function(){return 8!==h((function(){}),\"length\",{value:8}).length})),b=String(String).split(\"String\"),x=t.exports=function(t,e,n){\"Symbol(\"===v(p(e),0,7)&&(e=\"[\"+y(p(e),/^Symbol\\(([^)]*)\\)/,\"$1\")+\"]\"),n&&n.getter&&(e=\"get \"+e),n&&n.setter&&(e=\"set \"+e),(!a(t,\"name\")||u&&t.name!==e)&&(s?h(t,\"name\",{value:e,configurable:!0}):t.name=e),m&&n&&a(n,\"arity\")&&t.length!==n.arity&&h(t,\"length\",{value:n.arity});try{n&&a(n,\"constructor\")&&n.constructor?s&&h(t,\"prototype\",{writable:!1}):t.prototype&&(t.prototype=void 0)}catch(t){}var o=f(t);return a(o,\"source\")||(o.source=g(b,\"string\"==typeof e?e:\"\")),t};Function.prototype.toString=x((function(){return i(this)&&d(this).source||c(this)}),\"toString\")},4758:function(t){var e=Math.ceil,n=Math.floor;t.exports=Math.trunc||function(t){var o=+t;return(o>0?n:e)(o)}},3929:function(t,e,n){var o=n(7850),r=TypeError;t.exports=function(t){if(o(t))throw r(\"The method doesn't accept regular expressions\");return t}},1574:function(t,e,n){\"use strict\";var o=n(9781),r=n(1702),i=n(6916),a=n(7293),s=n(1956),u=n(5181),c=n(5296),l=n(7908),f=n(8361),d=Object.assign,p=Object.defineProperty,h=r([].concat);t.exports=!d||a((function(){if(o&&1!==d({b:1},d(p({},\"a\",{enumerable:!0,get:function(){p(this,\"b\",{value:3,enumerable:!1})}}),{b:2})).b)return!0;var t={},e={},n=Symbol(),r=\"abcdefghijklmnopqrst\";return t[n]=7,r.split(\"\").forEach((function(t){e[t]=t})),7!=d({},t)[n]||s(d({},e)).join(\"\")!=r}))?function(t,e){for(var n=l(t),r=arguments.length,a=1,d=u.f,p=c.f;r>a;)for(var v,y=f(arguments[a++]),g=d?h(s(y),d(y)):s(y),m=g.length,b=0;m>b;)v=g[b++],o&&!i(p,y,v)||(n[v]=y[v]);return n}:d},30:function(t,e,n){var o,r=n(9670),i=n(6048),a=n(748),s=n(3501),u=n(490),c=n(317),l=n(6200),f=\"prototype\",d=\"script\",p=l(\"IE_PROTO\"),h=function(){},v=function(t){return\"<\"+d+\">\"+t+\"</\"+d+\">\"},y=function(t){t.write(v(\"\")),t.close();var e=t.parentWindow.Object;return t=null,e},g=function(){try{o=new ActiveXObject(\"htmlfile\")}catch(t){}var t,e,n;g=\"undefined\"!=typeof document?document.domain&&o?y(o):(e=c(\"iframe\"),n=\"java\"+d+\":\",e.style.display=\"none\",u.appendChild(e),e.src=String(n),(t=e.contentWindow.document).open(),t.write(v(\"document.F=Object\")),t.close(),t.F):y(o);for(var r=a.length;r--;)delete g[f][a[r]];return g()};s[p]=!0,t.exports=Object.create||function(t,e){var n;return null!==t?(h[f]=r(t),n=new h,h[f]=null,n[p]=t):n=g(),void 0===e?n:i.f(n,e)}},6048:function(t,e,n){var o=n(9781),r=n(3353),i=n(3070),a=n(9670),s=n(5656),u=n(1956);e.f=o&&!r?Object.defineProperties:function(t,e){a(t);for(var n,o=s(e),r=u(e),c=r.length,l=0;c>l;)i.f(t,n=r[l++],o[n]);return t}},3070:function(t,e,n){var o=n(9781),r=n(4664),i=n(3353),a=n(9670),s=n(4948),u=TypeError,c=Object.defineProperty,l=Object.getOwnPropertyDescriptor,f=\"enumerable\",d=\"configurable\",p=\"writable\";e.f=o?i?function(t,e,n){if(a(t),e=s(e),a(n),\"function\"==typeof t&&\"prototype\"===e&&\"value\"in n&&p in n&&!n[p]){var o=l(t,e);o&&o[p]&&(t[e]=n.value,n={configurable:d in n?n[d]:o[d],enumerable:f in n?n[f]:o[f],writable:!1})}return c(t,e,n)}:c:function(t,e,n){if(a(t),e=s(e),a(n),r)try{return c(t,e,n)}catch(t){}if(\"get\"in n||\"set\"in n)throw u(\"Accessors not supported\");return\"value\"in n&&(t[e]=n.value),t}},1236:function(t,e,n){var o=n(9781),r=n(6916),i=n(5296),a=n(9114),s=n(5656),u=n(4948),c=n(2597),l=n(4664),f=Object.getOwnPropertyDescriptor;e.f=o?f:function(t,e){if(t=s(t),e=u(e),l)try{return f(t,e)}catch(t){}if(c(t,e))return a(!r(i.f,t,e),t[e])}},1156:function(t,e,n){var o=n(4326),r=n(5656),i=n(8006).f,a=n(1589),s=\"object\"==typeof window&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[];t.exports.f=function(t){return s&&\"Window\"==o(t)?function(t){try{return i(t)}catch(t){return a(s)}}(t):i(r(t))}},8006:function(t,e,n){var o=n(6324),r=n(748).concat(\"length\",\"prototype\");e.f=Object.getOwnPropertyNames||function(t){return o(t,r)}},5181:function(t,e){e.f=Object.getOwnPropertySymbols},9518:function(t,e,n){var o=n(2597),r=n(614),i=n(7908),a=n(6200),s=n(8544),u=a(\"IE_PROTO\"),c=Object,l=c.prototype;t.exports=s?c.getPrototypeOf:function(t){var e=i(t);if(o(e,u))return e[u];var n=e.constructor;return r(n)&&e instanceof n?n.prototype:e instanceof c?l:null}},7976:function(t,e,n){var o=n(1702);t.exports=o({}.isPrototypeOf)},6324:function(t,e,n){var o=n(1702),r=n(2597),i=n(5656),a=n(1318).indexOf,s=n(3501),u=o([].push);t.exports=function(t,e){var n,o=i(t),c=0,l=[];for(n in o)!r(s,n)&&r(o,n)&&u(l,n);for(;e.length>c;)r(o,n=e[c++])&&(~a(l,n)||u(l,n));return l}},1956:function(t,e,n){var o=n(6324),r=n(748);t.exports=Object.keys||function(t){return o(t,r)}},5296:function(t,e){\"use strict\";var n={}.propertyIsEnumerable,o=Object.getOwnPropertyDescriptor,r=o&&!n.call({1:2},1);e.f=r?function(t){var e=o(this,t);return!!e&&e.enumerable}:n},9026:function(t,e,n){\"use strict\";var o=n(1913),r=n(7854),i=n(7293),a=n(8008);t.exports=o||!i((function(){if(!(a&&a<535)){var t=Math.random();__defineSetter__.call(null,t,(function(){})),delete r[t]}}))},7674:function(t,e,n){var o=n(5668),r=n(9670),i=n(6077);t.exports=Object.setPrototypeOf||(\"__proto__\"in{}?function(){var t,e=!1,n={};try{(t=o(Object.prototype,\"__proto__\",\"set\"))(n,[]),e=n instanceof Array}catch(t){}return function(n,o){return r(n),i(o),e?t(n,o):n.__proto__=o,n}}():void 0)},288:function(t,e,n){\"use strict\";var o=n(1694),r=n(648);t.exports=o?{}.toString:function(){return\"[object \"+r(this)+\"]\"}},2140:function(t,e,n){var o=n(6916),r=n(614),i=n(111),a=TypeError;t.exports=function(t,e){var n,s;if(\"string\"===e&&r(n=t.toString)&&!i(s=o(n,t)))return s;if(r(n=t.valueOf)&&!i(s=o(n,t)))return s;if(\"string\"!==e&&r(n=t.toString)&&!i(s=o(n,t)))return s;throw a(\"Can't convert object to primitive value\")}},3887:function(t,e,n){var o=n(5005),r=n(1702),i=n(8006),a=n(5181),s=n(9670),u=r([].concat);t.exports=o(\"Reflect\",\"ownKeys\")||function(t){var e=i.f(s(t)),n=a.f;return n?u(e,n(t)):e}},857:function(t,e,n){var o=n(7854);t.exports=o},2626:function(t,e,n){var o=n(3070).f;t.exports=function(t,e,n){n in t||o(t,n,{configurable:!0,get:function(){return e[n]},set:function(t){e[n]=t}})}},7651:function(t,e,n){var o=n(6916),r=n(9670),i=n(614),a=n(4326),s=n(2261),u=TypeError;t.exports=function(t,e){var n=t.exec;if(i(n)){var c=o(n,t,e);return null!==c&&r(c),c}if(\"RegExp\"===a(t))return o(s,t,e);throw u(\"RegExp#exec called on incompatible receiver\")}},2261:function(t,e,n){\"use strict\";var o,r,i=n(6916),a=n(1702),s=n(1340),u=n(7066),c=n(2999),l=n(2309),f=n(30),d=n(9909).get,p=n(9441),h=n(7168),v=l(\"native-string-replace\",String.prototype.replace),y=RegExp.prototype.exec,g=y,m=a(\"\".charAt),b=a(\"\".indexOf),x=a(\"\".replace),w=a(\"\".slice),E=(r=/b*/g,i(y,o=/a/,\"a\"),i(y,r,\"a\"),0!==o.lastIndex||0!==r.lastIndex),S=c.BROKEN_CARET,O=void 0!==/()??/.exec(\"\")[1];(E||O||S||p||h)&&(g=function(t){var e,n,o,r,a,c,l,p=this,h=d(p),k=s(t),P=h.raw;if(P)return P.lastIndex=p.lastIndex,e=i(g,P,k),p.lastIndex=P.lastIndex,e;var I=h.groups,C=S&&p.sticky,A=i(u,p),M=p.source,T=0,D=k;if(C&&(A=x(A,\"y\",\"\"),-1===b(A,\"g\")&&(A+=\"g\"),D=w(k,p.lastIndex),p.lastIndex>0&&(!p.multiline||p.multiline&&\"\\n\"!==m(k,p.lastIndex-1))&&(M=\"(?: \"+M+\")\",D=\" \"+D,T++),n=new RegExp(\"^(?:\"+M+\")\",A)),O&&(n=new RegExp(\"^\"+M+\"$(?!\\\\s)\",A)),E&&(o=p.lastIndex),r=i(y,C?n:p,D),C?r?(r.input=w(r.input,T),r[0]=w(r[0],T),r.index=p.lastIndex,p.lastIndex+=r[0].length):p.lastIndex=0:E&&r&&(p.lastIndex=p.global?r.index+r[0].length:o),O&&r&&r.length>1&&i(v,r[0],n,(function(){for(a=1;a<arguments.length-2;a++)void 0===arguments[a]&&(r[a]=void 0)})),r&&I)for(r.groups=c=f(null),a=0;a<I.length;a++)c[(l=I[a])[0]]=r[l[1]];return r}),t.exports=g},7066:function(t,e,n){\"use strict\";var o=n(9670);t.exports=function(){var t=o(this),e=\"\";return t.hasIndices&&(e+=\"d\"),t.global&&(e+=\"g\"),t.ignoreCase&&(e+=\"i\"),t.multiline&&(e+=\"m\"),t.dotAll&&(e+=\"s\"),t.unicode&&(e+=\"u\"),t.unicodeSets&&(e+=\"v\"),t.sticky&&(e+=\"y\"),e}},4706:function(t,e,n){var o=n(6916),r=n(2597),i=n(7976),a=n(7066),s=RegExp.prototype;t.exports=function(t){var e=t.flags;return void 0!==e||\"flags\"in s||r(t,\"flags\")||!i(s,t)?e:o(a,t)}},2999:function(t,e,n){var o=n(7293),r=n(7854).RegExp,i=o((function(){var t=r(\"a\",\"y\");return t.lastIndex=2,null!=t.exec(\"abcd\")})),a=i||o((function(){return!r(\"a\",\"y\").sticky})),s=i||o((function(){var t=r(\"^r\",\"gy\");return t.lastIndex=2,null!=t.exec(\"str\")}));t.exports={BROKEN_CARET:s,MISSED_STICKY:a,UNSUPPORTED_Y:i}},9441:function(t,e,n){var o=n(7293),r=n(7854).RegExp;t.exports=o((function(){var t=r(\".\",\"s\");return!(t.dotAll&&t.exec(\"\\n\")&&\"s\"===t.flags)}))},7168:function(t,e,n){var o=n(7293),r=n(7854).RegExp;t.exports=o((function(){var t=r(\"(?<a>b)\",\"g\");return\"b\"!==t.exec(\"b\").groups.a||\"bc\"!==\"b\".replace(t,\"$<a>c\")}))},4488:function(t,e,n){var o=n(8554),r=TypeError;t.exports=function(t){if(o(t))throw r(\"Can't call method on \"+t);return t}},6340:function(t,e,n){\"use strict\";var o=n(5005),r=n(7045),i=n(5112),a=n(9781),s=i(\"species\");t.exports=function(t){var e=o(t);a&&e&&!e[s]&&r(e,s,{configurable:!0,get:function(){return this}})}},8003:function(t,e,n){var o=n(3070).f,r=n(2597),i=n(5112)(\"toStringTag\");t.exports=function(t,e,n){t&&!n&&(t=t.prototype),t&&!r(t,i)&&o(t,i,{configurable:!0,value:e})}},6200:function(t,e,n){var o=n(2309),r=n(9711),i=o(\"keys\");t.exports=function(t){return i[t]||(i[t]=r(t))}},5465:function(t,e,n){var o=n(7854),r=n(3072),i=\"__core-js_shared__\",a=o[i]||r(i,{});t.exports=a},2309:function(t,e,n){var o=n(1913),r=n(5465);(t.exports=function(t,e){return r[t]||(r[t]=void 0!==e?e:{})})(\"versions\",[]).push({version:\"3.30.2\",mode:o?\"pure\":\"global\",copyright:\"© 2014-2023 Denis Pushkarev (zloirock.ru)\",license:\"https://github.com/zloirock/core-js/blob/v3.30.2/LICENSE\",source:\"https://github.com/zloirock/core-js\"})},6707:function(t,e,n){var o=n(9670),r=n(9483),i=n(8554),a=n(5112)(\"species\");t.exports=function(t,e){var n,s=o(t).constructor;return void 0===s||i(n=o(s)[a])?e:r(n)}},8710:function(t,e,n){var o=n(1702),r=n(9303),i=n(1340),a=n(4488),s=o(\"\".charAt),u=o(\"\".charCodeAt),c=o(\"\".slice),l=function(t){return function(e,n){var o,l,f=i(a(e)),d=r(n),p=f.length;return d<0||d>=p?t?\"\":void 0:(o=u(f,d))<55296||o>56319||d+1===p||(l=u(f,d+1))<56320||l>57343?t?s(f,d):o:t?c(f,d,d+2):l-56320+(o-55296<<10)+65536}};t.exports={codeAt:l(!1),charAt:l(!0)}},6091:function(t,e,n){var o=n(6530).PROPER,r=n(7293),i=n(1361);t.exports=function(t){return r((function(){return!!i[t]()||\"​᠎\"!==\"​᠎\"[t]()||o&&i[t].name!==t}))}},3111:function(t,e,n){var o=n(1702),r=n(4488),i=n(1340),a=n(1361),s=o(\"\".replace),u=RegExp(\"^[\"+a+\"]+\"),c=RegExp(\"(^|[^\"+a+\"])[\"+a+\"]+$\"),l=function(t){return function(e){var n=i(r(e));return 1&t&&(n=s(n,u,\"\")),2&t&&(n=s(n,c,\"$1\")),n}};t.exports={start:l(1),end:l(2),trim:l(3)}},6293:function(t,e,n){var o=n(7392),r=n(7293),i=n(7854).String;t.exports=!!Object.getOwnPropertySymbols&&!r((function(){var t=Symbol();return!i(t)||!(Object(t)instanceof Symbol)||!Symbol.sham&&o&&o<41}))},6532:function(t,e,n){var o=n(6916),r=n(5005),i=n(5112),a=n(8052);t.exports=function(){var t=r(\"Symbol\"),e=t&&t.prototype,n=e&&e.valueOf,s=i(\"toPrimitive\");e&&!e[s]&&a(e,s,(function(t){return o(n,this)}),{arity:1})}},2015:function(t,e,n){var o=n(6293);t.exports=o&&!!Symbol.for&&!!Symbol.keyFor},863:function(t,e,n){var o=n(1702);t.exports=o(1..valueOf)},1400:function(t,e,n){var o=n(9303),r=Math.max,i=Math.min;t.exports=function(t,e){var n=o(t);return n<0?r(n+e,0):i(n,e)}},5656:function(t,e,n){var o=n(8361),r=n(4488);t.exports=function(t){return o(r(t))}},9303:function(t,e,n){var o=n(4758);t.exports=function(t){var e=+t;return e!=e||0===e?0:o(e)}},7466:function(t,e,n){var o=n(9303),r=Math.min;t.exports=function(t){return t>0?r(o(t),9007199254740991):0}},7908:function(t,e,n){var o=n(4488),r=Object;t.exports=function(t){return r(o(t))}},7593:function(t,e,n){var o=n(6916),r=n(111),i=n(2190),a=n(8173),s=n(2140),u=n(5112),c=TypeError,l=u(\"toPrimitive\");t.exports=function(t,e){if(!r(t)||i(t))return t;var n,u=a(t,l);if(u){if(void 0===e&&(e=\"default\"),n=o(u,t,e),!r(n)||i(n))return n;throw c(\"Can't convert object to primitive value\")}return void 0===e&&(e=\"number\"),s(t,e)}},4948:function(t,e,n){var o=n(7593),r=n(2190);t.exports=function(t){var e=o(t,\"string\");return r(e)?e:e+\"\"}},1694:function(t,e,n){var o={};o[n(5112)(\"toStringTag\")]=\"z\",t.exports=\"[object z]\"===String(o)},1340:function(t,e,n){var o=n(648),r=String;t.exports=function(t){if(\"Symbol\"===o(t))throw TypeError(\"Cannot convert a Symbol value to a string\");return r(t)}},6330:function(t){var e=String;t.exports=function(t){try{return e(t)}catch(t){return\"Object\"}}},9711:function(t,e,n){var o=n(1702),r=0,i=Math.random(),a=o(1..toString);t.exports=function(t){return\"Symbol(\"+(void 0===t?\"\":t)+\")_\"+a(++r+i,36)}},3307:function(t,e,n){var o=n(6293);t.exports=o&&!Symbol.sham&&\"symbol\"==typeof Symbol.iterator},3353:function(t,e,n){var o=n(9781),r=n(7293);t.exports=o&&r((function(){return 42!=Object.defineProperty((function(){}),\"prototype\",{value:42,writable:!1}).prototype}))},4811:function(t,e,n){var o=n(7854),r=n(614),i=o.WeakMap;t.exports=r(i)&&/native code/.test(String(i))},6800:function(t,e,n){var o=n(857),r=n(2597),i=n(6061),a=n(3070).f;t.exports=function(t){var e=o.Symbol||(o.Symbol={});r(e,t)||a(e,t,{value:i.f(t)})}},6061:function(t,e,n){var o=n(5112);e.f=o},5112:function(t,e,n){var o=n(7854),r=n(2309),i=n(2597),a=n(9711),s=n(6293),u=n(3307),c=o.Symbol,l=r(\"wks\"),f=u?c.for||c:c&&c.withoutSetter||a;t.exports=function(t){return i(l,t)||(l[t]=s&&i(c,t)?c[t]:f(\"Symbol.\"+t)),l[t]}},1361:function(t){t.exports=\"\\t\\n\\v\\f\\r                　\\u2028\\u2029\\ufeff\"},2222:function(t,e,n){\"use strict\";var o=n(2109),r=n(7293),i=n(3157),a=n(111),s=n(7908),u=n(6244),c=n(7207),l=n(6135),f=n(5417),d=n(1194),p=n(5112),h=n(7392),v=p(\"isConcatSpreadable\"),y=h>=51||!r((function(){var t=[];return t[v]=!1,t.concat()[0]!==t})),g=function(t){if(!a(t))return!1;var e=t[v];return void 0!==e?!!e:i(t)};o({target:\"Array\",proto:!0,arity:1,forced:!y||!d(\"concat\")},{concat:function(t){var e,n,o,r,i,a=s(this),d=f(a,0),p=0;for(e=-1,o=arguments.length;e<o;e++)if(g(i=-1===e?a:arguments[e]))for(r=u(i),c(p+r),n=0;n<r;n++,p++)n in i&&l(d,p,i[n]);else c(p+1),l(d,p++,i);return d.length=p,d}})},7327:function(t,e,n){\"use strict\";var o=n(2109),r=n(2092).filter;o({target:\"Array\",proto:!0,forced:!n(1194)(\"filter\")},{filter:function(t){return r(this,t,arguments.length>1?arguments[1]:void 0)}})},1038:function(t,e,n){var o=n(2109),r=n(8457);o({target:\"Array\",stat:!0,forced:!n(7072)((function(t){Array.from(t)}))},{from:r})},6699:function(t,e,n){\"use strict\";var o=n(2109),r=n(1318).includes,i=n(7293),a=n(1223);o({target:\"Array\",proto:!0,forced:i((function(){return!Array(1).includes()}))},{includes:function(t){return r(this,t,arguments.length>1?arguments[1]:void 0)}}),a(\"includes\")},2772:function(t,e,n){\"use strict\";var o=n(2109),r=n(1470),i=n(1318).indexOf,a=n(9341),s=r([].indexOf),u=!!s&&1/s([1],1,-0)<0;o({target:\"Array\",proto:!0,forced:u||!a(\"indexOf\")},{indexOf:function(t){var e=arguments.length>1?arguments[1]:void 0;return u?s(this,t,e)||0:i(this,t,e)}})},6992:function(t,e,n){\"use strict\";var o=n(5656),r=n(1223),i=n(7497),a=n(9909),s=n(3070).f,u=n(1656),c=n(6178),l=n(1913),f=n(9781),d=\"Array Iterator\",p=a.set,h=a.getterFor(d);t.exports=u(Array,\"Array\",(function(t,e){p(this,{type:d,target:o(t),index:0,kind:e})}),(function(){var t=h(this),e=t.target,n=t.kind,o=t.index++;return!e||o>=e.length?(t.target=void 0,c(void 0,!0)):c(\"keys\"==n?o:\"values\"==n?e[o]:[o,e[o]],!1)}),\"values\");var v=i.Arguments=i.Array;if(r(\"keys\"),r(\"values\"),r(\"entries\"),!l&&f&&\"values\"!==v.name)try{s(v,\"name\",{value:\"values\"})}catch(t){}},9600:function(t,e,n){\"use strict\";var o=n(2109),r=n(1702),i=n(8361),a=n(5656),s=n(9341),u=r([].join);o({target:\"Array\",proto:!0,forced:i!=Object||!s(\"join\",\",\")},{join:function(t){return u(a(this),void 0===t?\",\":t)}})},1249:function(t,e,n){\"use strict\";var o=n(2109),r=n(2092).map;o({target:\"Array\",proto:!0,forced:!n(1194)(\"map\")},{map:function(t){return r(this,t,arguments.length>1?arguments[1]:void 0)}})},5827:function(t,e,n){\"use strict\";var o=n(2109),r=n(3671).left,i=n(9341),a=n(7392);o({target:\"Array\",proto:!0,forced:!n(5268)&&a>79&&a<83||!i(\"reduce\")},{reduce:function(t){var e=arguments.length;return r(this,t,e,e>1?arguments[1]:void 0)}})},7042:function(t,e,n){\"use strict\";var o=n(2109),r=n(3157),i=n(4411),a=n(111),s=n(1400),u=n(6244),c=n(5656),l=n(6135),f=n(5112),d=n(1194),p=n(206),h=d(\"slice\"),v=f(\"species\"),y=Array,g=Math.max;o({target:\"Array\",proto:!0,forced:!h},{slice:function(t,e){var n,o,f,d=c(this),h=u(d),m=s(t,h),b=s(void 0===e?h:e,h);if(r(d)&&(n=d.constructor,(i(n)&&(n===y||r(n.prototype))||a(n)&&null===(n=n[v]))&&(n=void 0),n===y||void 0===n))return p(d,m,b);for(o=new(void 0===n?y:n)(g(b-m,0)),f=0;m<b;m++,f++)m in d&&l(o,f,d[m]);return o.length=f,o}})},2707:function(t,e,n){\"use strict\";var o=n(2109),r=n(1702),i=n(9662),a=n(7908),s=n(6244),u=n(5117),c=n(1340),l=n(7293),f=n(4362),d=n(9341),p=n(8886),h=n(256),v=n(7392),y=n(8008),g=[],m=r(g.sort),b=r(g.push),x=l((function(){g.sort(void 0)})),w=l((function(){g.sort(null)})),E=d(\"sort\"),S=!l((function(){if(v)return v<70;if(!(p&&p>3)){if(h)return!0;if(y)return y<603;var t,e,n,o,r=\"\";for(t=65;t<76;t++){switch(e=String.fromCharCode(t),t){case 66:case 69:case 70:case 72:n=3;break;case 68:case 71:n=4;break;default:n=2}for(o=0;o<47;o++)g.push({k:e+o,v:n})}for(g.sort((function(t,e){return e.v-t.v})),o=0;o<g.length;o++)e=g[o].k.charAt(0),r.charAt(r.length-1)!==e&&(r+=e);return\"DGBEFHACIJK\"!==r}}));o({target:\"Array\",proto:!0,forced:x||!w||!E||!S},{sort:function(t){void 0!==t&&i(t);var e=a(this);if(S)return void 0===t?m(e):m(e,t);var n,o,r=[],l=s(e);for(o=0;o<l;o++)o in e&&b(r,e[o]);for(f(r,function(t){return function(e,n){return void 0===n?-1:void 0===e?1:void 0!==t?+t(e,n)||0:c(e)>c(n)?1:-1}}(t)),n=s(r),o=0;o<n;)e[o]=r[o++];for(;o<l;)u(e,o++);return e}})},561:function(t,e,n){\"use strict\";var o=n(2109),r=n(7908),i=n(1400),a=n(9303),s=n(6244),u=n(3658),c=n(7207),l=n(5417),f=n(6135),d=n(5117),p=n(1194)(\"splice\"),h=Math.max,v=Math.min;o({target:\"Array\",proto:!0,forced:!p},{splice:function(t,e){var n,o,p,y,g,m,b=r(this),x=s(b),w=i(t,x),E=arguments.length;for(0===E?n=o=0:1===E?(n=0,o=x-w):(n=E-2,o=v(h(a(e),0),x-w)),c(x+n-o),p=l(b,o),y=0;y<o;y++)(g=w+y)in b&&f(p,y,b[g]);if(p.length=o,n<o){for(y=w;y<x-o;y++)m=y+n,(g=y+o)in b?b[m]=b[g]:d(b,m);for(y=x;y>x-o+n;y--)d(b,y-1)}else if(n>o)for(y=x-o;y>w;y--)m=y+n-1,(g=y+o-1)in b?b[m]=b[g]:d(b,m);for(y=0;y<n;y++)b[y+w]=arguments[y+2];return u(b,x-o+n),p}})},6078:function(t,e,n){var o=n(2597),r=n(8052),i=n(8709),a=n(5112)(\"toPrimitive\"),s=Date.prototype;o(s,a)||r(s,a,i)},8309:function(t,e,n){var o=n(9781),r=n(6530).EXISTS,i=n(1702),a=n(7045),s=Function.prototype,u=i(s.toString),c=/function\\b(?:\\s|\\/\\*[\\S\\s]*?\\*\\/|\\/\\/[^\\n\\r]*[\\n\\r]+)*([^\\s(/]*)/,l=i(c.exec);o&&!r&&a(s,\"name\",{configurable:!0,get:function(){try{return l(c,u(this))[1]}catch(t){return\"\"}}})},8862:function(t,e,n){var o=n(2109),r=n(5005),i=n(2104),a=n(6916),s=n(1702),u=n(7293),c=n(614),l=n(2190),f=n(206),d=n(8044),p=n(6293),h=String,v=r(\"JSON\",\"stringify\"),y=s(/./.exec),g=s(\"\".charAt),m=s(\"\".charCodeAt),b=s(\"\".replace),x=s(1..toString),w=/[\\uD800-\\uDFFF]/g,E=/^[\\uD800-\\uDBFF]$/,S=/^[\\uDC00-\\uDFFF]$/,O=!p||u((function(){var t=r(\"Symbol\")();return\"[null]\"!=v([t])||\"{}\"!=v({a:t})||\"{}\"!=v(Object(t))})),k=u((function(){return'\"\\\\udf06\\\\ud834\"'!==v(\"\\udf06\\ud834\")||'\"\\\\udead\"'!==v(\"\\udead\")})),P=function(t,e){var n=f(arguments),o=d(e);if(c(o)||void 0!==t&&!l(t))return n[1]=function(t,e){if(c(o)&&(e=a(o,this,h(t),e)),!l(e))return e},i(v,null,n)},I=function(t,e,n){var o=g(n,e-1),r=g(n,e+1);return y(E,t)&&!y(S,r)||y(S,t)&&!y(E,o)?\"\\\\u\"+x(m(t,0),16):t};v&&o({target:\"JSON\",stat:!0,arity:3,forced:O||k},{stringify:function(t,e,n){var o=f(arguments),r=i(O?P:v,null,o);return k&&\"string\"==typeof r?b(r,w,I):r}})},9653:function(t,e,n){\"use strict\";var o=n(2109),r=n(1913),i=n(9781),a=n(7854),s=n(857),u=n(1702),c=n(4705),l=n(2597),f=n(9587),d=n(7976),p=n(2190),h=n(7593),v=n(7293),y=n(8006).f,g=n(1236).f,m=n(3070).f,b=n(863),x=n(3111).trim,w=\"Number\",E=a[w],S=s[w],O=E.prototype,k=a.TypeError,P=u(\"\".slice),I=u(\"\".charCodeAt),C=function(t){var e,n,o,r,i,a,s,u,c=h(t,\"number\");if(p(c))throw k(\"Cannot convert a Symbol value to a number\");if(\"string\"==typeof c&&c.length>2)if(c=x(c),43===(e=I(c,0))||45===e){if(88===(n=I(c,2))||120===n)return NaN}else if(48===e){switch(I(c,1)){case 66:case 98:o=2,r=49;break;case 79:case 111:o=8,r=55;break;default:return+c}for(a=(i=P(c,2)).length,s=0;s<a;s++)if((u=I(i,s))<48||u>r)return NaN;return parseInt(i,o)}return+c},A=c(w,!E(\" 0o1\")||!E(\"0b1\")||E(\"+0x1\")),M=function(t){var e,n=arguments.length<1?0:E(function(t){var e=h(t,\"number\");return\"bigint\"==typeof e?e:C(e)}(t));return d(O,e=this)&&v((function(){b(e)}))?f(Object(n),this,M):n};M.prototype=O,A&&!r&&(O.constructor=M),o({global:!0,constructor:!0,wrap:!0,forced:A},{Number:M});var T=function(t,e){for(var n,o=i?y(e):\"MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,EPSILON,MAX_SAFE_INTEGER,MIN_SAFE_INTEGER,isFinite,isInteger,isNaN,isSafeInteger,parseFloat,parseInt,fromString,range\".split(\",\"),r=0;o.length>r;r++)l(e,n=o[r])&&!l(t,n)&&m(t,n,g(e,n))};r&&S&&T(s[w],S),(A||r)&&T(s[w],E)},3161:function(t,e,n){n(2109)({target:\"Number\",stat:!0},{isInteger:n(5988)})},9601:function(t,e,n){var o=n(2109),r=n(1574);o({target:\"Object\",stat:!0,arity:2,forced:Object.assign!==r},{assign:r})},9595:function(t,e,n){\"use strict\";var o=n(2109),r=n(9781),i=n(9026),a=n(9662),s=n(7908),u=n(3070);r&&o({target:\"Object\",proto:!0,forced:i},{__defineGetter__:function(t,e){u.f(s(this),t,{get:a(e),enumerable:!0,configurable:!0})}})},5003:function(t,e,n){var o=n(2109),r=n(7293),i=n(5656),a=n(1236).f,s=n(9781);o({target:\"Object\",stat:!0,forced:!s||r((function(){a(1)})),sham:!s},{getOwnPropertyDescriptor:function(t,e){return a(i(t),e)}})},9337:function(t,e,n){var o=n(2109),r=n(9781),i=n(3887),a=n(5656),s=n(1236),u=n(6135);o({target:\"Object\",stat:!0,sham:!r},{getOwnPropertyDescriptors:function(t){for(var e,n,o=a(t),r=s.f,c=i(o),l={},f=0;c.length>f;)void 0!==(n=r(o,e=c[f++]))&&u(l,e,n);return l}})},6210:function(t,e,n){var o=n(2109),r=n(7293),i=n(1156).f;o({target:\"Object\",stat:!0,forced:r((function(){return!Object.getOwnPropertyNames(1)}))},{getOwnPropertyNames:i})},9660:function(t,e,n){var o=n(2109),r=n(6293),i=n(7293),a=n(5181),s=n(7908);o({target:\"Object\",stat:!0,forced:!r||i((function(){a.f(1)}))},{getOwnPropertySymbols:function(t){var e=a.f;return e?e(s(t)):[]}})},7941:function(t,e,n){var o=n(2109),r=n(7908),i=n(1956);o({target:\"Object\",stat:!0,forced:n(7293)((function(){i(1)}))},{keys:function(t){return i(r(t))}})},1539:function(t,e,n){var o=n(1694),r=n(8052),i=n(288);o||r(Object.prototype,\"toString\",i,{unsafe:!0})},4603:function(t,e,n){var o=n(9781),r=n(7854),i=n(1702),a=n(4705),s=n(9587),u=n(8880),c=n(8006).f,l=n(7976),f=n(7850),d=n(1340),p=n(4706),h=n(2999),v=n(2626),y=n(8052),g=n(7293),m=n(2597),b=n(9909).enforce,x=n(6340),w=n(5112),E=n(9441),S=n(7168),O=w(\"match\"),k=r.RegExp,P=k.prototype,I=r.SyntaxError,C=i(P.exec),A=i(\"\".charAt),M=i(\"\".replace),T=i(\"\".indexOf),D=i(\"\".slice),j=/^\\?<[^\\s\\d!#%&*+<=>@^][^\\s!#%&*+<=>@^]*>/,N=/a/g,R=/a/g,L=new k(N)!==N,B=h.MISSED_STICKY,K=h.UNSUPPORTED_Y,F=o&&(!L||B||E||S||g((function(){return R[O]=!1,k(N)!=N||k(R)==R||\"/a/i\"!=k(N,\"i\")})));if(a(\"RegExp\",F)){for(var _=function(t,e){var n,o,r,i,a,c,h=l(P,this),v=f(t),y=void 0===e,g=[],x=t;if(!h&&v&&y&&t.constructor===_)return t;if((v||l(P,t))&&(t=t.source,y&&(e=p(x))),t=void 0===t?\"\":d(t),e=void 0===e?\"\":d(e),x=t,E&&\"dotAll\"in N&&(o=!!e&&T(e,\"s\")>-1)&&(e=M(e,/s/g,\"\")),n=e,B&&\"sticky\"in N&&(r=!!e&&T(e,\"y\")>-1)&&K&&(e=M(e,/y/g,\"\")),S&&(i=function(t){for(var e,n=t.length,o=0,r=\"\",i=[],a={},s=!1,u=!1,c=0,l=\"\";o<=n;o++){if(\"\\\\\"===(e=A(t,o)))e+=A(t,++o);else if(\"]\"===e)s=!1;else if(!s)switch(!0){case\"[\"===e:s=!0;break;case\"(\"===e:C(j,D(t,o+1))&&(o+=2,u=!0),r+=e,c++;continue;case\">\"===e&&u:if(\"\"===l||m(a,l))throw new I(\"Invalid capture group name\");a[l]=!0,i[i.length]=[l,c],u=!1,l=\"\";continue}u?l+=e:r+=e}return[r,i]}(t),t=i[0],g=i[1]),a=s(k(t,e),h?this:P,_),(o||r||g.length)&&(c=b(a),o&&(c.dotAll=!0,c.raw=_(function(t){for(var e,n=t.length,o=0,r=\"\",i=!1;o<=n;o++)\"\\\\\"!==(e=A(t,o))?i||\".\"!==e?(\"[\"===e?i=!0:\"]\"===e&&(i=!1),r+=e):r+=\"[\\\\s\\\\S]\":r+=e+A(t,++o);return r}(t),n)),r&&(c.sticky=!0),g.length&&(c.groups=g)),t!==x)try{u(a,\"source\",\"\"===x?\"(?:)\":x)}catch(t){}return a},H=c(k),U=0;H.length>U;)v(_,k,H[U++]);P.constructor=_,_.prototype=P,y(r,\"RegExp\",_,{constructor:!0})}x(\"RegExp\")},4916:function(t,e,n){\"use strict\";var o=n(2109),r=n(2261);o({target:\"RegExp\",proto:!0,forced:/./.exec!==r},{exec:r})},9714:function(t,e,n){\"use strict\";var o=n(6530).PROPER,r=n(8052),i=n(9670),a=n(1340),s=n(7293),u=n(4706),c=\"toString\",l=RegExp.prototype[c],f=s((function(){return\"/a/b\"!=l.call({source:\"a\",flags:\"b\"})})),d=o&&l.name!=c;(f||d)&&r(RegExp.prototype,c,(function(){var t=i(this);return\"/\"+a(t.source)+\"/\"+a(u(t))}),{unsafe:!0})},2023:function(t,e,n){\"use strict\";var o=n(2109),r=n(1702),i=n(3929),a=n(4488),s=n(1340),u=n(4964),c=r(\"\".indexOf);o({target:\"String\",proto:!0,forced:!u(\"includes\")},{includes:function(t){return!!~c(s(a(this)),s(i(t)),arguments.length>1?arguments[1]:void 0)}})},8783:function(t,e,n){\"use strict\";var o=n(8710).charAt,r=n(1340),i=n(9909),a=n(1656),s=n(6178),u=\"String Iterator\",c=i.set,l=i.getterFor(u);a(String,\"String\",(function(t){c(this,{type:u,string:r(t),index:0})}),(function(){var t,e=l(this),n=e.string,r=e.index;return r>=n.length?s(void 0,!0):(t=o(n,r),e.index+=t.length,s(t,!1))}))},6373:function(t,e,n){\"use strict\";var o=n(2109),r=n(6916),i=n(1470),a=n(3061),s=n(6178),u=n(4488),c=n(7466),l=n(1340),f=n(9670),d=n(8554),p=n(4326),h=n(7850),v=n(4706),y=n(8173),g=n(8052),m=n(7293),b=n(5112),x=n(6707),w=n(1530),E=n(7651),S=n(9909),O=n(1913),k=b(\"matchAll\"),P=\"RegExp String\",I=P+\" Iterator\",C=S.set,A=S.getterFor(I),M=RegExp.prototype,T=TypeError,D=i(\"\".indexOf),j=i(\"\".matchAll),N=!!j&&!m((function(){j(\"a\",/./)})),R=a((function(t,e,n,o){C(this,{type:I,regexp:t,string:e,global:n,unicode:o,done:!1})}),P,(function(){var t=A(this);if(t.done)return s(void 0,!0);var e=t.regexp,n=t.string,o=E(e,n);return null===o?(t.done=!0,s(void 0,!0)):t.global?(\"\"===l(o[0])&&(e.lastIndex=w(n,c(e.lastIndex),t.unicode)),s(o,!1)):(t.done=!0,s(o,!1))})),L=function(t){var e,n,o,r=f(this),i=l(t),a=x(r,RegExp),s=l(v(r));return e=new a(a===RegExp?r.source:r,s),n=!!~D(s,\"g\"),o=!!~D(s,\"u\"),e.lastIndex=c(r.lastIndex),new R(e,i,n,o)};o({target:\"String\",proto:!0,forced:N},{matchAll:function(t){var e,n,o,i,a=u(this);if(d(t)){if(N)return j(a,t)}else{if(h(t)&&(e=l(u(v(t))),!~D(e,\"g\")))throw T(\"`.matchAll` does not allow non-global regexes\");if(N)return j(a,t);if(void 0===(o=y(t,k))&&O&&\"RegExp\"==p(t)&&(o=L),o)return r(o,t,a)}return n=l(a),i=new RegExp(t,\"g\"),O?r(L,i,n):i[k](n)}}),O||k in M||g(M,k,L)},4723:function(t,e,n){\"use strict\";var o=n(6916),r=n(7007),i=n(9670),a=n(8554),s=n(7466),u=n(1340),c=n(4488),l=n(8173),f=n(1530),d=n(7651);r(\"match\",(function(t,e,n){return[function(e){var n=c(this),r=a(e)?void 0:l(e,t);return r?o(r,e,n):new RegExp(e)[t](u(n))},function(t){var o=i(this),r=u(t),a=n(e,o,r);if(a.done)return a.value;if(!o.global)return d(o,r);var c=o.unicode;o.lastIndex=0;for(var l,p=[],h=0;null!==(l=d(o,r));){var v=u(l[0]);p[h]=v,\"\"===v&&(o.lastIndex=f(r,s(o.lastIndex),c)),h++}return 0===h?null:p}]}))},5306:function(t,e,n){\"use strict\";var o=n(2104),r=n(6916),i=n(1702),a=n(7007),s=n(7293),u=n(9670),c=n(614),l=n(8554),f=n(9303),d=n(7466),p=n(1340),h=n(4488),v=n(1530),y=n(8173),g=n(647),m=n(7651),b=n(5112)(\"replace\"),x=Math.max,w=Math.min,E=i([].concat),S=i([].push),O=i(\"\".indexOf),k=i(\"\".slice),P=\"$0\"===\"a\".replace(/./,\"$0\"),I=!!/./[b]&&\"\"===/./[b](\"a\",\"$0\");a(\"replace\",(function(t,e,n){var i=I?\"$\":\"$0\";return[function(t,n){var o=h(this),i=l(t)?void 0:y(t,b);return i?r(i,t,o,n):r(e,p(o),t,n)},function(t,r){var a=u(this),s=p(t);if(\"string\"==typeof r&&-1===O(r,i)&&-1===O(r,\"$<\")){var l=n(e,a,s,r);if(l.done)return l.value}var h=c(r);h||(r=p(r));var y=a.global;if(y){var b=a.unicode;a.lastIndex=0}for(var P=[];;){var I=m(a,s);if(null===I)break;if(S(P,I),!y)break;\"\"===p(I[0])&&(a.lastIndex=v(s,d(a.lastIndex),b))}for(var C,A=\"\",M=0,T=0;T<P.length;T++){for(var D=p((I=P[T])[0]),j=x(w(f(I.index),s.length),0),N=[],R=1;R<I.length;R++)S(N,void 0===(C=I[R])?C:String(C));var L=I.groups;if(h){var B=E([D],N,j,s);void 0!==L&&S(B,L);var K=p(o(r,void 0,B))}else K=g(D,s,j,N,L,r);j>=M&&(A+=k(s,M,j)+K,M=j+D.length)}return A+k(s,M)}]}),!!s((function(){var t=/./;return t.exec=function(){var t=[];return t.groups={a:\"7\"},t},\"7\"!==\"\".replace(t,\"$<a>\")}))||!P||I)},3123:function(t,e,n){\"use strict\";var o=n(2104),r=n(6916),i=n(1702),a=n(7007),s=n(9670),u=n(8554),c=n(7850),l=n(4488),f=n(6707),d=n(1530),p=n(7466),h=n(1340),v=n(8173),y=n(1589),g=n(7651),m=n(2261),b=n(2999),x=n(7293),w=b.UNSUPPORTED_Y,E=4294967295,S=Math.min,O=[].push,k=i(/./.exec),P=i(O),I=i(\"\".slice),C=!x((function(){var t=/(?:)/,e=t.exec;t.exec=function(){return e.apply(this,arguments)};var n=\"ab\".split(t);return 2!==n.length||\"a\"!==n[0]||\"b\"!==n[1]}));a(\"split\",(function(t,e,n){var i;return i=\"c\"==\"abbc\".split(/(b)*/)[1]||4!=\"test\".split(/(?:)/,-1).length||2!=\"ab\".split(/(?:ab)*/).length||4!=\".\".split(/(.?)(.?)/).length||\".\".split(/()()/).length>1||\"\".split(/.?/).length?function(t,n){var i=h(l(this)),a=void 0===n?E:n>>>0;if(0===a)return[];if(void 0===t)return[i];if(!c(t))return r(e,i,t,a);for(var s,u,f,d=[],p=(t.ignoreCase?\"i\":\"\")+(t.multiline?\"m\":\"\")+(t.unicode?\"u\":\"\")+(t.sticky?\"y\":\"\"),v=0,g=new RegExp(t.source,p+\"g\");(s=r(m,g,i))&&!((u=g.lastIndex)>v&&(P(d,I(i,v,s.index)),s.length>1&&s.index<i.length&&o(O,d,y(s,1)),f=s[0].length,v=u,d.length>=a));)g.lastIndex===s.index&&g.lastIndex++;return v===i.length?!f&&k(g,\"\")||P(d,\"\"):P(d,I(i,v)),d.length>a?y(d,0,a):d}:\"0\".split(void 0,0).length?function(t,n){return void 0===t&&0===n?[]:r(e,this,t,n)}:e,[function(e,n){var o=l(this),a=u(e)?void 0:v(e,t);return a?r(a,e,o,n):r(i,h(o),e,n)},function(t,o){var r=s(this),a=h(t),u=n(i,r,a,o,i!==e);if(u.done)return u.value;var c=f(r,RegExp),l=r.unicode,v=(r.ignoreCase?\"i\":\"\")+(r.multiline?\"m\":\"\")+(r.unicode?\"u\":\"\")+(w?\"g\":\"y\"),y=new c(w?\"^(?:\"+r.source+\")\":r,v),m=void 0===o?E:o>>>0;if(0===m)return[];if(0===a.length)return null===g(y,a)?[a]:[];for(var b=0,x=0,O=[];x<a.length;){y.lastIndex=w?0:x;var k,C=g(y,w?I(a,x):a);if(null===C||(k=S(p(y.lastIndex+(w?x:0)),a.length))===b)x=d(a,x,l);else{if(P(O,I(a,b,x)),O.length===m)return O;for(var A=1;A<=C.length-1;A++)if(P(O,C[A]),O.length===m)return O;x=b=k}}return P(O,I(a,b)),O}]}),!C,w)},3210:function(t,e,n){\"use strict\";var o=n(2109),r=n(3111).trim;o({target:\"String\",proto:!0,forced:n(6091)(\"trim\")},{trim:function(){return r(this)}})},4032:function(t,e,n){\"use strict\";var o=n(2109),r=n(7854),i=n(6916),a=n(1702),s=n(1913),u=n(9781),c=n(6293),l=n(7293),f=n(2597),d=n(7976),p=n(9670),h=n(5656),v=n(4948),y=n(1340),g=n(9114),m=n(30),b=n(1956),x=n(8006),w=n(1156),E=n(5181),S=n(1236),O=n(3070),k=n(6048),P=n(5296),I=n(8052),C=n(7045),A=n(2309),M=n(6200),T=n(3501),D=n(9711),j=n(5112),N=n(6061),R=n(6800),L=n(6532),B=n(8003),K=n(9909),F=n(2092).forEach,_=M(\"hidden\"),H=\"Symbol\",U=\"prototype\",$=K.set,G=K.getterFor(H),V=Object[U],z=r.Symbol,Y=z&&z[U],W=r.TypeError,X=r.QObject,J=S.f,q=O.f,Q=w.f,Z=P.f,tt=a([].push),et=A(\"symbols\"),nt=A(\"op-symbols\"),ot=A(\"wks\"),rt=!X||!X[U]||!X[U].findChild,it=u&&l((function(){return 7!=m(q({},\"a\",{get:function(){return q(this,\"a\",{value:7}).a}})).a}))?function(t,e,n){var o=J(V,e);o&&delete V[e],q(t,e,n),o&&t!==V&&q(V,e,o)}:q,at=function(t,e){var n=et[t]=m(Y);return $(n,{type:H,tag:t,description:e}),u||(n.description=e),n},st=function(t,e,n){t===V&&st(nt,e,n),p(t);var o=v(e);return p(n),f(et,o)?(n.enumerable?(f(t,_)&&t[_][o]&&(t[_][o]=!1),n=m(n,{enumerable:g(0,!1)})):(f(t,_)||q(t,_,g(1,{})),t[_][o]=!0),it(t,o,n)):q(t,o,n)},ut=function(t,e){p(t);var n=h(e),o=b(n).concat(dt(n));return F(o,(function(e){u&&!i(ct,n,e)||st(t,e,n[e])})),t},ct=function(t){var e=v(t),n=i(Z,this,e);return!(this===V&&f(et,e)&&!f(nt,e))&&(!(n||!f(this,e)||!f(et,e)||f(this,_)&&this[_][e])||n)},lt=function(t,e){var n=h(t),o=v(e);if(n!==V||!f(et,o)||f(nt,o)){var r=J(n,o);return!r||!f(et,o)||f(n,_)&&n[_][o]||(r.enumerable=!0),r}},ft=function(t){var e=Q(h(t)),n=[];return F(e,(function(t){f(et,t)||f(T,t)||tt(n,t)})),n},dt=function(t){var e=t===V,n=Q(e?nt:h(t)),o=[];return F(n,(function(t){!f(et,t)||e&&!f(V,t)||tt(o,et[t])})),o};c||(z=function(){if(d(Y,this))throw W(\"Symbol is not a constructor\");var t=arguments.length&&void 0!==arguments[0]?y(arguments[0]):void 0,e=D(t),n=function(t){this===V&&i(n,nt,t),f(this,_)&&f(this[_],e)&&(this[_][e]=!1),it(this,e,g(1,t))};return u&&rt&&it(V,e,{configurable:!0,set:n}),at(e,t)},I(Y=z[U],\"toString\",(function(){return G(this).tag})),I(z,\"withoutSetter\",(function(t){return at(D(t),t)})),P.f=ct,O.f=st,k.f=ut,S.f=lt,x.f=w.f=ft,E.f=dt,N.f=function(t){return at(j(t),t)},u&&(C(Y,\"description\",{configurable:!0,get:function(){return G(this).description}}),s||I(V,\"propertyIsEnumerable\",ct,{unsafe:!0}))),o({global:!0,constructor:!0,wrap:!0,forced:!c,sham:!c},{Symbol:z}),F(b(ot),(function(t){R(t)})),o({target:H,stat:!0,forced:!c},{useSetter:function(){rt=!0},useSimple:function(){rt=!1}}),o({target:\"Object\",stat:!0,forced:!c,sham:!u},{create:function(t,e){return void 0===e?m(t):ut(m(t),e)},defineProperty:st,defineProperties:ut,getOwnPropertyDescriptor:lt}),o({target:\"Object\",stat:!0,forced:!c},{getOwnPropertyNames:ft}),L(),B(z,H),T[_]=!0},1817:function(t,e,n){\"use strict\";var o=n(2109),r=n(9781),i=n(7854),a=n(1702),s=n(2597),u=n(614),c=n(7976),l=n(1340),f=n(7045),d=n(9920),p=i.Symbol,h=p&&p.prototype;if(r&&u(p)&&(!(\"description\"in h)||void 0!==p().description)){var v={},y=function(){var t=arguments.length<1||void 0===arguments[0]?void 0:l(arguments[0]),e=c(h,this)?new p(t):void 0===t?p():p(t);return\"\"===t&&(v[e]=!0),e};d(y,p),y.prototype=h,h.constructor=y;var g=\"Symbol(test)\"==String(p(\"test\")),m=a(h.valueOf),b=a(h.toString),x=/^Symbol\\((.*)\\)[^)]+$/,w=a(\"\".replace),E=a(\"\".slice);f(h,\"description\",{configurable:!0,get:function(){var t=m(this);if(s(v,t))return\"\";var e=b(t),n=g?E(e,7,-1):w(e,x,\"$1\");return\"\"===n?void 0:n}}),o({global:!0,constructor:!0,forced:!0},{Symbol:y})}},763:function(t,e,n){var o=n(2109),r=n(5005),i=n(2597),a=n(1340),s=n(2309),u=n(2015),c=s(\"string-to-symbol-registry\"),l=s(\"symbol-to-string-registry\");o({target:\"Symbol\",stat:!0,forced:!u},{for:function(t){var e=a(t);if(i(c,e))return c[e];var n=r(\"Symbol\")(e);return c[e]=n,l[n]=e,n}})},2165:function(t,e,n){n(6800)(\"iterator\")},2526:function(t,e,n){n(4032),n(763),n(6620),n(8862),n(9660)},6620:function(t,e,n){var o=n(2109),r=n(2597),i=n(2190),a=n(6330),s=n(2309),u=n(2015),c=s(\"symbol-to-string-registry\");o({target:\"Symbol\",stat:!0,forced:!u},{keyFor:function(t){if(!i(t))throw TypeError(a(t)+\" is not a symbol\");if(r(c,t))return c[t]}})},6649:function(t,e,n){var o=n(6800),r=n(6532);o(\"toPrimitive\"),r()},3728:function(t,e,n){n(6373)},4747:function(t,e,n){var o=n(7854),r=n(8324),i=n(8509),a=n(8533),s=n(8880),u=function(t){if(t&&t.forEach!==a)try{s(t,\"forEach\",a)}catch(e){t.forEach=a}};for(var c in r)r[c]&&u(o[c]&&o[c].prototype);u(i)},3948:function(t,e,n){var o=n(7854),r=n(8324),i=n(8509),a=n(6992),s=n(8880),u=n(5112),c=u(\"iterator\"),l=u(\"toStringTag\"),f=a.values,d=function(t,e){if(t){if(t[c]!==f)try{s(t,c,f)}catch(e){t[c]=f}if(t[l]||s(t,l,e),r[e])for(var n in a)if(t[n]!==a[n])try{s(t,n,a[n])}catch(e){t[n]=a[n]}}};for(var p in r)d(o[p]&&o[p].prototype,p);d(i,\"DOMTokenList\")}},e={};function n(o){var r=e[o];if(void 0!==r)return r.exports;var i=e[o]={exports:{}};return t[o].call(i.exports,i,i.exports,n),i.exports}n.d=function(t,e){for(var o in e)n.o(e,o)&&!n.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:e[o]})},n.g=function(){if(\"object\"==typeof globalThis)return globalThis;try{return this||new Function(\"return this\")()}catch(t){if(\"object\"==typeof window)return window}}(),n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.r=function(t){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(t,\"__esModule\",{value:!0})};var o={};return function(){\"use strict\";n.r(o),n.d(o,{SimpleKeyboard:function(){return M},default:function(){return T}});n(3210),n(4916),n(5306),n(2772),n(8309),n(3123),n(1539),n(9714),n(561),n(9600),n(9595),n(7042);\"undefined\"==typeof Element||\"remove\"in Element.prototype||(Element.prototype.remove=function(){this.parentNode&&this.parentNode.removeChild(this)}),\"undefined\"!=typeof self&&\"document\"in self&&((!(\"classList\"in document.createElement(\"_\"))||document.createElementNS&&!(\"classList\"in document.createElementNS(\"http://www.w3.org/2000/svg\",\"g\")))&&function(t){if(\"Element\"in t){var e=\"classList\",n=\"prototype\",o=t.Element[n],r=Object,i=String[n].trim||function(){return this.replace(/^\\s+|\\s+$/g,\"\")},a=Array[n].indexOf||function(t){for(var e=0,n=this.length;e<n;e++)if(e in this&&this[e]===t)return e;return-1},s=function(t,e){this.name=t,this.code=DOMException[t],this.message=e},u=function(t,e){if(\"\"===e)throw new s(\"SYNTAX_ERR\",\"The token must not be empty.\");if(/\\s/.test(e))throw new s(\"INVALID_CHARACTER_ERR\",\"The token must not contain space characters.\");return a.call(t,e)},c=function(t){for(var e=i.call(t.getAttribute(\"class\")||\"\"),n=e?e.split(/\\s+/):[],o=0,r=n.length;o<r;o++)this.push(n[o]);this._updateClassName=function(){t.setAttribute(\"class\",this.toString())}},l=c[n]=[],f=function(){return new c(this)};if(s[n]=Error[n],l.item=function(t){return this[t]||null},l.contains=function(t){return~u(this,t+\"\")},l.add=function(){var t,e=arguments,n=0,o=e.length,r=!1;do{~u(this,t=e[n]+\"\")||(this.push(t),r=!0)}while(++n<o);r&&this._updateClassName()},l.remove=function(){var t,e,n=arguments,o=0,r=n.length,i=!1;do{for(e=u(this,t=n[o]+\"\");~e;)this.splice(e,1),i=!0,e=u(this,t)}while(++o<r);i&&this._updateClassName()},l.toggle=function(t,e){var n=this.contains(t),o=n?!0!==e&&\"remove\":!1!==e&&\"add\";return o&&this[o](t),!0===e||!1===e?e:!n},l.replace=function(t,e){var n=u(t+\"\");~n&&(this.splice(n,1,e),this._updateClassName())},l.toString=function(){return this.join(\" \")},r.defineProperty){var d={get:f,enumerable:!0,configurable:!0};try{r.defineProperty(o,e,d)}catch(t){void 0!==t.number&&-2146823252!==t.number||(d.enumerable=!1,r.defineProperty(o,e,d))}}else r[n].__defineGetter__&&o.__defineGetter__(e,f)}}(self),function(){var t=document.createElement(\"_\");if(t.classList.add(\"c1\",\"c2\"),!t.classList.contains(\"c2\")){var e=function(t){var e=DOMTokenList.prototype[t];DOMTokenList.prototype[t]=function(t){var n,o=arguments.length;for(n=0;n<o;n++)t=arguments[n],e.call(this,t)}};e(\"add\"),e(\"remove\")}if(t.classList.toggle(\"c3\",!1),t.classList.contains(\"c3\")){var n=DOMTokenList.prototype.toggle;DOMTokenList.prototype.toggle=function(t,e){return 1 in arguments&&!this.contains(t)==!e?e:n.call(this,t)}}\"replace\"in document.createElement(\"_\").classList||(DOMTokenList.prototype.replace=function(t,e){var n=this.toString().split(\" \"),o=n.indexOf(t+\"\");~o&&(n=n.slice(o),this.remove.apply(this,n),this.add(e),this.add.apply(this,n.slice(1)))}),t=null}());n(7327),n(2222),n(7941),n(4603),n(3728),n(2707),n(6699),n(2023),n(4747),n(9601),n(1249),n(1038),n(8783),n(6649),n(6078),n(2526),n(1817),n(9653),n(5003),n(9337),n(2165),n(6992),n(3948),n(3161),n(4723),n(5827),n(6210);function t(t){return function(t){if(Array.isArray(t))return r(t)}(t)||function(t){if(\"undefined\"!=typeof Symbol&&null!=t[Symbol.iterator]||null!=t[\"@@iterator\"])return Array.from(t)}(t)||e(t)||function(){throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()}function e(t,e){if(t){if(\"string\"==typeof t)return r(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);return\"Object\"===n&&t.constructor&&(n=t.constructor.name),\"Map\"===n||\"Set\"===n?Array.from(t):\"Arguments\"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?r(t,e):void 0}}function r(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,o=new Array(e);n<e;n++)o[n]=t[n];return o}function i(t){return i=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t},i(t)}function a(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,\"value\"in o&&(o.writable=!0),Object.defineProperty(t,u(o.key),o)}}function s(t,e,n){return(e=u(e))in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function u(t){var e=function(t,e){if(\"object\"!==i(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var o=n.call(t,e||\"default\");if(\"object\"!==i(o))return o;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return(\"string\"===e?String:Number)(t)}(t,\"string\");return\"symbol\"===i(e)?e:String(e)}var c=function(){function n(t){var e=t.getOptions,o=t.getCaretPosition,r=t.getCaretPositionEnd,i=t.dispatch;!function(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}(this,n),s(this,\"getOptions\",void 0),s(this,\"getCaretPosition\",void 0),s(this,\"getCaretPositionEnd\",void 0),s(this,\"dispatch\",void 0),s(this,\"maxLengthReached\",void 0),s(this,\"isStandardButton\",(function(t){return t&&!(\"{\"===t[0]&&\"}\"===t[t.length-1])})),this.getOptions=e,this.getCaretPosition=o,this.getCaretPositionEnd=r,this.dispatch=i,n.bindMethods(n,this)}var o,r,u;return o=n,r=[{key:\"getButtonType\",value:function(t){return t.includes(\"{\")&&t.includes(\"}\")&&\"{//}\"!==t?\"functionBtn\":\"standardBtn\"}},{key:\"getButtonClass\",value:function(t){var e=this.getButtonType(t),n=t.replace(\"{\",\"\").replace(\"}\",\"\"),o=\"\";return\"standardBtn\"!==e&&(o=\" hg-button-\".concat(n)),\"hg-\".concat(e).concat(o)}},{key:\"getDefaultDiplay\",value:function(){return{\"{bksp}\":\"backspace\",\"{backspace}\":\"backspace\",\"{enter}\":\"< enter\",\"{shift}\":\"shift\",\"{shiftleft}\":\"shift\",\"{shiftright}\":\"shift\",\"{alt}\":\"alt\",\"{s}\":\"shift\",\"{tab}\":\"tab\",\"{lock}\":\"caps\",\"{capslock}\":\"caps\",\"{accept}\":\"Submit\",\"{space}\":\" \",\"{//}\":\" \",\"{esc}\":\"esc\",\"{escape}\":\"esc\",\"{f1}\":\"f1\",\"{f2}\":\"f2\",\"{f3}\":\"f3\",\"{f4}\":\"f4\",\"{f5}\":\"f5\",\"{f6}\":\"f6\",\"{f7}\":\"f7\",\"{f8}\":\"f8\",\"{f9}\":\"f9\",\"{f10}\":\"f10\",\"{f11}\":\"f11\",\"{f12}\":\"f12\",\"{numpaddivide}\":\"/\",\"{numlock}\":\"lock\",\"{arrowup}\":\"↑\",\"{arrowleft}\":\"←\",\"{arrowdown}\":\"↓\",\"{arrowright}\":\"→\",\"{prtscr}\":\"print\",\"{scrolllock}\":\"scroll\",\"{pause}\":\"pause\",\"{insert}\":\"ins\",\"{home}\":\"home\",\"{pageup}\":\"up\",\"{delete}\":\"del\",\"{forwarddelete}\":\"del\",\"{end}\":\"end\",\"{pagedown}\":\"down\",\"{numpadmultiply}\":\"*\",\"{numpadsubtract}\":\"-\",\"{numpadadd}\":\"+\",\"{numpadenter}\":\"enter\",\"{period}\":\".\",\"{numpaddecimal}\":\".\",\"{numpad0}\":\"0\",\"{numpad1}\":\"1\",\"{numpad2}\":\"2\",\"{numpad3}\":\"3\",\"{numpad4}\":\"4\",\"{numpad5}\":\"5\",\"{numpad6}\":\"6\",\"{numpad7}\":\"7\",\"{numpad8}\":\"8\",\"{numpad9}\":\"9\"}}},{key:\"getButtonDisplayName\",value:function(t,e){return(e=arguments.length>2&&void 0!==arguments[2]&&arguments[2]?Object.assign({},this.getDefaultDiplay(),e):e||this.getDefaultDiplay())[t]||t}},{key:\"getUpdatedInput\",value:function(t,e,n){var o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:n,r=arguments.length>4&&void 0!==arguments[4]&&arguments[4],i=this.getOptions(),a=[n,o,r],s=e;return(\"{bksp}\"===t||\"{backspace}\"===t)&&s.length>0?s=this.removeAt.apply(this,[s].concat(a)):(\"{delete}\"===t||\"{forwarddelete}\"===t)&&s.length>0?s=this.removeForwardsAt.apply(this,[s].concat(a)):\"{space}\"===t?s=this.addStringAt.apply(this,[s,\" \"].concat(a)):\"{tab}\"!==t||\"boolean\"==typeof i.tabCharOnTab&&!1===i.tabCharOnTab?\"{enter}\"!==t&&\"{numpadenter}\"!==t||!i.newLineOnEnter?t.includes(\"numpad\")&&Number.isInteger(Number(t[t.length-2]))?s=this.addStringAt.apply(this,[s,t[t.length-2]].concat(a)):\"{numpaddivide}\"===t?s=this.addStringAt.apply(this,[s,\"/\"].concat(a)):\"{numpadmultiply}\"===t?s=this.addStringAt.apply(this,[s,\"*\"].concat(a)):\"{numpadsubtract}\"===t?s=this.addStringAt.apply(this,[s,\"-\"].concat(a)):\"{numpadadd}\"===t?s=this.addStringAt.apply(this,[s,\"+\"].concat(a)):\"{numpaddecimal}\"===t?s=this.addStringAt.apply(this,[s,\".\"].concat(a)):\"{\"===t||\"}\"===t?s=this.addStringAt.apply(this,[s,t].concat(a)):t.includes(\"{\")||t.includes(\"}\")||(s=this.addStringAt.apply(this,[s,t].concat(a))):s=this.addStringAt.apply(this,[s,\"\\n\"].concat(a)):s=this.addStringAt.apply(this,[s,\"\\t\"].concat(a)),i.debug&&console.log(\"Input will be: \"+s),s}},{key:\"updateCaretPos\",value:function(t){var e=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=this.updateCaretPosAction(t,e);this.dispatch((function(t){t.setCaretPosition(n)}))}},{key:\"updateCaretPosAction\",value:function(t){var e=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=this.getOptions(),o=this.getCaretPosition();return null!=o&&(e?o>0&&(o-=t):o+=t),n.debug&&console.log(\"Caret at:\",o),o}},{key:\"addStringAt\",value:function(t,e){var n,o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:t.length,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:t.length,i=arguments.length>4&&void 0!==arguments[4]&&arguments[4];return o||0===o?(n=[t.slice(0,o),e,t.slice(r)].join(\"\"),this.isMaxLengthReached()||i&&this.updateCaretPos(e.length)):n=t+e,n}},{key:\"removeAt\",value:function(t){var e,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:t.length,o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:t.length,r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];if(0===n&&0===o)return t;if(n===o){var i=/([\\uD800-\\uDBFF][\\uDC00-\\uDFFF])/g;n&&n>=0?t.substring(n-2,n).match(i)?(e=t.substr(0,n-2)+t.substr(n),r&&this.updateCaretPos(2,!0)):(e=t.substr(0,n-1)+t.substr(n),r&&this.updateCaretPos(1,!0)):t.slice(-2).match(i)?(e=t.slice(0,-2),r&&this.updateCaretPos(2,!0)):(e=t.slice(0,-1),r&&this.updateCaretPos(1,!0))}else e=t.slice(0,n)+t.slice(o),r&&this.dispatch((function(t){t.setCaretPosition(n)}));return e}},{key:\"removeForwardsAt\",value:function(t){var e,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:t.length,o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:t.length,r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];return null!=t&&t.length&&null!==n?(n===o?e=t.substring(n,n+2).match(/([\\uD800-\\uDBFF][\\uDC00-\\uDFFF])/g)?t.substr(0,n)+t.substr(n+2):t.substr(0,n)+t.substr(n+1):(e=t.slice(0,n)+t.slice(o),r&&this.dispatch((function(t){t.setCaretPosition(n)}))),e):t}},{key:\"handleMaxLength\",value:function(t,e){var n=this.getOptions(),o=n.maxLength,r=t[n.inputName||\"default\"],a=e.length-1>=o;if(e.length<=r.length)return!1;if(Number.isInteger(o))return n.debug&&console.log(\"maxLength (num) reached:\",a),a?(this.maxLengthReached=!0,!0):(this.maxLengthReached=!1,!1);if(\"object\"===i(o)){var s=e.length-1>=o[n.inputName||\"default\"];return n.debug&&console.log(\"maxLength (obj) reached:\",s),s?(this.maxLengthReached=!0,!0):(this.maxLengthReached=!1,!1)}}},{key:\"isMaxLengthReached\",value:function(){return Boolean(this.maxLengthReached)}},{key:\"isTouchDevice\",value:function(){return\"ontouchstart\"in window||navigator.maxTouchPoints}},{key:\"pointerEventsSupported\",value:function(){return!!window.PointerEvent}},{key:\"camelCase\",value:function(t){return t?t.toLowerCase().trim().split(/[.\\-_\\s]/g).reduce((function(t,e){return e.length?t+e[0].toUpperCase()+e.slice(1):t})):\"\"}},{key:\"chunkArray\",value:function(e,n){return t(Array(Math.ceil(e.length/n))).map((function(t,o){return e.slice(n*o,n+n*o)}))}},{key:\"escapeRegex\",value:function(t){return t.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g,\"\\\\$&\")}},{key:\"getRtlOffset\",value:function(t,e){var n=t,o=e.indexOf(\"‫\");return o<t&&-1!=o&&n--,e.indexOf(\"‬\")<t&&-1!=o&&n--,n<0?0:n}}],u=[{key:\"bindMethods\",value:function(t,n){var o,r=function(t,n){var o=\"undefined\"!=typeof Symbol&&t[Symbol.iterator]||t[\"@@iterator\"];if(!o){if(Array.isArray(t)||(o=e(t))||n&&t&&\"number\"==typeof t.length){o&&(t=o);var r=0,i=function(){};return{s:i,n:function(){return r>=t.length?{done:!0}:{done:!1,value:t[r++]}},e:function(t){throw t},f:i}}throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}var a,s=!0,u=!1;return{s:function(){o=o.call(t)},n:function(){var t=o.next();return s=t.done,t},e:function(t){u=!0,a=t},f:function(){try{s||null==o.return||o.return()}finally{if(u)throw a}}}}(Object.getOwnPropertyNames(t.prototype));try{for(r.s();!(o=r.n()).done;){var i=o.value;\"constructor\"===i||\"bindMethods\"===i||(n[i]=n[i].bind(n))}}catch(t){r.e(t)}finally{r.f()}}}],r&&a(o.prototype,r),u&&a(o,u),Object.defineProperty(o,\"prototype\",{writable:!1}),n}();s(c,\"noop\",(function(){}));var l=c;function f(t){return f=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t},f(t)}function d(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,\"value\"in o&&(o.writable=!0),Object.defineProperty(t,h(o.key),o)}}function p(t,e,n){return(e=h(e))in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function h(t){var e=function(t,e){if(\"object\"!==f(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var o=n.call(t,e||\"default\");if(\"object\"!==f(o))return o;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return(\"string\"===e?String:Number)(t)}(t,\"string\");return\"symbol\"===f(e)?e:String(e)}var v=function(){function t(e){var n=this,o=e.dispatch,r=e.getOptions;!function(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}(this,t),p(this,\"getOptions\",void 0),p(this,\"dispatch\",void 0),p(this,\"isMofifierKey\",(function(t){return t.altKey||t.ctrlKey||t.shiftKey||[\"Tab\",\"CapsLock\",\"Esc\",\"ArrowUp\",\"ArrowDown\",\"ArrowLeft\",\"ArrowRight\"].includes(t.code||t.key||n.keyCodeToKey(null==t?void 0:t.keyCode))})),this.dispatch=o,this.getOptions=r,l.bindMethods(t,this)}var e,n,o;return e=t,(n=[{key:\"handleHighlightKeyDown\",value:function(t){var e=this.getOptions();e.physicalKeyboardHighlightPreventDefault&&this.isMofifierKey(t)&&(t.preventDefault(),t.stopImmediatePropagation());var n=this.getSimpleKeyboardLayoutKey(t);this.dispatch((function(o){var r,i,a=o.getButtonElement(n),s=o.getButtonElement(\"{\".concat(n,\"}\"));if(a)r=a,i=n;else{if(!s)return;r=s,i=\"{\".concat(n,\"}\")}var u,c=function(t){t.style.background=e.physicalKeyboardHighlightBgColor||\"#dadce4\",t.style.color=e.physicalKeyboardHighlightTextColor||\"black\"};if(r)if(Array.isArray(r)){if(r.forEach((function(t){return c(t)})),e.physicalKeyboardHighlightPress)if(e.physicalKeyboardHighlightPressUsePointerEvents)null===(u=r[0])||void 0===u||u.onpointerdown();else if(e.physicalKeyboardHighlightPressUseClick){var l;null===(l=r[0])||void 0===l||l.click()}else o.handleButtonClicked(i,t)}else c(r),e.physicalKeyboardHighlightPress&&(e.physicalKeyboardHighlightPressUsePointerEvents?r.onpointerdown():e.physicalKeyboardHighlightPressUseClick?r.click():o.handleButtonClicked(i,t))}))}},{key:\"handleHighlightKeyUp\",value:function(t){var e=this.getOptions();e.physicalKeyboardHighlightPreventDefault&&this.isMofifierKey(t)&&(t.preventDefault(),t.stopImmediatePropagation());var n=this.getSimpleKeyboardLayoutKey(t);this.dispatch((function(t){var o,r=t.getButtonElement(n)||t.getButtonElement(\"{\".concat(n,\"}\")),i=function(t){t.removeAttribute&&t.removeAttribute(\"style\")};r&&(Array.isArray(r)?(r.forEach((function(t){return i(t)})),e.physicalKeyboardHighlightPressUsePointerEvents&&(null===(o=r[0])||void 0===o||o.onpointerup())):(i(r),e.physicalKeyboardHighlightPressUsePointerEvents&&r.onpointerup()))}))}},{key:\"getSimpleKeyboardLayoutKey\",value:function(t){var e,n=\"\",o=t.code||t.key||this.keyCodeToKey(null==t?void 0:t.keyCode);return(n=null!=o&&o.includes(\"Numpad\")||null!=o&&o.includes(\"Shift\")||null!=o&&o.includes(\"Space\")||null!=o&&o.includes(\"Backspace\")||null!=o&&o.includes(\"Control\")||null!=o&&o.includes(\"Alt\")||null!=o&&o.includes(\"Meta\")?t.code||\"\":t.key||this.keyCodeToKey(null==t?void 0:t.keyCode)||\"\").length>1?null===(e=n)||void 0===e?void 0:e.toLowerCase():n}},{key:\"keyCodeToKey\",value:function(t){return{8:\"Backspace\",9:\"Tab\",13:\"Enter\",16:\"Shift\",17:\"Ctrl\",18:\"Alt\",19:\"Pause\",20:\"CapsLock\",27:\"Esc\",32:\"Space\",33:\"PageUp\",34:\"PageDown\",35:\"End\",36:\"Home\",37:\"ArrowLeft\",38:\"ArrowUp\",39:\"ArrowRight\",40:\"ArrowDown\",45:\"Insert\",46:\"Delete\",48:\"0\",49:\"1\",50:\"2\",51:\"3\",52:\"4\",53:\"5\",54:\"6\",55:\"7\",56:\"8\",57:\"9\",65:\"A\",66:\"B\",67:\"C\",68:\"D\",69:\"E\",70:\"F\",71:\"G\",72:\"H\",73:\"I\",74:\"J\",75:\"K\",76:\"L\",77:\"M\",78:\"N\",79:\"O\",80:\"P\",81:\"Q\",82:\"R\",83:\"S\",84:\"T\",85:\"U\",86:\"V\",87:\"W\",88:\"X\",89:\"Y\",90:\"Z\",91:\"Meta\",96:\"Numpad0\",97:\"Numpad1\",98:\"Numpad2\",99:\"Numpad3\",100:\"Numpad4\",101:\"Numpad5\",102:\"Numpad6\",103:\"Numpad7\",104:\"Numpad8\",105:\"Numpad9\",106:\"NumpadMultiply\",107:\"NumpadAdd\",109:\"NumpadSubtract\",110:\"NumpadDecimal\",111:\"NumpadDivide\",112:\"F1\",113:\"F2\",114:\"F3\",115:\"F4\",116:\"F5\",117:\"F6\",118:\"F7\",119:\"F8\",120:\"F9\",121:\"F10\",122:\"F11\",123:\"F12\",144:\"NumLock\",145:\"ScrollLock\",186:\";\",187:\"=\",188:\",\",189:\"-\",190:\".\",191:\"/\",192:\"`\",219:\"[\",220:\"\\\\\",221:\"]\",222:\"'\"}[t]||\"\"}}])&&d(e.prototype,n),o&&d(e,o),Object.defineProperty(e,\"prototype\",{writable:!1}),t}();function y(t){return y=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t},y(t)}function g(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,\"value\"in o&&(o.writable=!0),Object.defineProperty(t,b(o.key),o)}}function m(t,e,n){return(e=b(e))in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function b(t){var e=function(t,e){if(\"object\"!==y(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var o=n.call(t,e||\"default\");if(\"object\"!==y(o))return o;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return(\"string\"===e?String:Number)(t)}(t,\"string\");return\"symbol\"===y(e)?e:String(e)}var x=function(){function t(e){var n=e.utilities,o=e.options;!function(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}(this,t),m(this,\"utilities\",void 0),m(this,\"options\",void 0),m(this,\"candidateBoxElement\",void 0),m(this,\"pageIndex\",0),m(this,\"pageSize\",void 0),this.utilities=n,this.options=o,l.bindMethods(t,this),this.pageSize=this.utilities.getOptions().layoutCandidatesPageSize||5}var e,n,o;return e=t,n=[{key:\"destroy\",value:function(){this.candidateBoxElement&&(this.candidateBoxElement.remove(),this.pageIndex=0)}},{key:\"show\",value:function(t){var e=this,n=t.candidateValue,o=t.targetElement,r=t.onSelect;if(n&&n.length){var i=this.utilities.chunkArray(n.split(\" \"),this.pageSize);this.renderPage({candidateListPages:i,targetElement:o,pageIndex:this.pageIndex,nbPages:i.length,onItemSelected:function(t,n){r(t,n),e.destroy()}})}}},{key:\"renderPage\",value:function(t){var e,n=this,o=t.candidateListPages,r=t.targetElement,i=t.pageIndex,a=t.nbPages,s=t.onItemSelected;null===(e=this.candidateBoxElement)||void 0===e||e.remove(),this.candidateBoxElement=document.createElement(\"div\"),this.candidateBoxElement.className=\"hg-candidate-box\";var u=document.createElement(\"ul\");u.className=\"hg-candidate-box-list\",o[i].forEach((function(t){var e,o=document.createElement(\"li\"),r=function(){var t=new(n.options.useTouchEvents?TouchEvent:MouseEvent)(\"click\");return Object.defineProperty(t,\"target\",{value:o}),t};o.className=\"hg-candidate-box-list-item\",o.innerHTML=(null===(e=n.options.display)||void 0===e?void 0:e[t])||t,n.options.useTouchEvents?o.ontouchstart=function(e){return s(t,e||r())}:o.onclick=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:r();return s(t,e)},u.appendChild(o)}));var c=i>0,l=document.createElement(\"div\");l.classList.add(\"hg-candidate-box-prev\"),c&&l.classList.add(\"hg-candidate-box-btn-active\");var f=function(){c&&n.renderPage({candidateListPages:o,targetElement:r,pageIndex:i-1,nbPages:a,onItemSelected:s})};this.options.useTouchEvents?l.ontouchstart=f:l.onclick=f,this.candidateBoxElement.appendChild(l),this.candidateBoxElement.appendChild(u);var d=i<a-1,p=document.createElement(\"div\");p.classList.add(\"hg-candidate-box-next\"),d&&p.classList.add(\"hg-candidate-box-btn-active\");var h=function(){d&&n.renderPage({candidateListPages:o,targetElement:r,pageIndex:i+1,nbPages:a,onItemSelected:s})};this.options.useTouchEvents?p.ontouchstart=h:p.onclick=h,this.candidateBoxElement.appendChild(p),r.prepend(this.candidateBoxElement)}}],n&&g(e.prototype,n),o&&g(e,o),Object.defineProperty(e,\"prototype\",{writable:!1}),t}(),w=x;function E(t){return function(t){if(Array.isArray(t))return S(t)}(t)||function(t){if(\"undefined\"!=typeof Symbol&&null!=t[Symbol.iterator]||null!=t[\"@@iterator\"])return Array.from(t)}(t)||function(t,e){if(!t)return;if(\"string\"==typeof t)return S(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);\"Object\"===n&&t.constructor&&(n=t.constructor.name);if(\"Map\"===n||\"Set\"===n)return Array.from(t);if(\"Arguments\"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return S(t,e)}(t)||function(){throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()}function S(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,o=new Array(e);n<e;n++)o[n]=t[n];return o}function O(t){return O=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t},O(t)}function k(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);e&&(o=o.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,o)}return n}function P(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,\"value\"in o&&(o.writable=!0),Object.defineProperty(t,C(o.key),o)}}function I(t,e,n){return(e=C(e))in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function C(t){var e=function(t,e){if(\"object\"!==O(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var o=n.call(t,e||\"default\");if(\"object\"!==O(o))return o;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return(\"string\"===e?String:Number)(t)}(t,\"string\");return\"symbol\"===O(e)?e:String(e)}var A=function(){function t(e,n){var o=this;if(function(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}(this,t),I(this,\"input\",void 0),I(this,\"options\",void 0),I(this,\"utilities\",void 0),I(this,\"caretPosition\",void 0),I(this,\"caretPositionEnd\",void 0),I(this,\"keyboardDOM\",void 0),I(this,\"keyboardPluginClasses\",void 0),I(this,\"keyboardDOMClass\",void 0),I(this,\"buttonElements\",void 0),I(this,\"currentInstanceName\",void 0),I(this,\"allKeyboardInstances\",void 0),I(this,\"keyboardInstanceNames\",void 0),I(this,\"isFirstKeyboardInstance\",void 0),I(this,\"physicalKeyboard\",void 0),I(this,\"modules\",void 0),I(this,\"activeButtonClass\",void 0),I(this,\"holdInteractionTimeout\",void 0),I(this,\"holdTimeout\",void 0),I(this,\"isMouseHold\",void 0),I(this,\"initialized\",void 0),I(this,\"candidateBox\",void 0),I(this,\"keyboardRowsDOM\",void 0),I(this,\"defaultName\",\"default\"),I(this,\"activeInputElement\",null),I(this,\"handleParams\",(function(t,e){var n,o,r;if(\"string\"==typeof t)n=t.split(\".\").join(\"\"),o=document.querySelector(\".\".concat(n)),r=e;else if(t instanceof HTMLDivElement){if(!t.className)throw console.warn(\"Any DOM element passed as parameter must have a class.\"),new Error(\"KEYBOARD_DOM_CLASS_ERROR\");n=t.className.split(\" \")[0],o=t,r=e}else n=\"simple-keyboard\",o=document.querySelector(\".\".concat(n)),r=t;return{keyboardDOMClass:n,keyboardDOM:o,options:r}})),I(this,\"getOptions\",(function(){return o.options})),I(this,\"getCaretPosition\",(function(){return o.caretPosition})),I(this,\"getCaretPositionEnd\",(function(){return o.caretPositionEnd})),I(this,\"registerModule\",(function(t,e){o.modules[t]||(o.modules[t]={}),e(o.modules[t])})),I(this,\"getKeyboardClassString\",(function(){for(var t=arguments.length,e=new Array(t),n=0;n<t;n++)e[n]=arguments[n];return[o.keyboardDOMClass].concat(e).filter((function(t){return!!t})).join(\" \")})),\"undefined\"!=typeof window){var r=this.handleParams(e,n),i=r.keyboardDOMClass,a=r.keyboardDOM,s=r.options,u=void 0===s?{}:s;this.utilities=new l({getOptions:this.getOptions,getCaretPosition:this.getCaretPosition,getCaretPositionEnd:this.getCaretPositionEnd,dispatch:this.dispatch}),this.caretPosition=null,this.caretPositionEnd=null,this.keyboardDOM=a,this.options=function(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?k(Object(n),!0).forEach((function(e){I(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):k(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}({layoutName:\"default\",theme:\"hg-theme-default\",inputName:\"default\",preventMouseDownDefault:!1,enableLayoutCandidates:!0,excludeFromLayout:{}},u),this.keyboardPluginClasses=\"\",l.bindMethods(t,this);var c=this.options.inputName,f=void 0===c?this.defaultName:c;if(this.input={},this.input[f]=\"\",this.keyboardDOMClass=i,this.buttonElements={},window.SimpleKeyboardInstances||(window.SimpleKeyboardInstances={}),this.currentInstanceName=this.utilities.camelCase(this.keyboardDOMClass),window.SimpleKeyboardInstances[this.currentInstanceName]=this,this.allKeyboardInstances=window.SimpleKeyboardInstances,this.keyboardInstanceNames=Object.keys(window.SimpleKeyboardInstances),this.isFirstKeyboardInstance=this.keyboardInstanceNames[0]===this.currentInstanceName,this.physicalKeyboard=new v({dispatch:this.dispatch,getOptions:this.getOptions}),this.candidateBox=this.options.enableLayoutCandidates?new w({utilities:this.utilities,options:this.options}):null,!this.keyboardDOM)throw console.warn('\".'.concat(i,'\" was not found in the DOM.')),new Error(\"KEYBOARD_DOM_ERROR\");this.render(),this.modules={},this.loadModules()}}var e,n,o;return e=t,n=[{key:\"setCaretPosition\",value:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:t;this.caretPosition=t,this.caretPositionEnd=e}},{key:\"getInputCandidates\",value:function(t){var e=this,n=this.options,o=n.layoutCandidates,r=n.layoutCandidatesCaseSensitiveMatch;if(!o||\"object\"!==O(o))return{};var i=Object.keys(o).filter((function(n){var o=t.substring(0,e.getCaretPositionEnd()||0)||t,i=new RegExp(\"\".concat(e.utilities.escapeRegex(n),\"$\"),r?\"g\":\"gi\");return!!E(o.matchAll(i)).length}));if(i.length>1){var a=i.sort((function(t,e){return e.length-t.length}))[0];return{candidateKey:a,candidateValue:o[a]}}if(i.length){var s=i[0];return{candidateKey:s,candidateValue:o[s]}}return{}}},{key:\"showCandidatesBox\",value:function(t,e,n){var o=this;this.candidateBox&&this.candidateBox.show({candidateValue:e,targetElement:n,onSelect:function(e,n){var r=o.options,i=r.layoutCandidatesCaseSensitiveMatch,a=r.disableCandidateNormalization,s=r.enableLayoutCandidatesKeyPress,u=e;a||(u=e.normalize(\"NFD\"));var c=o.getInput(o.options.inputName,!0),l=o.getCaretPositionEnd()||0,f=c.substring(0,l||0)||c,d=new RegExp(\"\".concat(o.utilities.escapeRegex(t),\"$\"),i?\"g\":\"gi\"),p=f.replace(d,u),h=c.replace(f,p),v=p.length-f.length,y=(l||c.length)+v;y<0&&(y=0),o.setInput(h,o.options.inputName,!0),o.setCaretPosition(y),s&&\"function\"==typeof o.options.onKeyPress&&o.options.onKeyPress(e,n),\"function\"==typeof o.options.onChange&&o.options.onChange(o.getInput(o.options.inputName,!0),n),\"function\"==typeof o.options.onChangeAll&&o.options.onChangeAll(o.getAllInputs(),n)}})}},{key:\"handleButtonClicked\",value:function(t,e){var n=this.options,o=n.inputName,r=void 0===o?this.defaultName:o,i=n.debug;if(\"{//}\"!==t){this.input[r]||(this.input[r]=\"\");var a=this.utilities.getUpdatedInput(t,this.input[r],this.caretPosition,this.caretPositionEnd);if(this.utilities.isStandardButton(t)&&this.activeInputElement&&this.input[r]&&this.input[r]===a&&0===this.caretPosition&&this.caretPositionEnd===a.length)return this.setInput(\"\",this.options.inputName,!0),this.setCaretPosition(0),this.activeInputElement.value=\"\",this.activeInputElement.setSelectionRange(0,0),void this.handleButtonClicked(t,e);if(\"function\"==typeof this.options.onKeyPress&&this.options.onKeyPress(t,e),this.input[r]!==a&&(!this.options.inputPattern||this.options.inputPattern&&this.inputPatternIsValid(a))){if(this.options.maxLength&&this.utilities.handleMaxLength(this.input,a))return;var s=this.utilities.getUpdatedInput(t,this.input[r],this.caretPosition,this.caretPositionEnd,!0);if(this.setInput(s,this.options.inputName,!0),i&&console.log(\"Input changed:\",this.getAllInputs()),this.options.debug&&console.log(\"Caret at: \",this.getCaretPosition(),this.getCaretPositionEnd(),\"(\".concat(this.keyboardDOMClass,\")\"),null==e?void 0:e.type),this.options.syncInstanceInputs&&this.syncInstanceInputs(),\"function\"==typeof this.options.onChange&&this.options.onChange(this.getInput(this.options.inputName,!0),e),\"function\"==typeof this.options.onChangeAll&&this.options.onChangeAll(this.getAllInputs(),e),null!=e&&e.target&&this.options.enableLayoutCandidates){var u,c=this.getInputCandidates(a),l=c.candidateKey,f=c.candidateValue;l&&f?this.showCandidatesBox(l,f,this.keyboardDOM):null===(u=this.candidateBox)||void 0===u||u.destroy()}}this.caretPositionEnd&&this.caretPosition!==this.caretPositionEnd&&(this.setCaretPosition(this.caretPositionEnd,this.caretPositionEnd),this.activeInputElement&&this.activeInputElement.setSelectionRange(this.caretPositionEnd,this.caretPositionEnd),this.options.debug&&console.log(\"Caret position aligned\",this.caretPosition)),i&&console.log(\"Key pressed:\",t)}}},{key:\"getMouseHold\",value:function(){return this.isMouseHold}},{key:\"setMouseHold\",value:function(t){this.options.syncInstanceInputs?this.dispatch((function(e){e.isMouseHold=t})):this.isMouseHold=t}},{key:\"handleButtonMouseDown\",value:function(t,e){var n=this;e&&(this.options.preventMouseDownDefault&&e.preventDefault(),this.options.stopMouseDownPropagation&&e.stopPropagation(),e.target.classList.add(this.activeButtonClass)),this.holdInteractionTimeout&&clearTimeout(this.holdInteractionTimeout),this.holdTimeout&&clearTimeout(this.holdTimeout),this.setMouseHold(!0),this.options.disableButtonHold||(this.holdTimeout=window.setTimeout((function(){(n.getMouseHold()&&(!t.includes(\"{\")&&!t.includes(\"}\")||\"{delete}\"===t||\"{backspace}\"===t||\"{bksp}\"===t||\"{space}\"===t||\"{tab}\"===t)||\"{arrowright}\"===t||\"{arrowleft}\"===t||\"{arrowup}\"===t||\"{arrowdown}\"===t)&&(n.options.debug&&console.log(\"Button held:\",t),n.handleButtonHold(t)),clearTimeout(n.holdTimeout)}),500))}},{key:\"handleButtonMouseUp\",value:function(t,e){var n=this;e&&(this.options.preventMouseUpDefault&&e.preventDefault&&e.preventDefault(),this.options.stopMouseUpPropagation&&e.stopPropagation&&e.stopPropagation(),!(e.target===this.keyboardDOM||e.target&&this.keyboardDOM.contains(e.target)||this.candidateBox&&this.candidateBox.candidateBoxElement&&(e.target===this.candidateBox.candidateBoxElement||e.target&&this.candidateBox.candidateBoxElement.contains(e.target)))&&this.candidateBox&&this.candidateBox.destroy()),this.recurseButtons((function(t){t.classList.remove(n.activeButtonClass)})),this.setMouseHold(!1),this.holdInteractionTimeout&&clearTimeout(this.holdInteractionTimeout),t&&\"function\"==typeof this.options.onKeyReleased&&this.options.onKeyReleased(t,e)}},{key:\"handleKeyboardContainerMouseDown\",value:function(t){this.options.preventMouseDownDefault&&t.preventDefault()}},{key:\"handleButtonHold\",value:function(t){var e=this;this.holdInteractionTimeout&&clearTimeout(this.holdInteractionTimeout),this.holdInteractionTimeout=window.setTimeout((function(){e.getMouseHold()?(e.handleButtonClicked(t),e.handleButtonHold(t)):clearTimeout(e.holdInteractionTimeout)}),100)}},{key:\"syncInstanceInputs\",value:function(){var t=this;this.dispatch((function(e){e.replaceInput(t.input),e.setCaretPosition(t.caretPosition,t.caretPositionEnd)}))}},{key:\"clearInput\",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.options.inputName||this.defaultName;this.input[t]=\"\",this.setCaretPosition(0),this.options.syncInstanceInputs&&this.syncInstanceInputs()}},{key:\"getInput\",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.options.inputName||this.defaultName,e=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return this.options.syncInstanceInputs&&!e&&this.syncInstanceInputs(),this.options.rtl?\"‫\"+this.input[t].replace(\"‫\",\"\").replace(\"‬\",\"\")+\"‬\":this.input[t]}},{key:\"getAllInputs\",value:function(){var t=this,e={};return Object.keys(this.input).forEach((function(n){e[n]=t.getInput(n,!0)})),e}},{key:\"setInput\",value:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.options.inputName||this.defaultName,n=arguments.length>2?arguments[2]:void 0;this.input[e]=t,!n&&this.options.syncInstanceInputs&&this.syncInstanceInputs()}},{key:\"replaceInput\",value:function(t){this.input=t}},{key:\"setOptions\",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},e=this.changedOptions(t);this.options=Object.assign(this.options,t),e.length&&(this.options.debug&&console.log(\"changedOptions\",e),this.onSetOptions(e),this.render())}},{key:\"changedOptions\",value:function(t){var e=this;return Object.keys(t).filter((function(n){return JSON.stringify(t[n])!==JSON.stringify(e.options[n])}))}},{key:\"onSetOptions\",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];t.includes(\"layoutName\")&&this.candidateBox&&this.candidateBox.destroy(),(t.includes(\"layoutCandidatesPageSize\")||t.includes(\"layoutCandidates\"))&&this.candidateBox&&(this.candidateBox.destroy(),this.candidateBox=new w({utilities:this.utilities,options:this.options}))}},{key:\"resetRows\",value:function(){this.keyboardRowsDOM&&this.keyboardRowsDOM.remove(),this.keyboardDOM.className=this.keyboardDOMClass,this.keyboardDOM.setAttribute(\"data-skInstance\",this.currentInstanceName),this.buttonElements={}}},{key:\"dispatch\",value:function(t){if(!window.SimpleKeyboardInstances)throw console.warn(\"SimpleKeyboardInstances is not defined. Dispatch cannot be called.\"),new Error(\"INSTANCES_VAR_ERROR\");return Object.keys(window.SimpleKeyboardInstances).forEach((function(e){t(window.SimpleKeyboardInstances[e],e)}))}},{key:\"addButtonTheme\",value:function(t,e){var n=this;e&&t&&(t.split(\" \").forEach((function(o){e.split(\" \").forEach((function(e){n.options.buttonTheme||(n.options.buttonTheme=[]);var r=!1;n.options.buttonTheme.map((function(t){if(null!=t&&t.class.split(\" \").includes(e)){r=!0;var n=t.buttons.split(\" \");n.includes(o)||(r=!0,n.push(o),t.buttons=n.join(\" \"))}return t})),r||n.options.buttonTheme.push({class:e,buttons:t})}))})),this.render())}},{key:\"removeButtonTheme\",value:function(t,e){var n=this;if(!t&&!e)return this.options.buttonTheme=[],void this.render();t&&Array.isArray(this.options.buttonTheme)&&this.options.buttonTheme.length&&(t.split(\" \").forEach((function(t){var o,r;null===(o=n.options)||void 0===o||null===(r=o.buttonTheme)||void 0===r||r.map((function(o,r){if(o&&e&&e.includes(o.class)||!e){var i,a,s=null===(i=o)||void 0===i?void 0:i.buttons.split(\" \").filter((function(e){return e!==t}));o&&null!=s&&s.length?o.buttons=s.join(\" \"):(null===(a=n.options.buttonTheme)||void 0===a||a.splice(r,1),o=null)}return o}))})),this.render())}},{key:\"getButtonElement\",value:function(t){var e,n=this.buttonElements[t];return n&&(e=n.length>1?n:n[0]),e}},{key:\"inputPatternIsValid\",value:function(t){var e,n=this.options.inputPattern;if((e=n instanceof RegExp?n:n[this.options.inputName||this.defaultName])&&t){var o=e.test(t);return this.options.debug&&console.log('inputPattern (\"'.concat(e,'\"): ').concat(o?\"passed\":\"did not pass!\")),o}return!0}},{key:\"setEventListeners\",value:function(){if(this.isFirstKeyboardInstance||!this.allKeyboardInstances){this.options.debug&&console.log(\"Caret handling started (\".concat(this.keyboardDOMClass,\")\"));var t=this.options.physicalKeyboardHighlightPreventDefault,e=void 0!==t&&t;document.addEventListener(\"keyup\",this.handleKeyUp,e),document.addEventListener(\"keydown\",this.handleKeyDown,e),document.addEventListener(\"mouseup\",this.handleMouseUp),document.addEventListener(\"touchend\",this.handleTouchEnd),document.addEventListener(\"selectionchange\",this.handleSelectionChange),document.addEventListener(\"select\",this.handleSelect)}}},{key:\"handleKeyUp\",value:function(t){this.caretEventHandler(t),this.options.physicalKeyboardHighlight&&this.physicalKeyboard.handleHighlightKeyUp(t)}},{key:\"handleKeyDown\",value:function(t){this.options.physicalKeyboardHighlight&&this.physicalKeyboard.handleHighlightKeyDown(t)}},{key:\"handleMouseUp\",value:function(t){this.caretEventHandler(t)}},{key:\"handleTouchEnd\",value:function(t){this.caretEventHandler(t)}},{key:\"handleSelect\",value:function(t){this.caretEventHandler(t)}},{key:\"handleSelectionChange\",value:function(t){navigator.userAgent.includes(\"Firefox\")||this.caretEventHandler(t)}},{key:\"caretEventHandler\",value:function(t){var e,n=this;t.target.tagName&&(e=t.target.tagName.toLowerCase()),this.dispatch((function(o){var r=t.target===o.keyboardDOM||t.target&&o.keyboardDOM.contains(t.target);if(n.options.syncInstanceInputs&&Array.isArray(t.path)&&(r=t.path.some((function(t){var e;return null==t||null===(e=t.hasAttribute)||void 0===e?void 0:e.call(t,\"data-skInstance\")}))),(\"textarea\"===e||\"input\"===e&&[\"text\",\"search\",\"url\",\"tel\",\"password\"].includes(t.target.type))&&!o.options.disableCaretPositioning){var i=t.target.selectionStart,a=t.target.selectionEnd;o.options.rtl&&(i=o.utilities.getRtlOffset(i,o.getInput()),a=o.utilities.getRtlOffset(a,o.getInput())),o.setCaretPosition(i,a),n.activeInputElement=t.target,o.options.debug&&console.log(\"Caret at: \",o.getCaretPosition(),o.getCaretPositionEnd(),t&&t.target.tagName.toLowerCase(),\"(\".concat(o.keyboardDOMClass,\")\"),null==t?void 0:t.type)}else!o.options.disableCaretPositioning&&r||\"selectionchange\"===(null==t?void 0:t.type)||(o.setCaretPosition(null),n.activeInputElement=null,o.options.debug&&console.log('Caret position reset due to \"'.concat(null==t?void 0:t.type,'\" event'),t))}))}},{key:\"recurseButtons\",value:function(t){var e=this;t&&Object.keys(this.buttonElements).forEach((function(n){return e.buttonElements[n].forEach(t)}))}},{key:\"destroy\",value:function(){this.options.debug&&console.log(\"Destroying simple-keyboard instance: \".concat(this.currentInstanceName));var t=this.options.physicalKeyboardHighlightPreventDefault,e=void 0!==t&&t;document.removeEventListener(\"keyup\",this.handleKeyUp,e),document.removeEventListener(\"keydown\",this.handleKeyDown,e),document.removeEventListener(\"mouseup\",this.handleMouseUp),document.removeEventListener(\"touchend\",this.handleTouchEnd),document.removeEventListener(\"select\",this.handleSelect),document.removeEventListener(\"selectionchange\",this.handleSelectionChange),document.onpointerup=null,document.ontouchend=null,document.ontouchcancel=null,document.onmouseup=null,this.recurseButtons((function(t){t&&(t.onpointerdown=null,t.onpointerup=null,t.onpointercancel=null,t.ontouchstart=null,t.ontouchend=null,t.ontouchcancel=null,t.onclick=null,t.onmousedown=null,t.onmouseup=null,t.remove(),t=null)})),this.keyboardDOM.onpointerdown=null,this.keyboardDOM.ontouchstart=null,this.keyboardDOM.onmousedown=null,this.resetRows(),this.candidateBox&&(this.candidateBox.destroy(),this.candidateBox=null),this.activeInputElement=null,this.keyboardDOM.removeAttribute(\"data-skInstance\"),this.keyboardDOM.innerHTML=\"\",window.SimpleKeyboardInstances[this.currentInstanceName]=null,delete window.SimpleKeyboardInstances[this.currentInstanceName],this.initialized=!1}},{key:\"getButtonThemeClasses\",value:function(t){var e=this.options.buttonTheme,n=[];return Array.isArray(e)&&e.forEach((function(e){if(e&&e.class&&\"string\"==typeof e.class&&e.buttons&&\"string\"==typeof e.buttons){var o=e.class.split(\" \");e.buttons.split(\" \").includes(t)&&(n=[].concat(E(n),E(o)))}else console.warn('Incorrect \"buttonTheme\". Please check the documentation.',e)})),n}},{key:\"setDOMButtonAttributes\",value:function(t,e){var n=this.options.buttonAttributes;Array.isArray(n)&&n.forEach((function(n){n.attribute&&\"string\"==typeof n.attribute&&n.value&&\"string\"==typeof n.value&&n.buttons&&\"string\"==typeof n.buttons?n.buttons.split(\" \").includes(t)&&e(n.attribute,n.value):console.warn('Incorrect \"buttonAttributes\". Please check the documentation.',n)}))}},{key:\"onTouchDeviceDetected\",value:function(){this.processAutoTouchEvents(),this.disableContextualWindow()}},{key:\"disableContextualWindow\",value:function(){window.oncontextmenu=function(t){if(t.target.classList.contains(\"hg-button\"))return t.preventDefault(),t.stopPropagation(),!1}}},{key:\"processAutoTouchEvents\",value:function(){this.options.autoUseTouchEvents&&(this.options.useTouchEvents=!0,this.options.debug&&console.log(\"autoUseTouchEvents: Touch device detected, useTouchEvents enabled.\"))}},{key:\"onInit\",value:function(){this.options.debug&&console.log(\"\".concat(this.keyboardDOMClass,\" Initialized\")),this.setEventListeners(),\"function\"==typeof this.options.onInit&&this.options.onInit(this)}},{key:\"beforeFirstRender\",value:function(){this.utilities.isTouchDevice()&&this.onTouchDeviceDetected(),\"function\"==typeof this.options.beforeFirstRender&&this.options.beforeFirstRender(this),this.isFirstKeyboardInstance&&this.utilities.pointerEventsSupported()&&!this.options.useTouchEvents&&!this.options.useMouseEvents&&this.options.debug&&console.log(\"Using PointerEvents as it is supported by this browser\"),this.options.useTouchEvents&&this.options.debug&&console.log(\"useTouchEvents has been enabled. Only touch events will be used.\")}},{key:\"beforeRender\",value:function(){\"function\"==typeof this.options.beforeRender&&this.options.beforeRender(this)}},{key:\"onRender\",value:function(){\"function\"==typeof this.options.onRender&&this.options.onRender(this)}},{key:\"onModulesLoaded\",value:function(){\"function\"==typeof this.options.onModulesLoaded&&this.options.onModulesLoaded(this)}},{key:\"loadModules\",value:function(){var t=this;Array.isArray(this.options.modules)&&(this.options.modules.forEach((function(e){var n=new e(t);n.init&&n.init(t)})),this.keyboardPluginClasses=\"modules-loaded\",this.render(),this.onModulesLoaded())}},{key:\"getModuleProp\",value:function(t,e){return!!this.modules[t]&&this.modules[t][e]}},{key:\"getModulesList\",value:function(){return Object.keys(this.modules)}},{key:\"parseRowDOMContainers\",value:function(t,e,n,o){var r=this,i=Array.from(t.children),a=0;return i.length&&n.forEach((function(n,s){var u=o[s];if(!(u&&u>n))return!1;var c=n-a,l=u-a,f=document.createElement(\"div\");f.className+=\"hg-button-container\";var d=\"\".concat(r.options.layoutName,\"-r\").concat(e,\"c\").concat(s);f.setAttribute(\"data-skUID\",d);var p=i.splice(c,l-c+1);a=l-c,p.forEach((function(t){return f.appendChild(t)})),i.splice(c,0,f),t.innerHTML=\"\",i.forEach((function(e){return t.appendChild(e)})),r.options.debug&&console.log(\"rowDOMContainer\",p,c,l,a+1)})),t}},{key:\"render\",value:function(){var t=this;this.resetRows(),this.initialized||this.beforeFirstRender(),this.beforeRender();var e=\"hg-layout-\".concat(this.options.layoutName),n=this.options.layout||{default:[\"` 1 2 3 4 5 6 7 8 9 0 - = {bksp}\",\"{tab} q w e r t y u i o p [ ] \\\\\",\"{lock} a s d f g h j k l ; ' {enter}\",\"{shift} z x c v b n m , . / {shift}\",\".com @ {space}\"],shift:[\"~ ! @ # $ % ^ & * ( ) _ + {bksp}\",\"{tab} Q W E R T Y U I O P { } |\",'{lock} A S D F G H J K L : \" {enter}',\"{shift} Z X C V B N M < > ? {shift}\",\".com @ {space}\"]},o=this.options.useTouchEvents||!1,r=o?\"hg-touch-events\":\"\",i=this.options.useMouseEvents||!1,a=this.options.disableRowButtonContainers;this.keyboardDOM.className=this.getKeyboardClassString(this.options.theme,e,this.keyboardPluginClasses,r),this.keyboardDOM.setAttribute(\"data-skInstance\",this.currentInstanceName),this.keyboardRowsDOM=document.createElement(\"div\"),this.keyboardRowsDOM.className=\"hg-rows\",n[this.options.layoutName||this.defaultName].forEach((function(e,n){var r=e.split(\" \");t.options.excludeFromLayout&&t.options.excludeFromLayout[t.options.layoutName||t.defaultName]&&(r=r.filter((function(e){return t.options.excludeFromLayout&&!t.options.excludeFromLayout[t.options.layoutName||t.defaultName].includes(e)})));var s=document.createElement(\"div\");s.className+=\"hg-row\";var u=[],c=[];r.forEach((function(e,r){var l,f=!a&&\"string\"==typeof e&&e.length>1&&0===e.indexOf(\"[\"),d=!a&&\"string\"==typeof e&&e.length>1&&e.indexOf(\"]\")===e.length-1;f&&(u.push(r),e=e.replace(/\\[/g,\"\")),d&&(c.push(r),e=e.replace(/\\]/g,\"\"));var p=t.utilities.getButtonClass(e),h=t.utilities.getButtonDisplayName(e,t.options.display,t.options.mergeDisplay),v=t.options.useButtonTag?\"button\":\"div\",y=document.createElement(v);y.className+=\"hg-button \".concat(p),(l=y.classList).add.apply(l,E(t.getButtonThemeClasses(e))),t.setDOMButtonAttributes(e,(function(t,e){y.setAttribute(t,e)})),t.activeButtonClass=\"hg-activeButton\",!t.utilities.pointerEventsSupported()||o||i?o?(y.ontouchstart=function(n){t.handleButtonClicked(e,n),t.handleButtonMouseDown(e,n)},y.ontouchend=function(n){t.handleButtonMouseUp(e,n)},y.ontouchcancel=function(n){t.handleButtonMouseUp(e,n)}):(y.onclick=function(n){t.setMouseHold(!1),\"function\"!=typeof t.options.onKeyReleased&&t.handleButtonClicked(e,n)},y.onmousedown=function(n){\"function\"!=typeof t.options.onKeyReleased||t.isMouseHold||t.handleButtonClicked(e,n),t.handleButtonMouseDown(e,n)},y.onmouseup=function(n){t.handleButtonMouseUp(e,n)}):(y.onpointerdown=function(n){t.handleButtonClicked(e,n),t.handleButtonMouseDown(e,n)},y.onpointerup=function(n){t.handleButtonMouseUp(e,n)},y.onpointercancel=function(n){t.handleButtonMouseUp(e,n)}),y.setAttribute(\"data-skBtn\",e);var g=\"\".concat(t.options.layoutName,\"-r\").concat(n,\"b\").concat(r);y.setAttribute(\"data-skBtnUID\",g);var m=document.createElement(\"span\");m.innerHTML=h,y.appendChild(m),t.buttonElements[e]||(t.buttonElements[e]=[]),t.buttonElements[e].push(y),s.appendChild(y)})),s=t.parseRowDOMContainers(s,n,u,c),t.keyboardRowsDOM.appendChild(s)})),this.keyboardDOM.appendChild(this.keyboardRowsDOM),this.onRender(),this.initialized||(this.initialized=!0,!this.utilities.pointerEventsSupported()||o||i?o?(document.ontouchend=function(e){return t.handleButtonMouseUp(void 0,e)},document.ontouchcancel=function(e){return t.handleButtonMouseUp(void 0,e)},this.keyboardDOM.ontouchstart=function(e){return t.handleKeyboardContainerMouseDown(e)}):o||(document.onmouseup=function(e){return t.handleButtonMouseUp(void 0,e)},this.keyboardDOM.onmousedown=function(e){return t.handleKeyboardContainerMouseDown(e)}):(document.onpointerup=function(e){return t.handleButtonMouseUp(void 0,e)},this.keyboardDOM.onpointerdown=function(e){return t.handleKeyboardContainerMouseDown(e)}),this.onInit())}}],n&&P(e.prototype,n),o&&P(e,o),Object.defineProperty(e,\"prototype\",{writable:!1}),t}(),M=A,T=A}(),o}()}));","var Coloris = function () {\n  /*!\r\n  * Copyright (c) 2021-2023 Momo Bassit.\r\n  * Licensed under the MIT License (MIT)\r\n  * https://github.com/mdbassit/Coloris\r\n  * Version: 0.19.0\r\n  * NPM: https://github.com/melloware/coloris-npm\r\n  */\n\n  return function (window, document, Math) {\n    var ctx = document.createElement('canvas').getContext('2d');\n    var currentColor = { r: 0, g: 0, b: 0, h: 0, s: 0, v: 0, a: 1 };\n    var container, picker, colorArea, colorAreaDims, colorMarker, colorPreview, colorValue, clearButton, closeButton,\n      hueSlider, hueMarker, alphaSlider, alphaMarker, currentEl, currentFormat, oldColor, keyboardNav;\n\n    // Default settings\n    var settings = {\n      el: '[data-coloris]',\n      parent: 'body',\n      theme: 'default',\n      themeMode: 'light',\n      rtl: false,\n      wrap: true,\n      margin: 2,\n      format: 'hex',\n      formatToggle: false,\n      swatches: [],\n      swatchesOnly: false,\n      alpha: true,\n      forceAlpha: false,\n      focusInput: true,\n      selectInput: false,\n      inline: false,\n      defaultColor: '#000000',\n      clearButton: false,\n      clearLabel: 'Clear',\n      closeButton: false,\n      closeLabel: 'Close',\n      onChange: function onChange() {return undefined;},\n      a11y: {\n        open: 'Open color picker',\n        close: 'Close color picker',\n        clear: 'Clear the selected color',\n        marker: 'Saturation: {s}. Brightness: {v}.',\n        hueSlider: 'Hue slider',\n        alphaSlider: 'Opacity slider',\n        input: 'Color value field',\n        format: 'Color format',\n        swatch: 'Color swatch',\n        instruction: 'Saturation and brightness selector. Use up, down, left and right arrow keys to select.'\n      }\n    };\n\n    // Virtual instances cache\n    var instances = {};\n    var currentInstanceId = '';\n    var defaultInstance = {};\n    var hasInstance = false;\n\n    /**\r\n     * Configure the color picker.\r\n     * @param {object} options Configuration options.\r\n     */\n    function configure(options) {\n      if (typeof options !== 'object') {\n        return;\n      }var _loop = function _loop()\n\n      {\n        switch (key) {\n          case 'el':\n            bindFields(options.el);\n            if (options.wrap !== false) {\n              wrapFields(options.el);\n            }\n            break;\n          case 'parent':\n            container = document.querySelector(options.parent);\n            if (container) {\n              container.appendChild(picker);\n              settings.parent = options.parent;\n\n              // document.body is special\n              if (container === document.body) {\n                container = null;\n              }\n            }\n            break;\n          case 'themeMode':\n            settings.themeMode = options.themeMode;\n            if (options.themeMode === 'auto' && window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) {\n              settings.themeMode = 'dark';\n            }\n          // The lack of a break statement is intentional\n          case 'theme':\n            if (options.theme) {\n              settings.theme = options.theme;\n            }\n\n            // Set the theme and color scheme\n            picker.className = \"clr-picker clr-\" + settings.theme + \" clr-\" + settings.themeMode;\n\n            // Update the color picker's position if inline mode is in use\n            if (settings.inline) {\n              updatePickerPosition();\n            }\n            break;\n          case 'rtl':\n            settings.rtl = !!options.rtl;\n            document.querySelectorAll('.clr-field').forEach(function (field) {return field.classList.toggle('clr-rtl', settings.rtl);});\n            break;\n          case 'margin':\n            options.margin *= 1;\n            settings.margin = !isNaN(options.margin) ? options.margin : settings.margin;\n            break;\n          case 'wrap':\n            if (options.el && options.wrap) {\n              wrapFields(options.el);\n            }\n            break;\n          case 'formatToggle':\n            settings.formatToggle = !!options.formatToggle;\n            getEl('clr-format').style.display = settings.formatToggle ? 'block' : 'none';\n            if (settings.formatToggle) {\n              settings.format = 'auto';\n            }\n            break;\n          case 'swatches':\n            if (Array.isArray(options.swatches)) {\n              var swatches = [];\n\n              options.swatches.forEach(function (swatch, i) {\n                swatches.push(\"<button type=\\\"button\\\" id=\\\"clr-swatch-\" + i + \"\\\" aria-labelledby=\\\"clr-swatch-label clr-swatch-\" + i + \"\\\" style=\\\"color: \" + swatch + \";\\\">\" + swatch + \"</button>\");\n              });\n\n              getEl('clr-swatches').innerHTML = swatches.length ? \"<div>\" + swatches.join('') + \"</div>\" : '';\n              settings.swatches = options.swatches.slice();\n            }\n            break;\n          case 'swatchesOnly':\n            settings.swatchesOnly = !!options.swatchesOnly;\n            picker.setAttribute('data-minimal', settings.swatchesOnly);\n            break;\n          case 'alpha':\n            settings.alpha = !!options.alpha;\n            picker.setAttribute('data-alpha', settings.alpha);\n            break;\n          case 'inline':\n            settings.inline = !!options.inline;\n            picker.setAttribute('data-inline', settings.inline);\n\n            if (settings.inline) {\n              var defaultColor = options.defaultColor || settings.defaultColor;\n\n              currentFormat = getColorFormatFromStr(defaultColor);\n              updatePickerPosition();\n              setColorFromStr(defaultColor);\n            }\n            break;\n          case 'clearButton':\n            // Backward compatibility\n            if (typeof options.clearButton === 'object') {\n              if (options.clearButton.label) {\n                settings.clearLabel = options.clearButton.label;\n                clearButton.innerHTML = settings.clearLabel;\n              }\n\n              options.clearButton = options.clearButton.show;\n            }\n\n            settings.clearButton = !!options.clearButton;\n            clearButton.style.display = settings.clearButton ? 'block' : 'none';\n            break;\n          case 'clearLabel':\n            settings.clearLabel = options.clearLabel;\n            clearButton.innerHTML = settings.clearLabel;\n            break;\n          case 'closeButton':\n            settings.closeButton = !!options.closeButton;\n\n            if (settings.closeButton) {\n              picker.insertBefore(closeButton, colorPreview);\n            } else {\n              colorPreview.appendChild(closeButton);\n            }\n\n            break;\n          case 'closeLabel':\n            settings.closeLabel = options.closeLabel;\n            closeButton.innerHTML = settings.closeLabel;\n            break;\n          case 'a11y':\n            var labels = options.a11y;\n            var update = false;\n\n            if (typeof labels === 'object') {\n              for (var label in labels) {\n                if (labels[label] && settings.a11y[label]) {\n                  settings.a11y[label] = labels[label];\n                  update = true;\n                }\n              }\n            }\n\n            if (update) {\n              var openLabel = getEl('clr-open-label');\n              var swatchLabel = getEl('clr-swatch-label');\n\n              openLabel.innerHTML = settings.a11y.open;\n              swatchLabel.innerHTML = settings.a11y.swatch;\n              closeButton.setAttribute('aria-label', settings.a11y.close);\n              clearButton.setAttribute('aria-label', settings.a11y.clear);\n              hueSlider.setAttribute('aria-label', settings.a11y.hueSlider);\n              alphaSlider.setAttribute('aria-label', settings.a11y.alphaSlider);\n              colorValue.setAttribute('aria-label', settings.a11y.input);\n              colorArea.setAttribute('aria-label', settings.a11y.instruction);\n            }\n            break;\n          default:\n            settings[key] = options[key];}\n\n      };for (var key in options) {_loop();}\n    }\n\n    /**\r\n     * Add or update a virtual instance.\r\n     * @param {String} selector The CSS selector of the elements to which the instance is attached.\r\n     * @param {Object} options Per-instance options to apply.\r\n     */\n    function setVirtualInstance(selector, options) {\n      if (typeof selector === 'string' && typeof options === 'object') {\n        instances[selector] = options;\n        hasInstance = true;\n      }\n    }\n\n    /**\r\n     * Remove a virtual instance.\r\n     * @param {String} selector The CSS selector of the elements to which the instance is attached.\r\n     */\n    function removeVirtualInstance(selector) {\n      delete instances[selector];\n\n      if (Object.keys(instances).length === 0) {\n        hasInstance = false;\n\n        if (selector === currentInstanceId) {\n          resetVirtualInstance();\n        }\n      }\n    }\n\n    /**\r\n     * Attach a virtual instance to an element if it matches a selector.\r\n     * @param {Object} element Target element that will receive a virtual instance if applicable.\r\n     */\n    function attachVirtualInstance(element) {\n      if (hasInstance) {\n        // These options can only be set globally, not per instance\n        var unsupportedOptions = ['el', 'wrap', 'rtl', 'inline', 'defaultColor', 'a11y'];var _loop2 = function _loop2()\n\n        {\n          var options = instances[selector];\n\n          // If the element matches an instance's CSS selector\n          if (element.matches(selector)) {\n            currentInstanceId = selector;\n            defaultInstance = {};\n\n            // Delete unsupported options\n            unsupportedOptions.forEach(function (option) {return delete options[option];});\n\n            // Back up the default options so we can restore them later\n            for (var option in options) {\n              defaultInstance[option] = Array.isArray(settings[option]) ? settings[option].slice() : settings[option];\n            }\n\n            // Set the instance's options\n            configure(options);return \"break\";\n\n          }\n        };for (var selector in instances) {var _ret = _loop2();if (_ret === \"break\") break;}\n      }\n    }\n\n    /**\r\n     * Revert any per-instance options that were previously applied.\r\n     */\n    function resetVirtualInstance() {\n      if (Object.keys(defaultInstance).length > 0) {\n        configure(defaultInstance);\n        currentInstanceId = '';\n        defaultInstance = {};\n      }\n    }\n\n    /**\r\n     * Bind the color picker to input fields that match the selector.\r\n     * @param {string} selector One or more selectors pointing to input fields.\r\n     */\n    function bindFields(selector) {\n      // Show the color picker on click on the input fields that match the selector\n      addListener(document, 'click', selector, function (event) {\n        // Skip if inline mode is in use\n        if (settings.inline) {\n          return;\n        }\n\n        // Apply any per-instance options first\n        attachVirtualInstance(event.target);\n\n        currentEl = event.target;\n        oldColor = currentEl.value;\n        currentFormat = getColorFormatFromStr(oldColor);\n        picker.classList.add('clr-open');\n\n        updatePickerPosition();\n        setColorFromStr(oldColor);\n\n        if (settings.focusInput || settings.selectInput) {\n          colorValue.focus({ preventScroll: true });\n        }\n\n        if (settings.selectInput) {\n          colorValue.select();\n        }\n\n        // Always focus the first element when using keyboard navigation\n        if (keyboardNav || settings.swatchesOnly) {\n          getFocusableElements().shift().focus();\n        }\n\n        // Trigger an \"open\" event\n        currentEl.dispatchEvent(new Event('open', { bubbles: true }));\n      });\n\n      // Update the color preview of the input fields that match the selector\n      addListener(document, 'input', selector, function (event) {\n        var parent = event.target.parentNode;\n\n        // Only update the preview if the field has been previously wrapped\n        if (parent.classList.contains('clr-field')) {\n          parent.style.color = event.target.value;\n        }\n      });\n    }\n\n    /**\r\n     * Update the color picker's position and the color gradient's offset\r\n     */\n    function updatePickerPosition() {\n      if (!picker || !currentEl && !settings.inline) return; //** DO NOT REMOVE: in case called before initialized\n      var parent = container;\n      var scrollY = window.scrollY;\n      var pickerWidth = picker.offsetWidth;\n      var pickerHeight = picker.offsetHeight;\n      var reposition = { left: false, top: false };\n      var parentStyle, parentMarginTop, parentBorderTop;\n      var offset = { x: 0, y: 0 };\n\n      if (parent) {\n        parentStyle = window.getComputedStyle(parent);\n        parentMarginTop = parseFloat(parentStyle.marginTop);\n        parentBorderTop = parseFloat(parentStyle.borderTopWidth);\n\n        offset = parent.getBoundingClientRect();\n        offset.y += parentBorderTop + scrollY;\n      }\n\n      if (!settings.inline) {\n        var coords = currentEl.getBoundingClientRect();\n        var left = coords.x;\n        var top = scrollY + coords.y + coords.height + settings.margin;\n\n        // If the color picker is inside a custom container\n        // set the position relative to it\n        if (parent) {\n          left -= offset.x;\n          top -= offset.y;\n\n          if (left + pickerWidth > parent.clientWidth) {\n            left += coords.width - pickerWidth;\n            reposition.left = true;\n          }\n\n          if (top + pickerHeight > parent.clientHeight - parentMarginTop) {\n            if (pickerHeight + settings.margin <= coords.top - (offset.y - scrollY)) {\n              top -= coords.height + pickerHeight + settings.margin * 2;\n              reposition.top = true;\n            }\n          }\n\n          top += parent.scrollTop;\n\n          // Otherwise set the position relative to the whole document\n        } else {\n          if (left + pickerWidth > document.documentElement.clientWidth) {\n            left += coords.width - pickerWidth;\n            reposition.left = true;\n          }\n\n          if (top + pickerHeight - scrollY > document.documentElement.clientHeight) {\n            if (pickerHeight + settings.margin <= coords.top) {\n              top = scrollY + coords.y - pickerHeight - settings.margin;\n              reposition.top = true;\n            }\n          }\n        }\n\n        picker.classList.toggle('clr-left', reposition.left);\n        picker.classList.toggle('clr-top', reposition.top);\n        picker.style.left = left + \"px\";\n        picker.style.top = top + \"px\";\n        offset.x += picker.offsetLeft;\n        offset.y += picker.offsetTop;\n      }\n\n      colorAreaDims = {\n        width: colorArea.offsetWidth,\n        height: colorArea.offsetHeight,\n        x: colorArea.offsetLeft + offset.x,\n        y: colorArea.offsetTop + offset.y\n      };\n    }\n\n    /**\r\n     * Wrap the linked input fields in a div that adds a color preview.\r\n     * @param {string} selector One or more selectors pointing to input fields.\r\n     */\n    function wrapFields(selector) {\n      document.querySelectorAll(selector).forEach(function (field) {\n        var parentNode = field.parentNode;\n\n        if (!parentNode.classList.contains('clr-field')) {\n          var wrapper = document.createElement('div');\n          var classes = 'clr-field';\n\n          if (settings.rtl || field.classList.contains('clr-rtl')) {\n            classes += ' clr-rtl';\n          }\n\n          wrapper.innerHTML = \"<button type=\\\"button\\\" aria-labelledby=\\\"clr-open-label\\\"></button>\";\n          parentNode.insertBefore(wrapper, field);\n          wrapper.setAttribute('class', classes);\n          wrapper.style.color = field.value;\n          wrapper.appendChild(field);\n        }\n      });\n    }\n\n    /**\r\n     * Close the color picker.\r\n     * @param {boolean} [revert] If true, revert the color to the original value.\r\n     */\n    function closePicker(revert) {\n      if (currentEl && !settings.inline) {\n        var prevEl = currentEl;\n\n        // Revert the color to the original value if needed\n        if (revert) {\n          // This will prevent the \"change\" event on the colorValue input to execute its handler\n          currentEl = null;\n\n          if (oldColor !== prevEl.value) {\n            prevEl.value = oldColor;\n\n            // Trigger an \"input\" event to force update the thumbnail next to the input field\n            prevEl.dispatchEvent(new Event('input', { bubbles: true }));\n          }\n        }\n\n        // Trigger a \"change\" event if needed\n        setTimeout(function () {// Add this to the end of the event loop\n          if (oldColor !== prevEl.value) {\n            prevEl.dispatchEvent(new Event('change', { bubbles: true }));\n          }\n        });\n\n        // Hide the picker dialog\n        picker.classList.remove('clr-open');\n\n        // Reset any previously set per-instance options\n        if (hasInstance) {\n          resetVirtualInstance();\n        }\n\n        // Trigger a \"close\" event\n        prevEl.dispatchEvent(new Event('close', { bubbles: true }));\n\n        if (settings.focusInput) {\n          prevEl.focus({ preventScroll: true });\n        }\n\n        // This essentially marks the picker as closed\n        currentEl = null;\n      }\n    }\n\n    /**\r\n     * Set the active color from a string.\r\n     * @param {string} str String representing a color.\r\n     */\n    function setColorFromStr(str) {\n      var rgba = strToRGBA(str);\n      var hsva = RGBAtoHSVA(rgba);\n\n      updateMarkerA11yLabel(hsva.s, hsva.v);\n      updateColor(rgba, hsva);\n\n      // Update the UI\n      hueSlider.value = hsva.h;\n      picker.style.color = \"hsl(\" + hsva.h + \", 100%, 50%)\";\n      hueMarker.style.left = hsva.h / 360 * 100 + \"%\";\n\n      colorMarker.style.left = colorAreaDims.width * hsva.s / 100 + \"px\";\n      colorMarker.style.top = colorAreaDims.height - colorAreaDims.height * hsva.v / 100 + \"px\";\n\n      alphaSlider.value = hsva.a * 100;\n      alphaMarker.style.left = hsva.a * 100 + \"%\";\n    }\n\n    /**\r\n     * Guess the color format from a string.\r\n     * @param {string} str String representing a color.\r\n     * @return {string} The color format.\r\n     */\n    function getColorFormatFromStr(str) {\n      var format = str.substring(0, 3).toLowerCase();\n\n      if (format === 'rgb' || format === 'hsl') {\n        return format;\n      }\n\n      return 'hex';\n    }\n\n    /**\r\n     * Copy the active color to the linked input field.\r\n     * @param {number} [color] Color value to override the active color.\r\n     */\n    function pickColor(color) {\n      color = color !== undefined ? color : colorValue.value;\n\n      if (currentEl) {\n        currentEl.value = color;\n        currentEl.dispatchEvent(new Event('input', { bubbles: true }));\n      }\n\n      if (settings.onChange) {\n        settings.onChange.call(window, color);\n      }\n\n      document.dispatchEvent(new CustomEvent('coloris:pick', { detail: { color: color } }));\n    }\n\n    /**\r\n     * Set the active color based on a specific point in the color gradient.\r\n     * @param {number} x Left position.\r\n     * @param {number} y Top position.\r\n     */\n    function setColorAtPosition(x, y) {\n      var hsva = {\n        h: hueSlider.value * 1,\n        s: x / colorAreaDims.width * 100,\n        v: 100 - y / colorAreaDims.height * 100,\n        a: alphaSlider.value / 100\n      };\n      var rgba = HSVAtoRGBA(hsva);\n\n      updateMarkerA11yLabel(hsva.s, hsva.v);\n      updateColor(rgba, hsva);\n      pickColor();\n    }\n\n    /**\r\n     * Update the color marker's accessibility label.\r\n     * @param {number} saturation\r\n     * @param {number} value\r\n     */\n    function updateMarkerA11yLabel(saturation, value) {\n      var label = settings.a11y.marker;\n\n      saturation = saturation.toFixed(1) * 1;\n      value = value.toFixed(1) * 1;\n      label = label.replace('{s}', saturation);\n      label = label.replace('{v}', value);\n      colorMarker.setAttribute('aria-label', label);\n    }\n\n    //\n    /**\r\n     * Get the pageX and pageY positions of the pointer.\r\n     * @param {object} event The MouseEvent or TouchEvent object.\r\n     * @return {object} The pageX and pageY positions.\r\n     */\n    function getPointerPosition(event) {\n      return {\n        pageX: event.changedTouches ? event.changedTouches[0].pageX : event.pageX,\n        pageY: event.changedTouches ? event.changedTouches[0].pageY : event.pageY\n      };\n    }\n\n    /**\r\n     * Move the color marker when dragged.\r\n     * @param {object} event The MouseEvent object.\r\n     */\n    function moveMarker(event) {\n      var pointer = getPointerPosition(event);\n      var x = pointer.pageX - colorAreaDims.x;\n      var y = pointer.pageY - colorAreaDims.y;\n\n      if (container) {\n        y += container.scrollTop;\n      }\n\n      setMarkerPosition(x, y);\n\n      // Prevent scrolling while dragging the marker\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    /**\r\n     * Move the color marker when the arrow keys are pressed.\r\n     * @param {number} offsetX The horizontal amount to move.\r\n     * @param {number} offsetY The vertical amount to move.\r\n     */\n    function moveMarkerOnKeydown(offsetX, offsetY) {\n      var x = colorMarker.style.left.replace('px', '') * 1 + offsetX;\n      var y = colorMarker.style.top.replace('px', '') * 1 + offsetY;\n\n      setMarkerPosition(x, y);\n    }\n\n    /**\r\n     * Set the color marker's position.\r\n     * @param {number} x Left position.\r\n     * @param {number} y Top position.\r\n     */\n    function setMarkerPosition(x, y) {\n      // Make sure the marker doesn't go out of bounds\n      x = x < 0 ? 0 : x > colorAreaDims.width ? colorAreaDims.width : x;\n      y = y < 0 ? 0 : y > colorAreaDims.height ? colorAreaDims.height : y;\n\n      // Set the position\n      colorMarker.style.left = x + \"px\";\n      colorMarker.style.top = y + \"px\";\n\n      // Update the color\n      setColorAtPosition(x, y);\n\n      // Make sure the marker is focused\n      colorMarker.focus();\n    }\n\n    /**\r\n     * Update the color picker's input field and preview thumb.\r\n     * @param {Object} rgba Red, green, blue and alpha values.\r\n     * @param {Object} [hsva] Hue, saturation, value and alpha values.\r\n     */\n    function updateColor(rgba, hsva) {if (rgba === void 0) {rgba = {};}if (hsva === void 0) {hsva = {};}\n      var format = settings.format;\n\n      for (var key in rgba) {\n        currentColor[key] = rgba[key];\n      }\n\n      for (var _key in hsva) {\n        currentColor[_key] = hsva[_key];\n      }\n\n      var hex = RGBAToHex(currentColor);\n      var opaqueHex = hex.substring(0, 7);\n\n      colorMarker.style.color = opaqueHex;\n      alphaMarker.parentNode.style.color = opaqueHex;\n      alphaMarker.style.color = hex;\n      colorPreview.style.color = hex;\n\n      // Force repaint the color and alpha gradients as a workaround for a Google Chrome bug\n      colorArea.style.display = 'none';\n      colorArea.offsetHeight;\n      colorArea.style.display = '';\n      alphaMarker.nextElementSibling.style.display = 'none';\n      alphaMarker.nextElementSibling.offsetHeight;\n      alphaMarker.nextElementSibling.style.display = '';\n\n      if (format === 'mixed') {\n        format = currentColor.a === 1 ? 'hex' : 'rgb';\n      } else if (format === 'auto') {\n        format = currentFormat;\n      }\n\n      switch (format) {\n        case 'hex':\n          colorValue.value = hex;\n          break;\n        case 'rgb':\n          colorValue.value = RGBAToStr(currentColor);\n          break;\n        case 'hsl':\n          colorValue.value = HSLAToStr(HSVAtoHSLA(currentColor));\n          break;}\n\n\n      // Select the current format in the format switcher\n      document.querySelector(\".clr-format [value=\\\"\" + format + \"\\\"]\").checked = true;\n    }\n\n    /**\r\n     * Set the hue when its slider is moved.\r\n     */\n    function setHue() {\n      var hue = hueSlider.value * 1;\n      var x = colorMarker.style.left.replace('px', '') * 1;\n      var y = colorMarker.style.top.replace('px', '') * 1;\n\n      picker.style.color = \"hsl(\" + hue + \", 100%, 50%)\";\n      hueMarker.style.left = hue / 360 * 100 + \"%\";\n\n      setColorAtPosition(x, y);\n    }\n\n    /**\r\n     * Set the alpha when its slider is moved.\r\n     */\n    function setAlpha() {\n      var alpha = alphaSlider.value / 100;\n\n      alphaMarker.style.left = alpha * 100 + \"%\";\n      updateColor({ a: alpha });\n      pickColor();\n    }\n\n    /**\r\n     * Convert HSVA to RGBA.\r\n     * @param {object} hsva Hue, saturation, value and alpha values.\r\n     * @return {object} Red, green, blue and alpha values.\r\n     */\n    function HSVAtoRGBA(hsva) {\n      var saturation = hsva.s / 100;\n      var value = hsva.v / 100;\n      var chroma = saturation * value;\n      var hueBy60 = hsva.h / 60;\n      var x = chroma * (1 - Math.abs(hueBy60 % 2 - 1));\n      var m = value - chroma;\n\n      chroma = chroma + m;\n      x = x + m;\n\n      var index = Math.floor(hueBy60) % 6;\n      var red = [chroma, x, m, m, x, chroma][index];\n      var green = [x, chroma, chroma, x, m, m][index];\n      var blue = [m, m, x, chroma, chroma, x][index];\n\n      return {\n        r: Math.round(red * 255),\n        g: Math.round(green * 255),\n        b: Math.round(blue * 255),\n        a: hsva.a\n      };\n    }\n\n    /**\r\n     * Convert HSVA to HSLA.\r\n     * @param {object} hsva Hue, saturation, value and alpha values.\r\n     * @return {object} Hue, saturation, lightness and alpha values.\r\n     */\n    function HSVAtoHSLA(hsva) {\n      var value = hsva.v / 100;\n      var lightness = value * (1 - hsva.s / 100 / 2);\n      var saturation;\n\n      if (lightness > 0 && lightness < 1) {\n        saturation = Math.round((value - lightness) / Math.min(lightness, 1 - lightness) * 100);\n      }\n\n      return {\n        h: hsva.h,\n        s: saturation || 0,\n        l: Math.round(lightness * 100),\n        a: hsva.a\n      };\n    }\n\n    /**\r\n     * Convert RGBA to HSVA.\r\n     * @param {object} rgba Red, green, blue and alpha values.\r\n     * @return {object} Hue, saturation, value and alpha values.\r\n     */\n    function RGBAtoHSVA(rgba) {\n      var red = rgba.r / 255;\n      var green = rgba.g / 255;\n      var blue = rgba.b / 255;\n      var xmax = Math.max(red, green, blue);\n      var xmin = Math.min(red, green, blue);\n      var chroma = xmax - xmin;\n      var value = xmax;\n      var hue = 0;\n      var saturation = 0;\n\n      if (chroma) {\n        if (xmax === red) {hue = (green - blue) / chroma;}\n        if (xmax === green) {hue = 2 + (blue - red) / chroma;}\n        if (xmax === blue) {hue = 4 + (red - green) / chroma;}\n        if (xmax) {saturation = chroma / xmax;}\n      }\n\n      hue = Math.floor(hue * 60);\n\n      return {\n        h: hue < 0 ? hue + 360 : hue,\n        s: Math.round(saturation * 100),\n        v: Math.round(value * 100),\n        a: rgba.a\n      };\n    }\n\n    /**\r\n     * Parse a string to RGBA.\r\n     * @param {string} str String representing a color.\r\n     * @return {object} Red, green, blue and alpha values.\r\n     */\n    function strToRGBA(str) {\n      var regex = /^((rgba)|rgb)[\\D]+([\\d.]+)[\\D]+([\\d.]+)[\\D]+([\\d.]+)[\\D]*?([\\d.]+|$)/i;\n      var match, rgba;\n\n      // Default to black for invalid color strings\n      ctx.fillStyle = '#000';\n\n      // Use canvas to convert the string to a valid color string\n      ctx.fillStyle = str;\n      match = regex.exec(ctx.fillStyle);\n\n      if (match) {\n        rgba = {\n          r: match[3] * 1,\n          g: match[4] * 1,\n          b: match[5] * 1,\n          a: match[6] * 1\n        };\n\n        // Workaround to mitigate a Chromium bug where the alpha value is rounded incorrectly\n        rgba.a = +rgba.a.toFixed(2);\n\n      } else {\n        match = ctx.fillStyle.replace('#', '').match(/.{2}/g).map(function (h) {return parseInt(h, 16);});\n        rgba = {\n          r: match[0],\n          g: match[1],\n          b: match[2],\n          a: 1\n        };\n      }\n\n      return rgba;\n    }\n\n    /**\r\n     * Convert RGBA to Hex.\r\n     * @param {object} rgba Red, green, blue and alpha values.\r\n     * @return {string} Hex color string.\r\n     */\n    function RGBAToHex(rgba) {\n      var R = rgba.r.toString(16);\n      var G = rgba.g.toString(16);\n      var B = rgba.b.toString(16);\n      var A = '';\n\n      if (rgba.r < 16) {\n        R = '0' + R;\n      }\n\n      if (rgba.g < 16) {\n        G = '0' + G;\n      }\n\n      if (rgba.b < 16) {\n        B = '0' + B;\n      }\n\n      if (settings.alpha && (rgba.a < 1 || settings.forceAlpha)) {\n        var alpha = rgba.a * 255 | 0;\n        A = alpha.toString(16);\n\n        if (alpha < 16) {\n          A = '0' + A;\n        }\n      }\n\n      return '#' + R + G + B + A;\n    }\n\n    /**\r\n     * Convert RGBA values to a CSS rgb/rgba string.\r\n     * @param {object} rgba Red, green, blue and alpha values.\r\n     * @return {string} CSS color string.\r\n     */\n    function RGBAToStr(rgba) {\n      if (!settings.alpha || rgba.a === 1 && !settings.forceAlpha) {\n        return \"rgb(\" + rgba.r + \", \" + rgba.g + \", \" + rgba.b + \")\";\n      } else {\n        return \"rgba(\" + rgba.r + \", \" + rgba.g + \", \" + rgba.b + \", \" + rgba.a + \")\";\n      }\n    }\n\n    /**\r\n     * Convert HSLA values to a CSS hsl/hsla string.\r\n     * @param {object} hsla Hue, saturation, lightness and alpha values.\r\n     * @return {string} CSS color string.\r\n     */\n    function HSLAToStr(hsla) {\n      if (!settings.alpha || hsla.a === 1 && !settings.forceAlpha) {\n        return \"hsl(\" + hsla.h + \", \" + hsla.s + \"%, \" + hsla.l + \"%)\";\n      } else {\n        return \"hsla(\" + hsla.h + \", \" + hsla.s + \"%, \" + hsla.l + \"%, \" + hsla.a + \")\";\n      }\n    }\n\n    /**\r\n     * Init the color picker.\r\n     */\n    function init() {\n      if (document.getElementById('clr-picker')) return; //** DO NOT REMOVE: Prevent binding events multiple times\n      // Render the UI\n      container = null;\n      picker = document.createElement('div');\n      picker.setAttribute('id', 'clr-picker');\n      picker.className = 'clr-picker';\n      picker.innerHTML =\n      \"<input id=\\\"clr-color-value\\\" name=\\\"clr-color-value\\\" class=\\\"clr-color\\\" type=\\\"text\\\" value=\\\"\\\" spellcheck=\\\"false\\\" aria-label=\\\"\" + settings.a11y.input + \"\\\">\" + (\"<div id=\\\"clr-color-area\\\" class=\\\"clr-gradient\\\" role=\\\"application\\\" aria-label=\\\"\" +\n      settings.a11y.instruction + \"\\\">\") +\n      '<div id=\"clr-color-marker\" class=\"clr-marker\" tabindex=\"0\"></div>' +\n      '</div>' +\n      '<div class=\"clr-hue\">' + (\"<input id=\\\"clr-hue-slider\\\" name=\\\"clr-hue-slider\\\" type=\\\"range\\\" min=\\\"0\\\" max=\\\"360\\\" step=\\\"1\\\" aria-label=\\\"\" +\n      settings.a11y.hueSlider + \"\\\">\") +\n      '<div id=\"clr-hue-marker\"></div>' +\n      '</div>' +\n      '<div class=\"clr-alpha\">' + (\"<input id=\\\"clr-alpha-slider\\\" name=\\\"clr-alpha-slider\\\" type=\\\"range\\\" min=\\\"0\\\" max=\\\"100\\\" step=\\\"1\\\" aria-label=\\\"\" +\n      settings.a11y.alphaSlider + \"\\\">\") +\n      '<div id=\"clr-alpha-marker\"></div>' +\n      '<span></span>' +\n      '</div>' +\n      '<div id=\"clr-format\" class=\"clr-format\">' +\n      '<fieldset class=\"clr-segmented\">' + (\"<legend>\" +\n      settings.a11y.format + \"</legend>\") +\n      '<input id=\"clr-f1\" type=\"radio\" name=\"clr-format\" value=\"hex\">' +\n      '<label for=\"clr-f1\">Hex</label>' +\n      '<input id=\"clr-f2\" type=\"radio\" name=\"clr-format\" value=\"rgb\">' +\n      '<label for=\"clr-f2\">RGB</label>' +\n      '<input id=\"clr-f3\" type=\"radio\" name=\"clr-format\" value=\"hsl\">' +\n      '<label for=\"clr-f3\">HSL</label>' +\n      '<span></span>' +\n      '</fieldset>' +\n      '</div>' +\n      '<div id=\"clr-swatches\" class=\"clr-swatches\"></div>' + (\"<button type=\\\"button\\\" id=\\\"clr-clear\\\" class=\\\"clr-clear\\\" aria-label=\\\"\" +\n      settings.a11y.clear + \"\\\">\" + settings.clearLabel + \"</button>\") +\n      '<div id=\"clr-color-preview\" class=\"clr-preview\">' + (\"<button type=\\\"button\\\" id=\\\"clr-close\\\" class=\\\"clr-close\\\" aria-label=\\\"\" +\n      settings.a11y.close + \"\\\">\" + settings.closeLabel + \"</button>\") +\n      '</div>' + (\"<span id=\\\"clr-open-label\\\" hidden>\" +\n      settings.a11y.open + \"</span>\") + (\"<span id=\\\"clr-swatch-label\\\" hidden>\" +\n      settings.a11y.swatch + \"</span>\");\n\n      // Append the color picker to the DOM\n      document.body.appendChild(picker);\n\n      // Reference the UI elements\n      colorArea = getEl('clr-color-area');\n      colorMarker = getEl('clr-color-marker');\n      clearButton = getEl('clr-clear');\n      closeButton = getEl('clr-close');\n      colorPreview = getEl('clr-color-preview');\n      colorValue = getEl('clr-color-value');\n      hueSlider = getEl('clr-hue-slider');\n      hueMarker = getEl('clr-hue-marker');\n      alphaSlider = getEl('clr-alpha-slider');\n      alphaMarker = getEl('clr-alpha-marker');\n\n      // Bind the picker to the default selector\n      bindFields(settings.el);\n      wrapFields(settings.el);\n\n      addListener(picker, 'mousedown', function (event) {\n        picker.classList.remove('clr-keyboard-nav');\n        event.stopPropagation();\n      });\n\n      addListener(colorArea, 'mousedown', function (event) {\n        addListener(document, 'mousemove', moveMarker);\n      });\n\n      addListener(colorArea, 'touchstart', function (event) {\n        document.addEventListener('touchmove', moveMarker, { passive: false });\n      });\n\n      addListener(colorMarker, 'mousedown', function (event) {\n        addListener(document, 'mousemove', moveMarker);\n      });\n\n      addListener(colorMarker, 'touchstart', function (event) {\n        document.addEventListener('touchmove', moveMarker, { passive: false });\n      });\n\n      addListener(colorValue, 'change', function (event) {\n        if (currentEl || settings.inline) {\n          setColorFromStr(colorValue.value);\n          pickColor();\n        }\n      });\n\n      addListener(clearButton, 'click', function (event) {\n        pickColor('');\n        closePicker();\n      });\n\n      addListener(closeButton, 'click', function (event) {\n        pickColor();\n        closePicker();\n      });\n\n      addListener(document, 'click', '.clr-format input', function (event) {\n        currentFormat = event.target.value;\n        updateColor();\n        pickColor();\n      });\n\n      addListener(picker, 'click', '.clr-swatches button', function (event) {\n        setColorFromStr(event.target.textContent);\n        pickColor();\n\n        if (settings.swatchesOnly) {\n          closePicker();\n        }\n      });\n\n      addListener(document, 'mouseup', function (event) {\n        document.removeEventListener('mousemove', moveMarker);\n      });\n\n      addListener(document, 'touchend', function (event) {\n        document.removeEventListener('touchmove', moveMarker);\n      });\n\n      addListener(document, 'mousedown', function (event) {\n        keyboardNav = false;\n        picker.classList.remove('clr-keyboard-nav');\n        closePicker();\n      });\n\n      addListener(document, 'keydown', function (event) {\n        var key = event.key;\n        var target = event.target;\n        var shiftKey = event.shiftKey;\n        var navKeys = ['Tab', 'ArrowUp', 'ArrowDown', 'ArrowLeft', 'ArrowRight'];\n\n        if (key === 'Escape') {\n          closePicker(true);\n\n          // Display focus rings when using the keyboard\n        } else if (navKeys.includes(key)) {\n          keyboardNav = true;\n          picker.classList.add('clr-keyboard-nav');\n        }\n\n        // Trap the focus within the color picker while it's open\n        if (key === 'Tab' && target.matches('.clr-picker *')) {\n          var focusables = getFocusableElements();\n          var firstFocusable = focusables.shift();\n          var lastFocusable = focusables.pop();\n\n          if (shiftKey && target === firstFocusable) {\n            lastFocusable.focus();\n            event.preventDefault();\n          } else if (!shiftKey && target === lastFocusable) {\n            firstFocusable.focus();\n            event.preventDefault();\n          }\n        }\n      });\n\n      addListener(document, 'click', '.clr-field button', function (event) {\n        // Reset any previously set per-instance options\n        if (hasInstance) {\n          resetVirtualInstance();\n        }\n\n        // Open the color picker\n        event.target.nextElementSibling.dispatchEvent(new Event('click', { bubbles: true }));\n      });\n\n      addListener(colorMarker, 'keydown', function (event) {\n        var movements = {\n          ArrowUp: [0, -1],\n          ArrowDown: [0, 1],\n          ArrowLeft: [-1, 0],\n          ArrowRight: [1, 0]\n        };\n\n        if (Object.keys(movements).includes(event.key)) {\n          moveMarkerOnKeydown.apply(void 0, movements[event.key]);\n          event.preventDefault();\n        }\n      });\n\n      addListener(colorArea, 'click', moveMarker);\n      addListener(hueSlider, 'input', setHue);\n      addListener(alphaSlider, 'input', setAlpha);\n    }\n\n    /**\r\n     * Return a list of focusable elements within the color picker.\r\n     * @return {array} The list of focusable DOM elemnts.\r\n     */\n    function getFocusableElements() {\n      var controls = Array.from(picker.querySelectorAll('input, button'));\n      var focusables = controls.filter(function (node) {return !!node.offsetWidth;});\n\n      return focusables;\n    }\n\n    /**\r\n     * Shortcut for getElementById to optimize the minified JS.\r\n     * @param {string} id The element id.\r\n     * @return {object} The DOM element with the provided id.\r\n     */\n    function getEl(id) {\n      return document.getElementById(id);\n    }\n\n    /**\r\n     * Shortcut for addEventListener to optimize the minified JS.\r\n     * @param {object} context The context to which the listener is attached.\r\n     * @param {string} type Event type.\r\n     * @param {(string|function)} selector Event target if delegation is used, event handler if not.\r\n     * @param {function} [fn] Event handler if delegation is used.\r\n     */\n    function addListener(context, type, selector, fn) {\n      var matches = Element.prototype.matches || Element.prototype.msMatchesSelector;\n\n      // Delegate event to the target of the selector\n      if (typeof selector === 'string') {\n        context.addEventListener(type, function (event) {\n          if (matches.call(event.target, selector)) {\n            fn.call(event.target, event);\n          }\n        });\n\n        // If the selector is not a string then it's a function\n        // in which case we need a regular event listener\n      } else {\n        fn = selector;\n        context.addEventListener(type, fn);\n      }\n    }\n\n    /**\r\n     * Call a function only when the DOM is ready.\r\n     * @param {function} fn The function to call.\r\n     * @param {array} [args] Arguments to pass to the function.\r\n     */\n    function DOMReady(fn, args) {\n      args = args !== undefined ? args : [];\n\n      if (document.readyState !== 'loading') {\n        fn.apply(void 0, args);\n      } else {\n        document.addEventListener('DOMContentLoaded', function () {\n          fn.apply(void 0, args);\n        });\n      }\n    }\n\n    // Polyfill for Nodelist.forEach\n    if (NodeList !== undefined && NodeList.prototype && !NodeList.prototype.forEach) {\n      NodeList.prototype.forEach = Array.prototype.forEach;\n    }\n\n    //*****************************************************\n    //******* NPM: Custom code starts here ****************\n    //*****************************************************\n\n    /**\r\n     * Copy the active color to the linked input field and set the color.\r\n     * @param {string} [color] Color value to override the active color.\r\n     * @param {HTMLelement} [target] the element setting the color on\r\n     */\n    function setColor(color, target) {\n      currentEl = target;\n      oldColor = currentEl.value;\n      attachVirtualInstance(target);\n      currentFormat = getColorFormatFromStr(color);\n      updatePickerPosition();\n      setColorFromStr(color);\n      pickColor();\n      if (oldColor !== color) {\n        currentEl.dispatchEvent(new Event('change', { bubbles: true }));\n      }\n    }\n\n    // Expose the color picker to the global scope\n    var Coloris = function () {\n      var methods = {\n        init: init,\n        set: configure,\n        wrap: wrapFields,\n        close: closePicker,\n        setInstance: setVirtualInstance,\n        setColor: setColor,\n        removeInstance: removeVirtualInstance,\n        updatePosition: updatePickerPosition\n      };\n\n      function Coloris(options) {\n        DOMReady(function () {\n          if (options) {\n            if (typeof options === 'string') {\n              bindFields(options);\n            } else {\n              configure(options);\n            }\n          }\n        });\n      }var _loop3 = function _loop3(key)\n\n      {\n        Coloris[key] = function () {for (var _len = arguments.length, args = new Array(_len), _key2 = 0; _key2 < _len; _key2++) {args[_key2] = arguments[_key2];}\n          DOMReady(methods[key], args);\n        };\n      };for (var key in methods) {_loop3(key);}\n\n      // handle window resize events re-aligning the panel\n      DOMReady(function () {\n        window.addEventListener('resize', function (event) {Coloris.updatePosition();});\n        window.addEventListener('scroll', function (event) {Coloris.updatePosition();});\n      });\n\n      return Coloris;\n    }();\n\n    // Ensure init function is available not only as as a default import\n    Coloris.coloris = Coloris;\n\n    // Init the color picker when the DOM is ready\n    return Coloris;\n\n  }(window, document, Math);\n}();\n\nvar _coloris = Coloris.coloris;\nvar _init = Coloris.init;\nvar _set = Coloris.set;\nvar _wrap = Coloris.wrap;\nvar _close = Coloris.close;\nvar _setInstance = Coloris.setInstance;\nvar _removeInstance = Coloris.removeInstance;\nvar _updatePosition = Coloris.updatePosition;\nexport default Coloris;\nexport {\n_coloris as coloris,\n_close as close,\n_init as init,\n_set as set,\n_wrap as wrap,\n_setInstance as setInstance,\n_removeInstance as removeInstance,\n_updatePosition as updatePosition };","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import interfaceConfig from \"./settings/interface-config\";\r\nimport dataLoggingManager from \"./dataProcessing/datalogging\";\r\nimport colorMode from \"./helpers/color_mode\";\r\nimport virtualKeyboard from \"./settings/virtualkeyboard\";\r\nimport connectionGUIManager from \"./connection_gui\";\r\nimport rearrangeManager from \"./rearrange\";\r\nimport tilebar from \"./tilebar\";\r\nimport captureModeManager from \"./captureMode\";\r\nimport gui from \"./gui\";\r\nimport serviceWorkerInit from \"./serviceworker/sw_init\";\r\nimport otaManager from \"./otaUpdate/otaManager\";\r\nimport vehicleModel from \"./vehicleModel\";\r\nimport dataDistribution from \"./dataDistribution/dataDistribution\";\r\nimport deviceInfoManager from \"./settings/deviceInfoManager\";\r\nimport dataDistributionGUIManager from \"./dataDistribution/dataDistributionGUIManager\";\r\nimport dbcGUIManager from \"./can/dbcGUIManager\";\r\n\r\nimport disconnect_watchdog from \"./ble/disconnect_watchdog\";\r\nimport bms from \"./ble/bms\";\r\nimport tacho from \"./ble/tacho\";\r\n\r\n\r\n\r\nlet dbcGUIMgr = new dbcGUIManager();\r\n\r\n\r\n\r\nlet vehicleModelObj = new vehicleModel();\r\n\r\n\r\nlet deviceInfoMgr = new deviceInfoManager();\r\n\r\n\r\nnew serviceWorkerInit();\r\nnew virtualKeyboard();\r\n\r\nlet interfaceConfigObj = new interfaceConfig();\r\nlet colorModeObj = new colorMode(interfaceConfigObj);\r\ninterfaceConfigObj.initColorModeObj(colorModeObj);\r\n\r\nlet captureModeManagerObj = new captureModeManager();\r\nlet dataLoggingManagerObj = new dataLoggingManager();\r\n\r\n\r\n\r\n\r\nlet bmsObj = new bms(interfaceConfigObj, dataLoggingManagerObj, deviceInfoMgr);\r\n\r\n\r\nlet guiObj = new gui();\r\n\r\nguiObj.disableBoardGauges();\r\nguiObj.addGUIEventListeners();\r\nguiObj.initBmsObj(bmsObj);\r\n\r\nlet rearrangeManagerObj = new rearrangeManager(bmsObj);\r\n\r\n\r\n//let tachoObj = new tacho(bmsObj, interfaceConfigObj, dataLoggingManagerObj, deviceInfoMgr);\r\nlet tachoObj = new tacho(interfaceConfigObj, dataLoggingManagerObj, deviceInfoMgr);\r\ntachoObj.initBMSObj(bmsObj);\r\nbmsObj.initTachoObj(tachoObj);\r\n\r\n\r\nlet dataDistributionObj = new dataDistribution();\r\nbmsObj.initDataDistribution(dataDistributionObj);\r\ntachoObj.initDataDistribution(dataDistributionObj);\r\n\r\nvehicleModelObj.initDataDistribution(dataDistributionObj);\r\n\r\ndataDistributionObj.addMapping(\"bmsITotal\", \"torqueRL\");\r\ndataDistributionObj.addMapping(\"bmsITotal\", \"torqueRR\");\r\n\r\n\r\nlet dataDistributionGUIMgr = new dataDistributionGUIManager(dataDistributionObj);\r\ndataDistributionGUIMgr.fillMappingTable();\r\ndataDistributionGUIMgr.fillInputTable();\r\n\r\n\r\nlet otaManagerObj = new otaManager(bmsObj, tachoObj, deviceInfoMgr);\r\notaManagerObj.addEventListeners();\r\n\r\nnew connectionGUIManager(bmsObj, tachoObj);\r\n\r\n\r\nlet tb = new tilebar(\r\n    bmsObj,\r\n    tachoObj,\r\n    captureModeManagerObj,\r\n    dataLoggingManagerObj,\r\n    colorModeObj,\r\n    interfaceConfigObj,\r\n    rearrangeManagerObj,\r\n    otaManagerObj,\r\n    dataDistributionGUIMgr,\r\n    dbcGUIMgr\r\n);\r\ntb.addEventListeners();\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nnew disconnect_watchdog(500, 2000, bmsObj, tachoObj);\r\n\r\n\r\n\r\n/*\r\nlet subFilter = new canSubFilter();\r\nsubFilter.init(0, 28, \"match\", 0x01010169);\r\nlet b = subFilter.getBytes();\r\nsubFilter.print();\r\n\r\nlet subFilter2 = new canSubFilter();\r\nsubFilter2.initFromBytes(b);\r\nsubFilter2.print();\r\n*/\r\n\r\n\r\nwindow.addEventListener('message', (e) => {\r\n    console.log(e);\r\n\r\n    // Sandboxed iframes which lack the 'allow-same-origin'\r\n    // header have \"null\" rather than a valid origin. This means you still\r\n    // have to be careful about accepting data via the messaging API you\r\n    // create. Check that source and validate those inputs!\r\n    let frame = document.getElementById('can-plugin-sandbox');\r\n    if (e.origin === \"null\" && e.source === frame.contentWindow){\r\n        alert('Result: ' + e.data);\r\n    }\r\n});"],"names":[],"sourceRoot":""}