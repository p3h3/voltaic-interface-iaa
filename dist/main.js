/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./js/ble/ble.js":
/*!***********************!*\
  !*** ./js/ble/ble.js ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nlet bleConnectionStates = {\r\n        disconnected: 'disconnected',\r\n        searching: 'searching',\r\n        connecting: 'connecting',\r\n        connected: 'connected'\r\n    };\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (bleConnectionStates);\n\n//# sourceURL=webpack://dragonbms-interface-web/./js/ble/ble.js?");

/***/ }),

/***/ "./js/ble/bms.js":
/*!***********************!*\
  !*** ./js/ble/bms.js ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ bms)\n/* harmony export */ });\n/* harmony import */ var _dataProcessing_bms_processing__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../dataProcessing/bms_processing */ \"./js/dataProcessing/bms_processing.js\");\n/* harmony import */ var _settings_board_calib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../settings/board-calib */ \"./js/settings/board-calib.js\");\n/* harmony import */ var _settings_board_config__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../settings/board-config */ \"./js/settings/board-config.js\");\n/* harmony import */ var _helpers_small_functions__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../helpers/small_functions */ \"./js/helpers/small_functions.js\");\n/* harmony import */ var _gui__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../gui */ \"./js/gui.js\");\n/* harmony import */ var _ble__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./ble */ \"./js/ble/ble.js\");\n/* harmony import */ var _helpers_zoom__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../helpers/zoom */ \"./js/helpers/zoom.js\");\n/* harmony import */ var _helpers_connectionWatchdog__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../helpers/connectionWatchdog */ \"./js/helpers/connectionWatchdog.js\");\n// noinspection ShiftOutOfRangeJS\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass bms extends _gui__WEBPACK_IMPORTED_MODULE_4__[\"default\"]{\r\n\r\n    connectionState;\r\n\r\n    gattServer;\r\n\r\n    bleDevice;\r\n\r\n    tachoObj;\r\n\r\n    reconnect;\r\n\r\n\r\n    name;\r\n    switchType;\r\n    channelCount;\r\n\r\n    modelNumber;\r\n    hardwareRevision;\r\n    firmwareRevision;\r\n    serialNumber;\r\n\r\n    alertBuffer;\r\n    warningBuffer;\r\n\r\n\r\n    #dataLoggingServiceUuid = \"e9ea0200-e19b-482d-9293-c7907585fc48\";\r\n    #dataLoggingCharacteristicUuid = \"e9ea0201-e19b-482d-9293-c7907585fc48\";\r\n    dataLoggingCharacteristic;\r\n\r\n    #configServiceUuid = \"e9ea0100-e19b-482d-9293-c7907585fc48\";\r\n    #configCharacteristicUuid = \"e9ea0101-e19b-482d-9293-c7907585fc48\";\r\n    bmsConfigCharacteristic;\r\n    #calibCharacteristicUuid = \"e9ea0102-e19b-482d-9293-c7907585fc48\";\r\n    calibCharacteristic;\r\n    #deviceNameSetCharacteristicUuid = \"e9ea0103-e19b-482d-9293-c7907585fc48\";\r\n    deviceNameCharacteristic;\r\n\r\n    #developmentServiceUuid = \"e9ea0400-e19b-482d-9293-c7907585fc48\";\r\n    #prechargeControlCharacteristicUuid = \"e9ea0403-e19b-482d-9293-c7907585fc48\"; // bodge\r\n    prechargeControlCharacteristic;\r\n    #channelControlCharacteristicUuid = \"e9ea0401-e19b-482d-9293-c7907585fc48\";\r\n    channelControlCharacteristic;\r\n    #uptimeCharacteristicUuid = \"e9ea0404-e19b-482d-9293-c7907585fc48\";\r\n    uptimeCharacteristic;\r\n\r\n    #runtimeControlServiceUuid = \"e9ea0500-e19b-482d-9293-c7907585fc48\";\r\n    #turnOnCharacteristicUuid = \"e9ea0503-e19b-482d-9293-c7907585fc48\";\r\n    turnOnCharacteristic;\r\n    #shutdownControlCharacteristicUuid = \"e9ea0502-e19b-482d-9293-c7907585fc48\";\r\n    shutdownControlCharacteristic;\r\n    #userGPOCharacteristicUuid = \"e9ea0501-e19b-482d-9293-c7907585fc48\";\r\n    userGPOCharacteristic;\r\n\r\n    #alertWarningServiceUuid = \"e9ea0300-e19b-482d-9293-c7907585fc48\";\r\n    #warningCharacteristicUuid = \"e9ea0301-e19b-482d-9293-c7907585fc48\";\r\n    warningCharacteristic;\r\n    #alertCharacteristicUuid = \"e9ea0302-e19b-482d-9293-c7907585fc48\";\r\n    alertCharacteristic;\r\n\r\n\r\n    #otaUpdateServiceUuid = '8d53dc1d-1db7-4cd3-868b-8a527460aa84';\r\n\r\n    disconnectedEventAbortController;\r\n\r\n    connectionWatchDog;\r\n\r\n    stateMachineState;\r\n\r\n    bmsConfigObj;\r\n    bmsCalibObj;\r\n\r\n    #lastUptime = 0;\r\n    #countingUptime = 0;\r\n\r\n    constructor(interfaceConfig, dataLoggingMgr, deviceInfoMgr){\r\n        super();\r\n\r\n        this.interfaceConfig = interfaceConfig;\r\n\r\n        this.dataLoggingMgr = dataLoggingMgr;\r\n\r\n        this.deviceInfoMgr = deviceInfoMgr;\r\n\r\n        this.connectionState = _ble__WEBPACK_IMPORTED_MODULE_5__[\"default\"].disconnected;\r\n        this.reconnect = false;\r\n\r\n        this.disconnectedEventAbortController = new AbortController();\r\n\r\n        this.bmsConfigObj = new _settings_board_config__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this, true);\r\n        this.bmsConfigObj.addEventListeners();\r\n\r\n        this.bmsCalibObj = new _settings_board_calib__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this);\r\n        this.bmsCalibObj.addEventListeners();\r\n\r\n        this.bmsDataProcessor = new _dataProcessing_bms_processing__WEBPACK_IMPORTED_MODULE_0__[\"default\"](this.bmsConfigObj, this.bmsCalibObj, this.interfaceConfig, this.dataLoggingMgr);\r\n\r\n        this.pollFaults();\r\n\r\n        this.#pollUptime(true);\r\n        this.#setUptime();\r\n\r\n        this.connectionWatchDog = new _helpers_connectionWatchdog__WEBPACK_IMPORTED_MODULE_7__[\"default\"](this.interfaceConfig.connectionStepTimeout * 1000, ()=>{\r\n            console.log(\"[bms connection] connection Watchdog timed out!\");\r\n            this.disconnect(false).then();\r\n        });\r\n    }\r\n\r\n    initDataDistribution(dd){\r\n        this.dd = dd;\r\n        this.bmsDataProcessor.gatherer.initDataDistribution(this.dd);\r\n        this.bmsDataProcessor.initDataDistribution(this.dd);\r\n    }\r\n\r\n    setServiceDoneCallback(cb){\r\n        this.serviceInitDoneCB = cb;\r\n    }\r\n\r\n    initTachoObj(tachoObj){\r\n        this.tachoObj = tachoObj;\r\n    }\r\n\r\n    isConnected(){\r\n        return this.connectionState === _ble__WEBPACK_IMPORTED_MODULE_5__[\"default\"].connected;\r\n    }\r\n\r\n    isDisconnected(){\r\n        return this.connectionState === _ble__WEBPACK_IMPORTED_MODULE_5__[\"default\"].disconnected;\r\n    }\r\n\r\n\r\n    async initServices(attemptNumber) {\r\n\r\n        if(this.connectionWatchDog.timedOut){return;}\r\n        this.connectionWatchDog.start();\r\n\r\n        // it's okay to only try/catch this part since the cases where it fails at the end are very rare\r\n        try{\r\n            await this.gattServer.connect();\r\n            console.log(\"[bms connection] server connected\");\r\n\r\n            this.setAutoconnectBMSText(\"Getting Runtime Services\");\r\n\r\n            if(this.connectionWatchDog.timedOut){return;}\r\n            this.connectionWatchDog.start();\r\n            await this.#getDevelopmentServiceSeq();\r\n\r\n            if(this.connectionWatchDog.timedOut){return;}\r\n            this.connectionWatchDog.start();\r\n            this.setAutoconnectBMSText(\"Getting Services\");\r\n            await this.#getRuntimeControlServiceSeq();\r\n\r\n            if(this.connectionWatchDog.timedOut){return;}\r\n            this.connectionWatchDog.start();\r\n            this.setAutoconnectBMSText(\"Getting Config Service\");\r\n            await this.#getBMSConfigServiceSeq();\r\n\r\n            if(this.connectionWatchDog.timedOut){return;}\r\n            this.connectionWatchDog.start();\r\n            this.setAutoconnectBMSText(\"Getting Alert Service\");\r\n            await this.#getBMSAlertServiceSeq();\r\n\r\n            if(this.connectionWatchDog.timedOut){return;}\r\n            this.connectionWatchDog.start();\r\n            await this.#getDeviceInfoSeq();\r\n\r\n            if(this.connectionWatchDog.timedOut){return;}\r\n            this.connectionWatchDog.start();\r\n            await this.getDeviceName();\r\n\r\n        }catch(e){\r\n            this.connectionWatchDog.stop();\r\n\r\n            console.log(e);\r\n\r\n            if (e instanceof DOMException) {\r\n\r\n\r\n                if(e.toString().includes(\"UUID\")){\r\n                    // DomException: No matching UUID found\r\n                    this.setAutoconnectBMSText(\"Not a BMS!\");\r\n\r\n                    console.log(\"[bms connection] Not a BMS!\");\r\n\r\n                    setTimeout(() => {\r\n                        this.resetAutoconnectBMSSilentInstant();\r\n                    }, 1000);\r\n                }\r\n\r\n\r\n                // basically disconnect in any error case since that ensures another try in auto-reconnect\r\n                if((!e.toString().toLowerCase().includes(\"unknown\")) || (e.toString().toLowerCase().includes(\"disconnected\"))){\r\n                    await this.disconnect(false);\r\n                    return;\r\n                }\r\n\r\n            }\r\n\r\n            if(attemptNumber > 3){\r\n                await this.disconnect(true);\r\n\r\n                // if connection fails during service init, abort the already registered gattserverdisconnected handler\r\n                this.disconnectedEventAbortController.abort();\r\n                this.resetAutoconnectBMS();\r\n                return;\r\n            }\r\n\r\n            this.setAutoconnectBMSText(\"Attempt #\" + (attemptNumber+1));\r\n\r\n            // timeout to make the bluetooth stack a bit more relaxed xD\r\n            setTimeout(()=>{\r\n                this.initServices(attemptNumber+1);\r\n            }, 500);\r\n\r\n            return;\r\n\r\n        }\r\n\r\n\r\n        try{\r\n            if(this.interfaceConfig.autoReadBMSConfigCalib){\r\n                this.setAutoconnectBMSText(\"Reading Config&Calib\");\r\n                console.log(\"[bms connection] auto-reading bms config/calib\");\r\n\r\n                if(this.connectionWatchDog.timedOut){return;}\r\n                this.connectionWatchDog.start();\r\n                this.bmsCalibObj.readBMSCalib(() => {\r\n                    if(this.connectionWatchDog.timedOut){return;}\r\n                    this.connectionWatchDog.start();\r\n                    this.bmsConfigObj.readBMSConfig(async () => {\r\n\r\n                        if(this.connectionWatchDog.timedOut){return;}\r\n                        this.connectionWatchDog.start();\r\n                        await this.#getBMSDataloggingServiceSeq();\r\n\r\n                        this.#serviceInitDone();\r\n                    });\r\n                });\r\n\r\n            }else{\r\n                if(this.connectionWatchDog.timedOut){return;}\r\n                this.connectionWatchDog.start();\r\n                await this.#getBMSDataloggingServiceSeq();\r\n\r\n                this.#serviceInitDone();\r\n\r\n            }\r\n        } catch(e){\r\n            this.connectionWatchDog.stop();\r\n\r\n            if (e instanceof DOMException) {\r\n\r\n                console.log(e);\r\n\r\n                if(e.toString().includes(\"UUID\")){\r\n                    // DomException: No matching UUID found\r\n                    this.setAutoconnectBMSText(\"Not a BMS!\");\r\n\r\n                    console.log(\"[bms connection] Not a BMS!\");\r\n\r\n                    setTimeout(() => {\r\n                        this.resetAutoconnectBMSSilentInstant();\r\n                    }, 1000);\r\n                }\r\n\r\n\r\n                // still execute tries if the error is unknown\r\n                if(!e.toString().toLowerCase().includes(\"unknown\")){\r\n                    await this.disconnect(false);\r\n\r\n                    // this also fires when \"disconnect all devices\" is pressed during init,\r\n                    // which means it is best to stop attempts\r\n                    return;\r\n                }\r\n\r\n            }\r\n\r\n            if(attemptNumber > 3){\r\n                await this.disconnect(true);\r\n\r\n                // if connection fails during service init, abort the already registered gattserverdisconnected handler\r\n                this.disconnectedEventAbortController.abort();\r\n                this.resetAutoconnectBMS();\r\n                return;\r\n            }\r\n\r\n            this.setAutoconnectBMSText(\"Attempt #\" + (attemptNumber+1));\r\n\r\n            // timeout to make the bluetooth stack a bit more relaxed xD\r\n            setTimeout(()=>{\r\n                this.initServices(attemptNumber+1);\r\n            }, 500);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    #serviceInitDone(){\r\n        // this sad little puppy needs a bit of rest now!\r\n        this.connectionWatchDog.stop();\r\n\r\n        console.log(\"[bms connection] got data logging\");\r\n\r\n        this.reconnect = true;\r\n        this.connectionState = _ble__WEBPACK_IMPORTED_MODULE_5__[\"default\"].connected;\r\n\r\n\r\n\r\n        this.bmsDataProcessor = new _dataProcessing_bms_processing__WEBPACK_IMPORTED_MODULE_0__[\"default\"](this.bmsConfigObj, this.bmsCalibObj, this.interfaceConfig, this.dataLoggingMgr);\r\n        this.bmsDataProcessor.gatherer.initDataDistribution(this.dd);\r\n        this.bmsDataProcessor.initDataDistribution(this.dd);\r\n\r\n        if(typeof this.serviceInitDoneCB !== \"undefined\" && this.serviceInitDoneCB !== null){\r\n            this.serviceInitDoneCB();\r\n        }\r\n\r\n\r\n\r\n        setTimeout(() => {\r\n            // catch if disconnect happened between success and enabling!\r\n            if(!this.isConnected()){\r\n                return;\r\n            }\r\n            this.enableBoardGauges();\r\n            this.disableNothingConnectedOverlay();\r\n\r\n            if (!this.tachoObj.isDisconnected()) {\r\n                _helpers_zoom__WEBPACK_IMPORTED_MODULE_6__.zoom.to({element: this.table, padding: 0, pan: false});\r\n            }\r\n        }, 1000);\r\n    };\r\n\r\n\r\n\r\n    sendChannelControlData(alert, ch1, ch2, ch3) {\r\n        let byte = 128;\r\n        byte = (ch1 ? (byte | 2) : (byte & 253));\r\n        byte = (ch2 ? (byte | 4) : (byte & 251));\r\n        byte = (ch3 ? (byte | 8) : (byte & 247));\r\n        this.channelControlCharacteristic.writeValueWithoutResponse(Uint8Array.from([byte]).buffer).then();\r\n    }\r\n\r\n\r\n    connect(){\r\n\r\n        // ignore requests to connect if already connected\r\n        if(this.connectionState !== _ble__WEBPACK_IMPORTED_MODULE_5__[\"default\"].disconnected){\r\n            return;\r\n        }\r\n\r\n\r\n        // indicate searching\r\n        this.setAutoconnectBMSText(\"Searching\");\r\n        this.connectionState = _ble__WEBPACK_IMPORTED_MODULE_5__[\"default\"].searching;\r\n\r\n\r\n        // actually start searching\r\n        const options = this.#getSearchOptions();\r\n        navigator.bluetooth.requestDevice(options)\r\n            .then((device) => {\r\n                if(this.connectionState !== _ble__WEBPACK_IMPORTED_MODULE_5__[\"default\"].searching){\r\n                    console.log(\"[bms connection] prevented from connecting two devices\");\r\n                    return;\r\n                }\r\n\r\n\r\n                // always reset fault text if new device is found!\r\n                this.resetAutoconnectBMSSilentInstant();\r\n\r\n                this.setAutoconnectBMSText(\"Found Device\");\r\n\r\n                this.connectionState = _ble__WEBPACK_IMPORTED_MODULE_5__[\"default\"].connecting;\r\n\r\n                // stops gattserverdisconnected event - no more than one callback active at a time\r\n                // if stops from aborting before the first callback is even registered\r\n                if(typeof this.bleDevice !== \"undefined\" && this.bleDevice !== null){\r\n                    this.disconnectedEventAbortController.abort();\r\n                }\r\n                // reset abortController to not abort the incoming registration\r\n                this.disconnectedEventAbortController = new AbortController();\r\n\r\n                this.bleDevice = device;\r\n\r\n                this.bleDevice.addEventListener('gattserverdisconnected', ()=>{\r\n\r\n                    console.log(\"[bms connection] disconnected\");\r\n\r\n                    // this is only true if user clicked \"disconnect all devices\"\r\n                    // otherwise the connection state will only be updated in the #disconnected function\r\n                    if(this.isDisconnected()){\r\n                        // basically removes this event listener\r\n                        // without this, the event listener wouldn't be deleted\r\n                        // and multiple event listeners would be possible\r\n                        this.disconnectedEventAbortController.abort();\r\n                    }\r\n\r\n                    this.#disconnected();\r\n                },{signal: this.disconnectedEventAbortController.signal});\r\n\r\n\r\n                // this is where the actual connection begins\r\n\r\n\r\n                this.setAutoconnectBMSText(\"Connecting Device\");\r\n\r\n                this.connectionWatchDog.start();\r\n                this.bleDevice.gatt.connect()\r\n                    .then((server) => {\r\n                        this.gattServer = server;\r\n                        this.initServices(0).then();\r\n                    }).catch(()=>{\r\n\r\n                    this.connectionWatchDog.stop();\r\n\r\n                    // no need to disconnect since device has not been connected successfully yet!\r\n                    this.#disconnected();\r\n\r\n                    this.autoConnectBMSError();\r\n\r\n                    // reset the error message in the overlay after one second\r\n                    setTimeout(() => {\r\n                        this.resetAutoconnectBMSSilentInstant();\r\n                    }, 1000);\r\n                });\r\n\r\n            }).catch(error => {\r\n                console.log('[bms connection] User most likely cancelled: ' + error);\r\n\r\n                this.connectionState = _ble__WEBPACK_IMPORTED_MODULE_5__[\"default\"].disconnected;\r\n\r\n                // display error message in \"Connect BMS\" overlay\r\n                this.autoConnectBMSError();\r\n\r\n                // reset the error message in the overlay after one second\r\n                setTimeout(() => {\r\n                    this.resetAutoconnectBMSSilentInstant();\r\n                }, 1000);\r\n        });\r\n    }\r\n\r\n    #getSearchOptions(){\r\n        let options = {\r\n            optionalServices: [\r\n                this.#dataLoggingServiceUuid,\r\n                this.#developmentServiceUuid,\r\n                this.#configServiceUuid,\r\n                this.#alertWarningServiceUuid,\r\n                this.#runtimeControlServiceUuid,\r\n                this.#otaUpdateServiceUuid,\r\n                'device_information'\r\n            ]\r\n        };\r\n        if(this.interfaceConfig.filterBMSConnection) {\r\n            options.filters = [{\r\n                manufacturerData: [{\r\n                    // nice\r\n                    companyIdentifier: 0x6969\r\n                }]\r\n            }];\r\n        }else{\r\n            options.acceptAllDevices = true;\r\n        }\r\n\r\n        return options;\r\n    }\r\n\r\n\r\n    async disconnect(disableReconnect) {\r\n        if(disableReconnect){\r\n            this.reconnect = false;\r\n        }\r\n\r\n        // only disconnect if not already disconnected\r\n        try{\r\n            this.bleDevice.gatt.disconnect();\r\n\r\n            // check if disconnect really happened and try again if not\r\n            // BE CAUTIOUS, THIS FIRES QUITE A FEW TIMES\r\n            setTimeout(()=>{\r\n                if(!this.isDisconnected()){\r\n                    this.disconnect();\r\n                }\r\n            }, 100);\r\n        }catch(e){\r\n            console.log(\"[bms connection] problem while disconnecting - manually enabling overlay\");\r\n\r\n            this.#disconnected();\r\n            this.connectionState = _ble__WEBPACK_IMPORTED_MODULE_5__[\"default\"].disconnected;\r\n        }\r\n    }\r\n\r\n    #disconnected(){\r\n        this.connectionWatchDog.stop();\r\n\r\n        this.connectionState = _ble__WEBPACK_IMPORTED_MODULE_5__[\"default\"].disconnected;\r\n        this.disableBoardGauges();\r\n\r\n\r\n        this.resetBMSValues();\r\n\r\n        // enable nothingConnectedOverlay if bms was the last device to disconnect\r\n        if (!this.tachoObj.isConnected()) {\r\n            this.enableNothingConnectedOverlay();\r\n        }\r\n\r\n        this.resetAutoconnectBMSSilentInstant();\r\n\r\n        if(this.reconnect){\r\n\r\n            this.setAutoconnectBMSText(\"Auto-reconnect active\");\r\n\r\n            this.#handleReconnect();\r\n        }\r\n    }\r\n\r\n    #handleReconnect(){\r\n        if(this.isDisconnected() && this.reconnect){\r\n            console.log(\"[auto-reconnect bms] starting connect attempt\");\r\n            this.bleDevice.gatt.connect().then(async (server) => {\r\n                if(this.reconnect){\r\n                    this.gattServer = server;\r\n                    await this.initServices(0);\r\n                }else{\r\n                    console.log(\"[auto-reconnect bms] reconnected but reconnect is off\");\r\n                    server.disconnect();\r\n                }\r\n            }).catch((error) => {\r\n                console.log(\"[auto-reconnect bms] failed: \" + error);\r\n\r\n                // maybe catch the android timeout error\r\n\r\n                // trying again\r\n                this.#handleReconnect();\r\n            });\r\n        }\r\n    }\r\n\r\n    #updateDeviceInfo(deviceInfo) {\r\n        if (deviceInfo.modelNumber.toLowerCase().includes(\"relay\")) {\r\n            deviceInfo.switchType = \"relay\";\r\n        } else if (deviceInfo.modelNumber.toLowerCase().includes(\"mosfet\")) {\r\n            deviceInfo.switchType = \"mosfet\";\r\n        } else {\r\n            deviceInfo.switchType = \"unknown\";\r\n        }\r\n        if (deviceInfo.modelNumber.toLowerCase().includes(\"single\")) {\r\n            deviceInfo.channelCount = 1;\r\n        } else if (deviceInfo.modelNumber.toLowerCase().includes(\"double\")) {\r\n            deviceInfo.channelCount = 2;\r\n        } else if (deviceInfo.modelNumber.toLowerCase().includes(\"triple\")) {\r\n            deviceInfo.channelCount = 3;\r\n        }\r\n\r\n        this.deviceInfoMgr.devicesInfo.updateDeviceInfo(\"BMS\", deviceInfo);\r\n\r\n        // temporarily disabled\r\n        this.#checkFWUpdate(deviceInfo);\r\n\r\n\r\n        if(deviceInfo.modelNumber === \"not supported\"){\r\n            return;\r\n        }\r\n\r\n        // if model string is supported, check for topology and do specific stuff\r\n        if(deviceInfo.switchType === \"relay\"){\r\n            this.#setRelaisSpecificLabels();\r\n        }\r\n        if(deviceInfo.switchType === \"mosfet\"){\r\n            this.#setMosfetSpecificLabels();\r\n        }\r\n    }\r\n\r\n    #setRelaisSpecificLabels(){\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_3__[\"default\"].setValueTexts(this.bmsPrechargeTempLabels, \"BMS-Extern Temp:\");\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_3__[\"default\"].setValueTexts(this.bmsMaxPrechargeTempLabels, \"max BMS<br>Extern Temp:\");\r\n    }\r\n\r\n    #setMosfetSpecificLabels(){\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_3__[\"default\"].setValueTexts(this.bmsPrechargeTempLabels, \"BMS-Precharge<br>Temp:\");\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_3__[\"default\"].setValueTexts(this.bmsMaxPrechargeTempLabels, \"max Precharge<br>Temp:\");\r\n    }\r\n\r\n    #checkFWUpdate(deviceInfo){\r\n        const url = 'https://api.github.com/repos/Dev-Voltaic/Voltaic_BMS/releases/latest';\r\n\r\n        try {\r\n            fetch(url).then((response) => {\r\n                response.text().then((text) => {\r\n                    const newestFirmwareVersion = JSON.parse(text)[\"tag_name\"];\r\n\r\n                    if(deviceInfo.firmwareRevision !== newestFirmwareVersion){\r\n                        this.firmwareUpdateText.innerHTML = \"<a href='https://github.com/Dev-Voltaic/Voltaic_BMS'>\"\r\n                            + \"Newest Firmware Version is: \"\r\n                            + newestFirmwareVersion\r\n                            + \"<br>Have you considered updating</a>?\";\r\n\r\n                        this.firmwareUpdateText.classList.add(\"fault\");\r\n                        this.firmwareUpdateText.classList.remove(\"hidden\");\r\n                    }\r\n                });\r\n            });\r\n        }catch (e){\r\n            // TypeError - failed to fetch\r\n            if(e instanceof TypeError){\r\n                this.firmwareUpdateText.innerHTML = \"Failed to get remote version info\";\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    async #getDeviceInfoSeq(){\r\n        let decoder = new TextDecoder('utf-8');\r\n\r\n\r\n        // Device information service\r\n        let service = await this.gattServer.getPrimaryService('device_information');\r\n\r\n        let deviceInfo = {};\r\n\r\n        await service.getCharacteristic(BluetoothUUID.getCharacteristic('hardware_revision_string')).then(async (characteristic) => {\r\n            await characteristic.readValue().then(value => {\r\n                deviceInfo.hardwareRevision = decoder.decode(value);\r\n            });\r\n        });\r\n\r\n        await service.getCharacteristic(BluetoothUUID.getCharacteristic('firmware_revision_string')).then(async (characteristic) => {\r\n            await characteristic.readValue().then(value => {\r\n                deviceInfo.firmwareRevision = decoder.decode(value);\r\n            });\r\n        });\r\n\r\n        await service.getCharacteristic(BluetoothUUID.getCharacteristic('model_number_string')).then(async (characteristic) => {\r\n            await characteristic.readValue().then(value => {\r\n                deviceInfo.modelNumber = decoder.decode(value);\r\n            });\r\n        }).catch(()=>{\r\n            deviceInfo.modelNumber = \"not supported\";\r\n        });\r\n\r\n        await service.getCharacteristic(BluetoothUUID.getCharacteristic('software_revision_string')).then(async (characteristic) => {\r\n            await characteristic.readValue().then(value => {\r\n                deviceInfo.serialNumber = decoder.decode(value);\r\n            });\r\n        }).catch(()=>{\r\n            deviceInfo.serialNumber =  \"not supported\";\r\n        });\r\n\r\n        this.#updateDeviceInfo(deviceInfo);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    async #getDevelopmentServiceSeq(){\r\n        let service = await this.gattServer.getPrimaryService(this.#developmentServiceUuid);\r\n\r\n        this.prechargeControlCharacteristic = await service.getCharacteristic(this.#prechargeControlCharacteristicUuid);\r\n        this.channelControlCharacteristic = await service.getCharacteristic(this.#channelControlCharacteristicUuid);\r\n        this.uptimeCharacteristic = await service.getCharacteristic(this.#uptimeCharacteristicUuid);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    async #getRuntimeControlServiceSeq(){\r\n        let service = await this.gattServer.getPrimaryService(this.#runtimeControlServiceUuid);\r\n\r\n        this.shutdownControlCharacteristic = await service.getCharacteristic(this.#shutdownControlCharacteristicUuid);\r\n\r\n        this.turnOnCharacteristic = await service.getCharacteristic(this.#turnOnCharacteristicUuid);\r\n\r\n        this.userGPOCharacteristic = await service.getCharacteristic(this.#userGPOCharacteristicUuid);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    async #getBMSConfigServiceSeq(){\r\n        let service = await this.gattServer.getPrimaryService(this.#configServiceUuid)\r\n\r\n        this.bmsConfigCharacteristic = await service.getCharacteristic(this.#configCharacteristicUuid);\r\n        this.calibCharacteristic = await service.getCharacteristic(this.#calibCharacteristicUuid);\r\n\r\n        service.getCharacteristic(this.#deviceNameSetCharacteristicUuid).then((characteristic) => {\r\n            this.deviceNameCharacteristic = characteristic;\r\n        }).catch(()=>{\r\n            console.log(\"older firmware - no device name write support\");\r\n        });\r\n    }\r\n\r\n\r\n    async getDeviceName(){\r\n        // only read device name if characteristic is supported\r\n        if(typeof this.deviceNameCharacteristic !== \"undefined\"){\r\n            let decoder = new TextDecoder('utf-8');\r\n\r\n            this.name = decoder.decode(await this.deviceNameCharacteristic.readValue());\r\n\r\n\r\n            if(typeof this.name === \"undefined\"){\r\n                _helpers_small_functions__WEBPACK_IMPORTED_MODULE_3__[\"default\"].setValueValues(this.deviceNameFields, \"too old firmware\");\r\n            }else{\r\n                _helpers_small_functions__WEBPACK_IMPORTED_MODULE_3__[\"default\"].setValueValues(this.deviceNameFields, this.name);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    async #getBMSAlertServiceSeq() {\r\n        let service = await this.gattServer.getPrimaryService(this.#alertWarningServiceUuid);\r\n\r\n\r\n        this.warningCharacteristic = await service.getCharacteristic(this.#warningCharacteristicUuid);\r\n        await this.warningCharacteristic.startNotifications();\r\n        this.warningCharacteristic.addEventListener('characteristicvaluechanged', this.#handleWarningIndication);\r\n\r\n\r\n        this.alertCharacteristic = await service.getCharacteristic(this.#alertCharacteristicUuid);\r\n        await this.alertCharacteristic.startNotifications();\r\n        this.alertCharacteristic.addEventListener('characteristicvaluechanged', this.#handleAlertIndication);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    async #getBMSDataloggingServiceSeq(){\r\n        let dataLog = await this.gattServer.getPrimaryService(this.#dataLoggingServiceUuid);\r\n        this.dataLoggingCharacteristic = await dataLog.getCharacteristic(this.#dataLoggingCharacteristicUuid);\r\n\r\n        this.setAutoconnectBMSText(\"Enabling Datalogging\");\r\n        await this.dataLoggingCharacteristic.startNotifications();\r\n\r\n        this.setAutoconnectBMSText(\"Successfully connected!\");\r\n        this.dataLoggingCharacteristic.addEventListener('characteristicvaluechanged', (event)=>{\r\n            this.bmsDataProcessor.processData(event);\r\n        });\r\n    }\r\n\r\n    async pauseDataLogging(){\r\n        await this.dataLoggingCharacteristic.stopNotifications();\r\n    }\r\n    async unPauseDataLogging(){\r\n        await this.dataLoggingCharacteristic.startNotifications();\r\n    }\r\n\r\n    // mostly redundant but nice to have\r\n    #handleWarningIndication(event){\r\n        let warningValue = event.target.value;\r\n        this.warningBuffer = (((warningValue.getUint8(3) << 24) | (warningValue.getUint8(2) << 16)) | (warningValue.getUint8(1) << 8)) | (warningValue.getUint8(0));\r\n    }\r\n\r\n    // the error popup windows are too annoying\r\n    // - franz\r\n    // also basically useless now since alert always gets polled when in fault mode\r\n    #handleAlertIndication(event){\r\n        let alertValue = event.target.value;\r\n        this.alertBuffer = (((alertValue.getUint8(3) << 24) | (alertValue.getUint8(2) << 16)) | (alertValue.getUint8(1) << 8)) | (alertValue.getUint8(0));\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    // poll faults from characteristic when data logging gives state 4 (fault)\r\n    pollFaults(){\r\n        // with no logging data, there is no need to poll the faults\r\n        if(!this.bmsDataProcessor.isInitialised()){\r\n            setTimeout(() => {\r\n                this.pollFaults();\r\n            }, 500);\r\n            return;\r\n        }\r\n\r\n        // only poll faults if bms is connected and data logging suggests fault state\r\n        if(this.bmsDataProcessor.stateMachineState === 4 && this.isConnected()){\r\n            // try catch for \"gatt operation already in progress\"\r\n            this.alertCharacteristic.readValue().then(alertValue => {\r\n                this.alertBuffer = (((alertValue.getUint8(3) << 24) | (alertValue.getUint8(2) << 16)) | (alertValue.getUint8(1) << 8)) | (alertValue.getUint8(0));\r\n            });\r\n\r\n            // try catch for \"gatt operation already in progress\"\r\n            this.warningCharacteristic.readValue().then(warningValue => {\r\n                this.warningBuffer = (((warningValue.getUint8(3) << 24) | (warningValue.getUint8(2) << 16)) | (warningValue.getUint8(1) << 8)) | (warningValue.getUint8(0))\r\n            });\r\n            this.updateWarningFields(this.warningBuffer, this.alertBuffer);\r\n        }else{\r\n            // do not display any faults if not in fault mode & not connected\r\n            this.alertBuffer = 0;\r\n            this.warningBuffer = 0;\r\n            this.updateWarningFields(this.warningBuffer, this.alertBuffer);\r\n        }\r\n        // recursive call\r\n        setTimeout(() => {\r\n            this.pollFaults();\r\n        }, 500);\r\n    }\r\n\r\n    // get uptime from development service every 15 seconds\r\n    #pollUptime(recursive) {\r\n        // not really able to filter this, has to be done all the time while connected\r\n        if (this.isConnected()) {\r\n            try {\r\n                this.uptimeCharacteristic.readValue().then(alertValue => {\r\n                    let uptimeValue =\r\n                        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_3__[\"default\"].handleSignedBullshit64(\r\n                            (alertValue.getUint8(7) << 56) | (alertValue.getUint8(6) << 48) |\r\n                            (alertValue.getUint8(5) << 40) | (alertValue.getUint8(4) << 32) |\r\n                            (alertValue.getUint8(3) << 24) | (alertValue.getUint8(2) << 16) |\r\n                            (alertValue.getUint8(1) << 8) | (alertValue.getUint8(0)));\r\n                    this.#lastUptime = -uptimeValue;\r\n                    this.#countingUptime = 0;\r\n                });\r\n            } catch (error) { //\"gatt operation already in progress\"\r\n            }\r\n\r\n        }\r\n        if(recursive){\r\n            setTimeout(() => {\r\n                this.#pollUptime(true);\r\n            }, 15000);\r\n        }\r\n    }\r\n\r\n    // set uptime gauge every second - gets synced uptime every 15 seconds, \"interpolates\" between the syncs\r\n    #setUptime() {\r\n        if (this.isConnected()) {\r\n            if(this.#lastUptime === 0){\r\n                // call pollUptime if the bms just connected\r\n                this.#pollUptime(false);\r\n            }else{\r\n                this.#countingUptime += 1000;\r\n                this.setOnTime(Math.floor((this.#lastUptime + this.#countingUptime) / 1000));\r\n            }\r\n        }\r\n        setTimeout(()=>{\r\n            this.#setUptime();\r\n        }, 1000);\r\n    }\r\n\r\n\r\n    clearAlerts(counter, _){\r\n        if (counter === 10){\r\n            //alert(\"Failed to clear alerts: \" + error);\r\n            return;\r\n        }\r\n\r\n        // NOT SURE WHICH ERROR COMES BACK IF IT FAILS!\r\n        this.alertCharacteristic.writeValue(Uint8Array.from([0]).buffer)\r\n            .then(() => {\r\n                // clear everything (might not be needed as they will automagically clear on the next poll)\r\n                this.updateWarningFields(this.warningBuffer, this.alertBuffer);\r\n            })\r\n            .catch(error => {\r\n                setTimeout( ()=>{\r\n                    this.clearAlerts(counter + 1, error);\r\n                }, 100);\r\n            });\r\n    }\r\n\r\n\r\n\r\n\r\n    resetBMSValues() {\r\n        this.bmsDataProcessor.remainingEnergy1 = 0;\r\n        this.bmsDataProcessor.remainingEnergy2 = 0;\r\n        this.bmsDataProcessor.remainingEnergy3 = 0;\r\n\r\n        // reset warning buffer and also update the fields\r\n        this.alertBuffer = 0;\r\n        this.warningBuffer = 0;\r\n        this.updateWarningFields(this.warningBuffer, this.alertBuffer);\r\n\r\n        // reset the bms dataLoggingBuffer\r\n        this.bmsDataProcessor.bmsAveragingBuffer = [];\r\n\r\n        // reset uptime gauge\r\n        this.setOnTime(0);\r\n\r\n        this.bmsDataProcessor.maxValueBuffer = [];\r\n\r\n        // hide board info, calib & config if not already hidden\r\n        this.hideAllSettings();\r\n    }\r\n\r\n}\n\n//# sourceURL=webpack://dragonbms-interface-web/./js/ble/bms.js?");

/***/ }),

/***/ "./js/ble/tacho.js":
/*!*************************!*\
  !*** ./js/ble/tacho.js ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ tacho)\n/* harmony export */ });\n/* harmony import */ var _dataProcessing_tacho_processing__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../dataProcessing/tacho_processing */ \"./js/dataProcessing/tacho_processing.js\");\n/* harmony import */ var _helpers_connectionWatchdog__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/connectionWatchdog */ \"./js/helpers/connectionWatchdog.js\");\n/* harmony import */ var _canBridge__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../canBridge */ \"./js/canBridge.js\");\n/* harmony import */ var _ble__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ble */ \"./js/ble/ble.js\");\n/* harmony import */ var _gui__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../gui */ \"./js/gui.js\");\n/* harmony import */ var _settings_tacho_config__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../settings/tacho-config */ \"./js/settings/tacho-config.js\");\n/* harmony import */ var _helpers_zoom__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../helpers/zoom */ \"./js/helpers/zoom.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass tacho extends _gui__WEBPACK_IMPORTED_MODULE_4__[\"default\"]{\r\n\r\n\r\n\r\n    // GIGA PFUSCH\r\n\r\n    addPfuschListeners(){\r\n        document.getElementById(\"reverse-fl\").addEventListener(\"change\", ()=>{\r\n            let checked = document.getElementById(\"reverse-fl\").checked;\r\n\r\n            let msg = new _canBridge__WEBPACK_IMPORTED_MODULE_2__.canMessage();\r\n            msg.init(false, 0x68, [checked]);\r\n\r\n            console.log(msg);\r\n\r\n            this.cB.sendMessage(msg);\r\n        });\r\n        document.getElementById(\"reverse-fr\").addEventListener(\"change\", ()=>{\r\n            let checked = document.getElementById(\"reverse-fr\").checked;\r\n\r\n            let msg = new _canBridge__WEBPACK_IMPORTED_MODULE_2__.canMessage();\r\n            msg.init(false, 0x69, [checked]);\r\n\r\n            console.log(msg);\r\n\r\n            this.cB.sendMessage(msg);\r\n        });\r\n        document.getElementById(\"reverse-rl\").addEventListener(\"change\", ()=>{\r\n            let checked = document.getElementById(\"reverse-rl\").checked;\r\n\r\n            let msg = new _canBridge__WEBPACK_IMPORTED_MODULE_2__.canMessage();\r\n            msg.init(false, 0x70, [checked]);\r\n\r\n            console.log(msg);\r\n\r\n            this.cB.sendMessage(msg);\r\n        });\r\n        document.getElementById(\"reverse-rr\").addEventListener(\"change\", ()=>{\r\n            let checked = document.getElementById(\"reverse-rr\").checked;\r\n\r\n            let msg = new _canBridge__WEBPACK_IMPORTED_MODULE_2__.canMessage();\r\n            msg.init(false, 0x71, [checked]);\r\n\r\n            console.log(msg);\r\n\r\n            this.cB.sendMessage(msg);\r\n        });\r\n    }\r\n\r\n\r\n\r\n    connectionState;\r\n\r\n    gattServer;\r\n\r\n    bleDevice;\r\n\r\n    reconnect;\r\n\r\n    #inlineDataLoggingServiceUuid = \"ffd70200-fe1b-4b6d-aba1-36cc0bab3e3d\";\r\n    #inlineDataLoggingCharacteristicUuid= \"ffd70201-fe1b-4b6d-aba1-36cc0bab3e3d\";\r\n    inlineDataLoggingCharacteristic;\r\n\r\n    #inlineConfigServiceUuid = \"ffd70100-fe1b-4b6d-aba1-36cc0bab3e3d\";\r\n    #inlineConfigCharacteristicUuid = \"ffd70101-fe1b-4b6d-aba1-36cc0bab3e3d\";\r\n    inlineConfigCharacteristic;\r\n    #inlineOdometerCharacteristicUuid = \"ffd70102-fe1b-4b6d-aba1-36cc0bab3e3d\";\r\n    inlineOdometerCharacteristic;\r\n\r\n    #otaUpdateServiceUuid = '8d53dc1d-1db7-4cd3-868b-8a527460aa84';\r\n\r\n    #voltaicCanBridgeServiceUuid = \"ffd70300-fe1b-4b6d-aba1-36cc0bab3e3d\";\r\n    #canBridgeTXCharacteristicUuid = \"ffd70301-fe1b-4b6d-aba1-36cc0bab3e3d\";\r\n    #canBridgeRXConfigCharacteristicUuid = \"ffd70302-fe1b-4b6d-aba1-36cc0bab3e3d\";\r\n    #canBridgeRXStreamCharacteristicUuid = \"ffd70303-fe1b-4b6d-aba1-36cc0bab3e3d\";\r\n    canBridgeTXCharacteristic;\r\n    cB;\r\n\r\n    disconnectedEventAbortController;\r\n\r\n    tachoDataProcessor;\r\n\r\n    interfaceConfig;\r\n\r\n    constructor(bmsObj, interfaceConfig, dataLoggingMgr, deviceInfoMgr){\r\n        super();\r\n        this.connectionState = _ble__WEBPACK_IMPORTED_MODULE_3__[\"default\"].disconnected;\r\n\r\n        this.linkedBMSObj = bmsObj;\r\n\r\n        this.interfaceConfig = interfaceConfig;\r\n\r\n        this.dataLoggingMgr = dataLoggingMgr;\r\n\r\n        this.deviceInfoMgr = deviceInfoMgr;\r\n\r\n        this.disconnectedEventAbortController = new AbortController();\r\n\r\n        this.tachoConfigObj = new _settings_tacho_config__WEBPACK_IMPORTED_MODULE_5__[\"default\"](this);\r\n        // adding event listeners separately to avoid having multiple listeners in the future\r\n        this.tachoConfigObj.addEventListeners();\r\n\r\n        this.tachoDataProcessor = new _dataProcessing_tacho_processing__WEBPACK_IMPORTED_MODULE_0__[\"default\"](this, this.interfaceConfig, this.dataLoggingMgr);\r\n\r\n        this.connectionWatchDog = new _helpers_connectionWatchdog__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this.interfaceConfig.connectionStepTimeout * 1000, ()=>{\r\n            console.log(\"[tacho connection] connection Watchdog timed out!\");\r\n            this.disconnect().then();\r\n        });\r\n    }\r\n\r\n    isConnected(){\r\n        return this.connectionState === _ble__WEBPACK_IMPORTED_MODULE_3__[\"default\"].connected;\r\n    }\r\n\r\n    isDisconnected(){\r\n        return this.connectionState === _ble__WEBPACK_IMPORTED_MODULE_3__[\"default\"].disconnected;\r\n    }\r\n\r\n\r\n    setServiceDoneCallback(cb){\r\n        this.serviceInitDoneCB = cb;\r\n    }\r\n\r\n\r\n    connect() {\r\n\r\n        // ignore requests to connect if already connected\r\n        if(!this.isDisconnected()){\r\n            return;\r\n        }\r\n\r\n        // indicate searching\r\n        this.setAutoconnectTachoText(\"Searching\");\r\n        this.connectionState = _ble__WEBPACK_IMPORTED_MODULE_3__[\"default\"].searching;\r\n\r\n\r\n        // actually start searching\r\n        const options = this.#getSearchOptions();\r\n        navigator.bluetooth.requestDevice(options)\r\n            .then((device) => {\r\n                if(this.connectionState !== _ble__WEBPACK_IMPORTED_MODULE_3__[\"default\"].searching){\r\n                    console.log(\"[tacho connection] prevented from connecting two devices\");\r\n                    return;\r\n                }\r\n\r\n\r\n                // always reset fault text if new device is found!\r\n                this.resetAutoconnectTachoSilentInstant();\r\n\r\n                this.setAutoconnectTachoText(\"Found Device\");\r\n\r\n\r\n                this.connectionState = _ble__WEBPACK_IMPORTED_MODULE_3__[\"default\"].connecting;\r\n\r\n                // stops gattserverdisconnected event - no more than one callback active at a time\r\n                // if stops from aborting before the first callback is even registered\r\n                if(typeof this.bleDevice !== \"undefined\" && this.bleDevice !== null){\r\n                    this.disconnectedEventAbortController.abort();\r\n                }\r\n                // reset abortController to not abort the incoming registration\r\n                this.disconnectedEventAbortController = new AbortController();\r\n\r\n                this.bleDevice = device;\r\n\r\n                this.bleDevice.addEventListener('gattserverdisconnected', ()=> {\r\n\r\n                    console.log(\"[tacho connection] disconnected\");\r\n\r\n                    // this is only true if user clicked \"disconnect all devices\"\r\n                    // otherwise the connection state will only be updated in the #disconnected function\r\n                    if(this.isDisconnected()){\r\n                        // basically removes this event listener\r\n                        // without this, the event listener wouldn't be deleted\r\n                        // and multiple event listeners would be possible\r\n                        this.disconnectedEventAbortController.abort();\r\n                    }\r\n\r\n                    this.#disconnected();\r\n                },{signal: this.disconnectedEventAbortController.signal});\r\n\r\n\r\n                this.setAutoconnectTachoText(\"Connecting Device\");\r\n                this.connectionWatchDog.start();\r\n                device.gatt.connect().then((server) => {\r\n                    this.gattServer = server;\r\n                    this.#initServices(0).then();\r\n                }).catch(()=>{\r\n                    this.connectionWatchDog.stop();\r\n\r\n                    this.autoconnectTachoError();\r\n                    this.#disconnected();\r\n\r\n                    // reset the error message in the overlay after one second\r\n                    setTimeout(() => {\r\n                        this.resetAutoconnectTachoSilentInstant();\r\n                    }, 1000);\r\n                });\r\n\r\n        }).catch(error => {\r\n            console.log('[tacho connection] User most likely cancelled: ' + error);\r\n\r\n            this.connectionState = _ble__WEBPACK_IMPORTED_MODULE_3__[\"default\"].disconnected;\r\n\r\n            // display error message in \"Connect Tacho\" overlay\r\n            this.autoconnectTachoError();\r\n\r\n            // reset the error message in the overlay after one second\r\n            setTimeout(() => {\r\n                this.resetAutoconnectTachoSilentInstant();\r\n            }, 1000);\r\n        });\r\n    }\r\n\r\n\r\n    async #initServices(attemptNumber){\r\n        if(this.connectionWatchDog.timedOut){return;}\r\n        this.connectionWatchDog.start();\r\n\r\n        try{\r\n            await this.gattServer.connect();\r\n            if(this.connectionWatchDog.timedOut){return;}\r\n            console.log(\"[tacho connection] server connected\");\r\n\r\n            this.setAutoconnectTachoText(\"Getting Config Service\");\r\n            this.connectionWatchDog.start();\r\n            await this.#getInlineConfigServiceSeq();\r\n\r\n            if(this.connectionWatchDog.timedOut){return;}\r\n            this.setAutoconnectTachoText(\"Getting Data Logging Service\");\r\n            this.connectionWatchDog.start();\r\n            await this.#getInlineDataLoggingService();\r\n            if(this.connectionWatchDog.timedOut){return;}\r\n\r\n            this.setAutoconnectTachoText(\"Getting Can-Bridge Service\");\r\n            this.connectionWatchDog.start();\r\n\r\n            let canBridgeSupported = true;\r\n            try{\r\n                await this.#getCanBridgeService();\r\n            }catch (e) {\r\n                canBridgeSupported = false;\r\n\r\n                this.setAutoconnectTachoText(\"Can-Bridge Service not supported\");\r\n                console.log(\"[Tacho canBridge] not supported: \" + e);\r\n            }\r\n\r\n            if(canBridgeSupported){\r\n                this.cB = new _canBridge__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this.canBridgeTXCharacteristic, this.canBridgeRXConfigCharacteristic, this.canBridgeRXStreamCharacteristic);\r\n\r\n                this.addPfuschListeners();\r\n            }else{\r\n                document.getElementById(\"reverse-fr\").disabled = true;\r\n                document.getElementById(\"reverse-fl\").disabled = true;\r\n                document.getElementById(\"reverse-rl\").disabled = true;\r\n                document.getElementById(\"reverse-rr\").disabled = true;\r\n            }\r\n\r\n            if(this.connectionWatchDog.timedOut){return;}\r\n\r\n\r\n            this.setAutoconnectTachoText(\"Enabling Data Logging\");\r\n\r\n            this.connectionWatchDog.start();\r\n            // no distinction like in bms because the config is always read\r\n            this.inlineDataLoggingCharacteristic.startNotifications().then(_ => {\r\n                if(this.connectionWatchDog.timedOut){return;}\r\n                this.connectionWatchDog.start();\r\n                this.tachoConfigObj.readInlineConfig(()=>{\r\n                    this.connectionWatchDog.stop();\r\n\r\n                    this.setAutoconnectTachoText(\"Successfully connected!\");\r\n\r\n                    this.reconnect = true;\r\n\r\n                    this.connectionState = _ble__WEBPACK_IMPORTED_MODULE_3__[\"default\"].connected;\r\n\r\n\r\n                    // longer time window to see the connection process of the bms if it's either searching or connecting\r\n                    if (this.linkedBMSObj.connectionState === _ble__WEBPACK_IMPORTED_MODULE_3__[\"default\"].connecting\r\n                        || this.linkedBMSObj.connectionState === _ble__WEBPACK_IMPORTED_MODULE_3__[\"default\"].searching) {\r\n                        setTimeout(() => {\r\n                            if(!this.isConnected()){\r\n                                // catch if disconnect happened between success and enabling!\r\n                                return;\r\n                            }\r\n                            this.inlineConnected();\r\n                            this.disableNothingConnectedOverlay();\r\n                        }, 1000);\r\n                    } else {\r\n                        // shorter window as bms is disconnected anyway\r\n                        setTimeout(() => {\r\n                            if(!this.isConnected()){\r\n                                // catch if disconnect happened between success and enabling!\r\n                                return;\r\n                            }\r\n                            this.inlineConnected();\r\n                            this.disableNothingConnectedOverlay();\r\n                        }, 500);\r\n                    }\r\n\r\n                    this.inlineDataLoggingCharacteristic.addEventListener('characteristicvaluechanged', (event) => {\r\n                        this.tachoDataProcessor.processData(event);\r\n                    });\r\n                });\r\n            }).catch(error => {\r\n                this.connectionWatchDog.stop();\r\n\r\n                console.log('[tacho connection] DataLogging start error: ' + error);\r\n\r\n                this.inlineDisconnected();\r\n                this.resetAutoconnectTacho();\r\n            });\r\n        }catch(e){\r\n            this.connectionWatchDog.stop();\r\n\r\n            if (e instanceof DOMException) {\r\n                if (e.toString().includes(\"UUID\")) {\r\n                    // DomException: No matching UUID found\r\n                    this.setAutoconnectTachoText(\"Not a Tacho!\");\r\n\r\n                    console.log(\"[tacho connection] Not a tacho!\");\r\n\r\n                    setTimeout(() => {\r\n                        this.resetAutoconnectTachoSilentInstant();\r\n                    }, 1000);\r\n                }\r\n\r\n                await this.disconnect();\r\n\r\n                // this also fires when \"disconnect all devices\" is pressed during init,\r\n                // which means it is best to stop attempts\r\n                return;\r\n\r\n            }\r\n\r\n            if(attemptNumber > 3){\r\n                await this.disconnect();\r\n\r\n                // if connection fails during service init, abort the already registered gattserverdisconnected handler\r\n                this.disconnectedEventAbortController.abort();\r\n                this.resetAutoconnectTacho();\r\n                return;\r\n            }\r\n\r\n            this.setAutoconnectTachoText(\"Attempt #\" + (attemptNumber+1));\r\n\r\n            // timeout to make the bluetooth stack a bit more relaxed xD\r\n            setTimeout(()=>{\r\n                this.#initServices(attemptNumber+1);\r\n            }, 500);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    async pauseDataLogging(){\r\n        await this.inlineDataLoggingCharacteristic.stopNotifications();\r\n    }\r\n    async unPauseDataLogging(){\r\n        await this.inlineDataLoggingCharacteristic.startNotifications();\r\n    }\r\n\r\n\r\n\r\n    #getSearchOptions(){\r\n        let options = {\r\n            optionalServices: [\r\n                this.#inlineDataLoggingServiceUuid,\r\n                this.#inlineConfigServiceUuid,\r\n                this.#otaUpdateServiceUuid,\r\n                this.#voltaicCanBridgeServiceUuid,\r\n                'device_information'\r\n            ]\r\n        };\r\n        if(this.interfaceConfig.filterBMSConnection) {\r\n            options.filters = [{\r\n                manufacturerData: [{\r\n                    // nice\r\n                    companyIdentifier: 0x6969\r\n                }]\r\n            }];\r\n        }else{\r\n            options.acceptAllDevices = true;\r\n        }\r\n\r\n        return options;\r\n    }\r\n\r\n\r\n    async disconnect() {\r\n        this.reconnect = false;\r\n\r\n        // only disconnect if not already disconnected\r\n        try{\r\n            await this.bleDevice.gatt.disconnect();\r\n\r\n            // check if disconnect really happened and try again if not\r\n            // BE CAUTIOUS, THIS FIRES QUITE A FEW TIMES\r\n            setTimeout(()=>{\r\n                if(!this.isDisconnected()){\r\n                    this.disconnect();\r\n                }\r\n            }, 100);\r\n        }catch(e){\r\n            console.log(\"[tacho connection] problem while disconnecting - manually enabling overlay\");\r\n\r\n            this.#disconnected();\r\n\r\n            this.connectionState = _ble__WEBPACK_IMPORTED_MODULE_3__[\"default\"].disconnected;\r\n        }\r\n    }\r\n\r\n    #disconnected(){\r\n        this.connectionWatchDog.stop();\r\n\r\n        this.connectionState = _ble__WEBPACK_IMPORTED_MODULE_3__[\"default\"].disconnected;\r\n\r\n        // equivalent of disabledBoardGauges\r\n        this.inlineDisconnected();\r\n\r\n        this.resetInlineValues();\r\n\r\n\r\n        // enable nothingConnectedOverlay if tacho was the last device to disconnect\r\n        if (!this.linkedBMSObj.isConnected()) {\r\n            _helpers_zoom__WEBPACK_IMPORTED_MODULE_6__.zoom.out({element: this.table, padding: 0, pan: false});\r\n            this.enableNothingConnectedOverlay();\r\n        }\r\n\r\n        this.resetAutoconnectTachoSilentInstant();\r\n\r\n\r\n        if(this.reconnect){\r\n            console.log(\"[auto-reconnect tacho] starting\");\r\n\r\n            this.setAutoconnectTachoText(\"Auto-reconnect active\");\r\n\r\n            this.#handleReconnect();\r\n        }\r\n    }\r\n\r\n\r\n    #handleReconnect(){\r\n        if(this.isDisconnected() && this.reconnect){\r\n            this.bleDevice.gatt.connect().then(async (server) => {\r\n                if(this.reconnect){\r\n                    this.gattServer = server;\r\n                    await this.#initServices(0);\r\n                }else{\r\n                    console.log(\"[auto-reconnect tacho] reconnected but reconnect is off\");\r\n                    server.disconnect();\r\n                }\r\n            }).catch((error) => {\r\n                console.log(\"[auto-reconnect tacho] failed: \" + error);\r\n\r\n                // maybe catch the android timeout error\r\n\r\n                // trying again\r\n                this.#handleReconnect();\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    async #getCanBridgeService(){\r\n        let service = await this.gattServer.getPrimaryService(this.#voltaicCanBridgeServiceUuid);\r\n\r\n        this.canBridgeTXCharacteristic = await service.getCharacteristic(this.#canBridgeTXCharacteristicUuid);\r\n\r\n        this.canBridgeRXConfigCharacteristic = await service.getCharacteristic(this.#canBridgeRXConfigCharacteristicUuid);\r\n        this.canBridgeRXStreamCharacteristic = await service.getCharacteristic(this.#canBridgeRXStreamCharacteristicUuid);\r\n    }\r\n\r\n\r\n\r\n    async #getInlineConfigServiceSeq(){\r\n        let service = await this.gattServer.getPrimaryService(this.#inlineConfigServiceUuid);\r\n\r\n        this.inlineConfigCharacteristic = await service.getCharacteristic(this.#inlineConfigCharacteristicUuid);\r\n        this.inlineOdometerCharacteristic = await service.getCharacteristic(this.#inlineOdometerCharacteristicUuid);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    async #getInlineDataLoggingService() {\r\n        let service = await this.gattServer.getPrimaryService(this.#inlineDataLoggingServiceUuid);\r\n\r\n        this.inlineDataLoggingCharacteristic = await service.getCharacteristic(this.#inlineDataLoggingCharacteristicUuid);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    resetInlineValues() {\r\n        this.tachoDataProcessor.tachoAveragingBuffer = [];\r\n        this.tachoDataProcessor.maxInlineValueBuffer = [];\r\n\r\n        // reset range calculation stuff\r\n        this.tachoDataProcessor.drivenDistanceOffset = -1;\r\n    }\r\n\r\n\r\n\r\n}\n\n//# sourceURL=webpack://dragonbms-interface-web/./js/ble/tacho.js?");

/***/ }),

/***/ "./js/canBridge.js":
/*!*************************!*\
  !*** ./js/canBridge.js ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   canId: () => (/* binding */ canId),\n/* harmony export */   canMessage: () => (/* binding */ canMessage),\n/* harmony export */   \"default\": () => (/* binding */ canBridge)\n/* harmony export */ });\n/* harmony import */ var _gui_elements__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./gui_elements */ \"./js/gui_elements.js\");\n/* harmony import */ var _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./helpers/small_functions */ \"./js/helpers/small_functions.js\");\n\r\n\r\n\r\n\r\n\r\n\r\nclass canId{\r\n    constructor(){\r\n\r\n    }\r\n\r\n    getBytes(){\r\n        let bytes = [];\r\n\r\n        if(this.extended === false){\r\n            bytes[0] = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].to16bit(this.id)[1];\r\n            bytes[1] = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].to16bit(this.id)[0];\r\n        }else{\r\n            // set the upmost bit to 1 to indicate extended ID\r\n            bytes[0] = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].to32bit(this.id)[3] | 0b10000000;\r\n            bytes[1] = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].to32bit(this.id)[2];\r\n            bytes[2] = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].to32bit(this.id)[1];\r\n            bytes[3] = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].to32bit(this.id)[0];\r\n        }\r\n\r\n        return bytes;\r\n    }\r\n\r\n    init(extended, id){\r\n        this.extended = extended;\r\n        this.id = id;\r\n    }\r\n\r\n    initFromBytes(bytes){\r\n        // return if amount of bytes can't be an id\r\n        if(bytes.length < 2){\r\n            return;\r\n        }\r\n\r\n        // read MSB of first byte as it indicates an extended id\r\n        if((bytes[0] >> 8) === 1){\r\n            // return if byte count doesn't satisfy indicated extended id\r\n            if(bytes.length < 4){\r\n                return;\r\n            }\r\n\r\n            this.extended = true;\r\n            // delete the indicator bit so the byte data isn't corrupted\r\n            bytes[0] = bytes[0] & 0b01111111;\r\n        }\r\n\r\n        if(this.extended){\r\n            this.id = ((((bytes[0] << 24) | (bytes[1] << 16)) | (bytes[2] << 8)) | bytes[3])\r\n        }else{\r\n            this.id = ((bytes[0] << 8) | bytes[1])\r\n        }\r\n    }\r\n}\r\n\r\n\r\nclass canMessage{\r\n    constructor(){\r\n    }\r\n\r\n    init(extended, id, data){\r\n        this.cId = new canId();\r\n        this.cId.init(extended, id);\r\n\r\n        // check for too long data object\r\n        if(data.length > 7){\r\n            return;\r\n        }\r\n\r\n        this.data = data;\r\n        this.dataLength = data.length;\r\n    }\r\n\r\n    initFromBytes(bytes){\r\n        this.cId = new canId();\r\n        this.cId.initFromBytes(bytes);\r\n\r\n        let dataBytes;\r\n\r\n        if(this.cId.extended){\r\n            dataBytes = bytes.slice(4);\r\n        }else{\r\n            dataBytes = bytes.slice(2);\r\n        }\r\n\r\n        this.data = dataBytes;\r\n    }\r\n\r\n    getBytes(){\r\n        let outgoingBytes = this.cId.getBytes();\r\n\r\n        for (let i = 0; i < this.dataLength; i++) {\r\n            outgoingBytes.push(this.data[i]);\r\n        }\r\n\r\n        return outgoingBytes;\r\n    }\r\n}\r\n\r\n\r\nclass canBridge extends _gui_elements__WEBPACK_IMPORTED_MODULE_0__[\"default\"]{\r\n\r\n    constructor(txCharacteristic, rxConfigCharacteristic, rxStreamCharacteristic) {\r\n        super();\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].classListValueTextsRemove(this.canBridgeElements, \"disabled\");\r\n\r\n        this.txChar = txCharacteristic;\r\n        this.rxConfigChar = rxConfigCharacteristic;\r\n        this.rxStreamChar = rxStreamCharacteristic;\r\n\r\n        // in this case, canBridge is not yet supported by the firmware\r\n        if(typeof this.txChar === \"undefined\"){\r\n\r\n            console.log(\"[Tacho canBridge] canBridge not supported by firmware!\");\r\n            return;\r\n        }\r\n\r\n        // add tx event listeners\r\n        this.#addEventListeners();\r\n\r\n        if(typeof this.rxConfigChar === \"undefined\"\r\n            || typeof this.rxStreamChar === \"undefined\") {\r\n\r\n            console.log(\"[Tacho canBridge] canBridge RX not supported, TX supported!\");\r\n        }\r\n\r\n        // add rx event listeners\r\n        this.addStreamListener();\r\n    }\r\n\r\n    sendMessage(canMessage){\r\n        let outgoingBytes = canMessage.getBytes();\r\n\r\n        this.txChar.writeValueWithoutResponse(Uint8Array.from(outgoingBytes).buffer);\r\n    }\r\n\r\n    async addStreamListener(){\r\n        this.rxStreamChar.addEventListener('characteristicvaluechanged', (event)=>{this.onRXReceive(event)});\r\n        await this.rxStreamChar.startNotifications();\r\n    }\r\n\r\n    onRXReceive(event){\r\n        let value = event.target.value;\r\n\r\n        // catch broken messages\r\n        if(value.byteLength < 2){\r\n            return;\r\n        }\r\n\r\n        let data = [];\r\n\r\n        for (let i = 0; i < value.byteLength; i++) {\r\n            data.push(value.getUint8(i));\r\n        }\r\n\r\n        let message = new canMessage();\r\n        message.initFromBytes(data);\r\n\r\n        console.log(message);\r\n\r\n\r\n        this.canRxGaugeText.innerHTML += \"<br>\" + message.cId.id + \"    \" + message.data;\r\n\r\n        let num_entries = this.canRxGaugeText.innerHTML.split(\"<br>\").length;\r\n\r\n        if(num_entries > 4){\r\n            let x = this.canRxGaugeText.innerHTML.split(\"<br>\").splice(1);\r\n            this.canRxGaugeText.innerHTML = x.join(\"<br>\");\r\n        }\r\n    }\r\n\r\n    addToWhiteList(extended, id){\r\n        let cId = new canId();\r\n        cId.init(extended, id);\r\n\r\n        return this.addCanIdToWhiteList(cId);\r\n    }\r\n\r\n    // returns true upon success, false upon error\r\n    addCanIdToWhiteList(canId){\r\n\r\n        // 0 for adding to the list\r\n        let outgoingBytes = [0].concat(canId.getBytes());\r\n\r\n        this.rxConfigChar.writeValue(Uint8Array.from(outgoingBytes).buffer).then(async _ => {\r\n            let listAfter = await this.getWhiteList();\r\n\r\n            console.log(\"list after:\");\r\n            console.log(listAfter);\r\n\r\n            let included = false;\r\n            for (const el of listAfter) {\r\n                if(el.id === canId.id){\r\n                    included = true;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if(included){\r\n                return true;\r\n            }\r\n\r\n            console.log(\"[Tacho canBridge] successful write but not included in whitelist after\")\r\n        }).catch(error => {\r\n            console.log(\"[Tacho canBridge] \" + error);\r\n        });\r\n\r\n        return false;\r\n    }\r\n\r\n    async getWhiteList(){\r\n\r\n        let dataBuffer = [];\r\n        try{\r\n            dataBuffer = await this.rxConfigChar.readValue();\r\n        }catch (e) {\r\n            console.log(e);\r\n            return [];\r\n        }\r\n\r\n        if(dataBuffer.byteLength < 3){\r\n            return;\r\n        }\r\n\r\n        let data = [];\r\n\r\n        for (let i = 0; i < dataBuffer.byteLength; i++) {\r\n            data.push(dataBuffer.getUint8(i));\r\n        }\r\n\r\n        console.log(\"[Tacho canBridge] whiteList length: \" + data[0]);\r\n\r\n        let whiteList = [];\r\n\r\n        // the data that is left to be interpreted\r\n        let iteratedData = data.slice(1);\r\n\r\n        console.log(iteratedData);\r\n\r\n        while(iteratedData.length >= 2){\r\n            let id = new canId();\r\n            id.initFromBytes(iteratedData);\r\n\r\n            whiteList.push(id);\r\n\r\n            // shorten the available data according to how many bytes the prev id took up\r\n            if(id.extended){\r\n                iteratedData = iteratedData.slice(4);\r\n            }else{\r\n                iteratedData = iteratedData.slice(2);\r\n            }\r\n        }\r\n\r\n        return whiteList;\r\n    }\r\n\r\n\r\n    #addEventListeners(){\r\n        this.canTxGaugeSend.addEventListener(\"click\", ()=>{\r\n            let message = this.#getCanTxMessageFromGUI();\r\n\r\n            this.sendMessage(message);\r\n        });\r\n\r\n        this.canRxGaugeSend.addEventListener(\"click\", () => {\r\n            this.#addCanRxMessageFromGUI();\r\n        });\r\n    }\r\n\r\n    #getCanTxMessageFromGUI(){\r\n        let extended = this.canTxGaugeExtended.checked;\r\n        let id = parseInt(this.canTxGaugeId.value);\r\n\r\n        let data = [];\r\n        if(parseInt(this.canTxGaugeD0.value) >= 0){\r\n            data.push(parseInt(this.canTxGaugeD0.value));\r\n        }\r\n        if(parseInt(this.canTxGaugeD1.value) >= 0){\r\n            data.push(parseInt(this.canTxGaugeD1.value));\r\n        }\r\n\r\n\r\n        // TEMPORARILY COMMENTED OUT FOR THE SHORTENED CAN INTERFACE TILE\r\n        /*\r\n        if(parseInt(this.canTxGaugeD2.value) >= 0){\r\n            data.push(parseInt(this.canTxGaugeD2.value));\r\n        }\r\n        if(parseInt(this.canTxGaugeD3.value) >= 0){\r\n            data.push(parseInt(this.canTxGaugeD3.value));\r\n        }\r\n        if(parseInt(this.canTxGaugeD4.value) >= 0){\r\n            data.push(parseInt(this.canTxGaugeD4.value));\r\n        }\r\n        if(parseInt(this.canTxGaugeD5.value) >= 0){\r\n            data.push(parseInt(this.canTxGaugeD5.value));\r\n        }\r\n        if(parseInt(this.canTxGaugeD6.value) >= 0){\r\n            data.push(parseInt(this.canTxGaugeD6.value));\r\n        }\r\n        if(parseInt(this.canTxGaugeD7.value) >= 0){\r\n            data.push(parseInt(this.canTxGaugeD7.value));\r\n        }\r\n\r\n        */\r\n\r\n        let cM = new canMessage();\r\n        cM.init(extended, id, data);\r\n        return cM;\r\n    }\r\n\r\n    #addCanRxMessageFromGUI(){\r\n        let extended = this.canRxGaugeExtended.checked;\r\n        let id = parseInt(this.canRxGaugeId.value);\r\n\r\n        return this.addToWhiteList(extended, id);\r\n    }\r\n\r\n}\n\n//# sourceURL=webpack://dragonbms-interface-web/./js/canBridge.js?");

/***/ }),

/***/ "./js/captureMode.js":
/*!***************************!*\
  !*** ./js/captureMode.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ captureModeManager)\n/* harmony export */ });\n/* harmony import */ var _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./helpers/small_functions */ \"./js/helpers/small_functions.js\");\n/* harmony import */ var _gui_elements__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./gui_elements */ \"./js/gui_elements.js\");\n/* harmony import */ var _helpers_zoom__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./helpers/zoom */ \"./js/helpers/zoom.js\");\n\r\n\r\n\r\n\r\nclass captureModeManager extends _gui_elements__WEBPACK_IMPORTED_MODULE_1__[\"default\"]{\r\n\r\n    video;\r\n\r\n    constraints;\r\n\r\n    constructor(){\r\n        super();\r\n\r\n        this.video = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"capture-mode-video\");\r\n\r\n        this.constraints = {\r\n            video: {\r\n                height: {\r\n                    min: 800\r\n                },\r\n                width: {\r\n                    min: 600\r\n                },\r\n                facingMode: {\r\n                    exact: \"environment\"\r\n                }\r\n            }\r\n        };\r\n\r\n        window.addEventListener('scroll', ()=>{\r\n            if(_helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].zoomedIn() && _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isScrolledIntoView(this.captureModeContainer)){\r\n                _helpers_zoom__WEBPACK_IMPORTED_MODULE_2__.zoom.out();\r\n            }\r\n        });\r\n\r\n        this.captureModeContainer.addEventListener(\"dblclick\", ()=>{\r\n\r\n            if(this.constraints.video.facingMode.exact === \"user\"){\r\n                this.constraints.video.facingMode.exact = \"environment\";\r\n            }else{\r\n                this.constraints.video.facingMode.exact = \"user\";\r\n            }\r\n\r\n            console.log(this.constraints);\r\n\r\n            try{\r\n                this.stopStream();\r\n            }catch(e){\r\n                console.log(\"probably no video started\");\r\n                console.log(e);\r\n            }\r\n            this.startStream(this.constraints).then();\r\n        });\r\n    }\r\n\r\n    activateCaptureMode(){\r\n        this.captureModeContainer.classList.remove(\"display-none\");\r\n\r\n        this.constraints.video.aspectRatio = { exact: (this.video.scrollHeight/this.video.scrollWidth)};\r\n\r\n        if ('mediaDevices' in navigator && navigator.mediaDevices.getUserMedia) {\r\n            this.startStream(this.constraints).then();\r\n        }\r\n    }\r\n\r\n    closeCaptureMode(){\r\n        this.captureModeContainer.classList.add(\"display-none\");\r\n\r\n        this.stopStream();\r\n    }\r\n\r\n\r\n\r\n    startStream = async (constraints) => {\r\n        const stream = await navigator.mediaDevices.getUserMedia(constraints);\r\n        this.handleStream(stream);\r\n    };\r\n\r\n    handleStream = (stream) => {\r\n        this.video.srcObject = stream;\r\n    };\r\n\r\n    stopStream(){\r\n        // return if there is no video stream to close\r\n        if(this.video.srcObject === null || typeof this.video.srcObject === \"undefined\"){\r\n            return;\r\n        }\r\n        this.video.srcObject.getTracks().forEach(function(track) {\r\n            track.stop();\r\n        });\r\n    }\r\n\r\n}\n\n//# sourceURL=webpack://dragonbms-interface-web/./js/captureMode.js?");

/***/ }),

/***/ "./js/connection_gui.js":
/*!******************************!*\
  !*** ./js/connection_gui.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ connectionGUIManager)\n/* harmony export */ });\n/* harmony import */ var _ble_ble__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ble/ble */ \"./js/ble/ble.js\");\n/* harmony import */ var _gui__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./gui */ \"./js/gui.js\");\n\r\n\r\n\r\n\r\nclass connectionGUIManager extends _gui__WEBPACK_IMPORTED_MODULE_1__[\"default\"]{\r\n\r\n    dotsCounter = 0;\r\n\r\n    constructor(bmsObj, tachoObj) {\r\n        super();\r\n\r\n        this.bmsObj = bmsObj;\r\n        this.tachoObj = tachoObj;\r\n\r\n        this.inlineDisconnected();\r\n\r\n        this.dotterBodge();\r\n\r\n        this.addEventListeners();\r\n    }\r\n\r\n\r\n    addEventListeners(){\r\n\r\n        // handler for the Nothing Connected overlay - Connect bms\r\n        this.connectBMSOverlayButton.addEventListener('click', () => {\r\n\r\n            // since there is no autoconnect feature now, the user should only be able to connect devices successively\r\n            if (this.tachoObj.connectionState === _ble_ble__WEBPACK_IMPORTED_MODULE_0__[\"default\"].searching) {\r\n                return;\r\n            }\r\n\r\n            // why was this here???\r\n            //document.getElementById(\"inline-gauge\").classList.add(\"inline-gauge-disabled\");\r\n\r\n            this.bmsObj.connect();\r\n        });\r\n\r\n        // handler for the nothing connected overlay - Connect tacho\r\n        this.connectTachoOverlayButton.addEventListener('click', () => {\r\n\r\n            // since there is no autoconnect feature now, the user should only be able to search for devices successively\r\n            if (this.bmsObj.connectionState === _ble_ble__WEBPACK_IMPORTED_MODULE_0__[\"default\"].searching) {\r\n                return;\r\n            }\r\n\r\n            this.tachoObj.connect();\r\n        });\r\n\r\n        // handler for the overlay over the tacho tile - connect tacho\r\n        this.connectTachoOverlay.addEventListener(\"click\", () => {\r\n            this.tachoObj.connect();\r\n        });\r\n\r\n\r\n        this.connectBMSOverlay.addEventListener(\"click\", () => {\r\n            this.bmsObj.connect();\r\n        });\r\n\r\n    }\r\n\r\n\r\n\r\n    // for making the autoconnect do the \"typing...\"\r\n    dotterBodge() {\r\n        this.dotsCounter += 1;\r\n        this.dotsCounter %= 5;\r\n        this.autoconnectingBMSText.innerHTML = \"Auto-connecting\";\r\n        this.autoconnectingTachoText.innerHTML = \"Auto-connecting\";\r\n        for (let i = 0; i < this.dotsCounter; i++) {\r\n            this.autoconnectingBMSText.innerHTML += '.';\r\n            this.autoconnectingTachoText.innerHTML += '.';\r\n        }\r\n        setTimeout(()=>{\r\n            this.dotterBodge();\r\n        }, 200);\r\n    }\r\n\r\n}\n\n//# sourceURL=webpack://dragonbms-interface-web/./js/connection_gui.js?");

/***/ }),

/***/ "./js/dataDistribution.js":
/*!********************************!*\
  !*** ./js/dataDistribution.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   dataMap: () => (/* binding */ dataMap),\n/* harmony export */   \"default\": () => (/* binding */ dataDistribution)\n/* harmony export */ });\nclass dataDistribution{\r\n\r\n    providedDataLabels = [];\r\n    expectedDataLabels = [];\r\n\r\n    providedDataObj = {};\r\n    expectedDataObj = {};\r\n\r\n    dataMap = new dataMap();\r\n\r\n    expecterUpdateFunctions = [];\r\n\r\n    constructor() {\r\n    }\r\n\r\n    setDataMap(dataMap){\r\n        this.dataMap = dataMap;\r\n    }\r\n\r\n    addMapping(input, output){\r\n        if(this.providedDataLabels.includes(input) && this.expectedDataLabels.includes(output)){\r\n            this.dataMap.addMapping(input,output);\r\n        }else{\r\n            console.log(\"[dataDistribution] failed to add mapping: input or output not contained in label lists\");\r\n        }\r\n    }\r\n\r\n    updateProvidedData(data){\r\n        for (const key of Object.keys(data)) {\r\n            if(this.providedDataLabels.includes(key)){\r\n                this.providedDataObj[key] = data[key];\r\n            }\r\n        }\r\n    }\r\n\r\n    executeMapping(){\r\n        for (const inputKey of Object.keys(this.providedDataObj)) {\r\n            let outputKeys = this.dataMap.getOutputs(inputKey);\r\n\r\n            for (const outputKey of outputKeys) {\r\n                if(this.expectedDataLabels.includes(outputKey)){\r\n                    this.expectedDataObj[outputKey] = this.providedDataObj[inputKey];\r\n                }else{\r\n                    console.log(\"[dataDistribution] failed to execute mapping: mapping output not contained in expected data label list\");\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    updateDataExpecters(){\r\n        for (const expecterUpdateFunction of this.expecterUpdateFunctions) {\r\n            expecterUpdateFunction(this.expectedDataObj);\r\n        }\r\n    }\r\n\r\n    registerExpecterUpdate(updateFunction){\r\n        this.expecterUpdateFunctions.push(updateFunction);\r\n    }\r\n\r\n\r\n    addProvidedDataLabels(dataLabels){\r\n        this.providedDataLabels = this.providedDataLabels.concat(dataLabels);\r\n    }\r\n\r\n    addExpectedDataLabels(dataLabels){\r\n        this.expectedDataLabels = this.expectedDataLabels.concat(dataLabels);\r\n    }\r\n}\r\n\r\n\r\n\r\nclass dataMap{\r\n\r\n    mapObj = [];\r\n\r\n    constructor(){\r\n\r\n    }\r\n\r\n    addMapping(input, output){\r\n        let mappingObj = {\r\n            input: input,\r\n            output: output\r\n        };\r\n\r\n        this.mapObj.push(mappingObj);\r\n    }\r\n\r\n    removeMapping(input, output){\r\n\r\n        // filter function return true if element should stay in array, false if it should be removed\r\n        this.mapObj = this.mapObj.filter(function (element) {\r\n            return (element.input === input && element.output === output);\r\n        });\r\n    }\r\n\r\n    getMap(){\r\n        return this.mapObj;\r\n    }\r\n\r\n    getOutputs(input){\r\n        let outputObj = this.mapObj.filter(function (element) {\r\n            return (element.input === input);\r\n        }).map(x => x.output);\r\n\r\n        if(outputObj.length > 1){\r\n            // maybe for debugging but right now this is okay since values are pfusched onto vehicle model\r\n            //console.log(\"[dataMap] more than one output for input!\");\r\n        }\r\n\r\n        return outputObj;\r\n    }\r\n\r\n    getInput(output){\r\n        let inputObj = this.mapObj.filter(function (element) {\r\n            return (element.output === output);\r\n        }).map(x => x.input);\r\n\r\n        if(inputObj.length > 1){\r\n            console.log(\"[dataMap] more than one input for output!\");\r\n        }\r\n\r\n        return inputObj;\r\n    }\r\n}\n\n//# sourceURL=webpack://dragonbms-interface-web/./js/dataDistribution.js?");

/***/ }),

/***/ "./js/dataProcessing/bms_gathering.js":
/*!********************************************!*\
  !*** ./js/dataProcessing/bms_gathering.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ bmsGatherer)\n/* harmony export */ });\n/* harmony import */ var _gui_elements__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../gui_elements */ \"./js/gui_elements.js\");\n/* harmony import */ var _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/small_functions */ \"./js/helpers/small_functions.js\");\n\r\n\r\n\r\n\r\n\r\nclass bmsGatherer extends _gui_elements__WEBPACK_IMPORTED_MODULE_0__[\"default\"]{\r\n\r\n    lastLoggingDataTimeStamp = Date.now();\r\n    hertzSampleBuffer = [];\r\n\r\n\r\n    providedDataLabels = [\r\n        \"bmsU1\",\r\n        \"bmsU2\",\r\n        \"bmsU3\",\r\n        \"bmsUOut\",\r\n        \"bmsI1\",\r\n        \"bmsI2\",\r\n        \"bmsI3\",\r\n        \"bmsStateMachineState\"\r\n    ];\r\n\r\n\r\n    constructor(bmsConfig){\r\n        super();\r\n        this.bmsConfig = bmsConfig;\r\n    }\r\n\r\n\r\n    initDataDistribution(dd){\r\n        this.dd = dd;\r\n        this.dd.addProvidedDataLabels(this.providedDataLabels);\r\n    }\r\n\r\n\r\n    gatherData(event){\r\n        let value = event.target.value;\r\n\r\n        // FILTERING ALL INVALID DATA\r\n\r\n        if(value.byteLength === 0){\r\n            console.log(\"Something wrong with incoming BLE data!\");\r\n            return;\r\n        }\r\n\r\n        if(!this.bmsConfig.initialised){\r\n            console.log(\"waiting for config to be read...\");\r\n            return;\r\n        }\r\n\r\n        //let loggingDataInterval = Date.now() - lastLoggingDataTimeStamp;\r\n        this.lastLoggingDataTimeStamp = Date.now();\r\n\r\n        let packetSequenceNumber = (value.getUint8(2) << 8) | value.getUint8(1);\r\n\r\n        // would normally be dropped, but franz requested to ignore this for testing\r\n        /*\r\n        if(loggingDataInterval < configBuffer.dataloggingUpdateInterval * 0.5){\r\n            //console.log(\"dropped\");\r\n            return;\r\n        }\r\n         */\r\n\r\n\r\n\r\n        // CALCULATING DATA PACKET RATE\r\n\r\n        this.hertzSampleBuffer.push([\r\n            packetSequenceNumber,\r\n            this.lastLoggingDataTimeStamp\r\n        ]);\r\n        this.hertzSampleBuffer.forEach((element) => {\r\n            if(element[1] + 1000 < Date.now()){\r\n                const index = this.hertzSampleBuffer.indexOf(element);\r\n                if (index > -1) { // only splice array when item is found\r\n                    this.hertzSampleBuffer.splice(index, 1); // 2nd parameter means remove one item only\r\n                }\r\n            }\r\n        });\r\n\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].setValueTexts(this.bmsDataLoggingFrequencyValues, \"BMS: \" +  this.hertzSampleBuffer.length + \"Hz\");\r\n\r\n\r\n\r\n        // CONVERTING THE RAW DATA TO USABLE VALUES\r\n\r\n        let U_Strand1_raw = (((value.getUint8(10) << 8) | value.getUint8(9)) / 100);\r\n        let U_Strand2_raw = (((value.getUint8(12) << 8) | value.getUint8(11)) / 100);\r\n        let U_Strand3_raw = (((value.getUint8(14) << 8) | value.getUint8(13)) / 100);\r\n        let U_Out_raw = (((value.getUint8(16) << 8) | value.getUint8(15)) / 100);\r\n\r\n        let I_Strand1_raw = (_helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].handleSignedBullshit((value.getUint8(4) << 8) | value.getUint8(3)) / 100);\r\n        let I_Strand2_raw = (_helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].handleSignedBullshit((value.getUint8(6) << 8) | value.getUint8(5)) / 100);\r\n        let I_Strand3_raw = (_helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].handleSignedBullshit((value.getUint8(8) << 8) | value.getUint8(7)) / 100);\r\n\r\n        let shuntTemp_raw = ((value.getUint8(18) << 8) | value.getUint8(17)) / 10;\r\n        let prechargeTemp_raw = ((value.getUint8(20) << 8) | value.getUint8(19)) / 10;\r\n\r\n        let stateMachineState = value.getUint8(21);\r\n\r\n        let energyUsed1_raw = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].handleSignedBullshit32((((value.getUint8(25) << 24) | (value.getUint8(24) << 16)) | (value.getUint8(23) << 8)) | (value.getUint8(22)));\r\n        let energyUsed2_raw = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].handleSignedBullshit32((((value.getUint8(29) << 24) | (value.getUint8(28) << 16)) | (value.getUint8(27) << 8)) | (value.getUint8(26)));\r\n        let energyUsed3_raw = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].handleSignedBullshit32((((value.getUint8(33) << 24) | (value.getUint8(32) << 16)) | (value.getUint8(31) << 8)) | (value.getUint8(30)));\r\n\r\n\r\n        // update data in the data distribution\r\n        this.dd.updateProvidedData({\r\n            bmsU1: U_Strand1_raw,\r\n            bmsU2: U_Strand2_raw,\r\n            bmsU3: U_Strand3_raw,\r\n            bmsUOut: U_Out_raw,\r\n            bmsI1: I_Strand1_raw,\r\n            bmsI2: I_Strand2_raw,\r\n            bmsI3: I_Strand3_raw,\r\n            bmsStateMachineState: stateMachineState\r\n        });\r\n\r\n\r\n        // do the mapping\r\n        this.dd.executeMapping();\r\n\r\n        // update all elements expecting data\r\n        this.dd.updateDataExpecters();\r\n\r\n\r\n        return {\r\n            time: this.lastLoggingDataTimeStamp,\r\n            packageSequenceNumber: packetSequenceNumber,\r\n            u1: U_Strand1_raw,\r\n            u2: U_Strand2_raw,\r\n            u3: U_Strand3_raw,\r\n            uOut: U_Out_raw,\r\n            i1: I_Strand1_raw,\r\n            i2: I_Strand2_raw,\r\n            i3: I_Strand3_raw,\r\n            tShunt: shuntTemp_raw,\r\n            tPch: prechargeTemp_raw,\r\n            eU1: energyUsed1_raw,\r\n            eU2: energyUsed2_raw,\r\n            eU3: energyUsed3_raw,\r\n            stateMachineState: stateMachineState\r\n        };\r\n    }\r\n}\n\n//# sourceURL=webpack://dragonbms-interface-web/./js/dataProcessing/bms_gathering.js?");

/***/ }),

/***/ "./js/dataProcessing/bms_processing.js":
/*!*********************************************!*\
  !*** ./js/dataProcessing/bms_processing.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ bmsDataProcessor)\n/* harmony export */ });\n/* harmony import */ var _gui__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../gui */ \"./js/gui.js\");\n/* harmony import */ var _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/small_functions */ \"./js/helpers/small_functions.js\");\n/* harmony import */ var _bms_gathering__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./bms_gathering */ \"./js/dataProcessing/bms_gathering.js\");\n\r\n\r\n\r\n\r\n\r\n\r\nclass bmsDataProcessor extends _gui__WEBPACK_IMPORTED_MODULE_0__[\"default\"]{\r\n\r\n    bmsAveragingBuffer = [];\r\n\r\n    maxValueBuffer = [];\r\n\r\n\r\n    providedDataLabels = [\r\n        \"bmsITotal\",\r\n        \"bmsPTotal\",\r\n        \"bmsPLoss\"\r\n    ];\r\n\r\n\r\n    usedEnergyOffset1 = -1; // Watt-hours\r\n    usedEnergyOffset2 = -1; // Watt-hours\r\n    usedEnergyOffset3 = -1; // Watt-hours\r\n\r\n    remainingEnergy1 = 0; // Watt-hours\r\n    remainingEnergy2 = 0; // Watt-hours\r\n    remainingEnergy3 = 0; // Watt-hours\r\n\r\n    stateMachineState = 4;\r\n\r\n    constructor(bmsConfigObj, bmsCalibObj, interfaceConfig, dataLoggingMgr) {\r\n        super();\r\n        this.bmsConfigObj = bmsConfigObj;\r\n        this.bmsCalibObj = bmsCalibObj;\r\n\r\n        this.interfaceConfig = interfaceConfig;\r\n\r\n        this.dataLoggingMgr = dataLoggingMgr;\r\n\r\n        this.gatherer = new _bms_gathering__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this.bmsConfigObj);\r\n    }\r\n\r\n    initDataDistribution(dd){\r\n        this.dd = dd;\r\n        this.dd.addProvidedDataLabels(this.providedDataLabels);\r\n    }\r\n\r\n    isInitialised(){\r\n        return (typeof this.bmsAveragingBuffer.at(0)) !== \"undefined\";\r\n    }\r\n\r\n    processData(event) {\r\n\r\n        const bmsLoggingPacket = this.gatherer.gatherData(event);\r\n\r\n        // catch invalid / dropped packets\r\n        if(typeof(bmsLoggingPacket) === \"undefined\"){\r\n            return;\r\n        }\r\n\r\n        // always have the newest packet at the first index of the buffer\r\n        this.bmsAveragingBuffer.unshift(bmsLoggingPacket);\r\n        // delete all packets that are older than needed\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].deleteOlderDataPackets(this.bmsAveragingBuffer, this.interfaceConfig.maxAveragingInterval)\r\n\r\n        const averagedDataU = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].averagedData(_helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getLastXSeconds(this.bmsAveragingBuffer, this.interfaceConfig.averagingIntervalU), 1);\r\n        const averagedDataI = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].averagedData(_helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getLastXSeconds(this.bmsAveragingBuffer, this.interfaceConfig.averagingIntervalI), 2);\r\n        const averagedDataT = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].averagedData(_helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getLastXSeconds(this.bmsAveragingBuffer, this.interfaceConfig.averagingIntervalT), 1);\r\n        const averagedDataCalib = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].averagedData(_helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getLastXSeconds(this.bmsAveragingBuffer, this.interfaceConfig.averagingIntervalT), 4);\r\n\r\n        const averagedDataPLoss = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].averagedDataNumbers(_helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getLastXSeconds(this.bmsAveragingBuffer, this.interfaceConfig.averagingIntervalT));\r\n\r\n\r\n        this.stateMachineState = bmsLoggingPacket.stateMachineState;\r\n\r\n\r\n        // calculating further values\r\n\r\n        let P_total = (parseFloat(averagedDataU.uOut) / 1000 * (parseFloat(averagedDataI.i1) + parseFloat(averagedDataI.i2) + parseFloat(averagedDataI.i3))); // Power in kW\r\n\r\n        let P_loss = Math.abs(\r\n            (averagedDataPLoss.u1 * averagedDataPLoss.i1) +\r\n            (averagedDataPLoss.u2 * averagedDataPLoss.i2) +\r\n            (averagedDataPLoss.u3 * averagedDataPLoss.i3) -\r\n            (averagedDataPLoss.uOut * (averagedDataPLoss.i1 + averagedDataPLoss.i2 + averagedDataPLoss.i3))\r\n        );\r\n\r\n\r\n\r\n        let totalAmps = parseFloat(averagedDataI.i1) + parseFloat(averagedDataI.i2) + parseFloat(averagedDataI.i3);\r\n        if(isNaN(totalAmps)){\r\n            totalAmps = 0;\r\n        }\r\n\r\n\r\n\r\n        // init energy used offsets at first received data logging packet\r\n        if(this.usedEnergyOffset1 === -1){\r\n            this.usedEnergyOffset1 = bmsLoggingPacket.eU1;\r\n        }\r\n        if(this.usedEnergyOffset2 === -1){\r\n            this.usedEnergyOffset2 = bmsLoggingPacket.eU2;\r\n        }\r\n        if(this.usedEnergyOffset3 === -1){\r\n            this.usedEnergyOffset3 = bmsLoggingPacket.eU3;\r\n        }\r\n\r\n\r\n\r\n\r\n        // BATTERY SOC CALCULATION (very fucked atm)\r\n        // _______________________________________\r\n\r\n        let CellCount = this.bmsConfigObj.battCellCount;\r\n        let Capacity = this.bmsConfigObj.battNomCapacity;\r\n\r\n        let soc;\r\n        if (this.remainingEnergy1 === 0 && (CellCount * 2.5 <= bmsLoggingPacket.u1 <= CellCount * 4.2)) {\r\n            let cell_voltage = bmsLoggingPacket.u1 / CellCount;\r\n            /*\r\n            let soc;\r\n            if(cell_voltage > 3.5){\r\n                soc = -25.54 * cell_voltage ** 5 + 488.74 * cell_voltage ** 4 - 3736 * cell_voltage ** 3 + 14258 * cell_voltage ** 2 - 27164 * cell_voltage + 20664;\r\n\r\n                //soc = -8.09 * 0.001 * x ** 9 + 5.44 * 0.01 * x ** 8 + 7.77 * 0.01 ** 7 + 1.82 * x ** 6 - 3.2 * x ** 5 + 84.1 * x ** 4 + 393 * x ** 3 - 2400 * x ** 2 + 3770 * x - 1380\r\n            }else{\r\n                soc =  11.171*cell_voltage**4 - 168.65*cell_voltage**3 + 952.15*cell_voltage**2 - 2381.2*cell_voltage + 2225.1;\r\n            }\r\n             */\r\n            // temporary\r\n            soc = (cell_voltage - 3) / 1.2;\r\n            this.remainingEnergy1 = soc * (Capacity / 1000) * (CellCount * 3.7);\r\n        }\r\n\r\n\r\n        if (this.remainingEnergy2 === 0 && (CellCount * 2.5 <= bmsLoggingPacket.u2 <= CellCount * 4.2)) {\r\n            let cell_voltage = bmsLoggingPacket.u2/CellCount;\r\n            /*\r\n            let soc;\r\n            if(cell_voltage > 3.5){\r\n                soc = -25.54*cell_voltage**5 + 488.74*cell_voltage**4 - 3736*cell_voltage**3 + 14258*cell_voltage**2 - 27164*cell_voltage + 20664;\r\n            }else{\r\n                soc =  11.171*cell_voltage**4 - 168.65*cell_voltage**3 + 952.15*cell_voltage**2 - 2381.2*cell_voltage + 2225.1;\r\n            }\r\n             */\r\n            // temporary\r\n            soc = (cell_voltage - 3) / 1.2;\r\n            this.remainingEnergy2 = soc * (Capacity / 1000) * (CellCount * 3.7);\r\n        }\r\n\r\n\r\n        if (this.remainingEnergy3 === 0 && (CellCount * 2.5 <= bmsLoggingPacket.u3 <= CellCount * 4.2)) {\r\n            let cell_voltage = bmsLoggingPacket.u3/CellCount;\r\n            /*\r\n            let soc;\r\n            if(cell_voltage > 3.5){\r\n                soc = -25.54*cell_voltage**5 + 488.74*cell_voltage**4 - 3736*cell_voltage**3 + 14258*cell_voltage**2 - 27164*cell_voltage + 20664;\r\n            }else{\r\n                soc =  11.171*cell_voltage**4 - 168.65*cell_voltage**3 + 952.15*cell_voltage**2 - 2381.2*cell_voltage + 2225.1;\r\n            }\r\n            */\r\n            // temporary\r\n            soc = (cell_voltage - 3) / 1.2;\r\n            this.remainingEnergy3 = soc * (Capacity / 1000) * (CellCount * 3.7);\r\n        }\r\n\r\n        let SOC_1 = 100 * ((this.remainingEnergy1 - ((bmsLoggingPacket.eU1 - this.usedEnergyOffset1) / 3600)) / ((Capacity / 1000) * CellCount * 3.7));\r\n        let SOC_2 = 100 * ((this.remainingEnergy2 - ((bmsLoggingPacket.eU2 - this.usedEnergyOffset2) / 3600)) / ((Capacity / 1000) * CellCount * 3.7));\r\n        let SOC_3 = 100 * ((this.remainingEnergy3 - ((bmsLoggingPacket.eU3 - this.usedEnergyOffset3) / 3600)) / ((Capacity / 1000) * CellCount * 3.7));\r\n\r\n        if (bmsLoggingPacket.u1 < CellCount * 2.5 || SOC_1 <= 0) {\r\n            SOC_1 = 0;\r\n            this.remainingEnergy1 = 0;\r\n        }\r\n        if (bmsLoggingPacket.u2 < CellCount * 2.5 || SOC_2 <= 0) {\r\n            SOC_2 = 0;\r\n            this.remainingEnergy2 = 0;\r\n        }\r\n        if (bmsLoggingPacket.u3 < CellCount * 2.5 || SOC_3 <= 0) {\r\n            SOC_3 = 0;\r\n            this.remainingEnergy3 = 0;\r\n        }\r\n\r\n\r\n\r\n        let minSOC = 100;\r\n        if(((this.bmsConfigObj.boardEnabledChannels & 1) === 1) && SOC_1 < minSOC){minSOC = SOC_1}\r\n        if(((this.bmsConfigObj.boardEnabledChannels & 2) === 2) && SOC_2 < minSOC){minSOC = SOC_2}\r\n        if(((this.bmsConfigObj.boardEnabledChannels & 4) === 4) && SOC_3 < minSOC){minSOC = SOC_3}\r\n\r\n\r\n        //const usedEnergyTotal = (bmsLoggingPacket.eU1 - usedEnergyOffset1) + (bmsLoggingPacket.eU2 - usedEnergyOffset2) + (bmsLoggingPacket.eU3 - usedEnergyOffset3);\r\n        const usedEnergyTotal = bmsLoggingPacket.eU1 + bmsLoggingPacket.eU2 + bmsLoggingPacket.eU3;\r\n\r\n        //_________________________________________________\r\n\r\n\r\n\r\n        const bmsCalculatedDataPacket = {\r\n            iTotal: totalAmps,\r\n            pTotal: P_total,\r\n            pLoss: P_loss,\r\n            energyUsed: {\r\n                combined: usedEnergyTotal,\r\n                ch1: bmsLoggingPacket.eU1,\r\n                ch2: bmsLoggingPacket.eU2,\r\n                ch3: bmsLoggingPacket.eU3,\r\n            },\r\n            soc: {\r\n                ch1: SOC_1,\r\n                ch2: SOC_2,\r\n                ch3: SOC_3,\r\n                min: minSOC\r\n            }\r\n        };\r\n\r\n        // update data in the data distribution\r\n        this.dd.updateProvidedData({\r\n            bmsITotal: totalAmps,\r\n            bmsPTotal: P_total,\r\n            bmsPLoss: P_loss\r\n        });\r\n\r\n\r\n        // do the mapping\r\n        this.dd.executeMapping();\r\n\r\n        // update all elements expecting data\r\n        this.dd.updateDataExpecters();\r\n\r\n        let maxValueInfo = {\r\n            time: bmsLoggingPacket.time,\r\n            totalAmps: totalAmps,\r\n            uOut: bmsLoggingPacket.uOut,\r\n            pTotal: P_total,\r\n            tShunt: bmsLoggingPacket.tShunt,\r\n            tPch: bmsLoggingPacket.tPch\r\n        }\r\n\r\n        // always have the newest packet at the first index of the buffer\r\n        this.maxValueBuffer.unshift(maxValueInfo);\r\n        // delete all packets that are older than needed\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].deleteOlderDataPackets(this.maxValueBuffer, this.interfaceConfig.maxValueHoldOnTime);\r\n\r\n\r\n        let powersArray = [];\r\n        let currentsArray = [];\r\n        let voltagesArray = [];\r\n        let prechargeTempArray = [];\r\n        let shuntTempArray = [];\r\n\r\n        this.maxValueBuffer.forEach((sample) => {\r\n            currentsArray.unshift(parseFloat(sample.totalAmps).toFixed(1));\r\n            voltagesArray.unshift(sample.uOut);\r\n            powersArray.unshift(sample.pTotal);\r\n            shuntTempArray.unshift(sample.tShunt);\r\n            prechargeTempArray.unshift(sample.tPch);\r\n        });\r\n\r\n\r\n\r\n\r\n        /*\r\n            setting gui elements\r\n         */\r\n\r\n        this.setBMSState(bmsLoggingPacket.stateMachineState);\r\n        this.handleTurnOnTd(bmsLoggingPacket);\r\n        this.handleConfigWarningButtons(bmsLoggingPacket.stateMachineState);\r\n\r\n\r\n        this.setChannelVoltageInfo(averagedDataU);\r\n        this.setChannelCurrentInfo(averagedDataI);\r\n\r\n        this.setBMSTempValues(averagedDataT);\r\n\r\n        this.setBMSMaxValues({\r\n            power: Math.max(...powersArray).toFixed(2),\r\n            maxCurrent: Math.max(...currentsArray),\r\n            minCurrent: Math.min(...currentsArray),\r\n            minVoltage: Math.min(...voltagesArray).toFixed(2),\r\n            maxVoltage: Math.max(...voltagesArray).toFixed(2),\r\n            shuntTemp: Math.max(...shuntTempArray).toFixed(1),\r\n            prechargeTemp: Math.max(...prechargeTempArray).toFixed(1)\r\n        });\r\n\r\n        this.setBMSCalculatedValues(bmsCalculatedDataPacket);\r\n\r\n\r\n        this.bmsCalibObj.updateActualData(averagedDataCalib);\r\n\r\n\r\n        // this has to be after both setInlineTempValues and setInlineMaxValues\r\n        // as it disables and overwrites the values put in by the functions above in case of disabled temps\r\n        this.setTempGaugeVisibility(this.interfaceConfig);\r\n\r\n\r\n\r\n        if (this.dataLoggingMgr.dataLoggingEnabled) {\r\n\r\n            let dataStringBoard;\r\n\r\n            const stamp = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getTimeStamp();\r\n            const ms_today = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getMsToday();\r\n\r\n            // as there are 11 numbers and 12 chars, the rough size is\r\n            //11*8bytes + 12*2bytes = 112 bytes\r\n\r\n            let boardData = [\r\n                bmsLoggingPacket.packageSequenceNumber,\r\n                ms_today,\r\n                stamp,\r\n                bmsLoggingPacket.u1,\r\n                bmsLoggingPacket.u2,\r\n                bmsLoggingPacket.u3,\r\n                bmsLoggingPacket.uOut,\r\n                bmsLoggingPacket.i1,\r\n                bmsLoggingPacket.i2,\r\n                bmsLoggingPacket.i3,\r\n                bmsLoggingPacket.tShunt,\r\n                bmsLoggingPacket.tPch\r\n            ];\r\n\r\n            dataStringBoard = boardData.join(\";\") + \";;;;;\";\r\n\r\n            this.dataLoggingMgr.loggingDataBuffer.push(dataStringBoard);\r\n        }\r\n    }\r\n\r\n}\n\n//# sourceURL=webpack://dragonbms-interface-web/./js/dataProcessing/bms_processing.js?");

/***/ }),

/***/ "./js/dataProcessing/datalogging.js":
/*!******************************************!*\
  !*** ./js/dataProcessing/datalogging.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ dataLoggingManager)\n/* harmony export */ });\n/* harmony import */ var _helpers_fileaccess__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/fileaccess */ \"./js/helpers/fileaccess.js\");\n/* harmony import */ var _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/small_functions */ \"./js/helpers/small_functions.js\");\n\r\n\r\n\r\n\r\nclass dataLoggingManager{\r\n\r\n    loggingFileObj;\r\n\r\n    loggingDataBuffer;\r\n\r\n    dataLoggingEnabled;\r\n\r\n    constructor() {\r\n\r\n        this.dataLoggingEnabled = false;\r\n\r\n        this.loggingDataBuffer = [];\r\n\r\n        // initial call\r\n        this.saveDataLoggingData();\r\n    }\r\n\r\n    async newFile(){\r\n        this.loggingFileObj = new loggingDataFileObject(this);\r\n\r\n        await this.loggingFileObj.getHandle();\r\n\r\n        this.loggingDataBuffer = [\"psn;ms_today;stamp;u1;u2;u3;uOut;i1;i2;i3;tShunt;tPch;speed;rpm;motorTemp;externTemp;tripOdo;\"];\r\n    }\r\n\r\n    closeFile(){\r\n        this.dataLoggingEnabled = false;\r\n\r\n        this.loggingFileObj.closeObject();\r\n        this.loggingFileObj = null;\r\n\r\n        this.loggingDataBuffer = [];\r\n    }\r\n\r\n    saveDataLoggingData(){\r\n        // don't even bother if data logging isn't enabled\r\n        if(!this.dataLoggingEnabled && this.loggingDataBuffer.length === 0){\r\n            setTimeout(()=>{\r\n                this.saveDataLoggingData();\r\n            }, 1000);\r\n            return;\r\n        }\r\n\r\n        this.loggingFileObj.saveLoggingData(this.loggingDataBuffer);\r\n        this.loggingDataBuffer = [];\r\n\r\n        // recursively execute every second\r\n        setTimeout(()=>{\r\n            this.saveDataLoggingData();\r\n        }, 1000);\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass loggingDataFileObject extends _helpers_fileaccess__WEBPACK_IMPORTED_MODULE_0__[\"default\"]{\r\n    constructor(managerObj){\r\n        super(\"csv\");\r\n\r\n        this.manager = managerObj;\r\n\r\n        this.suggestedFileName = this.getSuggestedFileName();\r\n\r\n        this.dataBuffer = [];\r\n    }\r\n\r\n    async getHandle(){\r\n        await this.getSaveFileHandle(this.suggestedFileName);\r\n    }\r\n\r\n    saveLoggingData(data){\r\n\r\n        // push all data into the buffer\r\n        this.dataBuffer = this.dataBuffer.concat(data);\r\n\r\n        // then decide what to do with it\r\n        if(!this.hasFileAccess()){\r\n\r\n            // lord have mercy for the ram\r\n\r\n            // to limit the file size and thereby the ram size, the files will be split\r\n\r\n            // limit to about 10MB\r\n            const maxBufferLength = (10E6 / 115);\r\n            if(this.dataBuffer.length > maxBufferLength){\r\n                this.dataBuffer.push(\"\");\r\n\r\n                this.saveLegacy(this.suggestedFileName, this.dataBuffer);\r\n\r\n                this.dataBuffer = [];\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        if(typeof this.writableStream === \"undefined\"){\r\n            console.log(\"initialise object before writing to it\");\r\n            return;\r\n        }\r\n\r\n        // constantly write data to the file system in 20 packet chunks\r\n        // if the user actually has FS access\r\n        if (this.dataBuffer.length > 20 || !this.manager.dataLoggingEnabled) {\r\n            this.dataBuffer.push(\"\");\r\n\r\n            try{\r\n                this.writableStream.write(this.dataBuffer.join(\"\\n\"));\r\n            }catch(e){\r\n            }\r\n\r\n            this.dataBuffer = [];\r\n        }\r\n    }\r\n\r\n    closeObject(){\r\n        if(this.hasFileAccess()){\r\n            if(typeof this.writableStream === \"undefined\"){\r\n                console.log(\"initialise object before closing it\");\r\n                return;\r\n            }\r\n\r\n            this.saveLoggingData([]);\r\n            this.writableStream.close();\r\n        }else{\r\n            this.saveLegacy(this.suggestedFileName, this.dataBuffer);\r\n        }\r\n    }\r\n\r\n    getSuggestedFileName(){\r\n        let bmsName = \"\";\r\n\r\n        if(typeof _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getIdValue(\"board-config-device-name\") !== \"undefined\"){\r\n            bmsName = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getIdValue(\"board-config-device-name\");\r\n        }\r\n\r\n        const date = new Date();\r\n\r\n        return bmsName +\r\n            date.getFullYear().toString() + \"_\" +\r\n            _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].pad2(date.getMonth() + 1) + \"_\" +\r\n            _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].pad2(date.getDate()) + \"__\" +\r\n            _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].pad2(date.getHours()) + \"_\" +\r\n            _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].pad2(date.getMinutes()) + \"_\" +\r\n            _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].pad2(date.getSeconds());\r\n    }\r\n}\r\n\r\n\r\n\n\n//# sourceURL=webpack://dragonbms-interface-web/./js/dataProcessing/datalogging.js?");

/***/ }),

/***/ "./js/dataProcessing/tacho_gathering.js":
/*!**********************************************!*\
  !*** ./js/dataProcessing/tacho_gathering.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ tachoGatherer)\n/* harmony export */ });\n/* harmony import */ var _gui_elements__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../gui_elements */ \"./js/gui_elements.js\");\n/* harmony import */ var _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/small_functions */ \"./js/helpers/small_functions.js\");\n\r\n\r\n\r\n\r\n\r\nclass tachoGatherer extends _gui_elements__WEBPACK_IMPORTED_MODULE_0__[\"default\"]{\r\n    inlineHertzSampleBuffer = [];\r\n    lastInlineLoggingDataTimeStamp;\r\n\r\n    constructor(tachoConfigObj) {\r\n        super();\r\n\r\n        this.tachoConfigObj = tachoConfigObj;\r\n    }\r\n\r\n    gatherData(event){\r\n\r\n        if(!this.tachoConfigObj.initialised){\r\n            console.log(\"waiting for config to be read...\");\r\n            return;\r\n        }\r\n\r\n        let data = event.target.value;\r\n\r\n        if(data.byteLength === 0) {\r\n            console.log(\"Something wrong with incoming BLE Data!\");\r\n            return;\r\n        }\r\n\r\n        /*\r\n        let inlineLoggingDataInterval = Date.now() - lastInlineLoggingDataTimeStamp;\r\n        if(inlineLoggingDataInterval < 25){\r\n            console.log(\"dropped tacho\");\r\n            return;\r\n        }\r\n        */\r\n        this.lastInlineLoggingDataTimeStamp = Date.now();\r\n\r\n        this.inlineHertzSampleBuffer.push([\r\n            this.lastInlineLoggingDataTimeStamp\r\n        ]);\r\n        this.inlineHertzSampleBuffer.forEach((element) => {\r\n            if(element[0] + 1000 < Date.now()){\r\n                const index = this.inlineHertzSampleBuffer.indexOf(element);\r\n                if (index > -1) { // only splice array when item is found\r\n                    this.inlineHertzSampleBuffer.splice(index, 1); // 2nd parameter means remove one item only\r\n                }\r\n            }\r\n        });\r\n\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].setValueTexts(this.tachoDataLoggingFrequencyValues, \"T: \" +  this.inlineHertzSampleBuffer.length + \"Hz\");\r\n\r\n        return {\r\n            time: this.lastInlineLoggingDataTimeStamp,\r\n            speed: -_helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].handleSignedBullshit(((data.getUint8(2) << 8) | data.getUint8(1))) * 0.036,\r\n            rpm: ((data.getUint8(4) << 8) | data.getUint8(3)),\r\n            motorTemp: _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].cap((-_helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].handleSignedBullshit(((data.getUint8(6) << 8) | data.getUint8(5))) / 10), -50, 200),\r\n            integratedTemp: _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].cap((-_helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].handleSignedBullshit(((data.getUint8(8) << 8) | data.getUint8(7))) / 10), -50, 200),\r\n            tripOdo: _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].handleUnsignedBullshit32(((data.getUint8(12) << 24) | (data.getUint8(11) << 16) | (data.getUint8(10) << 8) | data.getUint8(9))),\r\n            vehicleOdo: _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].handleUnsignedBullshit32(((data.getUint8(16) << 24) | (data.getUint8(15) << 16) | (data.getUint8(14) << 8) | data.getUint8(13))),\r\n            calibPulseCount: -_helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].handleSignedBullshit(((data.getUint8(18) << 8) | data.getUint8(17)))\r\n        };\r\n    }\r\n}\n\n//# sourceURL=webpack://dragonbms-interface-web/./js/dataProcessing/tacho_gathering.js?");

/***/ }),

/***/ "./js/dataProcessing/tacho_processing.js":
/*!***********************************************!*\
  !*** ./js/dataProcessing/tacho_processing.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ tachoDataProcessor)\n/* harmony export */ });\n/* harmony import */ var _gui__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../gui */ \"./js/gui.js\");\n/* harmony import */ var _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/small_functions */ \"./js/helpers/small_functions.js\");\n/* harmony import */ var _tacho_gathering__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./tacho_gathering */ \"./js/dataProcessing/tacho_gathering.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass tachoDataProcessor extends _gui__WEBPACK_IMPORTED_MODULE_0__[\"default\"]{\r\n\r\n    tachoConfigObj;\r\n\r\n\r\n    tachoAveragingBuffer = [];\r\n    maxInlineValueBuffer = [];\r\n\r\n    // values for calculation of wh/km and therefore also range\r\n    usedEnergyOffset;\r\n\r\n\r\n    lastInlineLoggingDataTimeStamp = Date.now();\r\n    drivenDistanceOffset;\r\n\r\n    constructor(tachoObj, interfaceConfig, dataLoggingMgr) {\r\n        super();\r\n\r\n        this.tachoObj = tachoObj;\r\n        this.tachoConfigObj = tachoObj.tachoConfigObj;\r\n\r\n        this.interfaceConfig = interfaceConfig;\r\n\r\n        this.dataLoggingMgr = dataLoggingMgr;\r\n\r\n        this.tachoGatherer = new _tacho_gathering__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this.tachoConfigObj);\r\n\r\n        this.drivenDistanceOffset = -1;\r\n    }\r\n\r\n    isInitialised() {\r\n        return typeof this.tachoAveragingBuffer.at(0) === \"undefined\";\r\n    }\r\n\r\n    processData(event) {\r\n        let tachoLoggingPacket = this.tachoGatherer.gatherData(event);\r\n\r\n        // catch invalid / dropped packets\r\n        if (typeof (tachoLoggingPacket) === \"undefined\") {\r\n            return;\r\n        }\r\n\r\n        const stamp = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getTimeStamp();\r\n        const ms_today = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getMsToday();\r\n\r\n\r\n        // always have the newest packet at the first index of the buffer\r\n        this.tachoAveragingBuffer.unshift(tachoLoggingPacket);\r\n        // delete all packets that are older than needed\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].deleteOlderDataPackets(this.tachoAveragingBuffer, this.interfaceConfig.maxTachoAveragingInterval);\r\n\r\n        const averagedDataSpeeds = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].averagedData(_helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getLastXSeconds(this.tachoAveragingBuffer, this.interfaceConfig.tachoDataAveragingIntervalV), 1);\r\n        const averagedDataT = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].averagedData(_helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getLastXSeconds(this.tachoAveragingBuffer, this.interfaceConfig.tachoDataAveragingIntervalT), 1);\r\n\r\n\r\n        // ECONOMY CALCULATION\r\n        if (this.tachoObj.linkedBMSObj.isConnected()\r\n            && typeof this.tachoObj.linkedBMSObj.bmsDataProcessor.bmsAveragingBuffer.at(-1) !== \"undefined\") {\r\n            // get bms data for economy calculation if bms connected\r\n            let bmsLoggingPacket = this.tachoObj.linkedBMSObj.bmsDataProcessor.bmsAveragingBuffer.at(-1);\r\n            const totalUsedEnergy = bmsLoggingPacket.eU1\r\n                + bmsLoggingPacket.eU2\r\n                + bmsLoggingPacket.eU3;\r\n\r\n            // kinda pfusch\r\n            // used for the \"reset economy\" button\r\n            if (this.drivenDistanceOffset === -1) {\r\n                if (this.tachoObj.linkedBMSObj.isConnected()) {\r\n                    this.drivenDistanceOffset = (tachoLoggingPacket.tripOdo / 1000); // in meters\r\n\r\n                    this.usedEnergyOffset = totalUsedEnergy;\r\n                }\r\n            }\r\n\r\n\r\n            // distance driven in the session in meters\r\n            let drivenDistanceSession = (tachoLoggingPacket.tripOdo / 1000) - this.drivenDistanceOffset;\r\n            // energy used in the session in mWh\r\n            let energyUsedSession = (totalUsedEnergy - this.usedEnergyOffset) / 3.6;\r\n\r\n            // wh/km for the session\r\n            let sessionEconomy = energyUsedSession / drivenDistanceSession;\r\n\r\n            let range = Math.abs(\r\n                (this.tachoObj.linkedBMSObj.bmsDataProcessor.remainingEnergy1\r\n                    + this.tachoObj.linkedBMSObj.bmsDataProcessor.remainingEnergy2\r\n                    + this.tachoObj.linkedBMSObj.bmsDataProcessor.remainingEnergy3)\r\n                / sessionEconomy);\r\n\r\n            this.setEconomyGauges({\r\n                whkmSession: sessionEconomy,\r\n                range: range\r\n            });\r\n        } else {\r\n            this.disableEconomyGauges();\r\n        }\r\n\r\n\r\n        // Set values\r\n        this.tachoObj.tachoConfigObj.updatePulseCount(tachoLoggingPacket.calibPulseCount);\r\n\r\n\r\n        this.setInlineTempValues({\r\n            motor: averagedDataT.motorTemp,\r\n            extern: averagedDataT.integratedTemp\r\n        });\r\n\r\n        this.setTachoGauges({\r\n            tripOdo: tachoLoggingPacket.tripOdo,\r\n            vehicleOdo: tachoLoggingPacket.vehicleOdo\r\n        });\r\n\r\n        this.setSpeedGaugeValues(averagedDataSpeeds);\r\n\r\n        let maxTachoValueInfo = {\r\n            time: tachoLoggingPacket.time,\r\n            speed: tachoLoggingPacket.speed,\r\n            motorTemp: tachoLoggingPacket.motorTemp,\r\n            integratedTemp: tachoLoggingPacket.integratedTemp\r\n        }\r\n\r\n\r\n        // always have the newest packet at the first index of the buffer\r\n        this.maxInlineValueBuffer.unshift(maxTachoValueInfo);\r\n        // delete all packets that are older than needed\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].deleteOlderDataPackets(this.maxInlineValueBuffer, this.interfaceConfig.maxValueHoldOnTime);\r\n\r\n        let speedsArray = [];\r\n        let motorTempArray = [];\r\n        let externTempArray = [];\r\n\r\n        this.maxInlineValueBuffer.forEach((sample) => {\r\n            if (!isNaN(sample.speed)) {\r\n                speedsArray.unshift(sample.speed);\r\n            }\r\n            if (!isNaN(sample.motorTemp)) {\r\n                motorTempArray.unshift(sample.motorTemp).toFixed(1);\r\n            }\r\n            if (!isNaN(sample.integratedTemp)) {\r\n                externTempArray.unshift(sample.integratedTemp).toFixed(1);\r\n            }\r\n        });\r\n\r\n\r\n        this.setInlineMaxValues({\r\n            speed: Math.max(...speedsArray),\r\n            motorTemp: Math.max(...motorTempArray).toFixed(1),\r\n            externTemp: Math.max(...externTempArray).toFixed(1),\r\n        });\r\n\r\n\r\n        // this has to be after both setInlineTempValues and setInlineMaxValues\r\n        // as it disables and overwrites the values put in by the functions above in case of disabled temps\r\n        this.setTempGaugeVisibility(this.interfaceConfig);\r\n\r\n        if (this.dataLoggingMgr.dataLoggingEnabled && this.tachoObj.isConnected()) {\r\n            let dataStringInline = [\r\n                \"\",\r\n                ms_today,\r\n                stamp,\r\n                \"\",\r\n                \"\",\r\n                \"\",\r\n                \"\",\r\n                \"\",\r\n                \"\",\r\n                \"\",\r\n                \"\",\r\n                \"\",\r\n                tachoLoggingPacket.speed,\r\n                tachoLoggingPacket.rpm,\r\n                tachoLoggingPacket.motorTemp,\r\n                tachoLoggingPacket.integratedTemp,\r\n                tachoLoggingPacket.tripOdo\r\n            ].join(\";\");\r\n\r\n            this.dataLoggingMgr.loggingDataBuffer.push(dataStringInline);\r\n        }\r\n    }\r\n}\n\n//# sourceURL=webpack://dragonbms-interface-web/./js/dataProcessing/tacho_processing.js?");

/***/ }),

/***/ "./js/entry.js":
/*!*********************!*\
  !*** ./js/entry.js ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _ble_bms__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ble/bms */ \"./js/ble/bms.js\");\n/* harmony import */ var _settings_interface_config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./settings/interface-config */ \"./js/settings/interface-config.js\");\n/* harmony import */ var _dataProcessing_datalogging__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dataProcessing/datalogging */ \"./js/dataProcessing/datalogging.js\");\n/* harmony import */ var _helpers_color_mode__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./helpers/color_mode */ \"./js/helpers/color_mode.js\");\n/* harmony import */ var _ble_tacho__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./ble/tacho */ \"./js/ble/tacho.js\");\n/* harmony import */ var _settings_virtualkeyboard__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./settings/virtualkeyboard */ \"./js/settings/virtualkeyboard.js\");\n/* harmony import */ var _connection_gui__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./connection_gui */ \"./js/connection_gui.js\");\n/* harmony import */ var _rearrange__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./rearrange */ \"./js/rearrange.js\");\n/* harmony import */ var _tilebar__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./tilebar */ \"./js/tilebar.js\");\n/* harmony import */ var _captureMode__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./captureMode */ \"./js/captureMode.js\");\n/* harmony import */ var _gui__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./gui */ \"./js/gui.js\");\n/* harmony import */ var _serviceworker_sw_init__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./serviceworker/sw_init */ \"./js/serviceworker/sw_init.js\");\n/* harmony import */ var _otaUpdate_otaManager__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./otaUpdate/otaManager */ \"./js/otaUpdate/otaManager.js\");\n/* harmony import */ var _vehicleModel__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./vehicleModel */ \"./js/vehicleModel.js\");\n/* harmony import */ var _dataDistribution__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./dataDistribution */ \"./js/dataDistribution.js\");\n/* harmony import */ var _settings_deviceInfoManager__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./settings/deviceInfoManager */ \"./js/settings/deviceInfoManager.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nlet vehicleModelObj = new _vehicleModel__WEBPACK_IMPORTED_MODULE_13__[\"default\"]();\r\n\r\n\r\nlet deviceInfoMgr = new _settings_deviceInfoManager__WEBPACK_IMPORTED_MODULE_15__[\"default\"]();\r\n\r\n\r\nnew _serviceworker_sw_init__WEBPACK_IMPORTED_MODULE_11__[\"default\"]();\r\nnew _settings_virtualkeyboard__WEBPACK_IMPORTED_MODULE_5__[\"default\"]();\r\n\r\nlet interfaceConfigObj = new _settings_interface_config__WEBPACK_IMPORTED_MODULE_1__[\"default\"]();\r\nlet colorModeObj = new _helpers_color_mode__WEBPACK_IMPORTED_MODULE_3__[\"default\"](interfaceConfigObj);\r\ninterfaceConfigObj.initColorModeObj(colorModeObj);\r\n\r\nlet captureModeManagerObj = new _captureMode__WEBPACK_IMPORTED_MODULE_9__[\"default\"]();\r\nlet dataLoggingManagerObj = new _dataProcessing_datalogging__WEBPACK_IMPORTED_MODULE_2__[\"default\"]();\r\n\r\nlet bmsObj = new _ble_bms__WEBPACK_IMPORTED_MODULE_0__[\"default\"](interfaceConfigObj, dataLoggingManagerObj, deviceInfoMgr);\r\n\r\nlet tachoObj = new _ble_tacho__WEBPACK_IMPORTED_MODULE_4__[\"default\"](bmsObj, interfaceConfigObj, dataLoggingManagerObj, deviceInfoMgr);\r\n\r\nbmsObj.initTachoObj(tachoObj);\r\n\r\n\r\nlet dataDistributionObj = new _dataDistribution__WEBPACK_IMPORTED_MODULE_14__[\"default\"]();\r\nbmsObj.initDataDistribution(dataDistributionObj);\r\n\r\nvehicleModelObj.initDataDistribution(dataDistributionObj);\r\n\r\ndataDistributionObj.addMapping(\"bmsITotal\", \"torqueRL\");\r\ndataDistributionObj.addMapping(\"bmsITotal\", \"torqueRR\");\r\n\r\n\r\nlet otaManagerObj = new _otaUpdate_otaManager__WEBPACK_IMPORTED_MODULE_12__[\"default\"](bmsObj, tachoObj, deviceInfoMgr);\r\notaManagerObj.addEventListeners();\r\n\r\nnew _connection_gui__WEBPACK_IMPORTED_MODULE_6__[\"default\"](bmsObj, tachoObj);\r\n\r\n\r\nlet guiObj = new _gui__WEBPACK_IMPORTED_MODULE_10__[\"default\"]();\r\n\r\nguiObj.disableBoardGauges();\r\nguiObj.initBmsObj(bmsObj);\r\nguiObj.addGUIEventListeners();\r\n\r\nlet rearrangeManagerObj = new _rearrange__WEBPACK_IMPORTED_MODULE_7__[\"default\"](bmsObj);\r\n\r\nlet tb = new _tilebar__WEBPACK_IMPORTED_MODULE_8__[\"default\"](bmsObj, tachoObj, captureModeManagerObj, dataLoggingManagerObj, colorModeObj, rearrangeManagerObj, otaManagerObj);\r\ntb.addEventListeners();\n\n//# sourceURL=webpack://dragonbms-interface-web/./js/entry.js?");

/***/ }),

/***/ "./js/gui.js":
/*!*******************!*\
  !*** ./js/gui.js ***!
  \*******************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ gui)\n/* harmony export */ });\n/* harmony import */ var _gui_elements__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./gui_elements */ \"./js/gui_elements.js\");\n/* harmony import */ var _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./helpers/small_functions */ \"./js/helpers/small_functions.js\");\n// noinspection JSBitwiseOperatorUsage\r\n\r\n\r\n/*\r\n    BMS related\r\n */\r\n\r\n\r\n\r\n\r\n\r\nclass gui extends _gui_elements__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\r\n\r\n    turnOnTdMoveStart = {x: 0, y: 0};\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    initBmsObj(bmsObj){\r\n        this.bmsObj = bmsObj;\r\n    }\r\n\r\n\r\n\r\n    inlineConnected() {\r\n        this.inlineGaugeDiv.classList.remove(\"inline-gauge-disabled\");\r\n        this.connectTachoOverlay.classList.add(\"visibility-hidden\");\r\n\r\n\r\n        if(typeof this.serviceInitDoneCB !== \"undefined\" && this.serviceInitDoneCB !== null){\r\n            this.serviceInitDoneCB();\r\n        }\r\n\r\n    }\r\n\r\n    inlineDisconnected(){\r\n        this.inlineGaugeDiv.classList.add(\"inline-gauge-disabled\");\r\n        this.connectTachoOverlay.classList.remove(\"visibility-hidden\");\r\n    }\r\n\r\n\r\n    resetAutoconnectBMS(){\r\n        this.autoConnectBMSError();\r\n\r\n        setTimeout(()=>{\r\n            _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].setValueTexts(this.autoConnectBMSTexts, \"Connect</br>BMS\");\r\n            _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].classListValueTextsRemove(this.autoConnectBMSTexts, \"fault\");\r\n        }, 1000);\r\n    }\r\n\r\n    autoConnectBMSError() {\r\n        this.autoconnectingBMSText.classList.add(\"hidden\");\r\n        this.autoconnectingBMSText.style.position = \"\";\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].setValueTexts(this.autoConnectBMSTexts, \"Didn't</br>work\");\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].classListValueTextsAdd(this.autoConnectBMSTexts, \"fault\");\r\n    }\r\n\r\n\r\n    setAutoconnectBMSText(text) {\r\n        this.autoconnectingBMSText.style.position = \"inherit\";\r\n        this.autoconnectingBMSText.classList.remove(\"hidden\");\r\n\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].setValueTexts(this.autoConnectBMSTexts, text);\r\n    }\r\n\r\n\r\n    resetAutoconnectBMSSilentInstant() {\r\n        this.autoconnectingBMSText.classList.add(\"hidden\");\r\n        this.autoconnectingBMSText.style.position = \"\";\r\n\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].setValueTexts(this.autoConnectBMSTexts, \"Connect</br>BMS\");\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].classListValueTextsRemove(this.autoConnectBMSTexts, \"fault\");\r\n    }\r\n\r\n\r\n    resetAutoconnectTacho() {\r\n        this.autoconnectTachoError();\r\n\r\n        setTimeout(() => {\r\n            _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].setValueTexts(this.autoConnectTachoTexts, \"Connect</br>Tacho\");\r\n            _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].classListValueTextsRemove(this.autoConnectTachoTexts, \"fault\");\r\n        }, 1000);\r\n    }\r\n\r\n    resetAutoconnectTachoSilentInstant() {\r\n        this.autoconnectingTachoText.classList.add(\"hidden\");\r\n        this.autoconnectingTachoText.style.position = \"\";\r\n\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].setValueTexts(this.autoConnectTachoTexts, \"Connect</br>Tacho\");\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].classListValueTextsRemove(this.autoConnectTachoTexts, \"fault\");\r\n    }\r\n\r\n    autoconnectTachoError() {\r\n        this.autoconnectingTachoText.classList.add(\"hidden\");\r\n        this.autoconnectingTachoText.style.position = \"\";\r\n\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].setValueTexts(this.autoConnectTachoTexts, \"Didn't</br>work\");\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].classListValueTextsAdd(this.autoConnectTachoTexts, \"fault\");\r\n    }\r\n\r\n    setAutoconnectTachoText(text) {\r\n        this.autoconnectingTachoText.style.position = \"inherit\";\r\n        this.autoconnectingTachoText.classList.remove(\"hidden\");\r\n\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].setValueTexts(this.autoConnectTachoTexts, text);\r\n    }\r\n\r\n\r\n\r\n\r\n    initTachoObj(tachoObj){\r\n        this.tachoObj = tachoObj;\r\n    }\r\n\r\n    addGUIEventListeners(){\r\n        this.clearAlertsButton.addEventListener(\"click\", () => {\r\n            this.bmsObj.clearAlerts(0, \"\");\r\n        });\r\n\r\n\r\n        //todo: transfer the characteristics write to bmsObj\r\n        this.boardConfigTurnOnButton.addEventListener(\"click\", () => {\r\n            if (this.boardConfigTurnOnButton.innerHTML.includes(\"ON\")) { // if the button says \"Switch on\", switch on when pressed\r\n                this.boardConfigTurnOnButton.classList.add(\"button-orange\");\r\n                this.bmsObj.turnOnCharacteristic.writeValue(Uint8Array.from([1]).buffer).then(_ => {\r\n                    this.boardConfigTurnOnButton.classList.remove(\"button-orange\");\r\n                }).catch(_ => {\r\n                    console.log(\"failed to turn on\");\r\n                });\r\n            }\r\n            if (this.boardConfigTurnOnButton.innerHTML.includes(\"OFF\")) {\r\n                this.boardConfigTurnOnButton.classList.add(\"button-orange\");\r\n                this.bmsObj.turnOnCharacteristic.writeValue(Uint8Array.from([0]).buffer).then(_ => {\r\n                    this.boardConfigTurnOnButton.classList.remove(\"button-orange\");\r\n                }).catch(_ => {\r\n                    console.log(\"failed to turn off\");\r\n                });\r\n            }\r\n        });\r\n\r\n        this.boardCalibTurnOnButton.addEventListener(\"click\", () => {\r\n            if (this.boardCalibTurnOnButton.innerHTML.includes(\"ON\")) { // if the button says \"Switch on\", switch on when pressed\r\n                this.boardCalibTurnOnButton.classList.add(\"button-orange\");\r\n                this.bmsObj.turnOnCharacteristic.writeValue(Uint8Array.from([1]).buffer).then(_ => {\r\n                    this.boardCalibTurnOnButton.classList.remove(\"button-orange\");\r\n                }).catch(_ => {\r\n                    console.log(\"failed to turn on\");\r\n                });\r\n            }\r\n            if (this.boardCalibTurnOnButton.innerHTML.includes(\"OFF\")) {\r\n                this.boardCalibTurnOnButton.classList.add(\"button-orange\");\r\n                this.bmsObj.turnOnCharacteristic.writeValue(Uint8Array.from([0]).buffer).then(_ => {\r\n                    this.boardCalibTurnOnButton.classList.remove(\"button-orange\");\r\n                }).catch(_ => {\r\n                    console.log(\"failed to turn off\");\r\n                });\r\n            }\r\n        });\r\n\r\n\r\n\r\n\r\n        // bind is necessary since the functions call methods from this class\r\n        // without bind, the \"this\" context would get lost, making the listeners not work\r\n        this.turnOnTd.addEventListener(\"mousedown\", this.turnOnTdPressed.bind(this));\r\n        this.turnOnTd.addEventListener(\"touchstart\", this.turnOnTdPressed.bind(this));\r\n        this.turnOnTd.addEventListener(\"touchmove\", this.turnOnTdMoved.bind(this));\r\n\r\n        this.turnOnTd.addEventListener(\"mouseup\", this.turnOnTdReleased.bind(this));\r\n        this.turnOnTd.addEventListener(\"touchend\", this.turnOnTdReleased.bind(this));\r\n\r\n\r\n\r\n        this.resetEconomyButton.addEventListener(\"click\", () => {\r\n            // triggers a reset of all the offsets needed to calculate the sessison economy\r\n            // basically starts a new session for the measurement\r\n            console.log(\"new session values for economy!\");\r\n            this.tachoObj.tachoDataProcessor.drivenDistanceOffset = -1;\r\n        });\r\n\r\n\r\n        this.resetTripButton.addEventListener(\"click\", () => {\r\n\r\n            this.tachoObj.inlineOdometerCharacteristic.writeValueWithoutResponse(Uint8Array.from([0x01]).buffer).then(()=>{\r\n                // also reset economy values\r\n                this.tachoObj.tachoDataProcessor.drivenDistanceOffset = -1;\r\n            }).catch(_ =>{\r\n                console.log(\"failed to reset trip odometer\");\r\n            });\r\n\r\n        });\r\n\r\n\r\n        for (let button of this.hideSettingButtons) {\r\n            button.addEventListener(\"click\", ()=>{\r\n                this.table.scrollIntoView({\r\n                    behavior: \"smooth\"\r\n                });\r\n\r\n                this.hideAllSettings();\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    // reset everything connected to the settings\r\n    hideAllSettings(){\r\n\r\n        // hide all settings containing containers\r\n        this.boardCalibContainer.classList.add(\"hidden\");\r\n        this.boardConfigContainer.classList.add(\"hidden\");\r\n        this.inlineConfigContainer.classList.add(\"hidden\");\r\n        this.boardInfoContainer.classList.add(\"hidden\");\r\n        this.interfaceSettingsContainer.classList.add(\"hidden\");\r\n    }\r\n\r\n\r\n    updateConfigRelatedGauges(config) {\r\n        // config info  tile\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].setValueTexts(this.bmsConfigStartupValues, (config.boardAutoStart ? 'Autostart' : 'manual Start'));\r\n\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].setValueTexts(this.bmsConfigOverVoltageValues, String(config.packOverVoltage) + \"V\");\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].setValueTexts(this.bmsConfigUnderVoltageValues, String(config.packUnderVoltage) + \"V\");\r\n\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].setValueTexts(this.bmsConfigOverTempValues, String(Math.min(config.protMaxLogicTemp, config.protMaxPowerTemp)) + \"°C\");\r\n\r\n\r\n        // disable non enabled channels and count number of enabled channels - to adjust protection values\r\n        let numChannels = 0;\r\n        if (!(config.boardEnabledChannels & 0b00000001)) {\r\n            document.getElementById(\"channel-info-1\").classList.add(\"disabled\");\r\n        } else {\r\n            document.getElementById(\"channel-info-1\").classList.remove(\"disabled\");\r\n            numChannels ++;\r\n        }\r\n        if (!(config.boardEnabledChannels & 0b00000010)) {\r\n            document.getElementById(\"channel-info-2\").classList.add(\"disabled\");\r\n        } else {\r\n            document.getElementById(\"channel-info-2\").classList.remove(\"disabled\");\r\n            numChannels ++;\r\n        }\r\n        if (!(config.boardEnabledChannels & 0b00000100)) {\r\n            document.getElementById(\"channel-info-3\").classList.add(\"disabled\");\r\n        } else {\r\n            document.getElementById(\"channel-info-3\").classList.remove(\"disabled\");\r\n            numChannels ++;\r\n        }\r\n\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].setValueTexts(this.bmsConfigUnderCurrentValues, String(config.protMaxReverseCurrent * 0.01 * numChannels) + \"A\");\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].setValueTexts(this.bmsConfigOverCurrentValues, String(config.protMaxCurrent * 0.01 * numChannels) + \"A\");\r\n\r\n        // should some day be editable on a per-channel basis\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].setValueTexts(this.bmsCh1TypeValues, config.battCellCount + \"S\");\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].setValueTexts(this.bmsCh2TypeValues, config.battCellCount + \"S\");\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].setValueTexts(this.bmsCh3TypeValues, config.battCellCount + \"S\");\r\n    }\r\n\r\n\r\n    setBMSState(stateMachineState) {\r\n        let stateMachineStateString;\r\n\r\n        // noinspection FallThroughInSwitchStatementJS\r\n        switch (stateMachineState) {\r\n            case 0:\r\n                stateMachineStateString = \"Startup\"\r\n                break;\r\n\r\n            case 1:\r\n                stateMachineStateString = \"Precharging...\"\r\n                break;\r\n\r\n            case 2:\r\n                stateMachineStateString = \"Ready\"\r\n                break;\r\n\r\n            case 4:\r\n                stateMachineStateString = \"Fault\"\r\n                break;\r\n\r\n            case 3:\r\n                stateMachineStateString = \"Operation\"\r\n                _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].classListValueTextsAdd(this.bmsStateMachineStateValues, \"success\");\r\n                break;\r\n\r\n            default:\r\n                stateMachineStateString = \"UNDEFINED STATE!\"\r\n                break;\r\n        }\r\n\r\n        if(stateMachineState !== 3){\r\n            _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].classListValueTextsRemove(this.bmsStateMachineStateValues, \"success\");\r\n        }\r\n\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].setValueTexts(this.bmsStateMachineStateValues, stateMachineStateString);\r\n    }\r\n\r\n\r\n    handleTurnOnTd(loggingPacket) {\r\n        let stateMachineState = loggingPacket.stateMachineState;\r\n        // turn on field is now tied to the state machine state - smart choice!\r\n        if (stateMachineState === 2) { // ready\r\n\r\n            // if turnOnTd is in the elements div (clear alerts must be on the screen then), swap\r\n            this.elementsDiv.childNodes.forEach((child) => {\r\n                if (child === this.turnOnTd) {\r\n                    _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].swap(this.clearAlertsTd, this.turnOnTd);\r\n                }\r\n            });\r\n            if (!this.turnOnButton.innerHTML.includes(\"ON\")) {\r\n                this.turnOnButton.innerHTML = \"<h2>Switch ON</h2>\";\r\n            }\r\n        }\r\n        if (stateMachineState === 3) { // operation\r\n            this.elementsDiv.childNodes.forEach((child) => {\r\n                if (child === this.turnOnTd) {\r\n                    _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].swap(this.clearAlertsTd, this.turnOnTd);\r\n                }\r\n            });\r\n            if (!this.turnOnButton.innerHTML.includes(\"OFF\")) {\r\n                this.turnOnButton.innerHTML = \"<h2>Switch OFF</h2>\";\r\n            }\r\n        }\r\n        if (stateMachineState === 1) { // Precharging\r\n            this.elementsDiv.childNodes.forEach((child) => {\r\n                if (child === this.turnOnTd) {\r\n                    _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].swap(this.clearAlertsTd, this.turnOnTd);\r\n                }\r\n            });\r\n            this.turnOnButton.innerHTML = \"<h2>Precharging...</h2>\";\r\n\r\n            this.turnOnButton.classList.add(\"animateLoading\");\r\n\r\n            let maxInputVoltage = Math.max(loggingPacket.u1, loggingPacket.u2, loggingPacket.u3);\r\n            let prechargePercentage = loggingPacket.uOut / (maxInputVoltage - 1);\r\n\r\n            this.turnOnButton.style.backgroundSize = (prechargePercentage*100) + \"% 100%\";\r\n        }else{\r\n            this.turnOnButton.classList.remove(\"animateLoading\");\r\n            this.turnOnButton.style.backgroundSize = \"\";\r\n        }\r\n        if (stateMachineState === 4) { // fault\r\n            this.elementsDiv.childNodes.forEach((child) => {\r\n                if (child === this.clearAlertsTd) {\r\n                    _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].swap(this.clearAlertsTd, this.turnOnTd);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    handleConfigWarningButtons(stateMachineState){\r\n        if (stateMachineState === 3) { // operation\r\n            // change the turn on/off buttons\r\n            if (!this.boardConfigTurnOnButton.innerHTML.includes(\"OFF\")) {\r\n                this.boardConfigTurnOnButton.innerHTML = \"Turn OFF\";\r\n            }\r\n            if (!this.boardCalibTurnOnButton.innerHTML.includes(\"OFF\")) {\r\n                this.boardCalibTurnOnButton.innerHTML = \"Turn OFF\";\r\n            }\r\n\r\n            // update the warning\r\n            this.configWriteWarning.classList.remove(\"hidden\");\r\n            this.calibWriteWarning.classList.remove(\"hidden\");\r\n\r\n            this.boardConfigInputFields.forEach((element) => {\r\n                element.classList.add(\"warning\");\r\n            });\r\n            this.boardCalibInputFields.forEach((element) => {\r\n                element.classList.add(\"warning\");\r\n            });\r\n        }else{\r\n            // change the turn on/off buttons\r\n            if (!this.boardConfigTurnOnButton.innerHTML.includes(\"ON\")) {\r\n                this.boardConfigTurnOnButton.innerHTML = \"Turn ON\";\r\n            }\r\n            if (!this.boardCalibTurnOnButton.innerHTML.includes(\"ON\")) {\r\n                this.boardCalibTurnOnButton.innerHTML = \"Turn ON\";\r\n            }\r\n\r\n            // update the warning\r\n            this.configWriteWarning.classList.add(\"hidden\");\r\n            this.calibWriteWarning.classList.add(\"hidden\");\r\n\r\n            this.boardConfigInputFields.forEach((element) => {\r\n                element.classList.remove(\"warning\");\r\n            });\r\n            this.boardCalibInputFields.forEach((element) => {\r\n                element.classList.remove(\"warning\");\r\n            });\r\n        }\r\n    }\r\n\r\n    turnOnTdPressed(event){\r\n        // save the touch event start to be compared to move event - cancel turn on/off on scroll\r\n        try{\r\n            this.turnOnTdMoveStart.x = event.changedTouches[0].screenX;\r\n            this.turnOnTdMoveStart.y = event.changedTouches[0].screenY;\r\n        }catch(e) {\r\n            // sometimes, there is no changed Touch in the event (don't ask why)\r\n            if(!(e instanceof TypeError)){\r\n                console.log(e);\r\n            }\r\n        }\r\n\r\n        if (this.turnOnButton.innerHTML.includes(\"ON\")) { // if the button says \"Switch on\", switch on when pressed\r\n            // turn on the animation of filling the button\r\n            this.turnOnButton.classList.add(\"animateTurnOnButton\");\r\n            // listen for the animation to end (mouse has been down for 0.5s if this event fires)\r\n            this.turnOnButton.addEventListener('animationend', () => {\r\n                this.turnOnButton.classList.add(\"orange\");\r\n\r\n                this.bmsObj.turnOnCharacteristic.writeValue(Uint8Array.from([1]).buffer).then(() => {\r\n                    this.turnOnButton.classList.remove(\"orange\");\r\n                    //console.log(\"turned on\");\r\n                }).catch(e => {\r\n                    console.log(\"failed to turn on\" + e);\r\n                });\r\n                this.turnOnButton.classList.remove(\"animateTurnOnButton\");\r\n            });\r\n        }\r\n        if (this.turnOnButton.innerHTML.includes(\"OFF\")) {\r\n            this.turnOnButton.classList.add(\"animateTurnOffButton\");\r\n            // listen for the animation to end (mouse has been down for 0.5s if this event fires)\r\n            this.turnOnButton.addEventListener('animationend', () => {\r\n                this.turnOnButton.classList.add(\"orange\");\r\n\r\n                this.bmsObj.turnOnCharacteristic.writeValue(Uint8Array.from([0]).buffer).then(() => {\r\n                    this.turnOnButton.classList.remove(\"orange\");\r\n                    //console.log(\"turned on\");\r\n                }).catch(e => {\r\n                    console.log(\"failed to turn off\" + e);\r\n                });\r\n                this.turnOnButton.classList.remove(\"animateTurnOffButton\");\r\n            });\r\n        }\r\n    }\r\n\r\n    // cancel animation if touch user only wants to scroll\r\n    turnOnTdMoved(event){\r\n        const moveX = this.turnOnTdMoveStart.x - event.changedTouches[0].screenX;\r\n        const moveY = this.turnOnTdMoveStart.y - event.changedTouches[0].screenY;\r\n        const swipeDistance = Math.sqrt(Math.pow(moveX, 2) + Math.pow(moveY, 2));\r\n        if(swipeDistance > window.outerHeight * 0.01){\r\n            this.turnOnButton.classList.remove(\"animateTurnOnButton\");\r\n            this.turnOnButton.classList.remove(\"animateTurnOffButton\");\r\n        }\r\n    }\r\n\r\n    turnOnTdReleased(){\r\n        // stop the animations if the mouse button/touch action is released\r\n        if (this.turnOnButton.innerHTML.includes(\"ON\")) {\r\n            this.turnOnButton.classList.remove(\"animateTurnOnButton\");\r\n        }\r\n        if (this.turnOnButton.innerHTML.includes(\"OFF\")) {\r\n            this.turnOnButton.classList.remove(\"animateTurnOffButton\");\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    updateBMSNameFields(name){\r\n        if(typeof name === \"undefined\"){\r\n            _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].setValueValues(this.deviceNameFields, \"too old firmware\");\r\n        }else{\r\n            _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].setValueValues(this.deviceNameFields, name);\r\n        }\r\n    }\r\n\r\n\r\n    setBMSCalculatedValues(data){\r\n        // total current\r\n        let iTotalString = data.iTotal.toFixed(1);\r\n        if(iTotalString === \"-0.0\"){iTotalString = \"0.0\"}\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].setValueTexts(this.bmsCombinedCurrentValues, iTotalString + \"A\");\r\n\r\n        // total power\r\n        let pTotalString = data.pTotal.toFixed(1);\r\n        if(pTotalString === \"-0.0\"){pTotalString = \"0.0\"}\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].setValueTexts(this.bmsCombinedPowerValues, pTotalString + \"kW\");\r\n\r\n        // power loss\r\n        let pLossString = \"\";\r\n        if(data.pLoss < 2){\r\n            // PFUSCH, we should think about a warning, not just cap the value at a min\r\n            if(data.pLoss < 2){ pLossString = \"<2.0\"; }\r\n        }else{\r\n            pLossString = data.pLoss.toFixed(1);\r\n        }\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].setValueTexts(this.bmsPowerLossValues, pLossString + \"W\");\r\n\r\n        // used energy\r\n        if(Math.abs(data.energyUsed.combined / 1000) < 200){        // 0 to 199.9Wh\r\n            _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].setValueTexts(this.bmsCombinedEnergyUsedValues,  (data.energyUsed.combined / 1000).toFixed(1) + \"Wh\");\r\n        }else if(Math.abs(data.energyUsed.combined / 1000) < 1000){  // 200Wh to 999Wh\r\n            _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].setValueTexts(this.bmsCombinedEnergyUsedValues,  (data.energyUsed.combined / 1000).toFixed(0) + \"Wh\");\r\n        }else if(Math.abs(data.energyUsed.combined / 1000) < 20000){ // 1.0kWh to 19.9kWh\r\n            _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].setValueTexts(this.bmsCombinedEnergyUsedValues,  (data.energyUsed.combined / 1000000).toFixed(1) + \"kWh\");\r\n        }else{                                             //from 20kWh\r\n            _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].setValueTexts(this.bmsCombinedEnergyUsedValues,  (data.energyUsed.combined / 1000000).toFixed(0) + \"kWh\");\r\n        }\r\n\r\n        if(Math.abs(data.energyUsed.ch1 / 1000) < 200){           // 0 to 199.999Wh\r\n            _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].setValueTexts(this.bmsCh1EnergyUsedValues, (data.energyUsed.ch1 / 1000).toFixed(3) + \"Wh\");\r\n        }else if(Math.abs(data.energyUsed.ch1 / 1000) < 1000){    // 200.00Wh to 999.99Wh\r\n            _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].setValueTexts(this.bmsCh1EnergyUsedValues, (data.energyUsed.ch1 / 1000).toFixed(2) + \"Wh\");\r\n        }else if(Math.abs(data.energyUsed.ch1 / 1000) < 10000){   // 1000.0Wh to 9999.9Wh\r\n            _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].setValueTexts(this.bmsCh1EnergyUsedValues, (data.energyUsed.ch1 / 1000).toFixed(1) + \"Wh\");\r\n        }else if(Math.abs(data.energyUsed.ch1 / 1000) < 100000){  // 10000Wh to 99999Wh\r\n            _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].setValueTexts(this.bmsCh1EnergyUsedValues, (data.energyUsed.ch1 / 1000).toFixed(0) + \"Wh\");\r\n        }else {                                         // from 100.0kWh\r\n            _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].setValueTexts(this.bmsCh1EnergyUsedValues, (data.energyUsed.ch1 / 1000000).toFixed(1) + \"kWh\");\r\n        }\r\n\r\n        if(Math.abs(data.energyUsed.ch2 / 1000) < 200){           // 0 to 199.999Wh\r\n            _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].setValueTexts(this.bmsCh2EnergyUsedValues, (data.energyUsed.ch2 / 1000).toFixed(3) + \"Wh\");\r\n        }else if(Math.abs(data.energyUsed.ch2 / 1000) < 1000){    // 200.00Wh to 999.99Wh\r\n            _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].setValueTexts(this.bmsCh2EnergyUsedValues, (data.energyUsed.ch2 / 1000).toFixed(2) + \"Wh\");\r\n        }else if(Math.abs(data.energyUsed.ch2 / 1000) < 10000){   // 1000.0Wh to 9999.9Wh\r\n            _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].setValueTexts(this.bmsCh2EnergyUsedValues, (data.energyUsed.ch2 / 1000).toFixed(1) + \"Wh\");\r\n        }else if(Math.abs(data.energyUsed.ch2 / 1000) < 100000){  // 10000Wh to 99999Wh\r\n            _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].setValueTexts(this.bmsCh2EnergyUsedValues, (data.energyUsed.ch2 / 1000).toFixed(0) + \"Wh\");\r\n        }else {                                         // from 100.0kWh\r\n            _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].setValueTexts(this.bmsCh2EnergyUsedValues, (data.energyUsed.ch2 / 1000000).toFixed(1) + \"kWh\");\r\n        }\r\n\r\n        if(Math.abs(data.energyUsed.ch3 / 1000) < 200){           // 0 to 199.999Wh\r\n            _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].setValueTexts(this.bmsCh3EnergyUsedValues, (data.energyUsed.ch3 / 1000).toFixed(3) + \"Wh\");\r\n        }else if(Math.abs(data.energyUsed.ch3 / 1000) < 1000){    // 200.00Wh to 999.99Wh\r\n            _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].setValueTexts(this.bmsCh3EnergyUsedValues, (data.energyUsed.ch3 / 1000).toFixed(2) + \"Wh\");\r\n        }else if(Math.abs(data.energyUsed.ch3 / 1000) < 10000){   // 1000.0Wh to 9999.9Wh\r\n            _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].setValueTexts(this.bmsCh3EnergyUsedValues, (data.energyUsed.ch3 / 1000).toFixed(1) + \"Wh\");\r\n        }else if(Math.abs(data.energyUsed.ch3 / 1000) < 100000){  // 10000Wh to 99999Wh\r\n            _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].setValueTexts(this.bmsCh3EnergyUsedValues, (data.energyUsed.ch3 / 1000).toFixed(0) + \"Wh\");\r\n        }else {                                         // from 100.0kWh\r\n            _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].setValueTexts(this.bmsCh3EnergyUsedValues, (data.energyUsed.ch3 / 1000000).toFixed(1) + \"kWh\");\r\n        }\r\n\r\n        // state of charge (soc)\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].setValueTexts(this.bmsCh1SOCValues, (data.soc.ch1).toFixed(1) + \"%\");\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].setValueTexts(this.bmsCh2SOCValues, (data.soc.ch2).toFixed(1) + \"%\");\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].setValueTexts(this.bmsCh3SOCValues, (data.soc.ch3).toFixed(1) + \"%\");\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].setValueTexts(this.bmsMinSOCValues, (data.soc.min).toFixed(1) + \"%\");\r\n\r\n    }\r\n\r\n    setBMSTempValues(data){\r\n\r\n        // cap shunt temp values between -50°C and +150°C\r\n        if(parseFloat(data.tShunt) >= 150){\r\n            _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].setValueTexts(this.bmsShuntTempValues, \"150+°C\");\r\n        }else if(parseFloat(data.tShunt) <= -50){\r\n            _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].setValueTexts(this.bmsShuntTempValues, \"-50-°C\");\r\n        }else {\r\n            _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].setValueTexts(this.bmsShuntTempValues, data.tShunt + \"°C\");\r\n        }\r\n\r\n        // cap precharge temp values between -50°C and +150°C\r\n        if(parseFloat(data.tPch) >= 150){\r\n            _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].setValueTexts(this.bmsPrechargeTempValues, \"150+°C\");\r\n        }else if(parseFloat(data.tPch) <= -50){\r\n            _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].setValueTexts(this.bmsPrechargeTempValues, \"-50-°C\");\r\n        }else {\r\n            _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].setValueTexts(this.bmsPrechargeTempValues, data.tPch + \"°C\");\r\n        }\r\n    }\r\n\r\n\r\n    setOnTime(values) {\r\n        let seconds = (values % 60).toString();\r\n        while (seconds.length < 2) seconds = \"0\" + seconds;\r\n\r\n        let minutes = Math.floor((values / 60) % 60).toString();\r\n        while (minutes.length < 2) minutes = \"0\" + minutes;\r\n\r\n        // not that symmetric but let's be honest - who keeps it on for >10h?\r\n        let hours = Math.floor(values / 3600).toString();\r\n        while (hours.length < 1) hours = \"0\" + hours;\r\n\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].setValueTexts(this.bmsOnTimeValues, hours + \":\" + minutes + \":\" + seconds);\r\n    }\r\n\r\n    setBMSMaxValues(data) {\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].setValueTexts(this.bmsMaxPowerValues, data.power + \"kW\");\r\n\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].setValueTexts(this.bmsMaxCurrentValues, data.maxCurrent + \"A\");\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].setValueTexts(this.bmsMinCurrentValues, data.minCurrent + \"A\");\r\n\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].setValueTexts(this.bmsMinVoltageValues, data.minVoltage + \"V\");\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].setValueTexts(this.bmsMaxVoltageValues, data.maxVoltage + \"V\");\r\n\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].setValueTexts(this.bmsMaxShuntTempValues, data.shuntTemp + \"°C\");\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].setValueTexts(this.bmsMaxPrechargeTempValues, data.prechargeTemp + \"°C\");\r\n    }\r\n\r\n    setChannelVoltageInfo(data){\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].setValueTexts(this.bmsCh1VoltageValues, data.u1 + \"V\");\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].setValueTexts(this.bmsCh2VoltageValues, data.u2 + \"V\");\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].setValueTexts(this.bmsCh3VoltageValues, data.u3 + \"V\");\r\n\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].setValueTexts(this.bmsOutputVoltageValues, data.uOut + \"V\");\r\n    }\r\n    setChannelCurrentInfo(data){\r\n        // make the data more aesthetic\r\n        if(data.i1 === \"-0.00\"){data.i1 = \"0.00\"}\r\n        if(data.i2 === \"-0.00\"){data.i2 = \"0.00\"}\r\n        if(data.i3 === \"-0.00\"){data.i3 = \"0.00\"}\r\n\r\n        // as the measurements stop at 327.68A, displaying more is not possible\r\n        // 325 is a nicer number than 327 ;)\r\n        if(parseFloat(data.i1) >= 325){data.i1 = \"325+\";}\r\n        if(parseFloat(data.i1) <= -325){data.i1 = \"-325-\";}\r\n        if(parseFloat(data.i2) >= 325){data.i2 = \"325+\";}\r\n        if(parseFloat(data.i2) <= -325){data.i2 = \"-325-\";}\r\n        if(parseFloat(data.i3) >= 325){data.i3 = \"325+\";}\r\n        if(parseFloat(data.i3) <= -325){data.i3 = \"-325-\";}\r\n\r\n\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].setValueTexts(this.bmsCh1CurrentValues, data.i1 + \"A\");\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].setValueTexts(this.bmsCh1PowerValues, (parseFloat(data.u1) * parseFloat(data.i1)).toFixed(1) + \"W\");\r\n\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].setValueTexts(this.bmsCh2CurrentValues, data.i2 + \"A\");\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].setValueTexts(this.bmsCh2PowerValues, (parseFloat(data.u2) * parseFloat(data.i2)).toFixed(1) + \"W\");\r\n\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].setValueTexts(this.bmsCh3CurrentValues, data.i3 + \"A\");\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].setValueTexts(this.bmsCh3PowerValues, (parseFloat(data.u3) * parseFloat(data.i3)).toFixed(1) + \"W\");\r\n    }\r\n\r\n\r\n\r\n\r\n    enableBoardGauges(){\r\n        for(let i = 0; i < this.boardElements.length; i++){\r\n            this.boardElements[i].classList.remove(\"board-gauge-disabled\");\r\n        }\r\n\r\n        // hide \"Connect BMS\" Overlay\r\n        this.connectBMSOverlay.classList.add(\"visibility-hidden\");\r\n    }\r\n    disableBoardGauges(){\r\n        for(let i = 0; i < this.boardElements.length; i++){\r\n            this.boardElements[i].classList.add(\"board-gauge-disabled\");\r\n        }\r\n\r\n        // show \"Connect BMS\" Overlay\r\n        this.connectBMSOverlay.classList.remove(\"visibility-hidden\");\r\n    }\r\n\r\n\r\n\r\n\r\n    setTempGaugeVisibility(interfaceConfig){\r\n        if(!interfaceConfig.showBMSIntTemp){\r\n            _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].setValueTexts(this.bmsShuntTempValues, \"-°C\");\r\n            _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].classListValueTextsAdd(this.bmsShuntTempValues, \"disabled\");\r\n\r\n            _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].setValueTexts(this.bmsMaxShuntTempValues, \"-°C\");\r\n            _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].classListValueTextsAdd(this.bmsMaxShuntTempValues, \"disabled\");\r\n        }else{\r\n            _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].classListValueTextsRemove(this.bmsShuntTempValues, \"disabled\");\r\n            _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].classListValueTextsRemove(this.bmsMaxShuntTempValues, \"disabled\");\r\n        }\r\n        if(!interfaceConfig.showBMSExtTemp){\r\n            _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].setValueTexts(this.bmsPrechargeTempValues, \"-°C\");\r\n            _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].classListValueTextsAdd(this.bmsPrechargeTempValues, \"disabled\");\r\n\r\n            _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].setValueTexts(this.bmsMaxPrechargeTempValues, \"-°C\");\r\n            _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].classListValueTextsAdd(this.bmsMaxPrechargeTempValues, \"disabled\");\r\n        }else{\r\n            _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].classListValueTextsRemove(this.bmsPrechargeTempValues, \"disabled\");\r\n            _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].classListValueTextsRemove(this.bmsMaxPrechargeTempValues, \"disabled\");\r\n        }\r\n        if(!interfaceConfig.showMotorTemp){\r\n            _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].setValueTexts(this.tachoMotorTempValues, \"-°C\");\r\n            _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].classListValueTextsAdd(this.tachoMotorTempValues, \"disabled\");\r\n\r\n            _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].setValueTexts(this.tachoMaxMotorTempValues, \"-°C\");\r\n            _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].classListValueTextsAdd(this.tachoMaxMotorTempValues, \"disabled\");\r\n        }else{\r\n            _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].classListValueTextsRemove(this.tachoMotorTempValues, \"disabled\");\r\n            _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].classListValueTextsRemove(this.tachoMaxMotorTempValues, \"disabled\");\r\n        }\r\n        if(!interfaceConfig.showTachoExtTemp){\r\n            _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].setValueTexts(this.tachoExternTempValues, \"-°C\");\r\n            _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].classListValueTextsAdd(this.tachoExternTempValues, \"disabled\");\r\n\r\n            _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].setValueTexts(this.tachoMaxExternTempValues, \"-°C\");\r\n            _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].classListValueTextsAdd(this.tachoMaxExternTempValues, \"disabled\");\r\n        }else{\r\n            _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].classListValueTextsRemove(this.tachoExternTempValues, \"disabled\");\r\n            _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].classListValueTextsRemove(this.tachoMaxExternTempValues, \"disabled\");\r\n        }\r\n    }\r\n\r\n\r\n\r\n    updateWarningFields(warningBuffer, alertBuffer) {\r\n        let faultFieldText = \"\";\r\n        let faultNameText = \"\";\r\n        let faultExplanationText = \"\";\r\n\r\n        if(alertBuffer === 0 && warningBuffer === 0){\r\n            faultFieldText = \"None\";\r\n        }\r\n\r\n\r\n        if(warningBuffer !== 0){\r\n            faultFieldText += \"<warning>\";\r\n        }\r\n        if (warningBuffer & 0b00000000000000000000000000000001) {\r\n            faultFieldText += \"GPO OC  \";\r\n        }\r\n        if (warningBuffer & 0b00000000000000000000000000001000) {\r\n            faultFieldText += \"Power Temp  \";\r\n        }\r\n        if (warningBuffer & 0b00000000000000000000000000010000) {\r\n            faultFieldText += \"Logic Temp  \";\r\n        }\r\n        if (warningBuffer & 0b00000000000000000000000000100000) {\r\n            faultFieldText += \"C Imb  \";\r\n        }\r\n        if (warningBuffer & 0b00000000000000000000000001000000) {\r\n            faultFieldText += \"Ch1 UC  \";\r\n        }\r\n        if (warningBuffer & 0b00000000000000000000000010000000) {\r\n            faultFieldText += \"Ch1 OC  \";\r\n        }\r\n        if (warningBuffer & 0b00000000000000000000000100000000) {\r\n            faultFieldText += \"Ch2 UC  \";\r\n        }\r\n        if (warningBuffer & 0b00000000000000000000001000000000) {\r\n            faultFieldText += \"Ch2 OC  \";\r\n        }\r\n        if (warningBuffer & 0b00000000000000000000010000000000) {\r\n            faultFieldText += \"Ch3 UC  \";\r\n        }\r\n        if (warningBuffer & 0b00000000000000000000100000000000) {\r\n            faultFieldText += \"Ch3 OC  \";\r\n        }\r\n        if (warningBuffer & 0b00000000000000000001000000000000) {\r\n            faultFieldText += \"Ch1 OV  \";\r\n        }\r\n        if (warningBuffer & 0b00000000000000000010000000000000) {\r\n            faultFieldText += \"Ch1 UV  \";\r\n        }\r\n        if (warningBuffer & 0b00000000000000000100000000000000) {\r\n            faultFieldText += \"Ch2 OV  \";\r\n        }\r\n        if (warningBuffer & 0b00000000000000001000000000000000) {\r\n            faultFieldText += \"Ch2 UV  \";\r\n        }\r\n        if (warningBuffer & 0b00000000000000010000000000000000) {\r\n            faultFieldText += \"Ch3 OV  \";\r\n        }\r\n        if (warningBuffer & 0b00000000000000100000000000000000) {\r\n            faultFieldText += \"Ch3 UV  \";\r\n        }\r\n        if (warningBuffer & 0b00000000000001000000000000000000) {\r\n            faultFieldText += \"LIMP  \";\r\n        }\r\n        // close warning tag if needed\r\n        if(warningBuffer !== 0){\r\n            faultFieldText += \"</warning>\";\r\n        }\r\n\r\n        // open fault tag if needed\r\n        if(alertBuffer !== 0){\r\n            faultFieldText += \"<fault>\";\r\n        }\r\n        if (alertBuffer & 0b00000000000000000000000000000010) {\r\n            faultFieldText += \"Unable to Precharge\";\r\n\r\n            faultNameText = \"Unable to Precharge\";\r\n            faultExplanationText = \"either your load's current is too high during precharge or your capacitor is too big\";\r\n        }\r\n        if (alertBuffer & 0b00000000000000000000000000000100) {\r\n            faultFieldText += \"Nothing Connected\";\r\n\r\n            faultNameText = \"Nothing Connected\";\r\n            faultExplanationText = \"Voltage increased to quickly. Either your load is disconnected or your load capacitance setting is wrong.\";\r\n        }\r\n\r\n        if (alertBuffer & 0b00000000000000000000000000001000) {\r\n            faultFieldText += \"BMS Temp\";\r\n\r\n            faultNameText = \"BMS Temperature\";\r\n            faultExplanationText = \"The BMS-Temperature exceeded your max. setting (should always be below 85C°)\";\r\n        }\r\n        if (alertBuffer & 0b00000000000000000000000000010000) {\r\n            faultFieldText += \"Extern Temp\";\r\n\r\n            faultNameText = \"Extern Temperature\";\r\n            faultExplanationText = \"With MosfetBMS, your Precharge got too hot, with RelaisBMS your external Sensor got too hot\";\r\n        }\r\n        if (alertBuffer & 0b00000000000000000000000000100000) {\r\n            faultFieldText += \"Current-Imbalance\";\r\n\r\n            faultNameText = \"Current-Imbalance\";\r\n            faultExplanationText = \"Current difference setting between batteries was exceeded during operation OR turn on would have caused such an imbalance.\";\r\n        }\r\n        if (alertBuffer & 0b00000000000000000000000001000000) {\r\n            faultFieldText += \"Charge 1\";\r\n\r\n            faultNameText = \"Charge Current 1\";\r\n            faultExplanationText = \"Battery 1 has exceeded your max. charge-current setting for 10ms\";\r\n        }\r\n        if (alertBuffer & 0b00000000000000000000000010000000) {\r\n            faultFieldText += \"Discharge Current 1\";\r\n\r\n            faultNameText = \"Discharge Current 1\";\r\n            faultExplanationText = \"Battery 1 has exceeded your max. discharge-current setting for 10ms\";\r\n        }\r\n        if (alertBuffer & 0b00000000000000000000000100000000) {\r\n            faultFieldText += \"Charge 2\";\r\n\r\n            faultNameText = \"Charge Current 2\";\r\n            faultExplanationText = \"Battery 2 has exceeded your max. charge-current setting for 10ms\";\r\n        }\r\n        if (alertBuffer & 0b00000000000000000000001000000000) {\r\n            faultFieldText += \"Discharge Current 2\";\r\n\r\n            faultNameText = \"Discharge Current 2\";\r\n            faultExplanationText = \"Battery 2 has exceeded your max. discharge-current setting for 10ms\";\r\n        }\r\n        if (alertBuffer & 0b00000000000000000000010000000000) {\r\n            faultFieldText += \"Charge 3\";\r\n\r\n            faultNameText = \"Charge Current 3\";\r\n            faultExplanationText = \"Battery 3 has exceeded your max. charge-current setting for 10ms\";\r\n        }\r\n        if (alertBuffer & 0b00000000000000000000100000000000) {\r\n            faultFieldText += \"Discharge Current 3\";\r\n\r\n            faultNameText = \"Discharge Current 3\";\r\n            faultExplanationText = \"Battery 3 has exceeded your max. discharge-current setting for 10ms\";\r\n        }\r\n        if (alertBuffer & 0b00000000000000000001000000000000) {\r\n            faultFieldText +=\"Over-Voltage 1\";\r\n\r\n            faultNameText = \"Over-Voltage 1\";\r\n            faultExplanationText = \"Battery 1 exceeded your max. voltage setting\";\r\n        }\r\n        if (alertBuffer & 0b00000000000000000010000000000000) {\r\n            faultFieldText +=\"Low-Voltage 1\";\r\n\r\n            faultNameText = \"Low-Voltage 1\";\r\n            faultExplanationText = \"Battery 1 voltage dropped below your low voltage setting\";\r\n        }\r\n        if (alertBuffer & 0b00000000000000000100000000000000) {\r\n            faultFieldText +=\"Over-Voltage 2\";\r\n\r\n            faultNameText = \"Over-Voltage 2\";\r\n            faultExplanationText = \"Battery 2 exceeded your max. voltage setting\";\r\n        }\r\n        if (alertBuffer & 0b00000000000000001000000000000000) {\r\n            faultFieldText +=\"Low-Voltage 2\";\r\n\r\n            faultNameText = \"Low-Voltage 2\";\r\n            faultExplanationText = \"Battery 2 voltage dropped below your low voltage setting\";\r\n        }\r\n        if (alertBuffer & 0b00000000000000010000000000000000) {\r\n            faultFieldText +=\"Over-Voltage 3\";\r\n\r\n            faultNameText = \"Over-Voltage 3\";\r\n            faultExplanationText = \"Battery 3 exceeded your max. voltage setting\";\r\n        }\r\n        if (alertBuffer & 0b00000000000000100000000000000000) {\r\n            faultFieldText +=\"Low-Voltage 3\";\r\n\r\n            faultNameText = \"Low-Voltage 3\";\r\n            faultExplanationText = \"Battery 3 Voltage dropped below your low voltage settings\";\r\n        }\r\n        if (alertBuffer & 0b00000000000001000000000000000000) {\r\n            faultFieldText += \"Other Fault\";\r\n\r\n            faultNameText = \"Other Fault\";\r\n            faultExplanationText = \"Other Fault(oldShort) Not implemented yet\";\r\n        }\r\n        if (alertBuffer & 0b00010000000000000000000000000000) {\r\n            faultFieldText += \"Invalid Input\";\r\n\r\n            faultNameText = \"Invalid config/calib input\";\r\n            faultExplanationText = \"Sorry, we forgot to make this input impossible for the user, will be fixed soon! :)\";\r\n        }\r\n        if (alertBuffer & 0b00100000000000000000000000000000) {\r\n            faultFieldText += \"Firmware\";\r\n\r\n            faultNameText = \"Firmware Hiccup\";\r\n            faultExplanationText = \"Firmware internal hiccup. This might be caused by corrupted config/calib data. Please restart your device.\";\r\n        }\r\n        if (alertBuffer & 0b10000000000000000000000000000000) {\r\n            faultFieldText += \"HW Fault\";\r\n\r\n            faultNameText = \"Hardware Fault\";\r\n            faultExplanationText = \"Most likely a broken switch or broken precharge\";\r\n        }\r\n\r\n        // only display this generic fault if no other faults have fired\r\n        if(alertBuffer !== 0 && faultFieldText === \"\"){\r\n            faultFieldText += \"Fault\";\r\n\r\n            faultNameText = \"Fault\";\r\n            faultExplanationText = \"alert spike - big EMI/EMC problem or Hiccup. Please confirm!\";\r\n        }\r\n\r\n\r\n        // append a closing fault tag if needed\r\n        if(alertBuffer !== 0){\r\n            faultFieldText += \"</fault>\";\r\n        }\r\n\r\n        // only update field if needed - ensures animation is working correctly\r\n        if(this.faultStateValue.innerHTML !== faultFieldText){\r\n            _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].setValueTexts(this.bmsFaultStateValues, faultFieldText);\r\n        }\r\n\r\n        // only update fields if needed - max fps!!!!\r\n        if(this.clearAlertsFaultName.innerHTML !== faultNameText){\r\n            this.clearAlertsFaultName.innerHTML = faultNameText;\r\n        }\r\n        if(this.clearAlertsFaultExplanation.innerHTML !== faultExplanationText){\r\n            this.clearAlertsFaultExplanation.innerHTML = faultExplanationText;\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    /*\r\n        INLINE related\r\n     */\r\n\r\n    setInlineMaxValues(data){\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].setValueTexts(this.tachoMaxSpeedValues, data.speed.toFixed(1) + \"km/h\");\r\n\r\n        // cap extern temp values between -50°C and +150°C\r\n        if(parseFloat(data.motorTemp) >= 150){\r\n            _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].setValueTexts(this.tachoMaxMotorTempValues, \"150+°C\");\r\n        }else if(parseFloat(data.motorTemp) <= -50){\r\n            _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].setValueTexts(this.tachoMaxMotorTempValues, \"-50-°C\");\r\n        }else {\r\n            _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].setValueTexts(this.tachoMaxMotorTempValues, data.motorTemp + \"°C\");\r\n        }\r\n\r\n\r\n        // cap extern temp values between -50°C and +150°C\r\n        if(parseFloat(data.externTemp) >= 150){\r\n            _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].setValueTexts(this.tachoMaxExternTempValues, \"150+°C\");\r\n        }else if(parseFloat(data.externTemp) <= -50){\r\n            _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].setValueTexts(this.tachoMaxExternTempValues, \"-50-°C\");\r\n        }else {\r\n            _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].setValueTexts(this.tachoMaxExternTempValues, data.externTemp + \"°C\");\r\n        }\r\n\r\n    }\r\n\r\n\r\n    setSpeedGaugeValues(data){\r\n        if(data.speed >= 0){ // forwards\r\n            _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].setValueTexts(this.tachoSpeedValues, data.speed + \"km/h\");\r\n            _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].setValueTexts(this.tachoSpeedNoUnitValues, data.speed);\r\n        }else{ // backwards\r\n            _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].setValueTexts(this.tachoSpeedValues, data.speed + \"km/h\");\r\n            _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].setValueTexts(this.tachoSpeedNoUnitValues, data.speed);\r\n        }\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].setValueTexts(this.tachoRPMValues, parseFloat(data.rpm).toFixed(0) + \"RPM\");\r\n    }\r\n\r\n    setTachoGauges(values){\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].setValueTexts(this.tachoTripOdoValues, (values.tripOdo / 1000000).toFixed(2));\r\n\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].setValueTexts(this.tachoVehicleOdoValues, (Math.floor((values.vehicleOdo / 10)) / 10).toFixed(1));\r\n    }\r\n\r\n\r\n\r\n    setInlineTempValues(data){\r\n        // cap motor temp values between -50°C and +150°C\r\n        if(parseFloat(data.motor) >= 150){\r\n            _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].setValueTexts(this.tachoMotorTempValues, \"150+°C\");\r\n        }else if(parseFloat(data.motor) <= -50){\r\n            _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].setValueTexts(this.tachoMotorTempValues, \"-50-°C\");\r\n        }else {\r\n            _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].setValueTexts(this.tachoMotorTempValues, data.motor + \"°C\");\r\n        }\r\n\r\n        // cap extern temp values between -50°C and +150°C\r\n        if(parseFloat(data.extern) >= 150){\r\n            _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].setValueTexts(this.tachoExternTempValues, \"150+°C\");\r\n        }else if(parseFloat(data.extern) <= -50){\r\n            _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].setValueTexts(this.tachoExternTempValues, \"-50-°C\");\r\n        }else {\r\n            _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].setValueTexts(this.tachoExternTempValues, data.extern + \"°C\");\r\n        }\r\n    }\r\n\r\n    setEconomyGauges(values){\r\n        // because sometimes its -Infinity xD\r\n        if(Math.abs(values.whkmSession) === Infinity){\r\n            _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].setValueTexts(this.sessionEconomyValues, \"∞\");\r\n        }else{\r\n            _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].setValueTexts(this.sessionEconomyValues, values.whkmSession.toFixed(1));\r\n        }\r\n\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].setValueTexts(this.sessionRangeValues, values.range.toFixed(1));\r\n    }\r\n    disableEconomyGauges(){\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].setValueTexts(this.sessionRangeValues, \"no BMS\");\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].setValueTexts(this.sessionEconomyValues, \"no BMS\");\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    disableNothingConnectedOverlay() {\r\n        this.nothingConnectedOverlay.classList.add(\"disabled\");\r\n        this.nothingConnectedOverlay.classList.add(\"visibility-hidden\");\r\n\r\n        // always hiding \"Auto-connecting...\" text when disabling the overlay\r\n        this.autoconnectingTachoText.classList.add(\"hidden\");\r\n        this.autoconnectingBMSText.classList.add(\"hidden\");\r\n    }\r\n\r\n    enableNothingConnectedOverlay() {\r\n        if(this.nothingConnectedOverlay.classList.contains(\"disabled\")){\r\n            this.nothingConnectedOverlay.classList.remove(\"disabled\");\r\n        }\r\n        if(this.nothingConnectedOverlay.classList.contains(\"visibility-hidden\")){\r\n            this.nothingConnectedOverlay.classList.remove(\"visibility-hidden\");\r\n        }\r\n    }\r\n}\n\n//# sourceURL=webpack://dragonbms-interface-web/./js/gui.js?");

/***/ }),

/***/ "./js/gui_elements.js":
/*!****************************!*\
  !*** ./js/gui_elements.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ gui_elements)\n/* harmony export */ });\n/* harmony import */ var _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./helpers/small_functions */ \"./js/helpers/small_functions.js\");\n\r\n\r\nclass gui_elements{\r\n\r\n    constructor() {\r\n    }\r\n\r\n    // MAIN TABLE\r\n    table = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"main-table\");\r\n\r\n    // TILEBAR\r\n    tilebarDOM = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"tilebar\");\r\n\r\n    tileBarEditMode = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"tilebar-edit\");\r\n    tileBarInterfaceDropdown = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"tilebar-interface-dropdown\");\r\n    tileBarCaptureMode = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"tilebar-capture-mode\");\r\n\r\n\r\n    // capture mode stuff\r\n    captureModeContainer = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"capture-mode-container\");\r\n\r\n\r\n    // placeholder tag for legacy file save option\r\n    aDownloadFile = document.getElementById('aDownloadFile');\r\n\r\n\r\n    // root (contains all the css vars)\r\n    domRoot = document.querySelector(':root');\r\n\r\n    // hardware specific labels\r\n    bmsPrechargeTempLabels = document.getElementsByClassName(\"bms-precharge-temp-label\");\r\n    bmsMaxPrechargeTempLabels = document.getElementsByClassName(\"bms-max-pch-temp-label\");\r\n\r\n\r\n    // INTERFACE INFO\r\n    interfaceSettingsContainer = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"interface-settings-container\");\r\n    interfaceVersionFields = document.getElementsByClassName(\"version-number-field\");\r\n    interfaceBMSFilterConnection = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"interface-filter-bms-connection\");\r\n    interfaceBMSAutoReadConfigCalib = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"interface-bms-auto-read-config-calib\");\r\n    interfaceAveragingTimeU = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"interface-averaging-time-u\");\r\n    interfaceAveragingTimeI = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"interface-averaging-time-i\");\r\n    interfaceAveragingTimeT = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"interface-averaging-time-t\");\r\n    interfaceAveragingTimeCalib = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"interface-averaging-time-calib\");\r\n    interfaceAveragingTimeTachoV = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"interface-averaging-time-tacho-v\");\r\n    interfaceAveragingTimeTachoT = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"interface-averaging-time-tacho-t\");\r\n    interfaceMaxValuesHoldOnTime = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"interface-max-value-hold-on-time\");\r\n    interfaceConnectionStepTimeout = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"interface-connect-step-timeout\");\r\n    interfaceWakeLock = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"interface-wakelock-checkbox\");\r\n    interfaceShowBMSExtTemp = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"interface-show-temp-bms-ext\");\r\n    interfaceShowBMSIntTemp = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"interface-show-temp-bms\");\r\n    interfaceShowMotorTemp = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"interface-show-temp-motor\");\r\n    interfaceShowTachoExtTemp = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"interface-show-temp-tacho-ext\");\r\n\r\n\r\n    // Settings elements\r\n\r\n    // BOARD INFO\r\n    boardInfoContainer = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"device-info-container\");\r\n    deviceNameFields = document.getElementsByClassName(\"bms-name-field\");\r\n    deviceModelFields = document.getElementsByClassName(\"bms-model-field\");\r\n    deviceFirmwareRevisionFields = document.getElementsByClassName(\"bms-firmware-version-field\");\r\n    deviceHardwareRevisionFields = document.getElementsByClassName(\"bms-hardware-version-field\");\r\n    deviceSerialNumberFields = document.getElementsByClassName(\"bms-serial-number-field\");\r\n    firmwareUpdateText = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"firmwareUpdateText\");\r\n    otaUpdateInfoText = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"otaUpdateInfoText\");\r\n    availableOTAImagesSelect = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"available-ota-images\");\r\n    updateOTAButton = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"ota-update-button\");\r\n\r\n\r\n    // Board Config\r\n    boardConfigContainer = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"board-configuration-div\");\r\n    boardConfigTable = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"board-config-table\");\r\n    boardConfigInputFields = document.querySelectorAll(\"#board-config-table input\");\r\n    boardConfigBatterySelector = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"battery-type-select\");\r\n    boardConfigSpikeSensitivitySelector = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"spike-sensitivity-select\");\r\n    fullyCustomChemistryOption = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"fully-custom-chemistry-option\");\r\n\r\n    boardConfigTurnOnButton = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"board-turnonoff-config\");\r\n    configWriteWarning = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"config-write-warning\");\r\n\r\n    lastLocalConfigText = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"last-local-config-text\");\r\n\r\n\r\n    // Board Calib\r\n    boardCalibContainer = document.getElementById(\"board-calibration-div\");\r\n    boardCalibTable = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"board-calibration-table\");\r\n\r\n    // temporarily disabled for stable version\r\n    calibBackupDeviceSelect = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"calib-backup-device-select\");\r\n    calibBackupSelect = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"calib-backup-select\");\r\n    calibBackupReadButton = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"board-calib-backup-read\");\r\n\r\n    boardCalibInputFields = document.querySelectorAll(\"#board-calibration-div input\");\r\n    boardCalibTurnOnButton = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"board-turnonoff-calib\");\r\n\r\n    calibWriteWarning = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"calib-write-warning\");\r\n\r\n    inVolt1Correction = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"in-volt1-correction\");\r\n    inVolt1Target = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"in-volt1-target\");\r\n    inVolt1Actual = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"in-volt1-actual\");\r\n    inVolt2Correction = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"in-volt2-correction\");\r\n    inVolt2Target = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"in-volt2-target\");\r\n    inVolt2Actual = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"in-volt2-actual\");\r\n    inVolt3Correction = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"in-volt3-correction\");\r\n    inVolt3Target = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"in-volt3-target\");\r\n    inVolt3Actual = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"in-volt3-actual\");\r\n\r\n    outVoltCorrection = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"out-volt-correction\");\r\n    outVoltTarget = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"out-volt-target\");\r\n    outVoltActual = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"out-volt-actual\");\r\n\r\n    shunt1 = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"shunt-resistance-1\");\r\n    shunt1Target = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"shunt-resistance-1-target\");\r\n    shunt1Actual = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"shunt-resistance-1-actual\");\r\n    shunt2 = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"shunt-resistance-2\");\r\n    shunt2Target = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"shunt-resistance-2-target\");\r\n    shunt2Actual = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"shunt-resistance-2-actual\");\r\n    shunt3 = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"shunt-resistance-3\");\r\n    shunt3Target = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"shunt-resistance-3-target\");\r\n    shunt3Actual = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"shunt-resistance-3-actual\");\r\n\r\n    // Inline Config\r\n    inlineConfigContainer = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"inline-configuration-div\");\r\n    tempSensorSelector = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"ntc-type-select\");\r\n    inlineConfigDataLoggingFrequency = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"inline-dl-frequency\");\r\n    tachoResetTripOdoButton = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"configResetTripOdo\");\r\n    tachoResetVehicleOdoButton = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"resetVehicleOdo\");\r\n\r\n\r\n\r\n\r\n\r\n\r\n    elementsDiv = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"elementsDiv\");\r\n\r\n\r\n\r\n\r\n    // Vehicle Model\r\n    vehicleModelGauge = document.getElementById(\"vehicle-model\");\r\n\r\n\r\n\r\n    // hide settings things at the bottom\r\n    hideSettingButtons = document.getElementsByClassName(\"hide-setting-button\");\r\n\r\n\r\n    // CAN Bridge Elements\r\n    canBridgeElements = document.getElementsByClassName(\"can-bridge-element\");\r\n\r\n    // CAN TX GAUGE\r\n    canGauge = document.getElementById(\"can-gauge\");\r\n    canTxGaugeExtended = document.getElementById(\"can-tx-extended-id-checkbox\");\r\n    canTxGaugeId = document.getElementById(\"can-tx-id\");\r\n    canTxGaugeD0 = document.getElementById(\"can-tx-data0\");\r\n    canTxGaugeD1 = document.getElementById(\"can-tx-data1\");\r\n    canTxGaugeD2 = document.getElementById(\"can-tx-data2\");\r\n    canTxGaugeD3 = document.getElementById(\"can-tx-data3\");\r\n    canTxGaugeD4 = document.getElementById(\"can-tx-data4\");\r\n    canTxGaugeD5 = document.getElementById(\"can-tx-data5\");\r\n    canTxGaugeD6 = document.getElementById(\"can-tx-data6\");\r\n    canTxGaugeD7 = document.getElementById(\"can-tx-data7\");\r\n    canTxGaugeSend = document.getElementById(\"can-tx-send-button\");\r\n\r\n    canRxGaugeExtended = document.getElementById(\"can-rx-extended-id-checkbox\");\r\n    canRxGaugeId = document.getElementById(\"can-rx-id\");\r\n    canRxGaugeSend = document.getElementById(\"can-rx-send-button\");\r\n\r\n    canRxGaugeText = document.getElementById(\"can-rx-pfusch-box\");\r\n\r\n\r\n    // keyboard\r\n    keyboardContainer = document.getElementById(\"keyboard-container\");\r\n\r\n\r\n\r\n\r\n\r\n    // NO DEVICES CONNECTED OVERLAY\r\n\r\n    connectBMSOverlayButton = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId('autoconnectBMS');\r\n    connectTachoOverlayButton = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId('autoconnectTacho');\r\n\r\n    connectTachoOverlay = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"connect-tacho-overlay\");\r\n    connectBMSOverlay = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"connect-bms-overlay\");\r\n\r\n    autoconnectingBMSText = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"autoconnectingBMSText\");\r\n    autoConnectBMSTexts = document.getElementsByClassName(\"connect-bms-text\");\r\n\r\n    autoconnectingTachoText = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"autoconnectingTachoText\");\r\n    autoConnectTachoTexts = document.getElementsByClassName(\"connect-tacho-text\");\r\n\r\n    nothingConnectedOverlay = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"nothingConnectedOverlay\");\r\n\r\n\r\n\r\n\r\n\r\n    // Info elements (class based)\r\n    bmsDataLoggingFrequencyValues = document.getElementsByClassName(\"bms-hz\");\r\n    tachoDataLoggingFrequencyValues = document.getElementsByClassName(\"tacho-hz\");\r\n\r\n\r\n    tachoSpeedValues = document.getElementsByClassName(\"tacho-speed-value\");\r\n    tachoSpeedNoUnitValues = document.getElementsByClassName(\"tacho-speed-value-no-unit\");\r\n    tachoRPMValues = document.getElementsByClassName(\"tacho-rpm-value\");\r\n    tachoTripOdoValues = document.getElementsByClassName(\"tacho-trip-odometer-value\");\r\n    tachoVehicleOdoValues = document.getElementsByClassName(\"tacho-vehicle-odometer-value\");\r\n    sessionEconomyValues = document.getElementsByClassName(\"session-economy-value\");\r\n    sessionRangeValues = document.getElementsByClassName(\"session-range-value\");\r\n    bmsPrechargeTempValues = document.getElementsByClassName(\"bms-precharge-temp-value\");\r\n    bmsShuntTempValues = document.getElementsByClassName(\"bms-shunt-temp-value\");\r\n    tachoMotorTempValues = document.getElementsByClassName(\"tacho-motor-temp-value\");\r\n    tachoExternTempValues = document.getElementsByClassName(\"tacho-extern-temp-value\");\r\n    bmsCombinedPowerValues = document.getElementsByClassName(\"bms-combined-power-value\");\r\n    bmsCombinedCurrentValues = document.getElementsByClassName(\"bms-combined-current-value\");\r\n    bmsOutputVoltageValues = document.getElementsByClassName(\"bms-output-voltage-value\");\r\n\r\n    bmsMinSOCValues = document.getElementsByClassName(\"bms-min-soc-value\");\r\n    bmsPowerLossValues = document.getElementsByClassName(\"bms-power-loss-value\");\r\n    bmsCombinedEnergyUsedValues = document.getElementsByClassName(\"bms-combined-energy-used-value\");\r\n    bmsOnTimeValues = document.getElementsByClassName(\"bms-on-time-value\");\r\n\r\n    bmsCh1VoltageValues = document.getElementsByClassName(\"bms-ch1-voltage-value\");\r\n    bmsCh1CurrentValues = document.getElementsByClassName(\"bms-ch1-current-value\");\r\n    bmsCh1PowerValues = document.getElementsByClassName(\"bms-ch1-power-value\");\r\n    bmsCh1SOCValues = document.getElementsByClassName(\"bms-ch1-soc-value\");\r\n    bmsCh1TypeValues = document.getElementsByClassName(\"bms-ch1-type-value\");\r\n    bmsCh1EnergyUsedValues = document.getElementsByClassName(\"bms-ch1-energy-used-value\");\r\n\r\n    bmsCh2VoltageValues = document.getElementsByClassName(\"bms-ch2-voltage-value\");\r\n    bmsCh2CurrentValues = document.getElementsByClassName(\"bms-ch2-current-value\");\r\n    bmsCh2PowerValues = document.getElementsByClassName(\"bms-ch2-power-value\");\r\n    bmsCh2SOCValues = document.getElementsByClassName(\"bms-ch2-soc-value\");\r\n    bmsCh2TypeValues = document.getElementsByClassName(\"bms-ch2-type-value\");\r\n    bmsCh2EnergyUsedValues = document.getElementsByClassName(\"bms-ch2-energy-used-value\");\r\n\r\n    bmsCh3VoltageValues = document.getElementsByClassName(\"bms-ch3-voltage-value\");\r\n    bmsCh3CurrentValues = document.getElementsByClassName(\"bms-ch3-current-value\");\r\n    bmsCh3PowerValues = document.getElementsByClassName(\"bms-ch3-power-value\");\r\n    bmsCh3SOCValues = document.getElementsByClassName(\"bms-ch3-soc-value\");\r\n    bmsCh3TypeValues = document.getElementsByClassName(\"bms-ch3-type-value\");\r\n    bmsCh3EnergyUsedValues = document.getElementsByClassName(\"bms-ch3-energy-used-value\");\r\n\r\n\r\n    bmsMaxPrechargeTempValues = document.getElementsByClassName(\"bms-max-pch-temp-value\");\r\n    bmsMaxShuntTempValues = document.getElementsByClassName(\"bms-max-shunt-temp-value\");\r\n    tachoMaxMotorTempValues = document.getElementsByClassName(\"tacho-max-motor-temp-value\");\r\n    tachoMaxExternTempValues = document.getElementsByClassName(\"tacho-max-extern-temp-value\");\r\n    bmsMaxPowerValues = document.getElementsByClassName(\"bms-max-power-value\");\r\n    tachoMaxSpeedValues = document.getElementsByClassName(\"tacho-max-speed-value\");\r\n\r\n    bmsMaxCurrentValues = document.getElementsByClassName(\"bms-max-current-value\");\r\n    bmsMinCurrentValues = document.getElementsByClassName(\"bms-min-current-value\");\r\n    bmsMinVoltageValues = document.getElementsByClassName(\"bms-min-voltage-value\");\r\n    bmsMaxVoltageValues = document.getElementsByClassName(\"bms-max-voltage-value\");\r\n\r\n    bmsStateMachineStateValues = document.getElementsByClassName(\"bms-state-value\");\r\n    bmsFaultStateValues = document.getElementsByClassName(\"bms-fault-state-value\");\r\n\r\n    bmsConfigStartupValues = document.getElementsByClassName(\"bms-config-startup-value\");\r\n    bmsConfigOverCurrentValues = document.getElementsByClassName(\"bms-config-over-current-value\");\r\n    bmsConfigOverVoltageValues = document.getElementsByClassName(\"bms-config-over-voltage-value\");\r\n    bmsConfigUnderVoltageValues = document.getElementsByClassName(\"bms-config-under-voltage-value\");\r\n    bmsConfigUnderCurrentValues = document.getElementsByClassName(\"bms-config-under-current-value\");\r\n    bmsConfigOverTempValues = document.getElementsByClassName(\"bms-config-over-temp-value\");\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    // BMS Control elements\r\n\r\n    // Clear alerts and turn on/off\r\n    clearAlertsButton = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"clearAlertsButton\");\r\n    clearAlertsTd = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"clearAlertsTd\");\r\n    turnOnTd = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"switchOnTd\");\r\n    clearAlertsFaultName = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"clearAlerts-fault-name\");\r\n    clearAlertsFaultExplanation = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"clearAlerts-fault-explanation\");\r\n\r\n    resetEconomyButton = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"resetEconomyButton\");\r\n    boardElements = document.getElementsByClassName(\"board-element\");\r\n\r\n    // bms & fault states\r\n    faultStateValue = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"fault-state\");\r\n\r\n    turnOnButton = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"turnOnButton\");\r\n\r\n\r\n    // Dev tile stuff\r\n    precharge_button_div = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"precharge-checkbox-template\");\r\n    precharge_button = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"precharge-button\");\r\n    channel1_button = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"ch1control-on\");\r\n    channel2_button = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"ch2control-on\");\r\n    channel3_button = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"ch3control-on\");\r\n\r\n\r\n\r\n\r\n\r\n\r\n    // INLINE\r\n    inlineGaugeDiv = document.getElementById(\"inline-gauge\");\r\n    resetTripButton = document.getElementById(\"resetTripOdo\");\r\n}\r\n\r\n// classes for gauge id to class conversion:\r\n/*\r\nspeed-val -> tacho-speed-value\r\nspeed-rpm-val -> tacho-rpm-value\r\ntrip-odo-val -> tacho-trip-odometer-value\r\nvehicle-odo-val -> tacho-vehicle-odometer-value\r\nsessionEconomyValue -> session-economy-value\r\nsessionRangeValue -> session-range-value\r\nprecharge-temperature -> bms-precharge-temp-value\r\nshunt-temperature -> bms-shunt-temp-value\r\nmotor-temperature -> tacho-motor-temp-value\r\nextern-temperature -> tacho-extern-temp-value\r\ncombined-power -> bms-combined-power-value\r\ncombined-current -> bms-combined-current-value\r\noutput-voltage -> bms-output-voltage-value\r\n\r\nmin-soc -> bms-min-soc-value\r\nboard-powerloss -> bms-power-loss-value\r\ncombined-energy-used -> bms-combined-energy-used-value\r\n\r\nch1info-v -> bms-ch1-voltage-value\r\nch1control-a -> bms-ch1-current-value\r\nch1control-p -> bms-ch1-power-value\r\nch1info-soc -> bms-ch1-soc-value\r\nch1info-t -> bms-ch1-type-value\r\nch1info-eu -> bms-ch1-energy-used-value\r\n\r\nch2info-v -> bms-ch2-voltage-value\r\nch2control-a -> bms-ch2-current-value\r\nch2control-p -> bms-ch2-power-value\r\nch2info-soc -> bms-ch2-soc-value\r\nch2info-t -> bms-ch2-type-value\r\nch2info-eu -> bms-ch2-energy-used-value\r\n\r\nch3info-v -> bms-ch3-voltage-value\r\nch3control-a -> bms-ch3-current-value\r\nch3control-p -> bms-ch3-power-value\r\nch3info-soc -> bms-ch3-soc-value\r\nch3info-t -> bms-ch3-type-value\r\nch3info-eu -> bms-ch3-energy-used-value\r\n\r\n\r\nmaxPrechargeTemp -> bms-max-pch-temp-value\r\nmaxShuntTemp -> bms-max-shunt-temp-value\r\nmaxMotorTemp -> tacho-max-motor-temp-value\r\nmaxExternTemp -> tacho-max-extern-temp-value\r\nmax-power -> bms-max-power-value\r\nmax-speed -> tacho-max-speed-value\r\n\r\nmax-amp-big-val -> bms-max-current-value\r\nmin-volt-big-val -> bms-max-current-value\r\nontime -> bms-on-time-value\r\ncombined-energy-used2 -> bms-combined-energy-used-value\r\n\r\n\r\nstate-machine-state -> bms-state-value\r\nfault-state -> bms-fault-state-value\r\nconfig-info-startup -> bms-config-startup-value\r\nconfig-info-ocp -> bms-config-over-current-value\r\nconfig-info-ovp -> bms-config-over-voltage-value\r\nconfig-info-uvp -> bms-config-under-voltage-value\r\nconfig-info-revocp -> bms-config-under-current-value\r\nconfig-info-otp -> bms-config-over-temp-value\r\n\r\n\r\n*/\n\n//# sourceURL=webpack://dragonbms-interface-web/./js/gui_elements.js?");

/***/ }),

/***/ "./js/helpers/color_mode.js":
/*!**********************************!*\
  !*** ./js/helpers/color_mode.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ colorMode)\n/* harmony export */ });\n/* harmony import */ var _gui_elements__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../gui_elements */ \"./js/gui_elements.js\");\n\r\n\r\n\r\nclass colorMode extends _gui_elements__WEBPACK_IMPORTED_MODULE_0__[\"default\"]{\r\n\r\n    mode = \"dark\";\r\n\r\n    constructor(interfaceConfigObj){\r\n        super();\r\n\r\n        this.interfaceConfigObj = interfaceConfigObj;\r\n\r\n        this.addEventListeners();\r\n    }\r\n\r\n    addEventListeners(){\r\n        document.addEventListener('coloris:pick', _ => {\r\n\r\n            // always set the color mode to custom when editing - to see the changes live\r\n            this.mode = \"custom\";\r\n\r\n            // writing them instantly to the localStorage\r\n            localStorage.setItem('customColorForeground', this.getCustomForegroundColor());\r\n            localStorage.setItem('customColorBackground', this.getCustomBackgroundColor());\r\n            localStorage.setItem('customColorAccent', this.getCustomAccentColor());\r\n            localStorage.setItem('customColorCaptureModeBackground', this.getCustomCaptureModeBackgroundColor());\r\n\r\n            localStorage.setItem('lastColorMode', this.mode);\r\n\r\n            // load the stored values back in\r\n            this.interfaceConfigObj.updateConfig();\r\n            this.adjust(this.interfaceConfigObj.colorMode);\r\n        });\r\n    }\r\n\r\n    toggle(){\r\n        if(this.mode === \"dark\"){this.mode = \"light\";}\r\n        else if(this.mode === \"light\"){this.mode = \"custom\";}\r\n        else if(this.mode === \"custom\"){this.mode = \"dark\";}\r\n\r\n        localStorage.setItem('lastColorMode', this.mode); // for the next session\r\n\r\n        this.adjust(this.mode);\r\n    }\r\n\r\n    adjust(targetMode){\r\n\r\n        this.mode = targetMode;\r\n\r\n        switch (targetMode) {\r\n            case \"light\":\r\n                document.getElementsByTagName(\"link\")[1].href = \"css/index-light.css\";\r\n                break;\r\n\r\n            case \"dark\":\r\n                document.getElementsByTagName(\"link\")[1].href = \"css/index-dark.css\";\r\n                break;\r\n\r\n            case \"custom\":\r\n                // remove color values form css files since then the root vars aren't overwritten\r\n                document.getElementsByTagName(\"link\")[1].href = \"\";\r\n                break;\r\n\r\n            default:\r\n                document.getElementsByTagName(\"link\")[1].href = \"css/index-dark.css\";\r\n\r\n        }\r\n\r\n\r\n        // make sure color pickers are correct with the displayed color\r\n        document.getElementById(\"interface-foreground-color\").parentNode.style.color = this.interfaceConfigObj.customColorForeground;\r\n        document.getElementById(\"interface-background-color\").parentNode.style.color = this.interfaceConfigObj.customColorBackground;\r\n        document.getElementById(\"interface-accent-color\").parentNode.style.color = this.interfaceConfigObj.customColorAccent;\r\n        document.getElementById(\"capture-mode-background-color\").parentNode.style.color = this.interfaceConfigObj.customColorCaptureModeBackground;\r\n\r\n        // set the main colors\r\n        const fg = this.interfaceConfigObj.customColorForeground;\r\n        const bg = this.interfaceConfigObj.customColorBackground;\r\n        const ac = this.interfaceConfigObj.customColorAccent;\r\n        const cpmbg = this.interfaceConfigObj.customColorCaptureModeBackground;\r\n\r\n        this.domRoot.style.setProperty('--background-color', bg);\r\n        this.domRoot.style.setProperty('--text-color', fg);\r\n        this.domRoot.style.setProperty('--accent-color', ac);\r\n\r\n        this.domRoot.style.setProperty('--capture-mode-background-color', cpmbg);\r\n\r\n\r\n        this.domRoot.style.setProperty('--color-good', 'green');\r\n        this.domRoot.style.setProperty('--color-bad', 'red');\r\n        this.domRoot.style.setProperty('--color-warning', 'orange');\r\n\r\n\r\n        // the hard part - calculating all the dependant colors from the three main colors\r\n\r\n        let tileBarColor = new color(bg);\r\n        tileBarColor.scale(0.7);\r\n        this.domRoot.style.setProperty('--tilebar-background-color', tileBarColor.getString());\r\n\r\n\r\n        let dropDownColor = new color(bg);\r\n        tileBarColor.scale(1.2);\r\n        this.domRoot.style.setProperty('--dropdown-background-color', dropDownColor.getString());\r\n\r\n        let gaugeDivBorderColor = new color(bg);\r\n        gaugeDivBorderColor.contrast(0.5);\r\n        this.domRoot.style.setProperty('--gauge-div-border-color', gaugeDivBorderColor.getString());\r\n\r\n        let mainTableGridColor = new color(bg);\r\n        mainTableGridColor.contrast(0.5);\r\n        this.domRoot.style.setProperty('--main-table-grid-color', mainTableGridColor.getString());\r\n\r\n        let configInputBackgroundColor = new color(bg);\r\n        configInputBackgroundColor.contrast(0.5);\r\n        this.domRoot.style.setProperty('--config-input-background-color', configInputBackgroundColor.getString());\r\n\r\n        let configInputTextColor = new color(fg);\r\n        configInputTextColor.scale(1);\r\n        this.domRoot.style.setProperty('--config-input-text-color', configInputTextColor.getString());\r\n\r\n        let nothingConnectedOverlayColor = new color(bg);\r\n        nothingConnectedOverlayColor.scale(1.5);\r\n        nothingConnectedOverlayColor.a = 0.7;\r\n        this.domRoot.style.setProperty('--nothing-connected-overlay-background-color', nothingConnectedOverlayColor.getString());\r\n\r\n    }\r\n\r\n\r\n    getCustomForegroundColor(){\r\n        return document.getElementById(\"interface-foreground-color\").parentNode.style.color;\r\n    }\r\n    getCustomBackgroundColor(){\r\n        return document.getElementById(\"interface-background-color\").parentNode.style.color;\r\n    }\r\n    getCustomAccentColor(){\r\n        return document.getElementById(\"interface-accent-color\").parentNode.style.color;\r\n    }\r\n\r\n    getCustomCaptureModeBackgroundColor(){\r\n        return document.getElementById(\"capture-mode-background-color\").parentNode.style.color;\r\n    }\r\n}\r\n\r\n\r\n\r\nclass color {\r\n    constructor(colorString) {\r\n        if(!colorString.includes(\"rgb\")){\r\n            console.log(\"fuck hex colors\");\r\n        }\r\n\r\n        let colorStringParams = colorString\r\n            .replaceAll(' ','')\r\n            .replaceAll('rgb', '')\r\n            .replaceAll('a','')\r\n            .replaceAll('(','')\r\n            .replaceAll(')','')\r\n            .split(',');\r\n\r\n        this.r = parseInt(colorStringParams[0]);\r\n        this.g = parseInt(colorStringParams[1]);\r\n        this.b = parseInt(colorStringParams[2]);\r\n\r\n        // if color is set as rgba\r\n        if(colorStringParams.length === 4){\r\n            this.a = parseFloat(colorStringParams[3]);\r\n        }else{\r\n            // default to 1\r\n            this.a = 1;\r\n        }\r\n    }\r\n\r\n    scale(amount){\r\n        this.r += Math.floor((1-amount) * this.r);\r\n        this.g += Math.floor((1-amount) * this.g);\r\n        this.b += Math.floor((1-amount) * this.b);\r\n\r\n        this.containInLimits();\r\n    }\r\n\r\n    contrast(amount){\r\n        this.r += Math.floor(amount * (128 - this.r));\r\n        this.g += Math.floor(amount * (128 - this.g));\r\n        this.b += Math.floor(amount * (128 - this.b));\r\n\r\n        this.containInLimits();\r\n    }\r\n\r\n    containInLimits(){\r\n\r\n        if(this.r > 255){ this.r = 255; }\r\n        if(this.g > 255){ this.g = 255; }\r\n        if(this.b > 255){ this.b = 255; }\r\n\r\n        if(this.r < 0){ this.r = 0; }\r\n        if(this.g < 0){ this.g = 0; }\r\n        if(this.b < 0){ this.b = 0; }\r\n    }\r\n\r\n    getString(){\r\n        return \"rgba(\" + this.r + \",\" + this.g + \",\" + this.b + \",\" + this.a + \")\";\r\n    }\r\n}\n\n//# sourceURL=webpack://dragonbms-interface-web/./js/helpers/color_mode.js?");

/***/ }),

/***/ "./js/helpers/configcalib_processing.js":
/*!**********************************************!*\
  !*** ./js/helpers/configcalib_processing.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ localConfigCalibGUI),\n/* harmony export */   localConfigCalibManager: () => (/* binding */ localConfigCalibManager)\n/* harmony export */ });\n/* harmony import */ var _gui_elements__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../gui_elements */ \"./js/gui_elements.js\");\n/* harmony import */ var _small_functions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./small_functions */ \"./js/helpers/small_functions.js\");\n// noinspection JSUnusedAssignment\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// extends here is just a trick to inherit also the gui elements to the localConfigCalibGUI\r\nclass localConfigCalibManager extends _gui_elements__WEBPACK_IMPORTED_MODULE_0__[\"default\"]{\r\n    constructor(bmsObj) {\r\n        super();\r\n\r\n        this.bmsConfigObj = bmsObj.bmsConfigObj;\r\n        this.bmsCalibObj = bmsObj.bmsCalibObj;\r\n    }\r\n\r\n\r\n    getCalibStorage(){\r\n        const calibStorageText = localStorage.getItem(\"calibStorage\");\r\n\r\n        if(calibStorageText === null\r\n            || calibStorageText === \"undefined\"){\r\n            console.log(\"[calib storage] no calibs stored yet.\");\r\n            return {};\r\n        }\r\n\r\n        let calibStorage;\r\n        try{\r\n            calibStorage = JSON.parse(calibStorageText);\r\n        }catch(e){\r\n            console.log(\"[calib storage] error parsing json: \" + e);\r\n            return;\r\n        }\r\n\r\n        return calibStorage;\r\n    }\r\n\r\n    getCalibsForSerialNumber(serialNumber){\r\n        let calibStorage = this.getCalibStorage();\r\n\r\n        // no calibs saved yet for this serial number\r\n        if(typeof calibStorage[serialNumber] === \"undefined\"){\r\n            return {};\r\n        }\r\n\r\n        return calibStorage[serialNumber];\r\n    }\r\n\r\n    getLatestCalibForSerialNumber(serialNumber){\r\n        let calibs = this.getCalibsForSerialNumber(serialNumber);\r\n\r\n        let newestCalibUnixTime;\r\n        let newestCalib;\r\n        for (const timestamp in calibs) {\r\n            if(typeof newestCalibUnixTime === \"undefined\"){\r\n                newestCalibUnixTime = calibs[timestamp].unixTime;\r\n                newestCalib = calibs[timestamp];\r\n                continue;\r\n            }\r\n            if(newestCalibUnixTime < calibs[timestamp].unixTime){\r\n                newestCalibUnixTime = calibs[timestamp].unixTime;\r\n                newestCalib = calibs[timestamp];\r\n            }\r\n        }\r\n\r\n        return newestCalib;\r\n    }\r\n\r\n    getOldestCalibForSerialNumber(serialNumber){\r\n        let calibs = this.getCalibsForSerialNumber(serialNumber);\r\n\r\n        let oldestCalibUnixTime;\r\n        let oldestCalib;\r\n        for (const timestamp in calibs) {\r\n            if(typeof oldestCalibUnixTime === \"undefined\"){\r\n                oldestCalibUnixTime = calibs[timestamp].unixTime;\r\n                oldestCalib = calibs[timestamp];\r\n                continue;\r\n            }\r\n            if(oldestCalibUnixTime > calibs[timestamp].unixTime){\r\n                oldestCalibUnixTime = calibs[timestamp].unixTime;\r\n                oldestCalib = calibs[timestamp];\r\n            }\r\n        }\r\n\r\n\r\n\r\n        return oldestCalib;\r\n    }\r\n\r\n    deleteCalibObj(calib){\r\n        let calibStorage = this.getCalibStorage();\r\n\r\n        delete calibStorage[calib.serialNumber][calib.timestamp]\r\n\r\n        this.saveCalibStorage(calibStorage);\r\n    }\r\n\r\n    deleteOldestCalibObjForSerialNumber(serialNumber){\r\n        let oldestCalib = this.getOldestCalibForSerialNumber(serialNumber);\r\n        this.deleteCalibObj(oldestCalib);\r\n    }\r\n\r\n    saveCalibStorage(calibStorage){\r\n        if(typeof calibStorage === \"undefined\" || calibStorage === null){\r\n            return;\r\n        }\r\n\r\n        let calibStorageText = \"\";\r\n        try{\r\n            calibStorageText = JSON.stringify(calibStorage);\r\n        }catch(e){\r\n            console.log(\"[calib storage] something went wrong during json.stringify: \" + e);\r\n            return;\r\n        }\r\n\r\n        localStorage.setItem('calibStorage', calibStorageText);\r\n    }\r\n\r\n    addNewCalib(calib, bmsObj){\r\n        let calibStorage = this.getCalibStorage();\r\n\r\n        // this static \"bms\" is okay since the method is only ever called with a valid bms connected\r\n        const serialNumber = bmsObj.deviceInfoMgr.devicesInfo.getDeviceInfo(\"bms\").serialNumber;\r\n\r\n        if(typeof calibStorage === \"undefined\" || calibStorage === null){\r\n            return;\r\n        }\r\n\r\n        const timestamp = _small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getDateStamp();\r\n        const unixTime = _small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getUnixTime();\r\n\r\n        let toBeStored = {\r\n            unixTime: unixTime,\r\n            timestamp: timestamp,\r\n            serialNumber: serialNumber,\r\n            displayName: bmsObj.name,\r\n            calib: calib.getCalibObject()\r\n        }\r\n\r\n        // catch if no calib has been saved for this serial number yet\r\n        if(typeof calibStorage[serialNumber] === \"undefined\"){\r\n            calibStorage[serialNumber] = {};\r\n        }\r\n\r\n        if(typeof this.getLatestCalibForSerialNumber(serialNumber) !== \"undefined\"){\r\n\r\n            // always automatically override the latest calib with the to be added if there are no changes\r\n            if(_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].objectsEqual(this.getLatestCalibForSerialNumber(serialNumber).calib, toBeStored.calib)){\r\n                this.deleteCalibObj(this.getLatestCalibForSerialNumber(serialNumber));\r\n                calibStorage = this.getCalibStorage();\r\n            }\r\n        }\r\n\r\n\r\n        // save the to be added calib\r\n        calibStorage[serialNumber][timestamp] = toBeStored;\r\n        this.saveCalibStorage(calibStorage);\r\n\r\n\r\n        // automatically limit to 10 calibs per serial number\r\n        while(Object.keys(this.getCalibsForSerialNumber(serialNumber)).length > 10){\r\n            this.deleteOldestCalibObjForSerialNumber(serialNumber);\r\n        }\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// LOCALLY STORED CONFIG CALIB\r\n\r\nclass localConfigCalibGUI extends localConfigCalibManager{\r\n    constructor(bmsObj) {\r\n        super(bmsObj);\r\n\r\n        this.bmsConfigObj = bmsObj.bmsConfigObj;\r\n        this.bmsCalibObj = bmsObj.bmsCalibObj;\r\n\r\n        // this basically completely disables the \"locally stored config/calib\"\r\n        //this.updateLatestStoredConfigCalib();\r\n    }\r\n\r\n    updateLatestStoredConfigCalib(){\r\n        const lastConfigCalibDateStamp = localStorage.getItem(\"lastSavedConfigCalibTime\");\r\n\r\n        if(lastConfigCalibDateStamp === null){\r\n            this.lastLocalConfigText.innerHTML = \"none yet\";\r\n            return;\r\n        }\r\n        this.lastLocalConfigText.innerHTML = \"Last local stored version: \" + lastConfigCalibDateStamp;\r\n    }\r\n\r\n    addCalibGUIEventListeners(){\r\n        /*\r\n        sf.getId(\"board-config-read-in-localStorage\").addEventListener(\"click\", ()=>{\r\n            const lastConfigText = localStorage.getItem(\"lastSavedBMSConfig\");\r\n            const lastCalibText = localStorage.getItem(\"lastSavedBMSCalib\");\r\n            const lastConfigCalibDateSTamp = localStorage.getItem(\"lastSavedConfigCalibTime\");\r\n\r\n            if(lastConfigText === null\r\n                || lastCalibText === null\r\n                || lastConfigCalibDateSTamp === null\r\n                || lastConfigText === \"undefined\"\r\n                || lastCalibText === \"undefined\"\r\n                || lastConfigCalibDateSTamp === \"undefined\"){\r\n\r\n                this.lastLocalConfigText.innerHTML = \"none yet\";\r\n                return;\r\n            }\r\n\r\n            this.bmsConfigObj.readInJSON(lastConfigText);\r\n            this.bmsCalibObj.readInJSON(lastCalibText);\r\n\r\n            this.bmsConfigObj.setGUIValues();\r\n            this.bmsCalibObj.setGUIValues();\r\n        });\r\n\r\n\r\n\r\n        sf.getId(\"board-config-write-to-localStorage\").addEventListener(\"click\", ()=>{\r\n\r\n            if(!this.bmsConfigObj.initialised || !this.bmsCalibObj.initialised){\r\n                return;\r\n            }\r\n\r\n            this.bmsConfigObj.readInGUIValues();\r\n            this.bmsCalibObj.readInGUIValues();\r\n\r\n            let config = this.bmsConfigObj.getJSON();\r\n            let calib = this.bmsCalibObj.getJSON();\r\n\r\n            let bmsName = \"\";\r\n\r\n            if(typeof sf.getIdValue(\"board-config-device-name\") !== \"undefined\"){\r\n                bmsName = sf.getIdValue(\"board-config-device-name\");\r\n            }\r\n\r\n            localStorage.setItem('lastSavedBMSConfig', config);\r\n            localStorage.setItem('lastSavedBMSCalib', calib);\r\n            localStorage.setItem('lastSavedConfigCalibTime', bmsName + \" \" + sf.getDateStamp());\r\n\r\n            this.updateLatestStoredConfigCalib();\r\n        });\r\n         */\r\n\r\n\r\n        this.calibBackupDeviceSelect.addEventListener(\"change\", ()=>{\r\n            let calibStorage = this.getCalibStorage();\r\n            const serialNumber = this.calibBackupDeviceSelect.options[this.calibBackupDeviceSelect.selectedIndex].value;\r\n\r\n\r\n            // clear all options\r\n            while (this.calibBackupSelect.firstChild) {\r\n                this.calibBackupSelect.removeChild(this.calibBackupSelect.lastChild);\r\n            }\r\n\r\n            // don't fill if no board is selected\r\n            if(serialNumber === \"none\"){\r\n                return;\r\n            }\r\n\r\n            const calibKeys = Object.keys(calibStorage[serialNumber]).reverse();\r\n\r\n            calibKeys.forEach((calibKey) => {\r\n                const calib = calibStorage[serialNumber][calibKey];\r\n                let opt = document.createElement(\"option\");\r\n                opt.value= serialNumber + \";\" + calib.timestamp;\r\n                opt.innerHTML = calib.timestamp; // whatever property it has\r\n\r\n                // then append it to the select element\r\n                this.calibBackupSelect.appendChild(opt);\r\n            });\r\n        });\r\n\r\n\r\n        this.calibBackupReadButton.addEventListener(\"click\", ()=>{\r\n            const value = this.calibBackupSelect.options[this.calibBackupSelect.selectedIndex].value\r\n            if(value === \"\"){\r\n                return;\r\n            }\r\n\r\n            const serialNumber = value.split(\";\")[0];\r\n            const timestamp = value.split(\";\")[1];\r\n\r\n            let backedUpCalib = this.getCalibStorage()[serialNumber][timestamp].calib;\r\n\r\n            // normally there would be a \"this.bmsCalibObj\" here, but since the context of the addEventListener\r\n            // function is the bmsCalibObj itself (it gets called from there), it is lost\r\n            this.readInCalibObject(backedUpCalib);\r\n            this.setGUIValues();\r\n        });\r\n    }\r\n\r\n    fillInCalibBackupGUI(){\r\n        let calibStorage = this.getCalibStorage();\r\n\r\n        if(Object.keys(calibStorage).length === 0){\r\n            this.calibBackupDeviceSelect.disabled = true;\r\n            this.calibBackupSelect.disabled = true;\r\n            return;\r\n        }else{\r\n            this.calibBackupDeviceSelect.disabled = false;\r\n            this.calibBackupSelect.disabled = false;\r\n        }\r\n\r\n        // clear all options from device selector field\r\n        while (this.calibBackupDeviceSelect.firstChild) {\r\n            this.calibBackupDeviceSelect.removeChild(this.calibBackupDeviceSelect.lastChild);\r\n        }\r\n\r\n        // clear all options from backup selector field\r\n        while (this.calibBackupSelect.firstChild) {\r\n            this.calibBackupSelect.removeChild(this.calibBackupSelect.lastChild);\r\n        }\r\n\r\n        // always add the \"none\" options, since only with two options the change event listener works\r\n        let noneOption = document.createElement(\"option\");\r\n        noneOption.value= \"none\";\r\n        noneOption.innerHTML = \"none\"; // whatever property it has\r\n        this.calibBackupDeviceSelect.appendChild(noneOption);\r\n\r\n        // loop through all saved calibs and add them as options\r\n        for (const serialNumber in calibStorage) {\r\n            const calib = calibStorage[serialNumber][Object.keys(calibStorage[serialNumber])[0]];\r\n            let opt = document.createElement(\"option\");\r\n            opt.value= serialNumber;\r\n            opt.innerHTML = calib.displayName; // whatever property it has\r\n\r\n            // then append it to the select element\r\n            this.calibBackupDeviceSelect.appendChild(opt);\r\n        }\r\n    }\r\n}\n\n//# sourceURL=webpack://dragonbms-interface-web/./js/helpers/configcalib_processing.js?");

/***/ }),

/***/ "./js/helpers/connectionWatchdog.js":
/*!******************************************!*\
  !*** ./js/helpers/connectionWatchdog.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ connectionWatchDog)\n/* harmony export */ });\nclass connectionWatchDog{\r\n    timeout;\r\n\r\n    timeoutAction;\r\n\r\n    startTime;\r\n    enabled;\r\n\r\n    timedOut;\r\n\r\n    constructor(timeout, timeoutAction) {\r\n        this.timeout = timeout;\r\n\r\n        this.timeoutAction = timeoutAction;\r\n\r\n        this.timedOut = false;\r\n    }\r\n\r\n    start(){\r\n        this.startTime = Date.now();\r\n        this.enabled = true;\r\n        this.timedOut = false;\r\n\r\n        setTimeout(()=>{\r\n            if(!this.enabled){\r\n                return;\r\n            }\r\n            if(Date.now() - this.startTime < this.timeout){\r\n                // timeout was set higher manually (illegal) or the watchdog was reset\r\n                return;\r\n            }\r\n\r\n            this.startTime = Date.now();\r\n            this.timedOut = true;\r\n            this.timeoutAction();\r\n        }, this.timeout);\r\n    }\r\n\r\n    stop(){\r\n        this.enabled = false;\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://dragonbms-interface-web/./js/helpers/connectionWatchdog.js?");

/***/ }),

/***/ "./js/helpers/fileaccess.js":
/*!**********************************!*\
  !*** ./js/helpers/fileaccess.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ fileObject)\n/* harmony export */ });\n/* harmony import */ var _gui_elements__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../gui_elements */ \"./js/gui_elements.js\");\n\r\n\r\nclass fileObject extends _gui_elements__WEBPACK_IMPORTED_MODULE_0__[\"default\"]{\r\n    constructor(fileType){\r\n        super();\r\n        this.fileType = fileType;\r\n\r\n        // hide \"select file\" option if there is no file access as it doesn't work anyway\r\n        if(!this.hasFileAccess()){\r\n            document.getElementById(\"tileBarSelectDataLoggingFile\").classList.add(\"hidden\");\r\n        }\r\n    }\r\n\r\n    async getSaveFileHandle(suggestedName) {\r\n\r\n        if(!this.hasFileAccess()) {\r\n            return;\r\n        }\r\n\r\n        let options = {\r\n            suggestedName: suggestedName,\r\n            excludeAcceptAllOption: true,\r\n            multiple: false\r\n        }\r\n\r\n        if(this.fileType === \"csv\"){\r\n            options.types = [{\r\n                description: \"CSV File\",\r\n                accept: {\"text/csv\": [\".csv\"]},\r\n            }]\r\n        }\r\n\r\n        if(this.fileType === \"json\"){\r\n            options.types = [{\r\n                description: \"JSON File\",\r\n                accept: {\"text/json\": [\".json\"]},\r\n            }]\r\n        }\r\n\r\n        // create a new handle\r\n        this.fileHandle = await window.showSaveFilePicker(options);\r\n\r\n        // create a FileSystemWritableFileStream to write to\r\n        this.writableStream = await this.fileHandle.createWritable();\r\n    }\r\n\r\n    async getReadFileHandle(){\r\n        const options = {\r\n            types: [\r\n                {\r\n                    description: this.fileType + ' File',\r\n                    accept: {\r\n                        'text/*': ['.' + this.fileType]\r\n                    }\r\n                },\r\n            ],\r\n            excludeAcceptAllOption: true,\r\n            multiple: false\r\n        };\r\n\r\n        // return value is a one element array, this deconstructs it\r\n        [this.fileHandle] = await window.showOpenFilePicker(options);\r\n\r\n    }\r\n\r\n    saveLegacy(suggestedName, dataBuffer){\r\n        if(this.hasFileAccess()){\r\n            return;\r\n        }\r\n\r\n        if(dataBuffer.length < 2){\r\n            return;\r\n        }\r\n\r\n        let options = {};\r\n        if(this.fileType === \"csv\"){\r\n            options.type = 'text/csv';\r\n        }\r\n\r\n        if(this.fileType === \"xml\"){\r\n            options.type = 'text/xml';\r\n        }\r\n\r\n        const file = new File([dataBuffer.join(\"\\n\")], '', options);\r\n\r\n        this.aDownloadFile.href = window.URL.createObjectURL(file);\r\n        this.aDownloadFile.setAttribute('download', suggestedName);\r\n        this.aDownloadFile.click();\r\n    }\r\n\r\n    hasFileAccess(){\r\n        return 'chooseFileSystemEntries' in window || 'showOpenFilePicker' in window;\r\n    }\r\n}\n\n//# sourceURL=webpack://dragonbms-interface-web/./js/helpers/fileaccess.js?");

/***/ }),

/***/ "./js/helpers/small_functions.js":
/*!***************************************!*\
  !*** ./js/helpers/small_functions.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ sf)\n/* harmony export */ });\nclass sf{\r\n\r\n    constructor(){}\r\n\r\n    // swaps two dom elements\r\n    static swap(node1, node2) {\r\n\r\n        const afterNode2 = node2.nextElementSibling;\r\n        const parent = node2.parentNode;\r\n\r\n        // bug fix\r\n        if (afterNode2 === node1) {\r\n            this.swap(node2, node1);\r\n        } else {\r\n            node1.replaceWith(node2);\r\n            parent.insertBefore(node1, afterNode2);\r\n        }\r\n    }\r\n\r\n\r\n    // helper for waiting until a condition is met\r\n    static until(conditionFunction) {\r\n        const poll = resolve => {\r\n            if (conditionFunction()) resolve();\r\n            else setTimeout(_ => poll(resolve), 10);\r\n        }\r\n\r\n        return new Promise(poll);\r\n    }\r\n\r\n\r\n    static isScrolledIntoViewWithKeyboard(el) {\r\n        if (this.isElementHidden(el)) {\r\n            return false;\r\n        }\r\n\r\n        const rect = el.getBoundingClientRect();\r\n        const elemTop = rect.top;\r\n        const elemBottom = rect.bottom;\r\n\r\n        // Only completely visible elements return true:\r\n        // Partially visible elements return true:\r\n        //isVisible = elemTop < window.innerHeight && elemBottom >= 0;\r\n\r\n        // numpad appears to always be 265px high\r\n        return elemTop < (window.innerHeight - 265) && elemBottom >= 0;\r\n    }\r\n\r\n    static isScrolledIntoView(el) {\r\n        if (this.isElementHidden(el)) {\r\n            return false;\r\n        }\r\n\r\n        const rect = el.getBoundingClientRect();\r\n        const elemTop = rect.top;\r\n        const elemBottom = rect.bottom;\r\n\r\n        // Only completely visible elements return true:\r\n        // Partially visible elements return true:\r\n        //isVisible = elemTop < window.innerHeight && elemBottom >= 0;\r\n        return elemTop < window.innerHeight && elemBottom >= 0;\r\n    }\r\n\r\n    static isElementHidden(obj) {\r\n        // loop up through all the parents to see if an element is hidden\r\n        while (!(typeof obj == \"undefined\" || obj === document)\r\n        && !(obj.classList.contains(\"visibility-hidden\") || obj.classList.contains(\"display-none\"))) {\r\n            obj = obj.parentNode;\r\n        }\r\n        return obj !== document;\r\n    }\r\n\r\n\r\n    /*\r\n        Stuff for the Config/Calib and Datalogging Data that is split into bytes\r\n     */\r\n\r\n\r\n    static to16bit(number) {\r\n        if (number >= 65536) {\r\n            return;\r\n        }\r\n        let lsb = number % 256;\r\n        let msb = Math.floor(number / 256);\r\n\r\n        return [lsb, msb];\r\n    }\r\n\r\n    static to32bit(number) {\r\n        if (number >= Math.pow(32, 2)) {\r\n            return;\r\n        }\r\n        let lsb = number % 256;\r\n        let b1 = Math.floor(number / 256) % 256;\r\n        let b2 = Math.floor(number / 65536) % 256;\r\n        let msb = Math.floor(number / 256);\r\n\r\n        return [lsb, b1, b2, msb];\r\n    }\r\n\r\n\r\n    // the notorious handleSignedBullshit\r\n    static handleSignedBullshit(input) {\r\n        if (input > Math.pow(2, 15)) {\r\n            return Math.pow(2, 16) - input;\r\n        }\r\n        return -input;\r\n    }\r\n\r\n    static handleSignedBullshit32(input) {\r\n        if (input > Math.pow(2, 31)) {\r\n            return Math.pow(2, 32) - input;\r\n        }\r\n        return -input;\r\n    }\r\n\r\n    static handleUnsignedBullshit32(input) {\r\n        if (input < 0) {\r\n            return Math.pow(2, 32) + input;\r\n        }\r\n        return input;\r\n    }\r\n\r\n    static handleSignedBullshit64(input) {\r\n        if (input > Math.pow(2, 63)) {\r\n            return Math.pow(2, 64) - input;\r\n        }\r\n        return -input;\r\n    }\r\n\r\n\r\n    static getId(id) {\r\n        return document.getElementById(id);\r\n    }\r\n\r\n    static getIdValue(id) {\r\n        return document.getElementById(id).value;\r\n    }\r\n\r\n    static getIdChecked(id) {\r\n        return document.getElementById(id).checked;\r\n    }\r\n\r\n    static setValueBackToBoundaries(id, min, max) {\r\n        let element = document.getElementById(id);\r\n        let v = parseFloat(element.value);\r\n        if (v < min) {\r\n            element.value = min;\r\n            element.style.color = \"red\";\r\n            return;\r\n        }\r\n        if (v > max) {\r\n            element.value = max;\r\n            element.style.color = \"red\";\r\n            return;\r\n        }\r\n        element.style.color = \"\";\r\n    }\r\n\r\n\r\n    static arraysEqual(a, b) {\r\n        if (a === b) return true;\r\n        if (a == null || b == null) return false;\r\n        if (a.length !== b.length) return false;\r\n\r\n        // If you don't care about the order of the elements inside\r\n        // the array, you should sort both arrays here.\r\n        // Please note that calling sort on an array will modify that array.\r\n        // You might want to clone your array first.\r\n\r\n        for (let i = 0; i < a.length; ++i) {\r\n            if (a[i] !== b[i]) return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    static objectsEqual(obj1, obj2) {\r\n        let props1 = Object.getOwnPropertyNames(obj1);\r\n        let props2 = Object.getOwnPropertyNames(obj2);\r\n        if (props1.length !== props2.length) {\r\n            return false;\r\n        }\r\n        for (let i = 0; i < props1.length; i++) {\r\n            let val1 = obj1[props1[i]];\r\n            let val2 = obj2[props1[i]];\r\n            let isObjects = this.isObject(val1) && this.isObject(val2);\r\n            if (isObjects && !this.objectsEqual(val1, val2) || !isObjects && val1 !== val2) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    static isObject(object) {\r\n        return object != null && typeof object === 'object';\r\n    }\r\n\r\n    static isFloat(val) {\r\n        let floatRegex = /^-?\\d+(?:[.,]\\d*?)?$/;\r\n        if (!floatRegex.test(val))\r\n            return false;\r\n\r\n        val = parseFloat(val);\r\n        return !isNaN(val);\r\n    }\r\n\r\n\r\n    static mobileDevice() {\r\n        return navigator.userAgentData.mobile;\r\n    }\r\n\r\n\r\n    static isChrome() {\r\n        if (typeof (window) !== \"undefined\") {\r\n            return !!window.chrome;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    // simpler, less elegant version than with cap but doesn't induce float errors\r\n    static cap(value, low, high) {\r\n        if(value >= high){\r\n            return high;\r\n        }\r\n        if(value <= low){\r\n            return low;\r\n        }\r\n        return value\r\n    }\r\n\r\n\r\n    // tells if the device has a touchscreen\r\n    static isTouchDevice() {\r\n        return (('ontouchstart' in window) ||\r\n            (navigator.maxTouchPoints > 0));\r\n    }\r\n\r\n\r\n    static getDateStamp() {\r\n        const date = new Date();\r\n\r\n        return date.getFullYear().toString() + \"_\" +\r\n            this.pad2(date.getMonth() + 1) + \"_\" +\r\n            this.pad2(date.getDate()) + \"__\" +\r\n            this.pad2(date.getHours()) + \"_\" +\r\n            this.pad2(date.getMinutes()) + \"_\" +\r\n            this.pad2(date.getSeconds());\r\n    }\r\n\r\n    static getTimeStamp() {\r\n        const d = new Date();\r\n        return d.getHours() + \":\" + d.getMinutes() + \":\" + d.getSeconds() + \".\" + d.getMilliseconds();\r\n    }\r\n\r\n    static getMsToday() {\r\n        const d = new Date();\r\n        return (d.getHours() - 2) * 3600 * 1000 + d.getMinutes() * 60 * 1000 + d.getSeconds() * 1000 + d.getMilliseconds();\r\n    }\r\n\r\n    static getUnixTime() {\r\n        return Date.now();\r\n    }\r\n\r\n\r\n    static averagedData(array, rounding) {\r\n        // safety, kids!\r\n        if (array.length === 0) {\r\n            return;\r\n        }\r\n\r\n        // copy array keys and values\r\n        // {... original} = copy (copy by value - not by reference)\r\n        let summedDataPacket = {...array[0]};\r\n        // set all values to 0\r\n        for (const [key, _] of Object.entries(summedDataPacket)) {\r\n            summedDataPacket[key] = 0;\r\n        }\r\n\r\n        // loop through all data packets and add their values up in the summed data packet\r\n        array.forEach(dataPacket => {\r\n            //console.log(dataPacket);\r\n            for (const [key, value] of Object.entries(dataPacket)) {\r\n                summedDataPacket[key] = summedDataPacket[key] + value;\r\n            }\r\n        });\r\n\r\n        //console.log(summedDataPacket);\r\n\r\n        // copy array keys and values\r\n        let averagedArray = {...array[0]};\r\n        // set values for keys to averaged values rounded via.toFixed\r\n        for (const [key, _] of Object.entries(averagedArray)) {\r\n            averagedArray[key] = ((summedDataPacket[key] / array.length).toFixed(rounding));\r\n        }\r\n        return averagedArray;\r\n    }\r\n\r\n    static averagedDataNumbers(array) {\r\n        // safety, kids!\r\n        if (array.length === 0) {\r\n            return;\r\n        }\r\n\r\n        // copy array keys and values\r\n        // {... original} = copy (copy by value - not by reference)\r\n        let summedDataPacket = {...array[0]};\r\n        // set all values to 0\r\n        for (const [key, _] of Object.entries(summedDataPacket)) {\r\n            summedDataPacket[key] = 0;\r\n        }\r\n\r\n        // loop through all data packets and add their values up in the summed data packet\r\n        array.forEach(dataPacket => {\r\n            //console.log(dataPacket);\r\n            for (const [key, value] of Object.entries(dataPacket)) {\r\n                summedDataPacket[key] = summedDataPacket[key] + value;\r\n            }\r\n        });\r\n\r\n        //console.log(summedDataPacket);\r\n\r\n        // copy array keys and values\r\n        let averagedArray = {...array[0]};\r\n        // set values for keys to averaged values rounded via.toFixed\r\n        for (const [key, _] of Object.entries(averagedArray)) {\r\n            averagedArray[key] = (summedDataPacket[key] / array.length);\r\n        }\r\n        return averagedArray;\r\n    }\r\n\r\n\r\n    static pad2(n) {\r\n        return n < 10 ? '0' + n : n;\r\n    }\r\n\r\n\r\n    static getLastXSeconds(array, seconds) {\r\n        let now = Date.now();\r\n        return array.filter((element) => {\r\n            return element.time > (now - 1000 * seconds);\r\n        });\r\n    }\r\n\r\n\r\n    static setValueTexts(elements, value) {\r\n        for (const element of elements) {\r\n            if (!element.classList.contains(\"disabled\")) {\r\n                element.innerHTML = value;\r\n            }\r\n        }\r\n    }\r\n\r\n    static classListValueTextsAdd(elements, classString) {\r\n        for (const element of elements) {\r\n            element.classList.add(classString);\r\n        }\r\n    }\r\n\r\n    static classListValueTextsRemove(elements, classString) {\r\n        for (const element of elements) {\r\n            element.classList.remove(classString);\r\n        }\r\n    }\r\n\r\n    static setValueValues(elements, value) {\r\n        for (const element of elements) {\r\n            element.value = value;\r\n        }\r\n    }\r\n\r\n\r\n    // like element.scrollInToView() but with the offset of the tilebar\r\n    static scrollToElement(element) {\r\n        let bodyRect = document.body.getBoundingClientRect();\r\n        let elemRect = element.getBoundingClientRect();\r\n        let offset = elemRect.top - bodyRect.top;\r\n\r\n        window.scrollTo(0, offset);\r\n    }\r\n\r\n\r\n    static deleteOlderDataPackets(buffer, time) {\r\n        if (buffer.length < 2) {\r\n            return;\r\n        }\r\n\r\n        const nowTimeStamp = Date.now();\r\n\r\n        // more efficient to do this recursively than looping through the whole array\r\n        // (since the array will always be sorted from newest to oldest)\r\n        if (buffer.at(-1).time < (nowTimeStamp - (time * 1000))) {\r\n            buffer.pop();\r\n            this.deleteOlderDataPackets(buffer, time);\r\n        }\r\n    }\r\n\r\n\r\n    static zoomedIn() {\r\n        return document.getElementById(\"zoom-content\").style.transform !== '';\r\n    }\r\n\r\n\r\n\r\n    static async fetchWithTimeout(resource, options = {}) {\r\n        const { timeout = 8000 } = options;\r\n\r\n        const controller = new AbortController();\r\n        const id = setTimeout(() => controller.abort(), timeout);\r\n\r\n        const response = await fetch(resource, {\r\n            ...options,\r\n            signal: controller.signal\r\n        }).catch(error => {\r\n            throw error;\r\n        });\r\n        clearTimeout(id);\r\n\r\n        return response;\r\n    }\r\n\r\n\r\n}\n\n//# sourceURL=webpack://dragonbms-interface-web/./js/helpers/small_functions.js?");

/***/ }),

/***/ "./js/helpers/wakelock.js":
/*!********************************!*\
  !*** ./js/helpers/wakelock.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ wakeLock)\n/* harmony export */ });\nclass wakeLock{\r\n    wakeLockObj = null;\r\n    constructor() {\r\n\r\n    }\r\n    handleVisibilityChange(){\r\n        if (this.wakeLockObj !== null && document.visibilityState === 'visible') {\r\n            this.enable();\r\n        }\r\n    }\r\n\r\n\r\n    enable(){\r\n\r\n        document.addEventListener('visibilitychange', ()=>{\r\n            this.handleVisibilityChange();\r\n        });\r\n        document.addEventListener('fullscreenchange', ()=>{\r\n            this.handleVisibilityChange();\r\n        });\r\n\r\n        if (\"keepAwake\" in screen) {\r\n            screen.keepAwake = true;\r\n        } else if (\"wakeLock\" in navigator) {\r\n            navigator.wakeLock.request('screen')\r\n                .then((wakeLock) => {\r\n                    this.wakeLockObj = wakeLock;\r\n                })\r\n                .catch((err) => {\r\n                    console.error(err);\r\n                });\r\n        }\r\n    }\r\n\r\n    disable(){\r\n\r\n        document.removeEventListener('visibilitychange', ()=>{\r\n            this.handleVisibilityChange();\r\n        });\r\n        document.removeEventListener('fullscreenchange', ()=>{\r\n            this.handleVisibilityChange();\r\n        });\r\n\r\n        if (\"keepAwake\" in screen) {\r\n            screen.keepAwake = false;\r\n        } else if (\"wakeLock\" in navigator) {\r\n            if (this.wakeLockObj) {\r\n                this.wakeLockObj.release();\r\n                this.wakeLockObj = null;\r\n            }\r\n        }\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://dragonbms-interface-web/./js/helpers/wakelock.js?");

/***/ }),

/***/ "./js/helpers/zoom.js":
/*!****************************!*\
  !*** ./js/helpers/zoom.js ***!
  \****************************/
/***/ ((__unused_webpack_module, exports) => {

eval("/*!\r\n * zoom.js 0.3\r\n * http://lab.hakim.se/zoom-js\r\n * MIT licensed\r\n *\r\n * Copyright (C) 2011-2014 Hakim El Hattab, http://hakim.se\r\n * modified by p3h3 in 2022-2023\r\n */\r\n\r\nlet zoom = (function () {\r\n\r\n    let TRANSITION_DURATION = 300;\r\n\r\n    // The current zoom level (scale)\r\n    let level = 1;\r\n\r\n    // The current mouse position, used for panning\r\n    let mouseX = 0,\r\n        mouseY = 0;\r\n\r\n    // Timeout before pan is activated\r\n    let panEngageTimeout = -1,\r\n        panUpdateInterval = -1;\r\n\r\n    // Timeout for callback function\r\n    let callbackTimeout = -1;\r\n\r\n    let zoomContent = document.getElementById(\"zoom-content\");\r\n\r\n    // Check for transform support so that we can fall back otherwise\r\n    let supportsTransforms = 'transform' in zoomContent.style;\r\n\r\n    if (supportsTransforms) {\r\n        // The easing that will be applied when we zoom in/out\r\n        zoomContent.style.transition = 'transform ' + TRANSITION_DURATION + 'ms ease';\r\n    }\r\n\r\n    // Zoom out if the user hits escape\r\n    document.addEventListener('keyup', function (event) {\r\n        if (level !== 1 && event.keyCode === 27) {\r\n            zoom.out();\r\n        }\r\n    });\r\n\r\n    /**\r\n     * Applies the CSS required to zoom in, prefers the use of CSS3\r\n     * transforms but falls back on zoom for IE.\r\n     *\r\n     * @param {Object} rect\r\n     * @param {Number} scale\r\n     */\r\n    function magnify(rect, scale) {\r\n\r\n        let scrollOffset = getScrollOffset();\r\n\r\n        // Ensure a width/height is set\r\n        rect.width = rect.width || 1;\r\n        rect.height = rect.height || 1;\r\n\r\n        // Center the rect within the zoomed viewport\r\n        rect.x -= (window.innerWidth - (rect.width * scale)) / 2;\r\n        //rect.y -= ( window.innerHeight - ( rect.height * scale ) ) / 4;\r\n\r\n        if (supportsTransforms) {\r\n            // Reset\r\n            if (scale === 1) {\r\n                zoomContent.style.transform = '';\r\n            }\r\n            // Scale\r\n            else {\r\n                let origin = scrollOffset.x + 'px ' + scrollOffset.y + 'px';\r\n\r\n                // tilebar height to make the zoom accommodate the non moving tilebar\r\n                let transform = 'translate(' + -rect.x + 'px,' + -(rect.y - document.getElementById(\"tilebar\").clientHeight * 1.85) + 'px) scale(' + scale + ')';\r\n\r\n                zoomContent.style.transformOrigin = origin;\r\n\r\n                zoomContent.style.transform = transform;\r\n            }\r\n        } else {\r\n            // Reset\r\n            if (scale === 1) {\r\n                zoomContent.style.position = '';\r\n                zoomContent.style.left = '';\r\n                zoomContent.style.top = '';\r\n                zoomContent.style.width = '';\r\n                zoomContent.style.height = '';\r\n                zoomContent.style.zoom = '';\r\n            }\r\n            // Scale\r\n            else {\r\n                zoomContent.style.position = 'relative';\r\n                zoomContent.style.left = (-(scrollOffset.x + rect.x) / scale) + 'px';\r\n                zoomContent.style.top = (-(scrollOffset.y + rect.y) / scale) + 'px';\r\n                zoomContent.style.width = (scale * 100) + '%';\r\n                zoomContent.style.height = (scale * 100) + '%';\r\n                zoomContent.style.zoom = scale;\r\n            }\r\n        }\r\n\r\n        level = scale;\r\n    }\r\n\r\n    /**\r\n     * Pan the document when the mouse cursor approaches the edges\r\n     * of the window.\r\n     */\r\n    function pan() {\r\n        let range = 0.12,\r\n            rangeX = window.innerWidth * range,\r\n            rangeY = window.innerHeight * range,\r\n            scrollOffset = getScrollOffset();\r\n\r\n        // Up\r\n        if (mouseY < rangeY) {\r\n            window.scroll(scrollOffset.x, scrollOffset.y - (1 - (mouseY / rangeY)) * (14 / level));\r\n        }\r\n        // Down\r\n        else if (mouseY > window.innerHeight - rangeY) {\r\n            window.scroll(scrollOffset.x, scrollOffset.y + (1 - (window.innerHeight - mouseY) / rangeY) * (14 / level));\r\n        }\r\n\r\n        // Left\r\n        if (mouseX < rangeX) {\r\n            window.scroll(scrollOffset.x - (1 - (mouseX / rangeX)) * (14 / level), scrollOffset.y);\r\n        }\r\n        // Right\r\n        else if (mouseX > window.innerWidth - rangeX) {\r\n            window.scroll(scrollOffset.x + (1 - (window.innerWidth - mouseX) / rangeX) * (14 / level), scrollOffset.y);\r\n        }\r\n    }\r\n\r\n    function getScrollOffset() {\r\n        return {\r\n            x: window.scrollX !== undefined ? window.scrollX : window.pageXOffset,\r\n            y: window.scrollY !== undefined ? window.scrollY : window.pageYOffset\r\n        }\r\n    }\r\n\r\n    return {\r\n        /**\r\n         * Zooms in on either a rectangle or HTML element.\r\n         *\r\n         * @param {Object} options\r\n         *\r\n         *   (required)\r\n         *   - element: HTML element to zoom in on\r\n         *   OR\r\n         *   - x/y: coordinates in non-transformed space to zoom in on\r\n         *   - width/height: the portion of the screen to zoom in on\r\n         *   - scale: can be used instead of width/height to explicitly set scale\r\n         *\r\n         *   (optional)\r\n         *   - callback: call back when zooming in ends\r\n         *   - padding: spacing around the zoomed in element\r\n         */\r\n        to: function (options) {\r\n\r\n            // Due to an implementation limitation we can't zoom in\r\n            // to another element without zooming out first\r\n            if (level !== 1) {\r\n                zoom.out();\r\n            } else {\r\n                options.x = options.x || 0;\r\n                options.y = options.y || 0;\r\n\r\n                // If an element is set, that takes precedence\r\n                if (!!options.element) {\r\n                    // Space around the zoomed in element to leave on screen\r\n                    let padding = typeof options.padding === 'number' ? options.padding : 20;\r\n                    let bounds = options.element.getBoundingClientRect();\r\n\r\n                    options.x = bounds.left - padding;\r\n                    options.y = bounds.top - padding;\r\n                    options.width = bounds.width + (padding * 2);\r\n                    options.height = bounds.height + (padding * 2);\r\n                }\r\n\r\n                // If width/height values are set, calculate scale from those values\r\n                if (options.width !== undefined && options.height !== undefined) {\r\n                    options.scale = Math.max(Math.min(window.innerWidth / options.width, window.innerHeight / options.height), 1);\r\n                }\r\n\r\n                if (options.scale > 1) {\r\n                    options.x *= options.scale;\r\n                    options.y *= options.scale;\r\n\r\n                    options.x = Math.max(options.x, 0);\r\n                    options.y = Math.max(options.y, 0);\r\n\r\n                    magnify(options, options.scale);\r\n\r\n                    if (options.pan !== false) {\r\n\r\n                        // Wait with engaging panning as it may conflict with the\r\n                        // zoom transition\r\n                        panEngageTimeout = setTimeout(function () {\r\n                            panUpdateInterval = setInterval(pan, 1000 / 60);\r\n                        }, TRANSITION_DURATION);\r\n\r\n                    }\r\n\r\n                    if (typeof options.callback === 'function') {\r\n                        callbackTimeout = setTimeout(options.callback, TRANSITION_DURATION);\r\n                    }\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Resets the document zoom state to its default.\r\n         *\r\n         * @param {Object} options\r\n         *   - callback: call back when zooming out ends\r\n         */\r\n        out: function (options) {\r\n            clearTimeout(panEngageTimeout);\r\n            clearInterval(panUpdateInterval);\r\n            clearTimeout(callbackTimeout);\r\n\r\n            magnify({x: 0, y: 0}, 1);\r\n\r\n            if (options && typeof options.callback === 'function') {\r\n                setTimeout(options.callback, TRANSITION_DURATION);\r\n            }\r\n\r\n            level = 1;\r\n        }\r\n    }\r\n\r\n})();\r\n\r\n\r\nexports.zoom = zoom;\r\n\n\n//# sourceURL=webpack://dragonbms-interface-web/./js/helpers/zoom.js?");

/***/ }),

/***/ "./js/otaUpdate/otaController.js":
/*!***************************************!*\
  !*** ./js/otaUpdate/otaController.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ otaController)\n/* harmony export */ });\n/* harmony import */ var _gui__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../gui */ \"./js/gui.js\");\n/* harmony import */ var _otaHelpers_mcumgr__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./otaHelpers/mcumgr */ \"./js/otaUpdate/otaHelpers/mcumgr.js\");\n/* harmony import */ var _tilebar__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../tilebar */ \"./js/tilebar.js\");\n/* harmony import */ var _helpers_small_functions__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../helpers/small_functions */ \"./js/helpers/small_functions.js\");\n\r\n\r\n\r\n\r\n\r\nclass otaController extends _gui__WEBPACK_IMPORTED_MODULE_0__[\"default\"]{\r\n\r\n    file = null;\r\n    images = [];\r\n\r\n    onUpdateSuccessfullCB;\r\n\r\n\r\n    MGMT_GROUP_ID_IMAGE = 1;\r\n    IMG_MGMT_ID_STATE = 0;\r\n\r\n    constructor(bleDevice) {\r\n        super();\r\n\r\n        this.bleDevice = bleDevice;\r\n\r\n        this.mcumgr = new _otaHelpers_mcumgr__WEBPACK_IMPORTED_MODULE_1__[\"default\"](bleDevice);\r\n\r\n\r\n        this.mcumgr.onImageUploadProgress(({ percentage }) => {\r\n            this.otaUpdateInfoText.innerText = \"Uploading... \" + percentage.toFixed(1) + \"%\";\r\n        });\r\n\r\n\r\n        this.mcumgr.onMessage(({ _, group, id, data }) => {\r\n            switch (group) {\r\n                case this.MGMT_GROUP_ID_IMAGE:\r\n                    switch (id) {\r\n                        case this.IMG_MGMT_ID_STATE:\r\n                            this.images = data.images;\r\n                            /*\r\n                            this.images.forEach(image => {\r\n                                console.log(image);\r\n                            });\r\n                            */\r\n                            break;\r\n                    }\r\n                    break;\r\n                default:\r\n                    console.log('Unknown group');\r\n                    break;\r\n            }\r\n        });\r\n\r\n\r\n\r\n        this.mcumgr.onImageUploadFinished(async () => {\r\n            this.otaUpdateInfoText.innerText = 'Upload complete';\r\n            console.log(\"done uploading image\");\r\n            try{\r\n                await this.mcumgr.cmdImageState();\r\n            }catch (e){\r\n                this.onUpdateFailureCB();\r\n                return;\r\n            }\r\n\r\n\r\n\r\n            // fill the serviceInitDone Callback, which is called when the connection process was successful\r\n            // in this case, the process should occur after resetting and auto-reconnecting after the update\r\n            this.bleDevice.serviceInitDoneCB = ()=>{\r\n                setTimeout(async ()=>{\r\n\r\n                    // scroll to the board info section to let the user see the update completed text\r\n\r\n                    // luckily this works without any set parameters and doesn't initialise event listeners\r\n                    let tb = new _tilebar__WEBPACK_IMPORTED_MODULE_2__[\"default\"]();\r\n                    tb.scrollToBoardInfo();\r\n\r\n                    // Initialising OTA Update Service\r\n                    this.otaUpdateInfoText.innerText = 'Initialising Update Service';\r\n                    try{\r\n                        await this.mcumgr.connect();\r\n                    }catch (e){\r\n                        this.onUpdateFailureCB();\r\n                        return;\r\n                    }\r\n\r\n\r\n                    // get the image info, which is needed for checking  successful copying to slot 0 before confirming\r\n                    try{\r\n                        await this.mcumgr.cmdImageState();\r\n                    }catch (e){\r\n                        this.onUpdateFailureCB();\r\n                        return;\r\n                    }\r\n\r\n\r\n                    // this wait block need to be here since the above called cmsImageState() is non-blocking\r\n                    // so the callback doesn't instantly arrive\r\n                    let wait = true;\r\n                    setTimeout(()=>{\r\n                        wait = false;\r\n                    }, 500);\r\n\r\n                    await _helpers_small_functions__WEBPACK_IMPORTED_MODULE_3__[\"default\"].until(()=>{return !(wait && this.images[0].confirmed)});\r\n\r\n\r\n\r\n                    this.otaUpdateInfoText.innerText = 'Confirming Upload';\r\n\r\n                    //CONFIRM\r\n                    // confirms the image if the slot 0 image (the one that is booted) is not confirmed yet\r\n                    // this is only the case if it's the new firmware\r\n                    if (this.images.length > 0 && this.images[0].confirmed === false) {\r\n                        try{\r\n                            console.log(\"confirming image\");\r\n                            await this.mcumgr.cmdImageConfirm(this.images[0].hash);\r\n\r\n                            this.otaUpdateInfoText.innerText = 'Auto update COMPLETE!';\r\n                            this.onUpdateSuccessfullCB();\r\n\r\n                        }catch (e){\r\n                            this.onUpdateFailureCB();\r\n                            return;\r\n                        }\r\n                    }else{\r\n                        this.otaUpdateInfoText.innerText = 'Auto update failed!';\r\n                    }\r\n\r\n\r\n\r\n\r\n\r\n                    // reset this very callback, so it doesn't affect the normal connect process\r\n                    this.bleDevice.serviceInitDoneCB = null;\r\n                }, 500);\r\n\r\n            };\r\n\r\n\r\n\r\n            setTimeout(async()=>{\r\n                // continuation of automated upload process\r\n\r\n                //TEST\r\n\r\n                this.otaUpdateInfoText.innerText = 'Testing Image';\r\n                if (this.images.length > 1 && this.images[1].pending === false) {\r\n                    try{\r\n                        await this.mcumgr.cmdImageTest(this.images[1].hash);\r\n                    }catch (e){\r\n                        this.onUpdateFailureCB();\r\n                        return;\r\n                    }\r\n                }\r\n\r\n                //RESET\r\n                this.otaUpdateInfoText.innerText = 'Will reset shortly';\r\n\r\n                setTimeout(async ()=>{\r\n                    try{\r\n                        await this.mcumgr.cmdReset();\r\n                    }catch (e){\r\n                        this.onUpdateFailureCB();\r\n                    }\r\n                }, 1500);\r\n            }, 1500);\r\n        });\r\n\r\n    }\r\n\r\n    // callback is called when the file was successfully loaded\r\n    updateSelectedFile(file, cb){\r\n        const reader = new FileReader();\r\n\r\n        // this callback is called when the reader has successfully read in the file (call for that is below)\r\n        reader.onload = async () => {\r\n            this.fileData = reader.result;\r\n            cb();\r\n        };\r\n\r\n        reader.readAsArrayBuffer(file);\r\n    }\r\n\r\n    async startUpdateProcess(onSuccessCB, onFailureCB){\r\n\r\n        this.onUpdateSuccessfullCB = onSuccessCB;\r\n\r\n        this.onUpdateFailureCB = onFailureCB;\r\n\r\n        // the update process follows this rather strict schedule to be successful:\r\n\r\n        /*\r\n            Connect\r\n            Erase\r\n            Upload\r\n\r\n            (Callback since this takes lots of time)\r\n\r\n            Test\r\n            Reset\r\n\r\n            (reconnect the device)\r\n\r\n            Confirm\r\n\r\n            DONE!\r\n        */\r\n\r\n        // some of these actions are asynchronous in the sense that they work based on callbacks.\r\n\r\n        // Initialising OTA Update Service\r\n        this.otaUpdateInfoText.innerText = 'Initialising Update Service';\r\n        try{\r\n            await this.mcumgr.connect();\r\n        }catch (e){\r\n            this.onUpdateFailureCB();\r\n            return;\r\n        }\r\n\r\n\r\n        setTimeout(async ()=>{\r\n            // ERASE\r\n            this.otaUpdateInfoText.innerText = 'Erasing';\r\n            try{\r\n                await this.mcumgr.cmdImageErase();\r\n            }catch (e){\r\n                this.onUpdateFailureCB();\r\n                return;\r\n            }\r\n\r\n\r\n            setTimeout(()=>{\r\n                //UPLOAD\r\n                this.otaUpdateInfoText.disabled = true;\r\n                //event.stopPropagation();\r\n                if (this.fileData) {\r\n                    this.mcumgr.cmdUpload(this.fileData).catch(()=>{\r\n                        this.onUpdateFailureCB();\r\n                    });\r\n                }else{\r\n                    this.otaUpdateInfoText.innerText = 'No firmware loaded!';\r\n                }\r\n            },1000);\r\n\r\n            // as this is not asynchronous but with a callback function\r\n            // this shit continues in the onImageUploadFinished callback registered in constructor\r\n        }, 1000);\r\n    }\r\n\r\n}\n\n//# sourceURL=webpack://dragonbms-interface-web/./js/otaUpdate/otaController.js?");

/***/ }),

/***/ "./js/otaUpdate/otaHelpers/cbor.js":
/*!*****************************************!*\
  !*** ./js/otaUpdate/otaHelpers/cbor.js ***!
  \*****************************************/
/***/ ((module) => {

"use strict";
eval("/*\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2014-2016 Patrick Gansterer <paroga@paroga.com>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n */\r\n\r\n\r\n\r\n\r\nconst POW_2_24 = 5.960464477539063e-8,\r\n    POW_2_32 = 4294967296,\r\n    POW_2_53 = 9007199254740992;\r\n\r\nfunction encode(value) {\r\n  let data = new ArrayBuffer(256);\r\n  let dataView = new DataView(data);\r\n  let lastLength;\r\n  let offset = 0;\r\n\r\n  function prepareWrite(length) {\r\n    let newByteLength = data.byteLength;\r\n    let requiredLength = offset + length;\r\n    while (newByteLength < requiredLength)\r\n      newByteLength <<= 1;\r\n    if (newByteLength !== data.byteLength) {\r\n      let oldDataView = dataView;\r\n      data = new ArrayBuffer(newByteLength);\r\n      dataView = new DataView(data);\r\n      let uint32count = (offset + 3) >> 2;\r\n      for (let i = 0; i < uint32count; ++i)\r\n        dataView.setUint32(i << 2, oldDataView.getUint32(i << 2));\r\n    }\r\n\r\n    lastLength = length;\r\n    return dataView;\r\n  }\r\n  function commitWrite() {\r\n    offset += lastLength;\r\n  }\r\n  function writeFloat64(value) {\r\n    commitWrite(prepareWrite(8).setFloat64(offset, value));\r\n  }\r\n  function writeUint8(value) {\r\n    commitWrite(prepareWrite(1).setUint8(offset, value));\r\n  }\r\n  function writeUint8Array(value) {\r\n    let dataView = prepareWrite(value.length);\r\n    for (let i = 0; i < value.length; ++i)\r\n      dataView.setUint8(offset + i, value[i]);\r\n    commitWrite();\r\n  }\r\n  function writeUint16(value) {\r\n    commitWrite(prepareWrite(2).setUint16(offset, value));\r\n  }\r\n  function writeUint32(value) {\r\n    commitWrite(prepareWrite(4).setUint32(offset, value));\r\n  }\r\n  function writeUint64(value) {\r\n    let low = value % POW_2_32;\r\n    let high = (value - low) / POW_2_32;\r\n    let dataView = prepareWrite(8);\r\n    dataView.setUint32(offset, high);\r\n    dataView.setUint32(offset + 4, low);\r\n    commitWrite();\r\n  }\r\n  function writeTypeAndLength(type, length) {\r\n    if (length < 24) {\r\n      writeUint8(type << 5 | length);\r\n    } else if (length < 0x100) {\r\n      writeUint8(type << 5 | 24);\r\n      writeUint8(length);\r\n    } else if (length < 0x10000) {\r\n      writeUint8(type << 5 | 25);\r\n      writeUint16(length);\r\n    } else if (length < 0x100000000) {\r\n      writeUint8(type << 5 | 26);\r\n      writeUint32(length);\r\n    } else {\r\n      writeUint8(type << 5 | 27);\r\n      writeUint64(length);\r\n    }\r\n  }\r\n\r\n  function encodeItem(value) {\r\n    let i;\r\n\r\n    if (value === false)\r\n      return writeUint8(0xf4);\r\n    if (value === true)\r\n      return writeUint8(0xf5);\r\n    if (value === null)\r\n      return writeUint8(0xf6);\r\n    if (value === undefined)\r\n      return writeUint8(0xf7);\r\n\r\n    switch (typeof value) {\r\n      case \"number\":\r\n        if (Math.floor(value) === value) {\r\n          if (0 <= value && value <= POW_2_53)\r\n            return writeTypeAndLength(0, value);\r\n          if (-POW_2_53 <= value && value < 0)\r\n            return writeTypeAndLength(1, -(value + 1));\r\n        }\r\n        writeUint8(0xfb);\r\n        return writeFloat64(value);\r\n\r\n      case \"string\":\r\n        let utf8data = [];\r\n        for (i = 0; i < value.length; ++i) {\r\n          let charCode = value.charCodeAt(i);\r\n          if (charCode < 0x80) {\r\n            utf8data.push(charCode);\r\n          } else if (charCode < 0x800) {\r\n            utf8data.push(0xc0 | charCode >> 6);\r\n            utf8data.push(0x80 | charCode & 0x3f);\r\n          } else if (charCode < 0xd800) {\r\n            utf8data.push(0xe0 | charCode >> 12);\r\n            utf8data.push(0x80 | (charCode >> 6)  & 0x3f);\r\n            utf8data.push(0x80 | charCode & 0x3f);\r\n          } else {\r\n            charCode = (charCode & 0x3ff) << 10;\r\n            charCode |= value.charCodeAt(++i) & 0x3ff;\r\n            charCode += 0x10000;\r\n\r\n            utf8data.push(0xf0 | charCode >> 18);\r\n            utf8data.push(0x80 | (charCode >> 12)  & 0x3f);\r\n            utf8data.push(0x80 | (charCode >> 6)  & 0x3f);\r\n            utf8data.push(0x80 | charCode & 0x3f);\r\n          }\r\n        }\r\n\r\n        writeTypeAndLength(3, utf8data.length);\r\n        return writeUint8Array(utf8data);\r\n\r\n      default:\r\n        let length;\r\n        if (Array.isArray(value)) {\r\n          length = value.length;\r\n          writeTypeAndLength(4, length);\r\n          for (i = 0; i < length; ++i)\r\n            encodeItem(value[i]);\r\n        } else if (value instanceof Uint8Array) {\r\n          writeTypeAndLength(2, value.length);\r\n          writeUint8Array(value);\r\n        } else {\r\n          let keys = Object.keys(value);\r\n          length = keys.length;\r\n          writeTypeAndLength(5, length);\r\n          for (i = 0; i < length; ++i) {\r\n            let key = keys[i];\r\n            encodeItem(key);\r\n            encodeItem(value[key]);\r\n          }\r\n        }\r\n    }\r\n  }\r\n\r\n  encodeItem(value);\r\n\r\n  if (\"slice\" in data)\r\n    return data.slice(0, offset);\r\n\r\n  let ret = new ArrayBuffer(offset);\r\n  let retView = new DataView(ret);\r\n  for (let i = 0; i < offset; ++i)\r\n    retView.setUint8(i, dataView.getUint8(i));\r\n  return ret;\r\n}\r\n\r\nfunction decode(data, tagger, simpleValue) {\r\n  let dataView = new DataView(data);\r\n  let offset = 0;\r\n\r\n  if (typeof tagger !== \"function\")\r\n    tagger = function(value) { return value; };\r\n  if (typeof simpleValue !== \"function\")\r\n    simpleValue = function() { return undefined; };\r\n\r\n  function commitRead(length, value) {\r\n    offset += length;\r\n    return value;\r\n  }\r\n  function readArrayBuffer(length) {\r\n    return commitRead(length, new Uint8Array(data, offset, length));\r\n  }\r\n  function readFloat16() {\r\n    let tempArrayBuffer = new ArrayBuffer(4);\r\n    let tempDataView = new DataView(tempArrayBuffer);\r\n    let value = readUint16();\r\n\r\n    let sign = value & 0x8000;\r\n    let exponent = value & 0x7c00;\r\n    let fraction = value & 0x03ff;\r\n\r\n    if (exponent === 0x7c00)\r\n      exponent = 0xff << 10;\r\n    else if (exponent !== 0)\r\n      exponent += (127 - 15) << 10;\r\n    else if (fraction !== 0)\r\n      return (sign ? -1 : 1) * fraction * POW_2_24;\r\n\r\n    tempDataView.setUint32(0, sign << 16 | exponent << 13 | fraction << 13);\r\n    return tempDataView.getFloat32(0);\r\n  }\r\n  function readFloat32() {\r\n    return commitRead(4, dataView.getFloat32(offset));\r\n  }\r\n  function readFloat64() {\r\n    return commitRead(8, dataView.getFloat64(offset));\r\n  }\r\n  function readUint8() {\r\n    return commitRead(1, dataView.getUint8(offset));\r\n  }\r\n  function readUint16() {\r\n    return commitRead(2, dataView.getUint16(offset));\r\n  }\r\n  function readUint32() {\r\n    return commitRead(4, dataView.getUint32(offset));\r\n  }\r\n  function readUint64() {\r\n    return readUint32() * POW_2_32 + readUint32();\r\n  }\r\n  function readBreak() {\r\n    if (dataView.getUint8(offset) !== 0xff)\r\n      return false;\r\n    offset += 1;\r\n    return true;\r\n  }\r\n  function readLength(additionalInformation) {\r\n    if (additionalInformation < 24)\r\n      return additionalInformation;\r\n    if (additionalInformation === 24)\r\n      return readUint8();\r\n    if (additionalInformation === 25)\r\n      return readUint16();\r\n    if (additionalInformation === 26)\r\n      return readUint32();\r\n    if (additionalInformation === 27)\r\n      return readUint64();\r\n    if (additionalInformation === 31)\r\n      return -1;\r\n    throw \"Invalid length encoding\";\r\n  }\r\n  function readIndefiniteStringLength(majorType) {\r\n    let initialByte = readUint8();\r\n    if (initialByte === 0xff)\r\n      return -1;\r\n    let length = readLength(initialByte & 0x1f);\r\n    if (length < 0 || (initialByte >> 5) !== majorType)\r\n      throw \"Invalid indefinite length element\";\r\n    return length;\r\n  }\r\n\r\n  function appendUtf16Data(utf16data, length) {\r\n    for (let i = 0; i < length; ++i) {\r\n      let value = readUint8();\r\n      if (value & 0x80) {\r\n        if (value < 0xe0) {\r\n          value = (value & 0x1f) <<  6\r\n                | (readUint8() & 0x3f);\r\n          length -= 1;\r\n        } else if (value < 0xf0) {\r\n          value = (value & 0x0f) << 12\r\n                | (readUint8() & 0x3f) << 6\r\n                | (readUint8() & 0x3f);\r\n          length -= 2;\r\n        } else {\r\n          value = (value & 0x0f) << 18\r\n                | (readUint8() & 0x3f) << 12\r\n                | (readUint8() & 0x3f) << 6\r\n                | (readUint8() & 0x3f);\r\n          length -= 3;\r\n        }\r\n      }\r\n\r\n      if (value < 0x10000) {\r\n        utf16data.push(value);\r\n      } else {\r\n        value -= 0x10000;\r\n        utf16data.push(0xd800 | (value >> 10));\r\n        utf16data.push(0xdc00 | (value & 0x3ff));\r\n      }\r\n    }\r\n  }\r\n\r\n  function decodeItem() {\r\n    let initialByte = readUint8();\r\n    let majorType = initialByte >> 5;\r\n    let additionalInformation = initialByte & 0x1f;\r\n    let i;\r\n    let length;\r\n\r\n    if (majorType === 7) {\r\n      switch (additionalInformation) {\r\n        case 25:\r\n          return readFloat16();\r\n        case 26:\r\n          return readFloat32();\r\n        case 27:\r\n          return readFloat64();\r\n      }\r\n    }\r\n\r\n    length = readLength(additionalInformation);\r\n    if (length < 0 && (majorType < 2 || 6 < majorType))\r\n      throw \"Invalid length\";\r\n\r\n    switch (majorType) {\r\n      case 0:\r\n        return length;\r\n      case 1:\r\n        return -1 - length;\r\n      case 2:\r\n        if (length < 0) {\r\n          let elements = [];\r\n          let fullArrayLength = 0;\r\n          while ((length = readIndefiniteStringLength(majorType)) >= 0) {\r\n            fullArrayLength += length;\r\n            elements.push(readArrayBuffer(length));\r\n          }\r\n          let fullArray = new Uint8Array(fullArrayLength);\r\n          let fullArrayOffset = 0;\r\n          for (i = 0; i < elements.length; ++i) {\r\n            fullArray.set(elements[i], fullArrayOffset);\r\n            fullArrayOffset += elements[i].length;\r\n          }\r\n          return fullArray;\r\n        }\r\n        return readArrayBuffer(length);\r\n      case 3:\r\n        let utf16data = [];\r\n        if (length < 0) {\r\n          while ((length = readIndefiniteStringLength(majorType)) >= 0)\r\n            appendUtf16Data(utf16data, length);\r\n        } else\r\n          appendUtf16Data(utf16data, length);\r\n        return String.fromCharCode.apply(null, utf16data);\r\n      case 4:\r\n        let retArray;\r\n        if (length < 0) {\r\n          retArray = [];\r\n          while (!readBreak())\r\n            retArray.push(decodeItem());\r\n        } else {\r\n          retArray = new Array(length);\r\n          for (i = 0; i < length; ++i)\r\n            retArray[i] = decodeItem();\r\n        }\r\n        return retArray;\r\n      case 5:\r\n        let retObject = {};\r\n        for (i = 0; i < length || length < 0 && !readBreak(); ++i) {\r\n          let key = decodeItem();\r\n          retObject[key] = decodeItem();\r\n        }\r\n        return retObject;\r\n      case 6:\r\n        return tagger(decodeItem(), length);\r\n      case 7:\r\n        switch (length) {\r\n          case 20:\r\n            return false;\r\n          case 21:\r\n            return true;\r\n          case 22:\r\n            return null;\r\n          case 23:\r\n            return undefined;\r\n          default:\r\n            return simpleValue(length);\r\n        }\r\n    }\r\n  }\r\n\r\n  let ret = decodeItem();\r\n  if (offset !== data.byteLength)\r\n    throw \"Remaining bytes\";\r\n  return ret;\r\n}\r\n\r\nmodule.exports = { encode: encode, decode: decode };\r\n\n\n//# sourceURL=webpack://dragonbms-interface-web/./js/otaUpdate/otaHelpers/cbor.js?");

/***/ }),

/***/ "./js/otaUpdate/otaHelpers/mcumgr.js":
/*!*******************************************!*\
  !*** ./js/otaUpdate/otaHelpers/mcumgr.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ MCUManager)\n/* harmony export */ });\nlet CBOR = __webpack_require__(/*! ./cbor */ \"./js/otaUpdate/otaHelpers/cbor.js\");\r\n\r\nclass MCUManager {\r\n\r\n    // Opcodes\r\n    #MGMT_OP_READ = 0;\r\n    #MGMT_OP_WRITE = 2;\r\n\r\n    // Groups\r\n    #MGMT_GROUP_ID_OS = 0;\r\n    #MGMT_GROUP_ID_IMAGE = 1;\r\n\r\n    // OS group\r\n    #OS_MGMT_ID_ECHO = 0;\r\n    #OS_MGMT_ID_RESET = 5;\r\n\r\n    // Image group\r\n    #IMG_MGMT_ID_STATE = 0;\r\n    #IMG_MGMT_ID_UPLOAD = 1;\r\n    #IMG_MGMT_ID_ERASE = 5;\r\n\r\n    #otaUpdateServiceUuid = '8d53dc1d-1db7-4cd3-868b-8a527460aa84';\r\n    #otaUpdateCharacteristicUuid = 'da2e7828-fbce-4e01-ae9e-261174997c48';\r\n\r\n    #MTU = 200;\r\n\r\n    constructor(bleDevice) {\r\n        this._device = bleDevice;\r\n        this._service = null;\r\n        this._characteristic = null;\r\n        this._connectCallback = null;\r\n        this._connectingCallback = null;\r\n        this._disconnectCallback = null;\r\n        this._messageCallback = null;\r\n        this._imageUploadProgressCallback = null;\r\n        this._uploadIsInProgress = false;\r\n        this._buffer = new Uint8Array();\r\n        this._logger = { info: console.log, error: console.error };\r\n        this._seq = 0;\r\n    }\r\n    async connect() {\r\n        try {\r\n            if (this._connectingCallback) this._connectingCallback();\r\n            const server = this._device.gattServer;\r\n            this._logger.info(`Server connected.`);\r\n            this._service = await server.getPrimaryService(this.#otaUpdateServiceUuid);\r\n            this._logger.info(`Service connected.`);\r\n            this._characteristic = await this._service.getCharacteristic(this.#otaUpdateCharacteristicUuid);\r\n            this._characteristic.addEventListener('characteristicvaluechanged', this._notification.bind(this));\r\n            await this._characteristic.startNotifications();\r\n            await this._connected();\r\n            if (this._uploadIsInProgress) {\r\n                await this._uploadNext();\r\n            }\r\n        } catch (error) {\r\n            this._logger.error(error);\r\n            await this._disconnected();\r\n        }\r\n    }\r\n    disconnect() {\r\n        this._userRequestedDisconnect = true;\r\n        return this._device.gatt.disconnect();\r\n    }\r\n    onConnecting(callback) {\r\n        this._connectingCallback = callback;\r\n        return this;\r\n    }\r\n    onConnect(callback) {\r\n        this._connectCallback = callback;\r\n        return this;\r\n    }\r\n    onDisconnect(callback) {\r\n        this._disconnectCallback = callback;\r\n        return this;\r\n    }\r\n    onMessage(callback) {\r\n        this._messageCallback = callback;\r\n        return this;\r\n    }\r\n    onImageUploadProgress(callback) {\r\n        this._imageUploadProgressCallback = callback;\r\n        return this;\r\n    }\r\n    onImageUploadFinished(callback) {\r\n        this._imageUploadFinishedCallback = callback;\r\n        return this;\r\n    }\r\n    async _connected() {\r\n        if (this._connectCallback) this._connectCallback();\r\n    }\r\n    async _disconnected() {\r\n        this._logger.info('Disconnected.');\r\n        if (this._disconnectCallback) this._disconnectCallback();\r\n        this._device = null;\r\n        this._service = null;\r\n        this._characteristic = null;\r\n        this._uploadIsInProgress = false;\r\n        this._userRequestedDisconnect = false;\r\n    }\r\n    get name() {\r\n        return this._device && this._device.name;\r\n    }\r\n    async _sendMessage(op, group, id, data) {\r\n        const _flags = 0;\r\n        let encodedData = [];\r\n        if (typeof data !== 'undefined') {\r\n            encodedData = [...new Uint8Array(CBOR.encode(data))];\r\n        }\r\n        const length_lo = encodedData.length & 255;\r\n        const length_hi = encodedData.length >> 8;\r\n        const group_lo = group & 255;\r\n        const group_hi = group >> 8;\r\n        const message = [op, _flags, length_hi, length_lo, group_hi, group_lo, this._seq, id, ...encodedData];\r\n        // console.log('>'  + message.map(x => x.toString(16).padStart(2, '0')).join(' '));\r\n        await this._characteristic.writeValueWithoutResponse(Uint8Array.from(message));\r\n        this._seq = (this._seq + 1) % 256;\r\n    }\r\n    _notification(event) {\r\n        // console.log('message received');\r\n        const message = new Uint8Array(event.target.value.buffer);\r\n        // console.log(message);\r\n        // console.log('<'  + [...message].map(x => x.toString(16).padStart(2, '0')).join(' '));\r\n        this._buffer = new Uint8Array([...this._buffer, ...message]);\r\n        const messageLength = this._buffer[2] * 256 + this._buffer[3];\r\n        if (this._buffer.length < messageLength + 8) return;\r\n        this._processMessage(this._buffer.slice(0, messageLength + 8));\r\n        this._buffer = this._buffer.slice(messageLength + 8);\r\n    }\r\n    _processMessage(message) {\r\n        const [op, _flags, length_hi, length_lo, group_hi, group_lo, _seq, id] = message;\r\n        const data = CBOR.decode(message.slice(8).buffer);\r\n        const length = length_hi * 256 + length_lo;\r\n        const group = group_hi * 256 + group_lo;\r\n        if (group === this.#MGMT_GROUP_ID_IMAGE && id === this.#IMG_MGMT_ID_UPLOAD && data.rc === 0 && data.off) {\r\n            this._uploadOffset = data.off;\r\n            this._uploadNext();\r\n            return;\r\n        }\r\n        if (this._messageCallback) this._messageCallback({ op, group, id, data, length });\r\n    }\r\n    cmdReset() {\r\n        return this._sendMessage(this.#MGMT_OP_WRITE, this.#MGMT_GROUP_ID_OS, this.#OS_MGMT_ID_RESET);\r\n    }\r\n    smpEcho(message) {\r\n        return this._sendMessage(this.#MGMT_OP_WRITE, this.#MGMT_GROUP_ID_OS, this.#OS_MGMT_ID_ECHO, { d: message });\r\n    }\r\n    cmdImageState() {\r\n        return this._sendMessage(this.#MGMT_OP_READ, this.#MGMT_GROUP_ID_IMAGE, this.#IMG_MGMT_ID_STATE);\r\n    }\r\n    cmdImageErase() {\r\n        return this._sendMessage(this.#MGMT_OP_WRITE, this.#MGMT_GROUP_ID_IMAGE, this.#IMG_MGMT_ID_ERASE, {});\r\n    }\r\n    cmdImageTest(hash) {\r\n        return this._sendMessage(this.#MGMT_OP_WRITE, this.#MGMT_GROUP_ID_IMAGE, this.#IMG_MGMT_ID_STATE, { hash, confirm: false });\r\n    }\r\n    cmdImageConfirm(hash) {\r\n        return this._sendMessage(this.#MGMT_OP_WRITE, this.#MGMT_GROUP_ID_IMAGE, this.#IMG_MGMT_ID_STATE, { hash, confirm: true });\r\n    }\r\n    _hash(image) {\r\n        return crypto.subtle.digest('SHA-256', image);\r\n    }\r\n    async _uploadNext() {\r\n        if (this._uploadOffset >= this._uploadImage.byteLength) {\r\n            this._uploadIsInProgress = false;\r\n            this._imageUploadFinishedCallback();\r\n            return;\r\n        }\r\n\r\n        const nmpOverhead = 8;\r\n        const message = { data: new Uint8Array(), off: this._uploadOffset };\r\n        if (this._uploadOffset === 0) {\r\n            message.len = this._uploadImage.byteLength;\r\n            message.sha = new Uint8Array(await this._hash(this._uploadImage));\r\n        }\r\n        this._imageUploadProgressCallback({ percentage: (Math.floor(this._uploadOffset / this._uploadImage.byteLength * 1000) / 10) });\r\n\r\n        const length = this.#MTU - CBOR.encode(message).byteLength - nmpOverhead;\r\n\r\n        message.data = new Uint8Array(this._uploadImage.slice(this._uploadOffset, this._uploadOffset + length));\r\n\r\n        this._uploadOffset += length;\r\n        await this.sendMessageTry(this.#MGMT_OP_WRITE, this.#MGMT_GROUP_ID_IMAGE, this.#IMG_MGMT_ID_UPLOAD, message, 0);\r\n    }\r\n\r\n    async sendMessageTry(op, group, id, data, t){\r\n\r\n        if(t > 20){\r\n            throw new DOMException(\"GATT operation failed for unknown reason\");\r\n        }\r\n\r\n        try{\r\n            await this._sendMessage(op, group, id, data);\r\n        }catch(e){\r\n            setTimeout(async ()=>{\r\n                console.log(\"[mcumgr] error while sending message, try number \" + t + \" error: \" + e);\r\n                await this.sendMessageTry(op, group, id, data, t+1);\r\n            }, 200);\r\n        }\r\n    }\r\n\r\n    async cmdUpload(image, slot = 0) {\r\n        if (this._uploadIsInProgress) {\r\n            this._logger.error('Upload is already in progress.');\r\n            return;\r\n        }\r\n        this._uploadIsInProgress = true;\r\n\r\n        this._uploadOffset = 0;\r\n        this._uploadImage = image;\r\n        this._uploadSlot = slot;\r\n\r\n        this._uploadNext();\r\n    }\r\n    async imageInfo(image) {\r\n        // https://interrupt.memfault.com/blog/mcuboot-overview#mcuboot-image-binaries\r\n\r\n        const info = {};\r\n        const view = new Uint8Array(image);\r\n\r\n        // check header length\r\n        if (view.length < 32) {\r\n            throw new Error('Invalid image (too short file)');\r\n        }\r\n\r\n        // check MAGIC bytes 0x96f3b83d\r\n        if (view[0] !== 0x3d || view[1] !== 0xb8 || view[2] !== 0xf3 || view[3] !== 0x96) {\r\n            throw new Error('Invalid image (wrong magic bytes)');\r\n        }\r\n\r\n        // check load address is 0x00000000\r\n        if (view[4] !== 0x00 || view[5] !== 0x00 || view[6] !== 0x00 || view[7] !== 0x00) {\r\n            throw new Error('Invalid image (wrong load address)');\r\n        }\r\n\r\n        const headerSize = view[8] + view[9] * 2**8;\r\n\r\n        // check protected TLV area size is 0\r\n        if (view[10] !== 0x00 || view[11] !== 0x00) {\r\n            throw new Error('Invalid image (wrong protected TLV area size)');\r\n        }\r\n\r\n        const imageSize = view[12] + view[13] * 2**8 + view[14] * 2**16 + view[15] * 2**24;\r\n        info.imageSize = imageSize;\r\n\r\n        // check image size is correct\r\n        if (view.length < imageSize + headerSize) {\r\n            throw new Error('Invalid image (wrong image size)');\r\n        }\r\n\r\n        // check flags is 0x00000000\r\n        if (view[16] !== 0x00 || view[17] !== 0x00 || view[18] !== 0x00 || view[19] !== 0x00) {\r\n            throw new Error('Invalid image (wrong flags)');\r\n        }\r\n\r\n        info.version = `${view[20]}.${view[21]}.${view[22] + view[23] * 2 ** 8}`;\r\n\r\n        info.hash = [...new Uint8Array(await this._hash(image.slice(0, imageSize + 32)))].map(b => b.toString(16).padStart(2, '0')).join('');\r\n\r\n        return info;\r\n    }\r\n}\r\n\r\n\n\n//# sourceURL=webpack://dragonbms-interface-web/./js/otaUpdate/otaHelpers/mcumgr.js?");

/***/ }),

/***/ "./js/otaUpdate/otaManager.js":
/*!************************************!*\
  !*** ./js/otaUpdate/otaManager.js ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ otaManager)\n/* harmony export */ });\n/* harmony import */ var _gui__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../gui */ \"./js/gui.js\");\n/* harmony import */ var _otaController__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./otaController */ \"./js/otaUpdate/otaController.js\");\n/* harmony import */ var _helpers_small_functions__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helpers/small_functions */ \"./js/helpers/small_functions.js\");\n\r\n\r\n\r\n\r\nclass otaManager extends _gui__WEBPACK_IMPORTED_MODULE_0__[\"default\"]{\r\n\r\n    lastSelectedFirmware;\r\n    bmsController;\r\n\r\n    bmsDevice;\r\n    tachoDevice;\r\n\r\n    updateInProgress;\r\n\r\n    #prevSelectedFirmware = '';\r\n\r\n    constructor(bmsDevice, tachoDevice, deviceInfoMgr){\r\n        super();\r\n\r\n        this.bmsDevice = bmsDevice;\r\n        this.tachoDevice = tachoDevice;\r\n\r\n        this.deviceInfoMgr = deviceInfoMgr;\r\n\r\n        this.bmsController = new _otaController__WEBPACK_IMPORTED_MODULE_1__[\"default\"](bmsDevice);\r\n        this.tachoController = new _otaController__WEBPACK_IMPORTED_MODULE_1__[\"default\"](tachoDevice);\r\n\r\n        this.getAvailableOTAImages();\r\n\r\n    }\r\n\r\n\r\n    getAvailableOTAImages(){\r\n        this.getAvailableBMSOTAImages().then((res) => {\r\n            this.bmsImages = res;\r\n            console.log(\"[otaManager] got available BMS images!\");\r\n        });\r\n        this.getAvailableTachoOTAImages().then((res) => {\r\n            this.tachoImages = res;\r\n            console.log(\"[otaManager] got available Tacho images!\");\r\n        });\r\n    }\r\n\r\n\r\n    addEventListeners(){\r\n\r\n        // listener for opened select\r\n        this.availableOTAImagesSelect.addEventListener(\"click\", ()=>{\r\n\r\n            // fill dynamically with the needed tag names\r\n            switch (this.deviceInfoMgr.chosenDevice) {\r\n                case \"bms\":\r\n                    this.displayAvailableOTAImages(this.bmsImages);\r\n\r\n                    break;\r\n                case \"tacho\":\r\n                    this.displayAvailableOTAImages(this.tachoImages);\r\n\r\n                    break;\r\n                default:\r\n                    console.log(\"[otaManager] no device type selected!\");\r\n                    return;\r\n            }\r\n\r\n            // actually load in the firmware images\r\n            if(this.availableOTAImagesSelect.value !== \"\" && this.#prevSelectedFirmware !== ''){\r\n                // block all update actions if update is in progress\r\n                if(this.updateInProgress){\r\n                    return;\r\n                }\r\n\r\n                // reduce number of calls on the sad proxy\r\n                if (this.availableOTAImagesSelect.value === this.lastSelectedFirmware) {\r\n                    return;\r\n                }\r\n                this.lastSelectedFirmware = this.availableOTAImagesSelect.value;\r\n\r\n\r\n                // disable the upload button while firmware file is downloaded and parsed\r\n                this.deviceInfoMgr.blockChooser();\r\n                this.updateOTAButton.disabled = true;\r\n                this.availableOTAImagesSelect.disabled = true;\r\n\r\n                // inform user lol\r\n                this.otaUpdateInfoText.innerText = 'Downloading selected Firmware...';\r\n\r\n\r\n                switch (this.deviceInfoMgr.chosenDevice) {\r\n                    case \"bms\":\r\n                        this.loadBMSFirmware();\r\n\r\n                        break;\r\n                    case \"tacho\":\r\n                        this.loadTachoFirmware();\r\n\r\n                        break;\r\n                    default:\r\n\r\n                        // reset everything so the user isn't stuck\r\n\r\n                        this.deviceInfoMgr.unblockChooser();\r\n                        this.updateOTAButton.disabled = false;\r\n                        this.availableOTAImagesSelect.disabled = false;\r\n\r\n                        break;\r\n                }\r\n            }\r\n\r\n            this.#prevSelectedFirmware = this.availableOTAImagesSelect.value;\r\n        });\r\n\r\n            // listener for update button\r\n        this.updateOTAButton.addEventListener(\"click\", ()=>{\r\n\r\n            switch (this.deviceInfoMgr.chosenDevice) {\r\n                case \"bms\":\r\n                    console.log(\"bms selected\");\r\n\r\n                    this.performUpdateBMS();\r\n\r\n                    break;\r\n                case \"tacho\":\r\n                    console.log(\"tacho selected\");\r\n\r\n                    this.performUpdateTacho();\r\n\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    performUpdateTacho(){\r\n        // block all update actions if update is in progress\r\n        if(this.updateInProgress){\r\n            return;\r\n        }\r\n\r\n        this.updateOTAButton.disabled = true;\r\n\r\n        this.updateInProgress = true;\r\n\r\n        this.tachoDevice.pauseDataLogging().then(()=>{\r\n            this.tachoController.startUpdateProcess(()=>{\r\n\r\n                this.tachoDevice.unPauseDataLogging().then(()=>{\r\n\r\n                    console.log(\"OTA update finished!\");\r\n\r\n                    this.updateInProgress = false;\r\n                });\r\n\r\n            }).catch(()=>{\r\n                this.updateInProgress = false;\r\n            });\r\n        });\r\n    }\r\n\r\n    loadTachoFirmware() {\r\n        const url = \"https://api.github.com/repos/Dev-Voltaic/Voltaic_Tacho/releases/tags/\" + this.availableOTAImagesSelect.value;\r\n        this.loadFirmware(url, this.tachoController);\r\n    }\r\n\r\n    loadBMSFirmware() {\r\n        const url = \"https://api.github.com/repos/Dev-Voltaic/Voltaic_BMS/releases/tags/\" + this.availableOTAImagesSelect.value;\r\n        this.loadFirmware(url, this.bmsController);\r\n    }\r\n\r\n    loadFirmware(url, controller){\r\n        // get the link to the bin file\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_2__[\"default\"].fetchWithTimeout(url).then((response) => {\r\n            if(response.status !== 200){\r\n                this.#firmwareDownloadFailed();\r\n                return;\r\n            }\r\n\r\n            response.text().then((text) => {\r\n                let responseJSON = JSON.parse(text);\r\n\r\n                // go through all assets and get the first one that is a .bin file\r\n                responseJSON.assets.forEach((asset) => {\r\n                    if (asset.name.endsWith(\".bin\")) {\r\n                        // FUCK CORS\r\n                        let proxyUrl = 'https://api.codetabs.com/v1/proxy?quest=' + asset.browser_download_url;\r\n\r\n                        // download image file via cors proxy\r\n                        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_2__[\"default\"].fetchWithTimeout(proxyUrl,\r\n                            {\r\n                                method: \"GET\",\r\n                                headers: {},\r\n                                // follor redirect requests!!!\r\n                                redirect: \"follow\"\r\n                            }).then((fileResponse) => {\r\n\r\n                                if(fileResponse.status !== 200){\r\n                                    this.#firmwareDownloadFailed();\r\n                                    return;\r\n                                }\r\n\r\n                                // read the image file into the mcumgr\r\n                                fileResponse.blob().then(fileResponseBlob => {\r\n                                    controller.updateSelectedFile(fileResponseBlob, ()=>{\r\n\r\n                                        // re-enable user interaction\r\n                                        this.deviceInfoMgr.unblockChooser();\r\n                                        this.updateOTAButton.disabled = false;\r\n                                        this.availableOTAImagesSelect.disabled = false;\r\n\r\n                                        this.otaUpdateInfoText.innerText = 'Firmware ' + this.availableOTAImagesSelect.value + ' downloaded!';\r\n                                    });\r\n                                });\r\n                        }).catch(()=>{\r\n                            this.#firmwareDownloadFailed();\r\n                        });\r\n                    }\r\n                });\r\n            });\r\n        }).catch(()=>{\r\n            this.#firmwareDownloadFailed();\r\n        });\r\n    }\r\n\r\n    #firmwareDownloadFailed(){\r\n        // re-enable user interaction\r\n        this.deviceInfoMgr.unblockChooser();\r\n        this.updateOTAButton.disabled = true;\r\n        this.availableOTAImagesSelect.disabled = false;\r\n\r\n        this.otaUpdateInfoText.innerText = 'Firmware download failed!';\r\n    }\r\n\r\n\r\n    performUpdateBMS(){\r\n        // block all update actions if update is in progress\r\n        if(this.updateInProgress){\r\n            return;\r\n        }\r\n\r\n        this.updateOTAButton.disabled = true;\r\n\r\n        this.updateInProgress = true;\r\n\r\n        this.bmsDevice.pauseDataLogging().then(()=>{\r\n            this.bmsController.startUpdateProcess(()=>{\r\n\r\n                this.bmsDevice.unPauseDataLogging().then(()=>{\r\n\r\n                    console.log(\"OTA update finished!\");\r\n\r\n                    this.updateInProgress = false;\r\n                });\r\n\r\n            }).catch(()=>{\r\n                this.updateInProgress = false;\r\n            });\r\n        });\r\n    }\r\n\r\n\r\n    displayAvailableOTAImages(responseJSON){\r\n\r\n        // when the server responds with a rate limit response, the select can't be filled\r\n        // - user must be warned\r\n        if(typeof responseJSON.forEach !== \"function\"){\r\n            // clear-out select\r\n            this.availableOTAImagesSelect.innerHTML = \"\";\r\n\r\n            let opt = document.createElement(\"option\");\r\n            opt.innerHTML = \"Rate limit exceeded!\"; // just a simple warning\r\n\r\n            // append created warning to select\r\n            this.availableOTAImagesSelect.appendChild(opt);\r\n\r\n            return;\r\n        }\r\n\r\n        // before filling, check if it is already filled correctly\r\n        let alreadyFilledCorrectly = true;\r\n        this.availableOTAImagesSelect.childNodes.forEach((option) => {\r\n            let match = false;\r\n            responseJSON.forEach((release) => {\r\n                if(release.tag_name === option.value){\r\n                    match = true;\r\n                }\r\n            });\r\n\r\n            if(!match){\r\n                alreadyFilledCorrectly = false;\r\n            }\r\n        });\r\n\r\n        if(alreadyFilledCorrectly){\r\n            return;\r\n        }\r\n\r\n        // clear-out select\r\n        this.availableOTAImagesSelect.innerHTML = \"\";\r\n\r\n        // programmatically fill select\r\n        responseJSON.forEach((release) => {\r\n            const firmwareVersion = release.tag_name;\r\n\r\n            let opt = document.createElement(\"option\");\r\n            opt.value = firmwareVersion;\r\n            opt.innerHTML = firmwareVersion; // whatever property it has\r\n\r\n            // then append it to the select element\r\n            this.availableOTAImagesSelect.appendChild(opt);\r\n        });\r\n    }\r\n\r\n    async getAvailableTachoOTAImages(){\r\n        const url = 'https://api.codetabs.com/v1/proxy?quest=https://api.github.com/repos/Dev-Voltaic/Voltaic_Tacho/releases';\r\n\r\n        try{\r\n            // get all available releases from repo\r\n            let response = await _helpers_small_functions__WEBPACK_IMPORTED_MODULE_2__[\"default\"].fetchWithTimeout(url);\r\n            if(response.status !== 200){\r\n                this.availableOTAImagesSelect.innerHtml = \"Failed to get versions!\";\r\n            }else{\r\n                return JSON.parse(await response.text());\r\n            }\r\n        }catch(e){\r\n            if (e instanceof TypeError){\r\n                this.availableOTAImagesSelect.innerHtml = \"No Internet connection!\";\r\n            }\r\n\r\n            return {};\r\n        }\r\n\r\n    }\r\n\r\n    async getAvailableBMSOTAImages(){\r\n        const url = 'https://api.codetabs.com/v1/proxy?quest=https://api.github.com/repos/Dev-Voltaic/Voltaic_BMS/releases';\r\n\r\n        try{\r\n            // get all available releases from repo\r\n            let response = await _helpers_small_functions__WEBPACK_IMPORTED_MODULE_2__[\"default\"].fetchWithTimeout(url);\r\n            if(response.status !== 200){\r\n                this.availableOTAImagesSelect.innerHtml = \"Failed to get versions!\";\r\n            }else{\r\n                return JSON.parse(await response.text());\r\n            }\r\n        }catch(e){\r\n            if (e instanceof TypeError){\r\n                this.availableOTAImagesSelect.innerHtml = \"No Internet connection!\";\r\n            }\r\n\r\n            return {};\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}\n\n//# sourceURL=webpack://dragonbms-interface-web/./js/otaUpdate/otaManager.js?");

/***/ }),

/***/ "./js/rearrange.js":
/*!*************************!*\
  !*** ./js/rearrange.js ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ rearrangeManager)\n/* harmony export */ });\n/* harmony import */ var _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./helpers/small_functions */ \"./js/helpers/small_functions.js\");\n/* harmony import */ var _helpers_zoom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./helpers/zoom */ \"./js/helpers/zoom.js\");\n/* harmony import */ var _gui__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./gui */ \"./js/gui.js\");\n\r\n\r\n\r\n\r\nlet selected_cell = null;\r\n\r\nclass rearrangeManager extends _gui__WEBPACK_IMPORTED_MODULE_2__[\"default\"]{\r\n\r\n    tileMoveMode = false;\r\n\r\n    constructor(bmsObj) {\r\n        super();\r\n\r\n        this.bmsObj = bmsObj;\r\n\r\n        this.addEventListeners();\r\n    }\r\n\r\n    addEventListeners(){\r\n        this.table.addEventListener(\"click\", (e)=> {\r\n            this.tableEventListener(e.target);\r\n        });\r\n\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"capture-mode-table\").addEventListener(\"click\", (e)=> {\r\n            this.tableEventListener(e.target);\r\n        });\r\n\r\n\r\n        this.table.addEventListener('dblclick', (e) => {\r\n\r\n            let objToZoomOn = e.target;\r\n            // loop through all the subcomponents to only zoom on the target td, not for example the button\r\n            while(typeof objToZoomOn != \"undefined\" && !objToZoomOn.classList.contains(\"main-table-td-2row\")){\r\n                objToZoomOn = objToZoomOn.parentNode;\r\n            }\r\n            _helpers_zoom__WEBPACK_IMPORTED_MODULE_1__.zoom.to({element: objToZoomOn, padding: 0, pan: false});\r\n\r\n            // hide settings since otherwise you can weirdly scroll into the settings\r\n            this.hideAllSettings();\r\n        })\r\n\r\n    }\r\n\r\n\r\n    showDevTiles(){\r\n        let devTilesTrs = document.getElementsByClassName(\"dev-mode-tiles\");\r\n\r\n        for (let devTileTr of devTilesTrs) {\r\n            devTileTr.classList.remove(\"display-none\");\r\n        }\r\n    }\r\n\r\n    getDevTile(index){\r\n        let devTilesTrs = document.getElementsByClassName(\"dev-mode-tiles\");\r\n        let devTiles = [];\r\n\r\n        for (let devTileTr of devTilesTrs) {\r\n            for (const devTile of devTileTr.childNodes) {\r\n                if(devTile.nodeName.toLowerCase() === \"td\"){\r\n                    devTiles.push(devTile);\r\n                }\r\n            }\r\n        }\r\n\r\n        if(devTiles.length === 0){\r\n            return;\r\n        }\r\n\r\n        if(index < 0){\r\n            return devTiles[0];\r\n        }\r\n\r\n        if(index >= devTiles.length){\r\n            return devTiles[devTiles.length - 1];\r\n        }\r\n\r\n        return devTiles[index];\r\n    }\r\n\r\n\r\n    toggleTileMoveMode(){\r\n        this.tileMoveMode = !this.tileMoveMode;\r\n\r\n        if(this.tileMoveMode){\r\n            this.tileBarInterfaceDropdown.classList.add(\"breathe-good\");\r\n            this.tileBarEditMode.classList.add(\"breathe-good\");\r\n        }else{\r\n            this.tileBarInterfaceDropdown.classList.remove(\"breathe-good\");\r\n            this.tileBarEditMode.classList.remove(\"breathe-good\");\r\n\r\n            if(selected_cell){\r\n                // same code as below to \"unselect\" the selected cell\r\n                if (this.bmsObj.isConnected()) {\r\n                    selected_cell.classList.remove(\"disabled\");\r\n                } else {\r\n                    selected_cell.classList.add(\"disabled\");\r\n\r\n                    // remove the disabled property from all children of the selected cell\r\n                    selected_cell.childNodes.forEach((child) => {\r\n                        if (child === this.inlineGaugeDiv) {\r\n                            selected_cell.classList.remove(\"disabled\");\r\n                        }\r\n                    });\r\n                }\r\n                selected_cell = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    tableEventListener(target){\r\n        if(this.tileMoveMode) {\r\n\r\n            let targetTd = target;\r\n            // loop through all the subcomponents to only zoom on the target td, not for example the button\r\n            while(typeof targetTd != \"undefined\" && !targetTd.classList.contains(\"main-table-td-2row\")){\r\n                targetTd = targetTd.parentNode;\r\n            }\r\n\r\n            // if there is no selected cell to swap the event target with, event target becomes the selected cell\r\n            if (selected_cell == null) {\r\n\r\n                selected_cell = targetTd;\r\n                // blur out the selected cell\r\n                selected_cell.classList.add(\"disabled\");\r\n\r\n            } else {\r\n\r\n                if (this.bmsObj.isConnected()) {\r\n                    selected_cell.classList.remove(\"disabled\");\r\n                } else {\r\n                    selected_cell.classList.add(\"disabled\");\r\n\r\n                    // remove the disabled property from all children of the selected cell\r\n                    selected_cell.childNodes.forEach((child) => {\r\n                        if (child === this.inlineGaugeDiv) {\r\n                            selected_cell.classList.remove(\"disabled\");\r\n                        }\r\n                    });\r\n                }\r\n\r\n                // actually do the swap\r\n                _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].swap(selected_cell, targetTd);\r\n\r\n                // reset the selected cell\r\n                selected_cell = null;\r\n\r\n            }\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n}\n\n//# sourceURL=webpack://dragonbms-interface-web/./js/rearrange.js?");

/***/ }),

/***/ "./js/serviceworker/sw_init.js":
/*!*************************************!*\
  !*** ./js/serviceworker/sw_init.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ serviceWorkerInit)\n/* harmony export */ });\n/* harmony import */ var _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/small_functions */ \"./js/helpers/small_functions.js\");\n/* harmony import */ var _gui_elements__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../gui_elements */ \"./js/gui_elements.js\");\n\r\n\r\n\r\n\r\nclass serviceWorkerInit extends _gui_elements__WEBPACK_IMPORTED_MODULE_1__[\"default\"]{\r\n    constructor() {\r\n        super();\r\n\r\n        let windowLoaded = false;\r\n        window.onload = function () { windowLoaded = true; }\r\n\r\n\r\n        // get version number saved in serviceworker\r\n        navigator.serviceWorker.ready\r\n            // get access to serviceworker registration\r\n            .then( async (registration) => {\r\n                if (registration.active) {\r\n                    // wait until window is fully loaded for safety xD\r\n                    await _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].until(_ => windowLoaded);\r\n\r\n                    // only works because serviceworker is already active and has claimed the window client\r\n                    registration.active.postMessage('GET_VERSION');\r\n                }\r\n            });\r\n\r\n\r\n        // handle the response for the version number\r\n        navigator.serviceWorker.addEventListener(\"message\", (event) => {\r\n            if(event.data.msg === \"version\"){\r\n\r\n                // event.data.version is the cache name\r\n                // example: \"voltaic-interface-web-v3.93\"\r\n                const shortenedVersion = event.data.version.split(\"-v\")[1];\r\n\r\n                _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].setValueTexts(this.interfaceVersionFields, shortenedVersion);\r\n            }\r\n        });\r\n\r\n\r\n        // ui feedback for detected serviceworker update\r\n        function invokeServiceWorkerUpdateFlow(registration) {\r\n            // maybe do some nice banner, the popup is enough for now though\r\n            if(confirm(\"The deployment has a newer interface version. \" +\r\n                \"Would you like to update now?\" +\r\n                \"Note: to apply the update, after pressing ok, please close and reopen the app.\")){\r\n                if (registration.waiting) {\r\n                    // let waiting Service Worker know it should become active\r\n                    registration.waiting.postMessage('SKIP_WAITING');\r\n                }\r\n            }\r\n        }\r\n\r\n        // check if the browser supports serviceWorker at all\r\n        if ('serviceWorker' in navigator) {\r\n            // wait for the page to load\r\n            window.addEventListener('load', async () => {\r\n                // register the service worker from the file specified\r\n                const registration = await navigator.serviceWorker.register('serviceworker.js');\r\n\r\n                // ensure the case when the updatefound event was missed is also handled\r\n                // by re-invoking the prompt when there's a waiting Service Worker\r\n                if (registration.waiting) {\r\n                    invokeServiceWorkerUpdateFlow(registration);\r\n                }\r\n\r\n                // detect Service Worker update available and wait for it to become installed\r\n                registration.addEventListener('updatefound', () => {\r\n                    if (registration.installing) {\r\n                        // wait until the new Service worker is actually installed (ready to take over)\r\n                        registration.installing.addEventListener('statechange', () => {\r\n                            if (registration.waiting) {\r\n                                // if there's an existing controller (previous Service Worker), show the prompt\r\n                                if (navigator.serviceWorker.controller) {\r\n                                    invokeServiceWorkerUpdateFlow(registration)\r\n                                } else {\r\n                                    // otherwise it's the first install, nothing to do\r\n                                    console.log('Service Worker initialized for the first time');\r\n                                }\r\n                            }\r\n                        })\r\n                    }\r\n                })\r\n\r\n                let refreshing = false;\r\n\r\n                // detect controller change and refresh the page\r\n                navigator.serviceWorker.addEventListener('controllerchange', () => {\r\n                    if (!refreshing) {\r\n                        window.location.reload();\r\n                        refreshing = true;\r\n                    }\r\n                })\r\n            })\r\n        }\r\n    }\r\n}\n\n//# sourceURL=webpack://dragonbms-interface-web/./js/serviceworker/sw_init.js?");

/***/ }),

/***/ "./js/settings/board-calib.js":
/*!************************************!*\
  !*** ./js/settings/board-calib.js ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ bmsCalib)\n/* harmony export */ });\n/* harmony import */ var _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/small_functions */ \"./js/helpers/small_functions.js\");\n/* harmony import */ var _helpers_configcalib_processing__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/configcalib_processing */ \"./js/helpers/configcalib_processing.js\");\n\r\n\r\n\r\n\r\n/* BMS Calib functions */\r\n\r\nclass bmsCalib extends _helpers_configcalib_processing__WEBPACK_IMPORTED_MODULE_1__[\"default\"]{\r\n    inVolt1CorrectionVal;\r\n    inVolt2CorrectionVal;\r\n    inVolt3CorrectionVal;\r\n    outVoltCorrectionVal;\r\n\r\n    shunt1Val;\r\n    shunt2Val;\r\n    shunt3Val;\r\n\r\n    constructor(bmsObj){\r\n        super(bmsObj);\r\n\r\n        // add event listeners here since localConfigCalibGUI may be called when a standard calib device is connected\r\n\r\n        this.initialised = false;\r\n\r\n        this.bmsObj = bmsObj;\r\n    }\r\n\r\n    addEventListeners(){\r\n\r\n         this.addCalibGUIEventListeners();\r\n\r\n        // Calculate Button Event listeners\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"calculateInV1\").addEventListener(\"click\", () => {\r\n            this.inVolt1Correction.value = (this.inVolt1CorrectionVal * (parseFloat(this.inVolt1Actual.innerText) / parseFloat(this.inVolt1Target.value))).toFixed(0);\r\n        });\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"calculateInV2\").addEventListener(\"click\", () => {\r\n            this.inVolt2Correction.value = (this.inVolt2CorrectionVal * (parseFloat(this.inVolt2Actual.innerText) / parseFloat(this.inVolt2Target.value))).toFixed(0);\r\n        });\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"calculateInV3\").addEventListener(\"click\", () => {\r\n            this.inVolt3Correction.value = (this.inVolt3CorrectionVal * (parseFloat(this.inVolt3Actual.innerText) / parseFloat(this.inVolt3Target.value))).toFixed(0);\r\n        });\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"calculateOut\").addEventListener(\"click\", () => {\r\n            this.outVoltCorrection.value = (this.outVoltCorrectionVal * (parseFloat(this.outVoltActual.innerText) / parseFloat(this.outVoltTarget.value))).toFixed(0);\r\n        });\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"calculateShunt1\").addEventListener(\"click\", () => {\r\n            this.shunt1.value = (this.shunt1Val * (parseFloat(this.shunt1Actual.innerText) / parseFloat(this.shunt1Target.value))).toFixed(0);\r\n        });\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"calculateShunt2\").addEventListener(\"click\", () => {\r\n            this.shunt2.value = (this.shunt2Val * (parseFloat(this.shunt2Actual.innerText) / parseFloat(this.shunt2Target.value))).toFixed(0);\r\n        });\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"calculateShunt3\").addEventListener(\"click\", () => {\r\n            this.shunt3.value = (this.shunt3Val * (parseFloat(this.shunt3Actual.innerText) / parseFloat(this.shunt3Target.value))).toFixed(0);\r\n        });\r\n\r\n\r\n\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"board-calib-read\").addEventListener(\"click\", () => {\r\n            this.readBMSCalib((success, change)=>{\r\n                if(success){\r\n                    if(change){\r\n                        // indicate success on change\r\n                        this.indicateSuccess(500);\r\n                    }else{\r\n                        // warning on \"read successful but nothing changed\"\r\n                        this.indicateWarning(500);\r\n                    }\r\n                }else{\r\n                    this.indicateFailure();\r\n                }\r\n            });\r\n        });\r\n\r\n\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"board-calib-write\").addEventListener(\"click\", () => {\r\n            // getting GUI element data\r\n            this.readInGUIValues();\r\n\r\n            this.writeBMSCalib();\r\n        });\r\n\r\n\r\n    }\r\n\r\n\r\n    isStandardCalib(){\r\n        return (this.inVolt1CorrectionVal === 6000\r\n            &&  this.inVolt2CorrectionVal === 6000\r\n            &&  this.inVolt3CorrectionVal === 6000\r\n            &&  this.shunt1Val === 500\r\n            &&  this.shunt2Val === 500\r\n            &&  this.shunt3Val === 500)\r\n    }\r\n\r\n    indicateSuccess(duration) {\r\n        this.boardCalibTable.classList.add(\"success\");\r\n        setTimeout(() => {\r\n            this.boardCalibTable.classList.remove(\"success\");\r\n        }, duration);\r\n    }\r\n\r\n    indicateWarning(duration){\r\n        this.boardCalibTable.classList.add(\"warning\");\r\n        setTimeout(() => {\r\n            this.boardCalibTable.classList.remove(\"warning\");\r\n        }, duration);\r\n    }\r\n\r\n    indicateFailure() {\r\n        this.boardCalibTable.classList.add(\"fault\");\r\n        setTimeout(() => {\r\n            this.boardCalibTable.classList.remove(\"fault\");\r\n        }, 2000);\r\n    }\r\n\r\n    readInCalibObject(c){\r\n        this.inVolt1CorrectionVal = c.inVolt1Correction;\r\n        this.inVolt2CorrectionVal = c.inVolt2Correction;\r\n        this.inVolt3CorrectionVal = c.inVolt3Correction;\r\n        this.outVoltCorrectionVal = c.outVoltCorrection;\r\n        this.shunt1Val = c.shunt1;\r\n        this.shunt2Val = c.shunt2;\r\n        this.shunt3Val = c.shunt3;\r\n    }\r\n\r\n    getCalibObject(){\r\n        let calib = {};\r\n\r\n        calib.inVolt1Correction = this.inVolt1CorrectionVal;\r\n        calib.inVolt2Correction = this.inVolt2CorrectionVal;\r\n        calib.inVolt3Correction = this.inVolt3CorrectionVal;\r\n        calib.outVoltCorrection = this.outVoltCorrectionVal;\r\n        calib.shunt1 = this.shunt1Val;\r\n        calib.shunt2 = this.shunt2Val;\r\n        calib.shunt3 = this.shunt3Val;\r\n\r\n\r\n        return calib;\r\n    }\r\n\r\n    readInJSON(json){\r\n        // read as in past tense\r\n        let readInCalibObject;\r\n        try{\r\n            readInCalibObject =  JSON.parse(json);\r\n        }catch(e){\r\n            console.log(\"[bms calib] unable to read in JSON: \" + e);\r\n        }\r\n\r\n        if(typeof readInCalibObject === \"undefined\"){\r\n            return;\r\n        }\r\n\r\n        this.readInCalibObject(readInCalibObject);\r\n    }\r\n\r\n    getJSON(){\r\n        if(!this.initialised){\r\n            return;\r\n        }\r\n\r\n        return JSON.stringify(this.getCalibObject());\r\n    }\r\n\r\n    readInBuffer(buffer){\r\n        let bufferBefore = this.getBuffer();\r\n\r\n        this.inVolt1CorrectionVal = (buffer.getUint8(1) << 8) | buffer.getUint8(0);\r\n        this.inVolt2CorrectionVal = (buffer.getUint8(3) << 8) | buffer.getUint8(2);\r\n        this.inVolt3CorrectionVal = (buffer.getUint8(5) << 8) | buffer.getUint8(4);\r\n        this.outVoltCorrectionVal = (buffer.getUint8(7) << 8) | buffer.getUint8(6);\r\n\r\n        this.shunt1Val = (buffer.getUint8(9) << 8) | buffer.getUint8(8);\r\n        this.shunt2Val = (buffer.getUint8(11) << 8) | buffer.getUint8(10);\r\n        this.shunt3Val = (buffer.getUint8(13) << 8) | buffer.getUint8(12);\r\n\r\n\r\n        this.initialised = true;\r\n\r\n        // return if change has occurred\r\n        return !_helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].arraysEqual(bufferBefore, this.getBuffer());\r\n    }\r\n\r\n    readInGUIValues(){\r\n        this.inVolt1CorrectionVal = parseInt(this.inVolt1Correction.value);\r\n        this.inVolt2CorrectionVal = parseInt(this.inVolt2Correction.value);\r\n        this.inVolt3CorrectionVal = parseInt(this.inVolt3Correction.value);\r\n\r\n        this.outVoltCorrectionVal = parseInt(this.outVoltCorrection.value);\r\n\r\n        this.shunt1Val = parseInt(this.shunt1.value);\r\n        this.shunt2Val = parseInt(this.shunt2.value);\r\n        this.shunt3Val = parseInt(this.shunt3.value);\r\n    }\r\n\r\n    setGUIValues(){\r\n        this.inVolt1Correction.value = this.inVolt1CorrectionVal;\r\n        this.inVolt2Correction.value = this.inVolt2CorrectionVal;\r\n        this.inVolt3Correction.value = this.inVolt3CorrectionVal;\r\n        this.outVoltCorrection.value = this.outVoltCorrectionVal;\r\n\r\n        this.shunt1.value = this.shunt1Val;\r\n        this.shunt2.value = this.shunt2Val;\r\n        this.shunt3.value = this.shunt3Val;\r\n    }\r\n\r\n    getBuffer(){\r\n        let buffer = [];\r\n\r\n        // voltage dividers\r\n        buffer[0] = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].to16bit(this.inVolt1CorrectionVal)[0];\r\n        buffer[1] = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].to16bit(this.inVolt1CorrectionVal)[1];\r\n\r\n        buffer[2] = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].to16bit(this.inVolt2CorrectionVal)[0];\r\n        buffer[3] = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].to16bit(this.inVolt2CorrectionVal)[1];\r\n\r\n        buffer[4] = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].to16bit(this.inVolt3CorrectionVal)[0];\r\n        buffer[5] = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].to16bit(this.inVolt3CorrectionVal)[1];\r\n\r\n        buffer[6] = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].to16bit(this.outVoltCorrectionVal)[0];\r\n        buffer[7] = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].to16bit(this.outVoltCorrectionVal)[1];\r\n\r\n        // shunts\r\n        buffer[8] = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].to16bit(this.shunt1Val)[0];\r\n        buffer[9] = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].to16bit(this.shunt1Val)[1];\r\n\r\n        buffer[10] = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].to16bit(this.shunt2Val)[0];\r\n        buffer[11] = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].to16bit(this.shunt2Val)[1];\r\n\r\n        buffer[12] = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].to16bit(this.shunt3Val)[0];\r\n        buffer[13] = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].to16bit(this.shunt3Val)[1];\r\n\r\n\r\n        return buffer;\r\n    }\r\n\r\n    updateActualData(data){\r\n        this.inVolt1Actual.innerHTML = data.u1;\r\n        this.inVolt2Actual.innerHTML = data.u2;\r\n        this.inVolt3Actual.innerHTML = data.u3;\r\n        this.shunt1Actual.innerHTML = data.i1;\r\n        this.shunt2Actual.innerHTML = data.i2;\r\n        this.shunt3Actual.innerHTML = data.i3;\r\n        this.outVoltActual.innerHTML = data.uOut;\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    readBMSCalib(cb){\r\n        this.bmsObj.calibCharacteristic.readValue().then(calibValues => {\r\n\r\n            const originallyInitialised = this.initialised;\r\n\r\n            // first read in GUI Values so that there is actually a change when reading in the new Buffer\r\n            if(this.initialised){\r\n                this.readInGUIValues();\r\n            }\r\n            let changeOccurred = this.readInBuffer(calibValues);\r\n\r\n            // cheap way to not make it warn on the first read\r\n            if(!originallyInitialised){\r\n                changeOccurred = true;\r\n            }\r\n\r\n            this.setGUIValues();\r\n\r\n\r\n            // to make calib \"un-fuck-up-able\"\r\n            if(!this.isStandardCalib()){\r\n                this.addNewCalib(this, this.bmsObj);\r\n            }else{\r\n\r\n                // this is a problem when autostart is enabled!\r\n                // not the case in the default config tho, so probably alright\r\n                let localManager = new _helpers_configcalib_processing__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this.bmsObj);\r\n\r\n                let latestCalib = localManager.getLatestCalibForSerialNumber(this.bmsObj.serialNumber);\r\n\r\n                // only load backup and write it automatically if backup actually exists\r\n                if(typeof latestCalib !== \"undefined\"){\r\n                    this.readInCalibObject(latestCalib.calib);\r\n                    this.setGUIValues();\r\n\r\n                    this.writeBMSCalib();\r\n                }\r\n\r\n            }\r\n\r\n            this.fillInCalibBackupGUI();\r\n\r\n            cb(true, changeOccurred);\r\n        })\r\n        /*.catch(()=>{\r\n            cb(false, false);\r\n        });*/\r\n    }\r\n\r\n\r\n    writeBMSCalib(){\r\n        // writing it to characteristic\r\n        this.bmsObj.calibCharacteristic.writeValue(Uint8Array.from(this.getBuffer()).buffer).then(_ => {\r\n            console.log(\"successfully wrote calib\");\r\n\r\n            setTimeout(() => {\r\n                this.readBMSCalib((success)=>{\r\n                    if(success){\r\n                        // ignore change here since every successful write should be a positive feedback\r\n                        // otherwise users will get annoyed\r\n                        this.indicateSuccess(3000);\r\n                    }else{\r\n                        this.indicateFailure();\r\n                    }\r\n                });\r\n            }, 200);\r\n        }).catch(_ => {\r\n            this.indicateFailure();\r\n        });\r\n    }\r\n\r\n\r\n}\r\n\n\n//# sourceURL=webpack://dragonbms-interface-web/./js/settings/board-calib.js?");

/***/ }),

/***/ "./js/settings/board-config.js":
/*!*************************************!*\
  !*** ./js/settings/board-config.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ bmsConfig)\n/* harmony export */ });\n/* harmony import */ var _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/small_functions */ \"./js/helpers/small_functions.js\");\n/* harmony import */ var _gui__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../gui */ \"./js/gui.js\");\n\r\n\r\n\r\n// fucking finally\r\n// let's start with class based stuff\r\n\r\n\r\nclass bmsConfig extends _gui__WEBPACK_IMPORTED_MODULE_1__[\"default\"]{\r\n    battCellCount;\r\n    battNomCapacity;\r\n    protMaxCellVoltage;\r\n    protMinCellVoltage;\r\n    protMaxCurrent;\r\n    protMaxImbalanceCurrent;\r\n\r\n    protMaxLogicTemp;\r\n    protMaxPowerTemp;\r\n\r\n    prechargeCurrentLimit;\r\n    prechargeNomCapacity;\r\n\r\n    dataloggingUpdateInterval;\r\n\r\n    boardAutoStart;\r\n    boardPowerOffTime;\r\n\r\n    boardEnabledChannels;\r\n    boardUpdateCount;\r\n    protMaxReverseCurrent;\r\n\r\n    cellChemistry;\r\n    protSpikeSensitivity;\r\n\r\n\r\n    // these values are not part of the actual config, they are just calculated from the actual data\r\n    packOverVoltage;\r\n    packUnderVoltage;\r\n\r\n\r\n    bmsObj;\r\n\r\n    #bmsConfigObjBefore;\r\n\r\n    constructor(bmsObj, recursive){\r\n        super();\r\n        this.initialised = false;\r\n\r\n        this.bmsObj = bmsObj;\r\n\r\n        if(recursive){\r\n            this.#bmsConfigObjBefore = new bmsConfig(bmsObj, false);\r\n        }\r\n    }\r\n\r\n    addEventListeners(){\r\n        // gui element updates\r\n        [].forEach.call(document.getElementsByClassName(\"cell-field\"), (element) => {\r\n            element.addEventListener(\"input\", ()=>{\r\n                this.#calculatePackVoltages();\r\n            });\r\n        });\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"battery-cells\").addEventListener(\"input\", ()=>{\r\n            this.#calculatePackVoltages();\r\n        });\r\n\r\n        this.boardConfigBatterySelector.addEventListener(\"change\", ()=>{\r\n            this.#blurAppropriateVoltageFields();\r\n            this.#setStandardBatteryValues();\r\n        });\r\n\r\n        this.boardConfigTable.addEventListener(\"mousemove\", () => {\r\n            this.#checkBMSConfigPlausibility();\r\n        });\r\n        this.boardConfigTable.addEventListener(\"change\", () => {\r\n            this.#checkBMSConfigPlausibility();\r\n        });\r\n\r\n\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"board-config-read\").addEventListener(\"click\", () => {\r\n            this.readBMSConfig((success, change)=>{\r\n                if(success){\r\n                    if(change){\r\n                        // indicate success on change\r\n                        this.indicateSuccess(500);\r\n                    }else{\r\n                        // warning on \"read successful but nothing changed\"\r\n                        this.indicateWarning(500);\r\n                    }\r\n                }else{\r\n                    this.indicateFailure();\r\n                }\r\n            });\r\n        });\r\n\r\n\r\n\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"board-config-write\").addEventListener(\"click\", () => {\r\n            this.#bmsConfigObjBefore.readInGUIValues();\r\n            this.writeBoardConfig(0);\r\n        });\r\n\r\n    }\r\n\r\n    #getCellChemistry(){\r\n        const val = this.boardConfigBatterySelector.options[this.boardConfigBatterySelector.selectedIndex].value;\r\n\r\n        if(val === \"li-ion\")    return 1;\r\n        if(val === \"li-po\")     return 2;\r\n        if(val === \"li-fe-po\")  return 3;\r\n        if(val === \"custom-li\") return 4;\r\n        if(val === \"custom\")    return 0;\r\n    }\r\n    #setCellChemistry(value){\r\n        if(value === 0) this.boardConfigBatterySelector.value = \"custom\";\r\n        if(value === 1) this.boardConfigBatterySelector.value = \"li-ion\";\r\n        if(value === 2) this.boardConfigBatterySelector.value = \"li-po\";\r\n        if(value === 3) this.boardConfigBatterySelector.value = \"li-fe-po\";\r\n        if(value === 4) this.boardConfigBatterySelector.value = \"custom-li\";\r\n    }\r\n\r\n    #getCurrentSpikeSensitivity(){\r\n        let val = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"spike-sensitivity-select\").value;\r\n        if(val === \"0\") return 0; // low\r\n        if(val === \"1\") return 1; // normal\r\n        if(val === \"2\") return 2; // high\r\n\r\n        // default is normal\r\n        return 1;\r\n    }\r\n    #setCurrentSpikeSensitivity(value){\r\n        if(value === 0) _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"spike-sensitivity-select\").value = \"0\";\r\n        if(value === 1) _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"spike-sensitivity-select\").value = \"1\";\r\n        if(value === 2) _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"spike-sensitivity-select\").value = \"2\";\r\n    }\r\n\r\n\r\n    #getEnabledChannelsByte() {\r\n        let byte = 0;\r\n        byte += _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getIdChecked(\"enabled-channels-1\") * 1;\r\n        byte += _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getIdChecked(\"enabled-channels-2\") * 2;\r\n        byte += _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getIdChecked(\"enabled-channels-3\") * 4;\r\n        return byte;\r\n    }\r\n\r\n    #setEnabledChannelsByte(byte) {\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"enabled-channels-1\").checked = byte & 0b00000001;\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"enabled-channels-2\").checked = byte & 0b00000010;\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"enabled-channels-3\").checked = byte & 0b00000100;\r\n    }\r\n\r\n\r\n    indicateSuccess(duration){\r\n        this.boardConfigTable.classList.add(\"success\");\r\n        setTimeout(() => {\r\n            this.boardConfigTable.classList.remove(\"success\");\r\n        }, duration);\r\n    }\r\n\r\n    indicateWarning(duration){\r\n        this.boardConfigTable.classList.add(\"warning\");\r\n        setTimeout(() => {\r\n            this.boardConfigTable.classList.remove(\"warning\");\r\n        }, duration);\r\n    }\r\n\r\n    indicateFailure(){\r\n        this.boardConfigTable.classList.add(\"fault\");\r\n        setTimeout(() => {\r\n            this.boardConfigTable.classList.remove(\"fault\");\r\n        }, 2000);\r\n    }\r\n\r\n\r\n    readInGUIValues(){\r\n        this.initialised = true;\r\n\r\n        // guaranteed fields\r\n        this.battCellCount = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getIdValue(\"battery-cells\");\r\n        this.battNomCapacity = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getIdValue(\"battery-capacity\");\r\n\r\n        if(!this.fullyCustomChemistryOption.disabled){\r\n            this.cellChemistry = this.#getCellChemistry();\r\n        }\r\n\r\n        // if chemistry is set to completely custom\r\n        if(this.#getCellChemistry() === 0){\r\n            this.protMaxCellVoltage = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getIdValue(\"pack-overvoltage\") * 100;\r\n            this.protMinCellVoltage = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getIdValue(\"pack-undervoltage\") * 100;\r\n        }else{\r\n            this.protMaxCellVoltage = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getIdValue(\"max-cell-voltage\");\r\n            this.protMinCellVoltage = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getIdValue(\"min-cell-voltage\");\r\n        }\r\n\r\n        this.protMaxImbalanceCurrent = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getIdValue(\"strand-max-imbalance-current\") * 100;\r\n        this.protMaxCurrent = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getIdValue(\"strand-max-current\") * 100;\r\n        this.protMaxReverseCurrent = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getIdValue(\"strand-max-reverse-current\") * 100;\r\n\r\n        this.protMaxPowerTemp = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getIdValue(\"power-max-temp\");\r\n        this.protMaxLogicTemp = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getIdValue(\"logic-max-temp\");\r\n\r\n        this.prechargeCurrentLimit = 0;//getIdValue(\"precharge-current-limit\");\r\n        this.prechargeNomCapacity = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getIdValue(\"load-capacitance\");\r\n\r\n        this.dataloggingUpdateInterval = 1000/_helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getIdValue(\"datalogging-update-frequency\");\r\n\r\n        this.boardAutoStart = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getIdChecked(\"autostart\");\r\n        this.boardPowerOffTime = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getIdValue(\"bms-config-auto-power-off\");\r\n        this.boardEnabledChannels = this.#getEnabledChannelsByte();\r\n        this.boardUpdateCount = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"updatecount\").innerHTML;\r\n\r\n        // fields that might not be there dependent on the firmware version\r\n\r\n        if(!this.boardConfigSpikeSensitivitySelector.disabled){\r\n            this.protSpikeSensitivity = this.#getCurrentSpikeSensitivity();\r\n        }\r\n    }\r\n\r\n\r\n    readInBuffer(buffer){\r\n        let bufferBefore = this.getBuffer();\r\n\r\n        // ATTENTION: PARENTHESES FOR BIT SHIFTING ARE VERY IMPORTANT\r\n\r\n        // Battery stuff\r\n        this.battCellCount = buffer.getUint8(0);\r\n        this.battNomCapacity = ((buffer.getUint8(2) << 8) | buffer.getUint8(1)) * 100;\r\n        //Protection stuff\r\n        this.protMaxCellVoltage = (buffer.getUint8(4) << 8) | buffer.getUint8(3);\r\n        this.protMinCellVoltage = (buffer.getUint8(6) << 8) | buffer.getUint8(5);\r\n        this.protMaxCurrent = (buffer.getUint8(8) << 8) | buffer.getUint8(7);\r\n        this.protMaxImbalanceCurrent = (buffer.getUint8(10) << 8) | buffer.getUint8(9);\r\n        // Temperatures\r\n        this.protMaxLogicTemp = buffer.getUint8(11);\r\n        this.protMaxPowerTemp = buffer.getUint8(12);\r\n        // Precharge stuff\r\n        this.prechargeCurrentLimit = (buffer.getUint8(14) << 8) | buffer.getUint8(13);\r\n        this.prechargeNomCapacity = (buffer.getUint8(16) << 8) | buffer.getUint8(15);\r\n        // Datalogging stuff\r\n        this.dataloggingUpdateInterval = (buffer.getUint8(18) << 8) | buffer.getUint8(17);\r\n        // Board stuff\r\n        this.boardAutoStart = buffer.getUint8(19);\r\n        this.boardPowerOffTime = (buffer.getUint8(21) << 8) | buffer.getUint8(20);\r\n        this.boardEnabledChannels = buffer.getUint8(22);\r\n        this.boardUpdateCount = (buffer.getUint8(24) << 8) | buffer.getUint8(23);\r\n        this.protMaxReverseCurrent = (buffer.getUint8(26) << 8) | buffer.getUint8(25);\r\n\r\n        // necessary for using old firmware\r\n        try {\r\n            this.protSpikeSensitivity = buffer.getUint8(27);\r\n        } catch (err) {\r\n            if (err.constructor === RangeError) {\r\n                console.log(\"[bms config] fw doesn't support proSpikeSensitivity\");\r\n            }\r\n        }\r\n        try {\r\n            this.cellChemistry = buffer.getUint8(28);\r\n        } catch (err) {\r\n            if (err.constructor === RangeError) {\r\n                console.log(\"[bms config] fw doesn't support cellChemistry\");\r\n            }\r\n        }\r\n\r\n\r\n        this.initialised = true;\r\n\r\n        // return if change has occurred\r\n        // remember, that the gui values need to be read in first for a change to even occur\r\n        return !_helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].arraysEqual(bufferBefore, this.getBuffer());\r\n    }\r\n\r\n    #readInConfigObject(c){\r\n        this.battCellCount = c.battCellCount;\r\n        this.battNomCapacity = c.battNomCapacity;\r\n        this.protMaxCellVoltage = c.protMaxCellVoltage;\r\n        this.protMinCellVoltage = c.protMinCellVoltage;\r\n        this.protMaxCurrent = c.protMaxCurrent;\r\n        this.protMaxImbalanceCurrent = c.protMaxImbalanceCurrent;\r\n        this.protMaxLogicTemp = c.protMaxLogicTemp;\r\n        this.protMaxPowerTemp = c.protMaxPowerTemp;\r\n        this.prechargeCurrentLimit = c.prechargeCurrentLimit;\r\n        this.prechargeNomCapacity = c.prechargeNomCapacity;\r\n        this.dataloggingUpdateInterval = c.dataloggingUpdateInterval;\r\n        this.boardAutoStart = c.boardAutoStart;\r\n        this.boardPowerOffTime = c.boardPowerOffTime;\r\n        this.boardEnabledChannels = c.boardEnabledChannels;\r\n        this.boardUpdateCount = c.boardUpdateCount;\r\n        this.protMaxReverseCurrent = c.protMaxReverseCurrent;\r\n\r\n        // necessary for using old firmware\r\n        try {\r\n            this.protSpikeSensitivity = c.protSpikeSensitivity;\r\n        } catch (err) {\r\n            if (err.constructor === RangeError) {\r\n                console.log(\"[bms config] fw doesn't support proSpikeSensitivity\");\r\n            }\r\n        }\r\n        try {\r\n            this.cellChemistry = c.cellChemistry;\r\n        } catch (err) {\r\n            if (err.constructor === RangeError) {\r\n                console.log(\"[bms config] fw doesn't support cellChemistry\");\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    #getConfigObject(){\r\n        let conf = {};\r\n\r\n        conf.battCellCount = this.battCellCount;\r\n        conf.battNomCapacity = this.battNomCapacity;\r\n        conf.protMaxCellVoltage = this.protMaxCellVoltage;\r\n        conf.protMinCellVoltage = this.protMinCellVoltage;\r\n        conf.protMaxCurrent = this.protMaxCurrent;\r\n        conf.protMaxImbalanceCurrent = this.protMaxImbalanceCurrent;\r\n        conf.protMaxLogicTemp = this.protMaxLogicTemp;\r\n        conf.protMaxPowerTemp = this.protMaxPowerTemp;\r\n        conf.prechargeCurrentLimit = this.prechargeCurrentLimit;\r\n        conf.prechargeNomCapacity = this.prechargeNomCapacity;\r\n        conf.dataloggingUpdateInterval = this.dataloggingUpdateInterval;\r\n        conf.boardAutoStart = this.boardAutoStart;\r\n        conf.boardPowerOffTime = this.boardPowerOffTime;\r\n        conf.boardEnabledChannels = this.boardEnabledChannels;\r\n        conf.boardUpdateCount = this.boardUpdateCount;\r\n        conf.protMaxReverseCurrent = this.protMaxReverseCurrent;\r\n\r\n        // necessary for using old firmware\r\n        try {\r\n            conf.protSpikeSensitivity = this.protSpikeSensitivity;\r\n        } catch (err) {\r\n            if (err.constructor === RangeError) {\r\n                console.log(\"[bms config] fw doesn't support proSpikeSensitivity\");\r\n            }\r\n        }\r\n        try {\r\n            conf.cellChemistry = this.cellChemistry;\r\n        } catch (err) {\r\n            if (err.constructor === RangeError) {\r\n                console.log(\"[bms config] fw doesn't support cellChemistry\");\r\n            }\r\n        }\r\n\r\n        return conf;\r\n    }\r\n\r\n    readInJSON(json){\r\n        let readInConfigObject;\r\n        try{\r\n            readInConfigObject =  JSON.parse(json);\r\n        }catch(e){\r\n            console.log(\"[config] unable to read in JSON: \" + e);\r\n        }\r\n\r\n        if(typeof readInConfigObject === \"undefined\"){\r\n            return;\r\n        }\r\n\r\n        this.#readInConfigObject(readInConfigObject);\r\n    }\r\n\r\n    getJSON(){\r\n        if(!this.initialised){\r\n            return;\r\n        }\r\n\r\n        return JSON.stringify(this.#getConfigObject());\r\n    }\r\n\r\n    getBuffer(){\r\n        if(!this.initialised){\r\n            return;\r\n        }\r\n\r\n        let configValues = [];\r\n\r\n        //Battery stuff\r\n        configValues[0] = parseInt(this.battCellCount);\r\n\r\n        configValues[1] = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].to16bit(Math.round(this.battNomCapacity / 100))[0];\r\n        configValues[2] = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].to16bit(this.battNomCapacity / 100)[1];\r\n\r\n        //Protection\r\n        configValues[3] = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].to16bit(this.protMaxCellVoltage)[0];\r\n        configValues[4] = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].to16bit(this.protMaxCellVoltage)[1];\r\n\r\n        configValues[5] = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].to16bit(this.protMinCellVoltage)[0];\r\n        configValues[6] = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].to16bit(this.protMinCellVoltage)[1];\r\n\r\n        configValues[7] = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].to16bit(this.protMaxCurrent)[0];\r\n        configValues[8] = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].to16bit(this.protMaxCurrent)[1];\r\n\r\n        configValues[9] = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].to16bit(this.protMaxImbalanceCurrent)[0];\r\n        configValues[10] = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].to16bit(this.protMaxImbalanceCurrent)[1];\r\n\r\n        configValues[11] = parseInt(this.protMaxLogicTemp);\r\n\r\n        configValues[12] = parseInt(this.protMaxPowerTemp);\r\n\r\n        //Precharge\r\n        configValues[13] = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].to16bit(this.prechargeCurrentLimit)[0];\r\n        configValues[14] = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].to16bit(this.prechargeCurrentLimit)[1];\r\n\r\n        configValues[15] = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].to16bit(this.prechargeNomCapacity)[0];\r\n        configValues[16] = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].to16bit(this.prechargeNomCapacity)[1];\r\n\r\n        //Datalogging\r\n        configValues[17] = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].to16bit(this.dataloggingUpdateInterval)[0];\r\n        configValues[18] = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].to16bit(this.dataloggingUpdateInterval)[1];\r\n\r\n        //Board\r\n        configValues[19] = ((this.boardAutoStart) ? 1 : 0);\r\n\r\n        configValues[20] = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].to16bit(this.boardPowerOffTime)[0];\r\n        configValues[21] = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].to16bit(this.boardPowerOffTime)[1];\r\n\r\n        configValues[22] = parseInt(this.boardEnabledChannels);\r\n\r\n        configValues[23] = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].to16bit(this.boardUpdateCount)[0];\r\n        configValues[24] = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].to16bit(this.boardUpdateCount)[1];\r\n\r\n        configValues[25] = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].to16bit(this.protMaxReverseCurrent)[0];\r\n        configValues[26] = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].to16bit(this.protMaxReverseCurrent)[1];\r\n\r\n        try {\r\n            if(typeof this.protSpikeSensitivity === \"undefined\" || isNaN(this.protSpikeSensitivity)){\r\n                console.log(\"firmware doesn't support protSpikeSensitivity\");\r\n            }else{\r\n                configValues[27] = parseInt(this.protSpikeSensitivity);\r\n            }\r\n        }catch (e) {\r\n            console.log(\"firmware doesn't support protSpikeSensitivity\");\r\n        }\r\n\r\n        try {\r\n            if(typeof this.cellChemistry === \"undefined\" || isNaN(this.cellChemistry)){\r\n                console.log(\"firmware doesn't support cellChemistry\");\r\n            }else{\r\n                configValues[28] = parseInt(this.cellChemistry);\r\n            }\r\n        }catch (e) {\r\n            console.log(\"[bms config] firmware doesn't support cellChemistry\");\r\n        }\r\n\r\n        return configValues;\r\n    }\r\n\r\n    setGUIValues(){\r\n        if(!this.initialised){\r\n            return;\r\n        }\r\n\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"battery-cells\").value = this.battCellCount;\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"battery-capacity\").value = this.battNomCapacity;\r\n\r\n\r\n        if(typeof this.cellChemistry !== 'undefined') {\r\n            this.#setCellChemistry(this.cellChemistry);\r\n            this.#blurAppropriateVoltageFields();\r\n\r\n            // 0 is cell chemistry fully custom\r\n            // this then ignores the amount of cells\r\n            if(this.cellChemistry === 0){\r\n                this.packOverVoltage = this.protMaxCellVoltage / 100;\r\n                this.packUnderVoltage = this.protMinCellVoltage / 100;\r\n\r\n            }else{\r\n\r\n                _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"max-cell-voltage\").value = this.protMaxCellVoltage;\r\n                _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"min-cell-voltage\").value = this.protMinCellVoltage;\r\n\r\n                this.packOverVoltage = this.protMaxCellVoltage * this.battCellCount / 1000;\r\n                this.packUnderVoltage = this.protMinCellVoltage * this.battCellCount / 1000;\r\n            }\r\n        }else{\r\n            this.fullyCustomChemistryOption.disabled = true;\r\n\r\n            _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"max-cell-voltage\").value = this.protMaxCellVoltage;\r\n            _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"min-cell-voltage\").value = this.protMinCellVoltage;\r\n\r\n            this.packOverVoltage = this.protMaxCellVoltage * this.battCellCount / 1000;\r\n            this.packUnderVoltage = this.protMinCellVoltage * this.battCellCount / 1000;\r\n        }\r\n\r\n\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"pack-overvoltage\").value = this.packOverVoltage;\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"pack-undervoltage\").value = this.packUnderVoltage;\r\n\r\n\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"strand-max-current\").value = this.protMaxCurrent / 100;\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"strand-max-reverse-current\").value = this.protMaxReverseCurrent / 100;\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"strand-max-imbalance-current\").value = this.protMaxImbalanceCurrent / 100;\r\n\r\n        if(typeof this.protSpikeSensitivity !== 'undefined') {\r\n            this.boardConfigSpikeSensitivitySelector.disabled = false;\r\n\r\n            this.#setCurrentSpikeSensitivity(this.protSpikeSensitivity);\r\n        }else{\r\n            this.boardConfigSpikeSensitivitySelector.disabled = true;\r\n        }\r\n\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"datalogging-update-frequency\").value = 1000/this.dataloggingUpdateInterval;\r\n\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"logic-max-temp\").value = this.protMaxLogicTemp;\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"power-max-temp\").value = this.protMaxPowerTemp;\r\n\r\n        //getId(\"precharge-current-limit\").value = config.prechargeCurrentLimit;\r\n\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"load-capacitance\").value = this.prechargeNomCapacity;\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"autostart\").checked = this.boardAutoStart;\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"bms-config-auto-power-off\").value = this.boardPowerOffTime;\r\n        this.#setEnabledChannelsByte(this.boardEnabledChannels);\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"updatecount\").innerHTML = this.boardUpdateCount;\r\n    }\r\n\r\n\r\n\r\n    //MAX WERTE\r\n    #checkBMSConfigPlausibility() {\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].setValueBackToBoundaries(\"battery-cells\", 4, 30);\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].setValueBackToBoundaries(\"battery-capacity\", 0, 10000000);\r\n\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].setValueBackToBoundaries(\"max-cell-voltage\", 100, 6000);\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].setValueBackToBoundaries(\"min-cell-voltage\", 100, 6000);\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].setValueBackToBoundaries(\"strand-max-imbalance-current\", 0, 100);\r\n\r\n        const shunt1 = this.bmsObj.bmsCalibObj.shunt1;\r\n        const shunt2 = this.bmsObj.bmsCalibObj.shunt2;\r\n        const shunt3 = this.bmsObj.bmsCalibObj.shunt3;\r\n\r\n        //todo: make this dependant on the bms topology!!\r\n\r\n        // take the largest configuration shunt value as the voltage at the current measurement can't be above 100mV\r\n        // for any of the shunts (at max current)\r\n        const maxShuntValue = Math.max(shunt1, shunt2, shunt3); // in uR\r\n        // 100000V / 1uR = 0.1V / 1R = A\r\n        const maxConfigurationCurrent = (100000 / maxShuntValue) - 1;\r\n\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].setValueBackToBoundaries(\"strand-max-current\", 1, maxConfigurationCurrent);\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].setValueBackToBoundaries(\"strand-max-reverse-current\", 1, maxConfigurationCurrent);\r\n\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].setValueBackToBoundaries(\"power-max-temp\", 0, 90);\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].setValueBackToBoundaries(\"logic-max-temp\", 0, 90);\r\n\r\n        //setValueBacktoBoundaries(\"precharge-current-limit\", 1, 50);\r\n        //setValueBacktoBoundaries(\"load-capacitance\", 1, 100000);\r\n\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].setValueBackToBoundaries(\"datalogging-update-frequency\", 1, 120);\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].setValueBackToBoundaries(\"bms-config-auto-power-off\", 0, 65534);\r\n    }\r\n\r\n\r\n    #blurAppropriateVoltageFields(){\r\n        const val = this.boardConfigBatterySelector.options[this.boardConfigBatterySelector.selectedIndex].value;\r\n\r\n        if(val === \"li-ion\" || val === \"li-po\" || val === \"li-fe-po\"){\r\n            let toBeBlurred = document.getElementsByClassName(\"pack-field\");\r\n            for (let i = 0; i < toBeBlurred.length; i++) {\r\n                toBeBlurred[i].style.opacity = \"0.5\";\r\n                toBeBlurred[i].style.pointerEvents = \"none\";\r\n            }\r\n            toBeBlurred = document.getElementsByClassName(\"battery-field\");\r\n            for (let i = 0; i < toBeBlurred.length; i++) {\r\n                toBeBlurred[i].style.opacity = \"1\";\r\n                toBeBlurred[i].style.pointerEvents = \"\";\r\n            }\r\n            toBeBlurred = document.getElementsByClassName(\"cell-field\");\r\n            for (let i = 0; i < toBeBlurred.length; i++) {\r\n                toBeBlurred[i].style.opacity = \"0.5\";\r\n                toBeBlurred[i].style.pointerEvents = \"none\";\r\n            }\r\n            return;\r\n        }else{\r\n            let toBeBlurred = document.getElementsByClassName(\"pack-field\");\r\n            for (let i = 0; i < toBeBlurred.length; i++) {\r\n                toBeBlurred[i].style.opacity = \"1\";\r\n                toBeBlurred[i].style.pointerEvents = \"\";\r\n            }\r\n            toBeBlurred = document.getElementsByClassName(\"battery-field\");\r\n            for (let i = 0; i < toBeBlurred.length; i++) {\r\n                toBeBlurred[i].style.opacity = \"0.5\";\r\n                toBeBlurred[i].style.pointerEvents = \"none\";\r\n            }\r\n            toBeBlurred = document.getElementsByClassName(\"cell-field\");\r\n            for (let i = 0; i < toBeBlurred.length; i++) {\r\n                toBeBlurred[i].style.opacity = \"1\";\r\n                toBeBlurred[i].style.pointerEvents = \"\";\r\n            }\r\n        }\r\n\r\n        if(val === \"custom-li\"){\r\n            let toBeBlurred = document.getElementsByClassName(\"battery-field\");\r\n            for (let i = 0; i < toBeBlurred.length; i++) {\r\n                toBeBlurred[i].style.opacity = \"1\";\r\n                toBeBlurred[i].style.pointerEvents = \"\";\r\n            }\r\n            toBeBlurred = document.getElementsByClassName(\"pack-field\");\r\n            for (let i = 0; i < toBeBlurred.length; i++) {\r\n                toBeBlurred[i].style.opacity = \"0.5\";\r\n                toBeBlurred[i].style.pointerEvents = \"none\";\r\n            }\r\n            return;\r\n        }else{\r\n            let toBeBlurred = document.getElementsByClassName(\"battery-field\");\r\n            for (let i = 0; i < toBeBlurred.length; i++) {\r\n                toBeBlurred[i].style.opacity = \"1\";\r\n                toBeBlurred[i].style.pointerEvents = \"\";\r\n            }\r\n            toBeBlurred = document.getElementsByClassName(\"pack-field\");\r\n            for (let i = 0; i < toBeBlurred.length; i++) {\r\n                toBeBlurred[i].style.opacity = \"1\";\r\n                toBeBlurred[i].style.pointerEvents = \"\";\r\n            }\r\n        }\r\n\r\n\r\n        if(val === \"custom\"){\r\n            let toBeBlurred = document.getElementsByClassName(\"battery-field\");\r\n            for (let i = 0; i < toBeBlurred.length; i++) {\r\n                toBeBlurred[i].style.opacity = \"0.5\";\r\n                toBeBlurred[i].style.pointerEvents = \"none\";\r\n            }\r\n        }else{\r\n            let toBeBlurred = document.getElementsByClassName(\"battery-field\");\r\n            for (let i = 0; i < toBeBlurred.length; i++) {\r\n                toBeBlurred[i].style.opacity = \"1\";\r\n                toBeBlurred[i].style.pointerEvents = \"\";\r\n            }\r\n        }\r\n    }\r\n\r\n    //STANDART BATTERY CELL VALUES\r\n    #setStandardBatteryValues(){\r\n        let val = this.boardConfigBatterySelector.options[this.boardConfigBatterySelector.selectedIndex].value;\r\n\r\n        if(val === \"li-ion\"){\r\n            _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"max-cell-voltage\").value = \"4250\";\r\n            _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"min-cell-voltage\").value = \"2600\";\r\n\r\n            this.#calculatePackVoltages();\r\n            return;\r\n        }\r\n        if(val === \"li-po\"){\r\n            _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"max-cell-voltage\").value = \"4250\";\r\n            _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"min-cell-voltage\").value = \"2500\";\r\n\r\n            this.#calculatePackVoltages();\r\n            return;\r\n        }\r\n        if(val === \"li-fe-po\"){\r\n            _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"max-cell-voltage\").value = \"3500\";\r\n            _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"min-cell-voltage\").value = \"2400\";\r\n\r\n            this.#calculatePackVoltages();\r\n        }\r\n    }\r\n\r\n    #calculatePackVoltages(){\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"pack-overvoltage\").value = parseFloat(_helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"battery-cells\").value) *\r\n            parseFloat(_helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"max-cell-voltage\").value) / 1000;\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"pack-undervoltage\").value = parseFloat(_helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"battery-cells\").value) *\r\n            parseFloat(_helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getId(\"min-cell-voltage\").value) / 1000;\r\n    }\r\n\r\n\r\n    readBMSConfig(cb){\r\n        this.bmsObj.bmsConfigCharacteristic.readValue().then(configValues => {\r\n\r\n            // first read in GUI Values so that there is actually a change when reading in the new Buffer\r\n            if(this.initialised){\r\n                this.readInGUIValues();\r\n            }\r\n            let changeOccurred = this.readInBuffer(configValues);\r\n\r\n            // cheap way to not make it warn on the first read\r\n            if(!this.initialised){\r\n                changeOccurred = true;\r\n            }\r\n\r\n            this.setGUIValues();\r\n\r\n            this.updateConfigRelatedGauges(this);\r\n            cb(true, changeOccurred);\r\n        }).catch((e)=>{\r\n            console.log(e);\r\n            cb(false, false)\r\n        });\r\n    }\r\n\r\n\r\n    writeBoardConfig(counter){\r\n\r\n        // check if stateMachineState is in either \"ready\" or \"fault\", otherwise write gets aborted.\r\n        if(typeof this.bmsObj === \"undefined\"){\r\n            if(!(this.bmsObj.bmsDataProcessor.stateMachineState === 2\r\n                || this.bmsObj.bmsDataProcessor.stateMachineState.stateMachineState === 4)){\r\n                this.indicateFailure();\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (counter === 10){\r\n            //alert(\"Failed to clear alerts: \" + error);\r\n            this.indicateFailure();\r\n            return;\r\n        }\r\n\r\n        this.bmsObj.pauseDataLogging().then();\r\n\r\n        // writing config characteristic\r\n        this.readInGUIValues();\r\n\r\n        this.bmsObj.bmsConfigCharacteristic.writeValue(Uint8Array.from(this.getBuffer()).buffer).then(_ => {\r\n\r\n            if(_helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getIdValue(\"board-config-device-name\") !== this.bmsObj.name && typeof this.bmsObj.name !== \"undefined\"){\r\n                let encoder = new TextEncoder();\r\n                this.bmsObj.deviceNameCharacteristic.writeValue(encoder.encode(_helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getIdValue(\"board-config-device-name\")).buffer).then(_ => {\r\n\r\n                    this.indicateSuccess(3000);\r\n\r\n                    console.log(\"successfully wrote config & updated name\");\r\n\r\n                    setTimeout(() => {\r\n                        this.readBMSConfig(async (success, change)=>{\r\n                            if(success){\r\n                                await this.bmsObj.getDeviceName();\r\n\r\n                                this.updateBMSNameFields(this.bmsObj.name);\r\n\r\n                                // there's always change in the update count\r\n                                // warning if update count doesn't change - would indicate firmware malfunction\r\n                                if (change) {\r\n                                    this.indicateSuccess(3000);\r\n                                } else {\r\n                                    // warning on \"read successful but nothing changed\"\r\n                                    this.indicateWarning(2000);\r\n                                }\r\n\r\n                                // as the last step - re-enable data logging\r\n                                this.bmsObj.dataLoggingCharacteristic.startNotifications().then();\r\n\r\n\r\n                                // recalculate SOC if cell number change is written to settings\r\n                                if (this.#bmsConfigObjBefore.battCellCount !== this.battCellCount) {\r\n                                    /*\r\n                                    remainingEnergy1 = 0;\r\n                                    remainingEnergy2 = 0;\r\n                                    remainingEnergy3 = 0;\r\n                                     */\r\n                                }\r\n                            }else{\r\n                                this.indicateFailure();\r\n                            }\r\n\r\n\r\n\r\n                            // as the last step - re-enable data logging\r\n                            this.bmsObj.unPauseDataLogging().then();\r\n\r\n                            // recalculate SOC if cell number change is written to settings\r\n                            if(this.#bmsConfigObjBefore.battCellCount !== this.battCellCount){\r\n                                /*\r\n                                remainingEnergy1 = 0;\r\n                                remainingEnergy2 = 0;\r\n                                remainingEnergy3 = 0;\r\n                                 */\r\n                            }\r\n                        });\r\n\r\n                    }, 200);\r\n                }).catch(e => {\r\n                    console.log(e);\r\n\r\n                    this.indicateFailure();\r\n                });\r\n            }else{\r\n                console.log(\"successfully wrote config\");\r\n                this.readBMSConfig((success, change)=>{\r\n                    if(success){\r\n                        if(change){\r\n                            // indicate success on change\r\n                            this.indicateSuccess(3000);\r\n                        }else{\r\n                            // warning on \"read successful but nothing changed\"\r\n                            this.indicateWarning(2000);\r\n                        }\r\n                    }else{\r\n                        this.indicateFailure();\r\n                    }\r\n\r\n                    // as the last step - re-enable data logging\r\n                    this.bmsObj.unPauseDataLogging().then();\r\n\r\n                    // recalculate SOC if cell number change is written to settings\r\n                    if(this.#bmsConfigObjBefore.battCellCount !== this.battCellCount){\r\n                        /*\r\n                        remainingEnergy1 = 0;\r\n                        remainingEnergy2 = 0;\r\n                        remainingEnergy3 = 0;\r\n                         */\r\n                    }\r\n                });\r\n\r\n            }\r\n        }).catch(_ => {\r\n            setTimeout( ()=>{\r\n                // recursion for up to 10 tries\r\n                this.writeBoardConfig(counter + 1);\r\n            }, 100);\r\n        });\r\n    }\r\n\r\n\r\n\r\n\r\n}\n\n//# sourceURL=webpack://dragonbms-interface-web/./js/settings/board-config.js?");

/***/ }),

/***/ "./js/settings/deviceInfoManager.js":
/*!******************************************!*\
  !*** ./js/settings/deviceInfoManager.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ deviceInfoManager),\n/* harmony export */   devicesInfos: () => (/* binding */ devicesInfos)\n/* harmony export */ });\n/* harmony import */ var _gui_elements__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../gui_elements */ \"./js/gui_elements.js\");\n/* harmony import */ var _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/small_functions */ \"./js/helpers/small_functions.js\");\n\r\n\r\n\r\nclass deviceInfoManager extends _gui_elements__WEBPACK_IMPORTED_MODULE_0__[\"default\"]{\r\n\r\n    chooser;\r\n\r\n    devicesInfo;\r\n\r\n    chosenDevice;\r\n\r\n    #blocked = false;\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.devicesInfo = new devicesInfos();\r\n\r\n        // if there is more than one instance everything is fucked anyway\r\n        this.chooser = document.getElementsByClassName(\"device-info-device-chooser\")[0];\r\n\r\n        this.addEventListeners();\r\n    }\r\n\r\n\r\n\r\n    addEventListeners(){\r\n\r\n        if(this.#blocked){\r\n            return;\r\n        }\r\n\r\n        let options = this.#getDeviceOptions();\r\n\r\n        this.chooser.addEventListener(\"click\", (event)=>{\r\n\r\n            options.forEach((option) => {\r\n\r\n                // there are \"text\" nodes in between the actual h2 nodes, which for our purpose need to be ignored\r\n                if(typeof option.classList !== \"undefined\"){\r\n                    option.classList.add(\"device-info-device-not-chosen\");\r\n                }else{\r\n                    return;\r\n                }\r\n\r\n                if(option.isSameNode(event.target)){\r\n\r\n                    option.classList.remove(\"device-info-device-not-chosen\");\r\n\r\n                    this.chosenDevice = event.target.innerHTML.toLowerCase();\r\n                }\r\n            });\r\n\r\n            this.#updateGUIFields(this.devicesInfo.getDeviceInfo(this.chosenDevice));\r\n\r\n        });\r\n\r\n    }\r\n\r\n    #updateGUIFields(deviceInfo){\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].setValueTexts(this.deviceModelFields, deviceInfo.modelNumber);\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].setValueTexts(this.deviceHardwareRevisionFields, deviceInfo.hardwareRevision);\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].setValueTexts(this.deviceFirmwareRevisionFields, deviceInfo.firmwareRevision);\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].setValueTexts(this.deviceSerialNumberFields, deviceInfo.serialNumber);\r\n\r\n        if(deviceInfo.serialNumber === \"not supported\"){\r\n            _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].classListValueTextsAdd(this.deviceSerialNumberFields, \"fault\");\r\n        }\r\n\r\n        if(deviceInfo.modelNumber === \"not supported\"){\r\n            _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].classListValueTextsAdd(this.deviceModelFields, \"fault\");\r\n        }\r\n    }\r\n\r\n    #getDeviceOptions(){\r\n        let deviceOptions = [];\r\n\r\n        this.chooser.childNodes.forEach((childNode) => {\r\n            deviceOptions.push(childNode);\r\n        });\r\n\r\n        return deviceOptions;\r\n    }\r\n\r\n\r\n    blockChooser(){\r\n        this.#blocked = true;\r\n    }\r\n    unblockChooser(){\r\n        this.#blocked = false;\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass devicesInfos{\r\n\r\n    deviceInfos = {};\r\n    constructor(){\r\n    }\r\n\r\n    getDeviceInfo(deviceType){\r\n        let info = {\r\n            modelNumber: \"not connected\",\r\n            hardwareRevision: \"not connected\",\r\n            firmwareRevision: \"not connected\",\r\n            serialNumber: \"not connected\"\r\n        };\r\n\r\n        if(Object.keys(this.deviceInfos).includes(deviceType.toLowerCase())){\r\n            info = this.deviceInfos[deviceType.toLowerCase()];\r\n        }\r\n\r\n        return info;\r\n    }\r\n\r\n    updateDeviceInfo(deviceType, deviceInfo){\r\n        this.deviceInfos[deviceType.toLowerCase()] = deviceInfo;\r\n    }\r\n}\n\n//# sourceURL=webpack://dragonbms-interface-web/./js/settings/deviceInfoManager.js?");

/***/ }),

/***/ "./js/settings/interface-config.js":
/*!*****************************************!*\
  !*** ./js/settings/interface-config.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ interfaceConfig)\n/* harmony export */ });\n/* harmony import */ var _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/small_functions */ \"./js/helpers/small_functions.js\");\n/* harmony import */ var _helpers_wakelock__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/wakelock */ \"./js/helpers/wakelock.js\");\n/* harmony import */ var _helpers_color_mode__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helpers/color_mode */ \"./js/helpers/color_mode.js\");\n/* harmony import */ var _gui__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../gui */ \"./js/gui.js\");\n/* harmony import */ var _melloware_coloris__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @melloware/coloris */ \"./node_modules/@melloware/coloris/dist/esm/coloris.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass interfaceConfig extends _gui__WEBPACK_IMPORTED_MODULE_3__[\"default\"] {\r\n\r\n    colorModeObj = null;\r\n\r\n    filterBMSConnection;\r\n    connectionStepTimeout;\r\n\r\n    constructor() {\r\n        super();\r\n        this.wakeLock1 = new _helpers_wakelock__WEBPACK_IMPORTED_MODULE_1__[\"default\"]();\r\n\r\n        // get config values from localStorage\r\n        this.updateConfig();\r\n\r\n        //enable wakelock if set\r\n        if (this.wakeLock) {\r\n            this.wakeLock1.enable();\r\n        }\r\n\r\n        // hack to make color pickers render before filling them with their color\r\n        setTimeout(async () => {\r\n            await _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].until(()=>{return _helpers_color_mode__WEBPACK_IMPORTED_MODULE_2__[\"default\"] !== null})\r\n            // write values from localStorage into the input fields\r\n            this.setInterfaceConfigValues();\r\n        }, 100);\r\n\r\n\r\n        this.addEventListeners();\r\n\r\n\r\n        this.colorisInit();\r\n    }\r\n\r\n    initColorModeObj(colorModeObj){\r\n        this.colorModeObj = colorModeObj;\r\n    }\r\n\r\n    updateConfig() {\r\n        // default is true for mobile devices, false for desktop;\r\n        this.filterBMSConnection = JSON.parse(localStorage.getItem(\"filterBMSConnection\") || _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].mobileDevice());\r\n        // default is true for mobile devices, false for desktop;\r\n        this.wakeLock = JSON.parse(localStorage.getItem(\"wakeLockEnabled\") || _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].mobileDevice());\r\n\r\n        this.colorMode = localStorage.getItem(\"lastColorMode\") || \"dark\";\r\n\r\n        this.customColorForeground = localStorage.getItem(\"customColorForeground\") || \"rgb(255,255,255)\";\r\n        this.customColorBackground = localStorage.getItem(\"customColorBackground\") || \"rgb(0,0,0)\";\r\n        this.customColorAccent = localStorage.getItem(\"customColorAccent\") || \"rgb(0,193,220)\";\r\n\r\n        this.customColorCaptureModeBackground = localStorage.getItem(\"customColorCaptureModeBackground\") || \"rgba(255,255,255, 0.6)\";\r\n\r\n        // JSON.parse for string to boolean conversion\r\n        this.autoReadBMSConfigCalib = JSON.parse(localStorage.getItem(\"autoReadBMSConfigCalib\") || true);\r\n\r\n        this.devTileActive = JSON.parse(localStorage.getItem(\"devTileActive\") || true);\r\n\r\n        // Times for data logging averaging intervals for BMS\r\n        this.averagingIntervalU = parseFloat(localStorage.getItem('averagingIntervalU') || \"0.25\");\r\n        this.averagingIntervalI = parseFloat(localStorage.getItem(\"averagingIntervalI\") || \"0.3\");\r\n        this.averagingIntervalT = parseFloat(localStorage.getItem(\"averagingIntervalT\") || \"0.6\");\r\n        this.averagingIntervalCalib = parseFloat(localStorage.getItem(\"averagingIntervalCalib\") || \"0.5\");\r\n\r\n        // Times for data logging averaging intervals for tacho\r\n        this.tachoDataAveragingIntervalV = parseFloat(localStorage.getItem(\"tachoAveragingIntervalV\") || \"0.7\");\r\n        this.tachoDataAveragingIntervalT = parseFloat(localStorage.getItem(\"tachoAveragingIntervalT\") || \"5\");\r\n\r\n        this.maxAveragingInterval = Math.max(\r\n            this.averagingIntervalU,\r\n            this.averagingIntervalI,\r\n            this.averagingIntervalT,\r\n            this.averagingIntervalCalib\r\n        );\r\n\r\n        this.maxTachoAveragingInterval = Math.max(\r\n            this.tachoDataAveragingIntervalV,\r\n            this.tachoDataAveragingIntervalT\r\n        );\r\n\r\n        // time for the max value gauges\r\n        this.maxValueHoldOnTime = parseFloat(localStorage.getItem(\"maxValuesHoldOnTime\") || \"20\");\r\n\r\n        // time per step of the connection process before the watchdog cancels the process\r\n        this.connectionStepTimeout = parseFloat(localStorage.getItem(\"connectionStepTimeout\") || \"10.0\")\r\n\r\n        this.showBMSExtTemp = JSON.parse(localStorage.getItem(\"showBMSExtTemp\") || true);\r\n        this.showBMSIntTemp = JSON.parse(localStorage.getItem(\"showBMSIntTemp\") || true);\r\n        this.showMotorTemp = JSON.parse(localStorage.getItem(\"showMotorTemp\") || true);\r\n        this.showTachoExtTemp = JSON.parse(localStorage.getItem(\"showTachoExtTemp\") || true);\r\n    }\r\n\r\n\r\n    setInterfaceConfigValues(){\r\n        this.colorModeObj.adjust(this.colorMode);\r\n\r\n        this.interfaceBMSAutoReadConfigCalib.checked = this.autoReadBMSConfigCalib;\r\n\r\n        this.interfaceWakeLock.checked = this.wakeLock;\r\n\r\n        this.interfaceAveragingTimeU.value = this.averagingIntervalU;\r\n        this.interfaceAveragingTimeI.value = this.averagingIntervalI;\r\n        this.interfaceAveragingTimeT.value = this.averagingIntervalT;\r\n        this.interfaceAveragingTimeCalib.value = this.averagingIntervalCalib;\r\n\r\n        this.interfaceAveragingTimeTachoV.value = this.tachoDataAveragingIntervalV;\r\n        this.interfaceAveragingTimeTachoT.value = this.tachoDataAveragingIntervalT;\r\n\r\n        this.interfaceMaxValuesHoldOnTime.value = this.maxValueHoldOnTime;\r\n\r\n        this.interfaceConnectionStepTimeout.value = this.connectionStepTimeout;\r\n\r\n        this.interfaceBMSFilterConnection.checked = this.filterBMSConnection;\r\n\r\n        this.interfaceShowBMSExtTemp.checked = this.showBMSExtTemp;\r\n        this.interfaceShowBMSIntTemp.checked = this.showBMSIntTemp;\r\n        this.interfaceShowMotorTemp.checked = this.showMotorTemp;\r\n        this.interfaceShowTachoExtTemp.checked = this.showTachoExtTemp;\r\n\r\n        this.setTempGaugeVisibility(this);\r\n    }\r\n\r\n\r\n    addEventListeners() {\r\n        this.interfaceBMSFilterConnection.addEventListener(\"change\", () => {\r\n            localStorage.setItem('filterBMSConnection', this.interfaceBMSFilterConnection.checked);\r\n\r\n            this.updateConfig();\r\n        });\r\n\r\n        this.interfaceWakeLock.addEventListener(\"change\", () => {\r\n            localStorage.setItem('wakeLockEnabled', this.interfaceWakeLock.checked);\r\n\r\n            this.updateConfig();\r\n\r\n            if (interfaceConfig.wakeLock) {\r\n                this.wakeLock1.enable();\r\n            } else {\r\n                this.wakeLock1.disable();\r\n            }\r\n\r\n        });\r\n\r\n        this.interfaceBMSAutoReadConfigCalib.addEventListener(\"change\", () => {\r\n            localStorage.setItem('autoReadBMSConfigCalib', this.interfaceBMSAutoReadConfigCalib.checked);\r\n\r\n            this.updateConfig();\r\n        });\r\n\r\n        this.interfaceAveragingTimeU.addEventListener(\"change\", () => {\r\n            let val = this.interfaceAveragingTimeU.value;\r\n            if(!_helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isFloat(val) || parseFloat(val) === 0){\r\n                return;\r\n            }\r\n            localStorage.setItem('averagingIntervalU', String(parseFloat(this.interfaceAveragingTimeU.value)));\r\n            this.updateConfig();\r\n        });\r\n        this.interfaceAveragingTimeI.addEventListener(\"change\", () => {\r\n            let val = this.interfaceAveragingTimeI.value;\r\n            if(!_helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isFloat(val) || parseFloat(val) === 0){\r\n                return;\r\n            }\r\n            localStorage.setItem('averagingIntervalI', String(parseFloat(this.interfaceAveragingTimeI.value)));\r\n            this.updateConfig();\r\n        });\r\n        this.interfaceAveragingTimeT.addEventListener(\"change\", () => {\r\n            let val = this.interfaceAveragingTimeT.value;\r\n            if(!_helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isFloat(val) || parseFloat(val) === 0){\r\n                return;\r\n            }\r\n            localStorage.setItem('averagingIntervalT', String(parseFloat(this.interfaceAveragingTimeT.value)));\r\n            this.updateConfig();\r\n        });\r\n        this.interfaceAveragingTimeCalib.addEventListener(\"change\", () => {\r\n            let val = this.interfaceAveragingTimeCalib.value;\r\n            if(!_helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isFloat(val) || parseFloat(val) === 0){\r\n                return;\r\n            }\r\n            localStorage.setItem('averagingIntervalCalib', String(parseFloat(this.interfaceAveragingTimeCalib.value)));\r\n            this.updateConfig();\r\n        });\r\n\r\n        this.interfaceAveragingTimeTachoV.addEventListener(\"change\", () => {\r\n            let val = this.interfaceAveragingTimeTachoV.value;\r\n            if(!_helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isFloat(val) || parseFloat(val) === 0){\r\n                return;\r\n            }\r\n            localStorage.setItem('tachoAveragingIntervalV', String(parseFloat(this.interfaceAveragingTimeTachoV.value)));\r\n            this.updateConfig();\r\n        });\r\n\r\n        this.interfaceAveragingTimeTachoT.addEventListener(\"change\", () => {\r\n            let val = this.interfaceAveragingTimeTachoT.value;\r\n            if(!_helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isFloat(val) || parseFloat(val) === 0){\r\n                return;\r\n            }\r\n            localStorage.setItem('tachoAveragingIntervalT', String(parseFloat(this.interfaceAveragingTimeTachoT.value)));\r\n            this.updateConfig();\r\n        });\r\n\r\n        this.interfaceMaxValuesHoldOnTime.addEventListener(\"change\", () => {\r\n            let val = this.interfaceMaxValuesHoldOnTime.value;\r\n            if(!_helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isFloat(val) || parseFloat(val) === 0){\r\n                return;\r\n            }\r\n            localStorage.setItem('maxValuesHoldOnTime', String(parseFloat(this.interfaceMaxValuesHoldOnTime.value)));\r\n            this.updateConfig();\r\n        });\r\n\r\n        this.interfaceConnectionStepTimeout.addEventListener(\"change\", () => {\r\n            let val = this.interfaceConnectionStepTimeout.value;\r\n            if(!_helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isFloat(val) || parseFloat(val) === 0){\r\n                return;\r\n            }\r\n            localStorage.setItem('connectionStepTimeout', String(parseFloat(this.interfaceConnectionStepTimeout.value)));\r\n            this.updateConfig();\r\n        });\r\n\r\n\r\n        this.interfaceShowBMSExtTemp.addEventListener(\"change\", () => {\r\n            localStorage.setItem('showBMSExtTemp', this.interfaceShowBMSExtTemp.checked);\r\n            this.updateConfig();\r\n            this.setTempGaugeVisibility(this);\r\n        });\r\n        this.interfaceShowBMSIntTemp.addEventListener(\"change\", () => {\r\n            localStorage.setItem('showBMSIntTemp', this.interfaceShowBMSIntTemp.checked);\r\n            this.updateConfig();\r\n            this.setTempGaugeVisibility(this);\r\n        });\r\n        this.interfaceShowMotorTemp.addEventListener(\"change\", () => {\r\n            localStorage.setItem('showMotorTemp', this.interfaceShowMotorTemp.checked);\r\n            this.updateConfig();\r\n            this.setTempGaugeVisibility(this);\r\n        });\r\n        this.interfaceShowTachoExtTemp.addEventListener(\"change\", () => {\r\n            localStorage.setItem('showTachoExtTemp', this.interfaceShowTachoExtTemp.checked);\r\n            this.updateConfig();\r\n            this.setTempGaugeVisibility(this);\r\n        });\r\n    }\r\n\r\n\r\n    // Color Picker configuration (don't touch xD)\r\n    colorisInit() {\r\n\r\n        _melloware_coloris__WEBPACK_IMPORTED_MODULE_4__[\"default\"].init();\r\n\r\n        (0,_melloware_coloris__WEBPACK_IMPORTED_MODULE_4__[\"default\"])({\r\n            theme: 'polaroid',\r\n        });\r\n\r\n\r\n        /** Default configuration **/\r\n\r\n        (0,_melloware_coloris__WEBPACK_IMPORTED_MODULE_4__[\"default\"])({\r\n            el: '.coloris',\r\n            swatches: [\r\n                '#264653',\r\n                '#2a9d8f',\r\n                '#e9c46a',\r\n                '#f4a261',\r\n                '#e76f51',\r\n                '#d62828',\r\n                '#023e8a',\r\n                '#0077b6',\r\n                '#0096c7',\r\n                '#00b4d8',\r\n                '#48cae4'\r\n            ],\r\n            focusInput: false,\r\n            selectInput: false,\r\n        });\r\n\r\n        _melloware_coloris__WEBPACK_IMPORTED_MODULE_4__[\"default\"].setInstance('.foreground-color', {\r\n            theme: 'polaroid'\r\n        });\r\n        _melloware_coloris__WEBPACK_IMPORTED_MODULE_4__[\"default\"].setInstance('.background-color', {\r\n            theme: 'polaroid'\r\n        });\r\n        _melloware_coloris__WEBPACK_IMPORTED_MODULE_4__[\"default\"].setInstance('.accent-color', {\r\n            theme: 'polaroid'\r\n        });\r\n\r\n        _melloware_coloris__WEBPACK_IMPORTED_MODULE_4__[\"default\"].setInstance('.capture-mode-background-color', {\r\n            theme: 'polaroid'\r\n        });\r\n\r\n    }\r\n}\n\n//# sourceURL=webpack://dragonbms-interface-web/./js/settings/interface-config.js?");

/***/ }),

/***/ "./js/settings/tacho-config.js":
/*!*************************************!*\
  !*** ./js/settings/tacho-config.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ tachoConfig)\n/* harmony export */ });\n/* harmony import */ var _gui_elements__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../gui_elements */ \"./js/gui_elements.js\");\n/* harmony import */ var _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/small_functions */ \"./js/helpers/small_functions.js\");\n\r\n\r\n/* Inline Board Config functions */\r\n\r\n\r\n\r\n\r\nclass tachoConfig extends _gui_elements__WEBPACK_IMPORTED_MODULE_0__[\"default\"]{\r\n    tempSensorType;\r\n    divider_r;\r\n    ntc_r;\r\n    ntc_b;\r\n    impulses;\r\n    reversed;\r\n    backwards_negative;\r\n    motor_poles;\r\n\r\n    initialised = false;\r\n\r\n\r\n    initialPulseValue = 0;\r\n    currentPulseValue = 0;\r\n\r\n    constructor(tachoObj) {\r\n        super();\r\n        this.initialised = false;\r\n\r\n        this.tachoObj = tachoObj;\r\n\r\n        this.#blurAppropriateTempFields();\r\n        this.#setStandardNTCValues();\r\n    }\r\n\r\n\r\n    addEventListeners(){\r\n\r\n        this.tempSensorSelector.addEventListener(\"change\", ()=>{\r\n            this.#blurAppropriateTempFields();\r\n            this.#setStandardNTCValues();\r\n        });\r\n\r\n\r\n        // for the \"calibration\"\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getId(\"resetPulses\").addEventListener(\"click\", (_) => {\r\n            this.initialPulseValue = this.currentPulseValue;\r\n        });\r\n\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getId(\"calculatedistperpulse\").addEventListener(\"click\", () => {\r\n            this.#calculateDistancePerPulse();\r\n        });\r\n\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getId(\"inline-config-write\").addEventListener(\"click\", () => {\r\n            // writing config characteristic\r\n            this.readInGUIElements();\r\n            this.tachoObj.inlineConfigCharacteristic.writeValue(Uint8Array.from(this.getBuffer()).buffer).then(() => {\r\n                this.indicateSuccess(3000);\r\n                console.log(\"successfully wrote config\");\r\n\r\n                setTimeout(() => {\r\n                    this.readInlineConfig(()=>{});\r\n                }, 200);\r\n            }).catch(_ => {\r\n                this.indicateFailure();\r\n            });\r\n        });\r\n\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getId(\"inline-config-read\").addEventListener(\"click\", () => {\r\n            this.readInlineConfig(()=>{\r\n                this.indicateSuccess(500);\r\n            });\r\n        });\r\n\r\n\r\n\r\n\r\n\r\n// Odometer reset buttons\r\n        this.tachoResetTripOdoButton.addEventListener(\"click\", () => {\r\n            this.tachoObj.inlineOdometerCharacteristic.writeValueWithoutResponse(Uint8Array.from([0x01]).buffer).catch(_ =>{\r\n                console.log(\"failed to reset trip odometer\");\r\n            });\r\n        });\r\n\r\n        this.tachoResetVehicleOdoButton.addEventListener(\"click\", () => {\r\n            this.tachoObj.inlineOdometerCharacteristic.writeValueWithoutResponse(Uint8Array.from([0x02]).buffer).catch(_ =>{\r\n                console.log(\"failed to reset vehicle odometer\");\r\n            });\r\n        });\r\n    }\r\n\r\n    readInlineConfig(cb){\r\n        this.tachoObj.inlineConfigCharacteristic.readValue().then((buffer) => {\r\n            this.readInBuffer(buffer)\r\n            this.setGUIElements();\r\n            cb();\r\n        }).catch(_ => {\r\n            this.indicateFailure();\r\n        });\r\n    }\r\n\r\n\r\n    indicateSuccess(duration) {\r\n        this.inlineConfigContainer.classList.add(\"success\");\r\n        setTimeout(() => {\r\n            this.inlineConfigContainer.classList.remove(\"success\");\r\n        }, duration);\r\n    }\r\n\r\n    indicateFailure() {\r\n        this.inlineConfigContainer.classList.add(\"fault\");\r\n        setTimeout(() => {\r\n            this.inlineConfigContainer.classList.remove(\"fault\");\r\n        }, 2000);\r\n    }\r\n\r\n\r\n\r\n    #blurAppropriateTempFields(){\r\n        const val = this.tempSensorSelector.options[this.tempSensorSelector.selectedIndex].value;\r\n\r\n        if(val !== \"ntc_custom\" && val !== \"ptc_custom\"){\r\n            let customTempInputFields = document.getElementsByClassName(\"customTempInput\");\r\n            for (let i = 0; i < customTempInputFields.length; i++) {\r\n                customTempInputFields[i].style.opacity = \"0.5\";\r\n                customTempInputFields[i].style.pointerEvents = \"none\";\r\n            }\r\n        }else{\r\n            let customTempInputFields = document.getElementsByClassName(\"customTempInput\");\r\n            for (let i = 0; i < customTempInputFields.length; i++) {\r\n                customTempInputFields[i].style.opacity = \"1\";\r\n                customTempInputFields[i].style.pointerEvents = \"\";\r\n            }\r\n        }\r\n    }\r\n    #setStandardNTCValues(){\r\n        const val = this.tempSensorSelector.options[this.tempSensorSelector.selectedIndex].value;\r\n\r\n        if(val === \"ntc10k\"){\r\n            _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getId(\"r-value\").value = \"29400\";\r\n            _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getId(\"b-value\").value = \"3460\";\r\n            return;\r\n        }\r\n        if(val === \"ntc100k\"){\r\n            _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getId(\"r-value\").value = \"350000\";\r\n            _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getId(\"b-value\").value = \"4334\";\r\n            return;\r\n        }\r\n\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getId(\"r-value\").value = \"\";\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getId(\"b-value\").value = \"\";\r\n    }\r\n\r\n\r\n\r\n    // todo: IMPLEMENT\r\n    /*\r\n    #checkInlineConfigPlausibility() {\r\n        sf.setValueBackToBoundaries(\"battery-cells\", 4, 30);\r\n        sf.setValueBackToBoundaries(\"battery-capacity\", 0, 10000000);\r\n\r\n        sf.setValueBackToBoundaries(\"max-cell-voltage\", 2000, 5000);\r\n        sf.setValueBackToBoundaries(\"min-cell-voltage\", 2000, 5000);\r\n        sf.setValueBackToBoundaries(\"strand-max-imbalance-current\", 0, 100);\r\n        sf.setValueBackToBoundaries(\"strand-max-current\", 1, 300);\r\n\r\n        sf.setValueBackToBoundaries(\"power-max-temp\", 30, 90);\r\n        sf.setValueBackToBoundaries(\"logic-max-temp\", 30, 90);\r\n\r\n        sf.setValueBackToBoundaries(\"precharge-current-limit\", 1, 50);\r\n        sf.setValueBackToBoundaries(\"load-capacitance\", 1, 100000);\r\n\r\n        sf.setValueBackToBoundaries(\"datalogging-update-interval\", 20, 255);\r\n        sf.setValueBackToBoundaries(\"auto-poweroff\", 30, 90);\r\n\r\n    }\r\n    */\r\n\r\n\r\n    #getTempSensorType(){\r\n        let val = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getId(\"ntc-type-select\").value;\r\n        if(val === \"kty83\"){\r\n            return 1;\r\n        }\r\n        if(val === \"kty84\"){\r\n            return 2;\r\n        }\r\n\r\n        // fuck ptcs, all standard ntcs get their values set into appropriate fields\r\n        // -> they can be treated as manually input custom ntcs\r\n        return 0;\r\n    }\r\n    #setTempSensorType(value){\r\n        if(value === 1){\r\n            _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getId(\"ntc-type-select\").value = \"kty83\";\r\n        }\r\n        if(value === 2){\r\n            _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getId(\"ntc-type-select\").value = \"kty84\";\r\n        }\r\n        if(value === 0){\r\n            _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getId(\"ntc-type-select\").value = \"ntc_custom\";\r\n        }\r\n\r\n        this.#blurAppropriateTempFields();\r\n        this.#setStandardNTCValues();\r\n    }\r\n\r\n\r\n\r\n    readInBuffer(buffer){\r\n        this.tempSensorType = buffer.getUint8(0);\r\n        this.divider_r = (buffer.getUint8(2) << 8) | buffer.getUint8(1);\r\n        this.ntc_r = (buffer.getUint8(4) << 8) | buffer.getUint8(3);\r\n        this.ntc_b = (buffer.getUint8(6) << 8) | buffer.getUint8(5);\r\n        this.impulses = (buffer.getUint8(8) << 8) | buffer.getUint8(7);\r\n        this.reversed = buffer.getUint8(9);\r\n        this.backwards_negative = buffer.getUint8(10);\r\n        this.motor_poles = buffer.getUint8(11);\r\n\r\n        // necessary for using old firmware\r\n        // -> only makes option available to edit and write if it's available to read\r\n        try {\r\n            this.dataLoggingUpdateInterval = (buffer.getUint8(15) << 8) | buffer.getUint8(14);\r\n        } catch (err) {\r\n            if (err.constructor === RangeError) {\r\n                console.log(\"[inline config] fw doesn't support dl_update_interval\");\r\n            }\r\n        }\r\n\r\n        this.initialised = true;\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    readInGUIElements(){\r\n        this.tempSensorType = this.#getTempSensorType();\r\n        this.ntc_r = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getIdValue(\"r-value\") / 10;\r\n        this.divider_r = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getIdValue(\"r-value-divider\") / 10;\r\n        this.ntc_b = parseInt(_helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getIdValue(\"b-value\"));\r\n        this.reversed = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getIdChecked(\"reversed\");\r\n        this.backwards_negative = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getIdChecked(\"back-neg\");\r\n        this.impulses = parseInt(_helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getIdValue(\"distperpulse\"));\r\n        this.motor_poles = parseInt(_helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getIdValue(\"motor-poles\"));\r\n\r\n\r\n        // fields that might not be there dependent on the firmware version\r\n\r\n        if(!this.inlineConfigDataLoggingFrequency.disabled){\r\n            this.dataLoggingUpdateInterval =  1000 / this.inlineConfigDataLoggingFrequency.value;\r\n        }\r\n    }\r\n\r\n\r\n    getBuffer(){\r\n        // don't even bother if not initialised\r\n        if(!this.initialised){\r\n            return;\r\n        }\r\n\r\n        let buffer = [];\r\n\r\n        buffer[0] = parseInt(this.tempSensorType);\r\n\r\n        buffer[1] = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].to16bit(this.divider_r)[0];\r\n        buffer[2] = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].to16bit(this.divider_r)[1];\r\n\r\n        buffer[3] = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].to16bit(this.ntc_r)[0];\r\n        buffer[4] = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].to16bit(this.ntc_r)[1];\r\n\r\n        buffer[5] = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].to16bit(this.ntc_b)[0];\r\n        buffer[6] = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].to16bit(this.ntc_b)[1];\r\n\r\n        buffer[7] = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].to16bit(this.impulses)[0];\r\n        buffer[8] = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].to16bit(this.impulses)[1];\r\n\r\n        buffer[9] = this.reversed;\r\n\r\n        buffer[10] = this.backwards_negative;\r\n        buffer[11] = this.motor_poles;\r\n\r\n\r\n        //Data logging update interval (needed for older firmware)\r\n        if(typeof this.dataLoggingUpdateInterval !== \"undefined\") {\r\n            buffer[15] = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].to16bit(this.dataLoggingUpdateInterval)[0];\r\n            buffer[14] = _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].to16bit(this.dataLoggingUpdateInterval)[1];\r\n\r\n\r\n            // update count - only needed when putting values behind it since it doesn't need to get written\r\n            buffer[12] = 0;\r\n            buffer[13] = 0;\r\n        }else {\r\n            console.log(\"[tacho config] fw doesn't support dl_update_interval\");\r\n        }\r\n\r\n        return buffer;\r\n    }\r\n\r\n\r\n    setGUIElements(){\r\n        this.#setTempSensorType(this.tempSensorType);\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getId(\"r-value\").value = this.ntc_r * 10;\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getId(\"r-value-divider\").value = this.divider_r * 10;\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getId(\"b-value\").value = this.ntc_b;\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getId(\"reversed\").checked = this.reversed;\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getId(\"back-neg\").checked = this.backwards_negative;\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getId(\"distperpulse\").value = this.impulses;\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getId(\"motor-poles\").value = this.motor_poles;\r\n\r\n        if(typeof this.dataLoggingUpdateInterval !== 'undefined') {\r\n            this.inlineConfigDataLoggingFrequency.disabled = false;\r\n\r\n            _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getId(\"inline-dl-frequency\").value = this.dataLoggingUpdateInterval;\r\n        }else{\r\n            this.inlineConfigDataLoggingFrequency.disabled = true;\r\n        }\r\n    }\r\n\r\n\r\n    updatePulseCount(data){\r\n        this.currentPulseValue = data;\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getId(\"pulses\").innerHTML = String(parseFloat(data) - this.initialPulseValue);\r\n    }\r\n\r\n    #calculateDistancePerPulse(){\r\n        let pulses = parseFloat(_helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getId(\"pulses\").innerHTML);\r\n        let dist = parseFloat(_helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getId(\"distance\").value);\r\n        if(pulses === 0){\r\n            _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getId(\"pulses\").style.color = \"red\";\r\n            setTimeout(()=>{\r\n                _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getId(\"pulses\").style.color = \"\";\r\n            }, 500);\r\n            return;\r\n        }\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getId(\"distperpulse\").value = Math.abs(Math.round(10 * dist / pulses));\r\n    }\r\n\r\n}\n\n//# sourceURL=webpack://dragonbms-interface-web/./js/settings/tacho-config.js?");

/***/ }),

/***/ "./js/settings/virtualkeyboard.js":
/*!****************************************!*\
  !*** ./js/settings/virtualkeyboard.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ virtualKeyboard)\n/* harmony export */ });\n/* harmony import */ var _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/small_functions */ \"./js/helpers/small_functions.js\");\n/* harmony import */ var _gui_elements__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../gui_elements */ \"./js/gui_elements.js\");\n/* harmony import */ var simple_keyboard__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! simple-keyboard */ \"./node_modules/simple-keyboard/build/index.js\");\n/* harmony import */ var simple_keyboard__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(simple_keyboard__WEBPACK_IMPORTED_MODULE_2__);\n\r\n\r\n\r\n\r\n\r\n\r\nclass virtualKeyboard extends _gui_elements__WEBPACK_IMPORTED_MODULE_1__[\"default\"]{\r\n\r\n    focussedInput;\r\n\r\n    hideKeyboard = false;\r\n\r\n    interfaceSettingsContainerLastSeen = 0;\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        if(_helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].mobileDevice()) {\r\n            this.keyboard = new (simple_keyboard__WEBPACK_IMPORTED_MODULE_2___default())({\r\n                onChange: input => this.onChange(input),\r\n                layout: {\r\n                    default: [\"1 2 3\", \"4 5 6\", \"7 8 9\", \". 0 {bksp}\"]\r\n                },\r\n                theme: \"hg-theme-default hg-layout-numeric numeric-theme\",\r\n                display: {\r\n                    '{bksp}': 'del'\r\n                }\r\n            });\r\n\r\n\r\n\r\n\r\n            // i don't really know about performance\r\n            window.addEventListener('scroll', () => {\r\n                // show keyboard if settings are scrolled into view\r\n                if (this.keyboardShouldBeVisible() && this.keyboardContainer.classList.contains(\"hidden\")) {\r\n                    if(!this.hideKeyboard){\r\n                        this.keyboardContainer.classList.remove(\"hidden\");\r\n\r\n                        this.keyboardContainer.addEventListener(\"animationend\", ()=>{\r\n                            this.keyboardContainer.classList.remove(\"blend-in\");\r\n                        }, {once : true});\r\n\r\n                        this.keyboardContainer.classList.add(\"blend-in\");\r\n                    }\r\n                }\r\n\r\n                if(!this.keyboardShouldBeVisible() && !this.keyboardContainer.classList.contains(\"hidden\")){\r\n\r\n                    this.keyboardContainer.addEventListener(\"animationend\", ()=>{\r\n                        this.keyboardContainer.classList.add(\"hidden\");\r\n                        this.keyboardContainer.classList.remove(\"blend-out\");\r\n                    }, {once : true});\r\n\r\n                    this.keyboardContainer.classList.add(\"blend-out\");\r\n                }\r\n\r\n\r\n\r\n                // disable interface settings if they haven't been in view for over a second\r\n                if(_helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isScrolledIntoView(this.interfaceSettingsContainer)){\r\n                    this.interfaceSettingsContainerLastSeen = Date.now();\r\n                }\r\n                if((Date.now() - this.interfaceSettingsContainerLastSeen) > 1000\r\n                    && !this.interfaceSettingsContainer.classList.contains(\"hidden\")){\r\n                    this.interfaceSettingsContainer.classList.add(\"hidden\");\r\n                }\r\n            });\r\n\r\n\r\n            // set the cursor to the right on all input fields (a bit whack but there is no nicer solution)\r\n            document.querySelectorAll(\"input[type='number']\").forEach(item => {\r\n                item.addEventListener('focus', event => {\r\n                    // disable the stock virtual keyboard\r\n                    event.target.blur();\r\n\r\n\r\n                    // clear all other focussed animations\r\n                    document.querySelectorAll(\"input\").forEach(item => {\r\n                        item.classList.remove(\"accent\");\r\n                    });\r\n                    event.target.classList.add(\"accent\");\r\n\r\n                    const value = event.target.value;\r\n                    event.target.value = '';\r\n                    setTimeout(() => {\r\n                        event.target.value = value;\r\n                    }, 1);\r\n\r\n                    // set keyboard input target and keyboard input\r\n                    this.focussedInput = event.target;\r\n                    this.keyboard.setInput(value);\r\n                });\r\n            });\r\n\r\n\r\n            // event listener for all coloris inputs to instantly blur the selected input field\r\n            document.querySelectorAll(\".coloris\").forEach((element)=>{\r\n                element.addEventListener(\"click\", (event)=>{\r\n                    event.target.blur();\r\n                });\r\n            });\r\n\r\n\r\n\r\n            // focus logic for bms name input\r\n            document.querySelectorAll(\"input[type='text']\").forEach(item => {\r\n                item.addEventListener('focus', event => {\r\n                    document.querySelectorAll(\"input\").forEach(item => {\r\n                        item.classList.remove(\"accent\");\r\n                    });\r\n                    event.target.classList.add(\"accent\");\r\n\r\n                    // hide virtual keyboard to use os keyboard (emojis and stuff)\r\n                    this.keyboardContainer.classList.add(\"hidden\");\r\n                    this.hideKeyboard = true;\r\n\r\n                    const value = event.target.value;\r\n                    event.target.value = '';\r\n                    setTimeout(() => {\r\n                        event.target.value = value;\r\n                    }, 1);\r\n                });\r\n\r\n                item.addEventListener('focusout', event => {\r\n                    event.target.classList.remove(\"accent\");\r\n\r\n                    this.hideKeyboard = false;\r\n                    this.keyboardContainer.classList.remove(\"hidden\");\r\n                });\r\n            });\r\n\r\n        }else{\r\n            // i don't really know about performance\r\n            window.addEventListener('scroll', () => {\r\n                // disable interface settings if they haven't been in view for over a second\r\n                if(_helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isScrolledIntoView(this.interfaceSettingsContainer)){\r\n                    this.interfaceSettingsContainerLastSeen = Date.now();\r\n                }\r\n                if((Date.now() - this.interfaceSettingsContainerLastSeen) > 1000\r\n                    && !this.interfaceSettingsContainer.classList.contains(\"hidden\")){\r\n                    this.interfaceSettingsContainer.classList.add(\"hidden\");\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange(input) {\r\n        // check if value is inside view and scroll to element if not\r\n\r\n        // only use last \".\" in input\r\n        if (input.split(\".\").length - 1 > 1) {\r\n            input = input.split('.').slice(0, -1).join('') + \".\" + input.split('.').slice(-1);\r\n        }\r\n\r\n        let keyboardDecimal = false;\r\n        if (input.charAt(input.length - 1) !== '.'){\r\n            if (keyboardDecimal) {\r\n                this.focussedInput.value = input.substring(0, input.length - 1);\r\n            } else {\r\n                this.focussedInput.value = input;\r\n            }\r\n        }\r\n\r\n\r\n        // create new change event and dispatch it\r\n        // otherwise the change is not recognised by the input and therefore the interface config does not work\r\n        this.focussedInput.dispatchEvent(new Event('change'));\r\n    }\r\n\r\n    keyboardShouldBeVisible(){\r\n\r\n        let settingsNumberInputs = [\r\n            ...document.querySelectorAll(\"#board-configuration-div [type='number']\"),\r\n            ...document.querySelectorAll(\"#inline-configuration-div [type='number']\"),\r\n            ...document.querySelectorAll(\"#board-calibration-div [type='number']\"),\r\n            ...document.querySelectorAll(\"#interface-settings-container [type='number']\")\r\n        ];\r\n\r\n        let settingsScrolledIntoView = false;\r\n        settingsNumberInputs.forEach((element) => {\r\n            if(_helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isScrolledIntoViewWithKeyboard(element)){\r\n                settingsScrolledIntoView = true;\r\n            }\r\n        });\r\n\r\n        // it's complicated\r\n        return (settingsScrolledIntoView\r\n            || _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isScrolledIntoViewWithKeyboard(this.boardConfigContainer)\r\n            || _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isScrolledIntoViewWithKeyboard(this.boardCalibContainer)\r\n            || _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isScrolledIntoViewWithKeyboard(this.inlineConfigContainer)\r\n            || _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isScrolledIntoViewWithKeyboard(this.interfaceSettingsContainer));\r\n    }\r\n\r\n}\r\n\n\n//# sourceURL=webpack://dragonbms-interface-web/./js/settings/virtualkeyboard.js?");

/***/ }),

/***/ "./js/tilebar.js":
/*!***********************!*\
  !*** ./js/tilebar.js ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ tilebar)\n/* harmony export */ });\n/* harmony import */ var _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./helpers/small_functions */ \"./js/helpers/small_functions.js\");\n/* harmony import */ var _helpers_zoom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./helpers/zoom */ \"./js/helpers/zoom.js\");\n/* harmony import */ var _gui__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./gui */ \"./js/gui.js\");\n\r\n\r\n\r\n\r\n\r\nclass tilebar extends _gui__WEBPACK_IMPORTED_MODULE_2__[\"default\"]{\r\n    constructor(bmsObj, tachoObj, captureModeManager, dataLoggingManager, colorModeObj, rearrangeManager, otaManager) {\r\n        super();\r\n\r\n        this.bmsObj = bmsObj;\r\n        this.tachoObj = tachoObj;\r\n        this.captureModeMgr = captureModeManager;\r\n        this.dataLoggingMgr = dataLoggingManager;\r\n        this.colorModeObj = colorModeObj;\r\n        this.rearrangeManager = rearrangeManager;\r\n        this.otaManager = otaManager;\r\n\r\n\r\n        // Chrome detection and Warning the user as BLE probably isn't available\r\n\r\n        if(!_helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isChrome()){\r\n            this.table.classList.add(\"hidden\");\r\n            this.nothingConnectedOverlay.classList.add(\"hidden\");\r\n            this.tilebarDOM.classList.add(\"disabled\");\r\n            alert(\"This site is tailored around Progressive Wep App services that are only supported in full by Chrome.\\nPlease open this site in Chrome only as we can't ensure functionality otherwise ;)\");\r\n        }\r\n    }\r\n\r\n    addEventListeners(){\r\n        // BLUETOOTH\r\n        document.getElementById(\"tileBarConnectBMS\").addEventListener(\"click\", ()=>{\r\n            this.bmsObj.connect();\r\n        });\r\n\r\n        document.getElementById(\"tileBarConnectTacho\").addEventListener(\"click\", ()=>{\r\n            this.tachoObj.connect();\r\n        });\r\n\r\n        document.getElementById(\"tileBarDisconnect\").addEventListener(\"click\", ()=>{\r\n            this.resetAutoconnectBMSSilentInstant();\r\n            this.resetAutoconnectTachoSilentInstant();\r\n\r\n\r\n            this.bmsObj.disconnect(true).then(()=>{\r\n                this.tachoObj.disconnect();\r\n            });\r\n        });\r\n\r\n\r\n\r\n        // BOARD\r\n\r\n        document.getElementById(\"tileBarDeviceInfo\").addEventListener(\"click\", ()=>{\r\n            this.captureModeMgr.closeCaptureMode();\r\n            this.hideAllSettings();\r\n\r\n            if(this.boardInfoContainer.classList.contains(\"hidden\")){\r\n                if(this.bmsObj.isConnected() || this.tachoObj.isConnected()){\r\n                    this.boardInfoContainer.classList.remove(\"hidden\");\r\n\r\n                    // initiate another update for the available OTA images (because franz wished so)\r\n                    this.otaManager.getAvailableOTAImages();\r\n\r\n                    // zoom out if not already\r\n                    // and only move to settings afterward (otherwise the magnification screws up the destination)\r\n                    if(_helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].zoomedIn()){\r\n                        _helpers_zoom__WEBPACK_IMPORTED_MODULE_1__.zoom.out({\r\n                            callback: ()=>{\r\n                                _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].scrollToElement(this.boardInfoContainer);\r\n                            }\r\n                        });\r\n                    }else{\r\n                        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].scrollToElement(this.boardInfoContainer);\r\n                    }\r\n                }\r\n            }else{\r\n                _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].scrollToElement(this.table);\r\n            }\r\n        });\r\n\r\n\r\n        document.getElementById(\"tileBarBoardConfig\").addEventListener(\"click\", () => {\r\n\r\n            this.captureModeMgr.closeCaptureMode();\r\n\r\n            this.hideAllSettings();\r\n\r\n\r\n            if(this.boardConfigContainer.classList.contains(\"hidden\")){\r\n                if(this.bmsObj.isConnected()){\r\n                    // show settings container\r\n                    this.boardConfigContainer.classList.remove(\"hidden\");\r\n\r\n                    // zoom out if not already\r\n                    // and only move to settings afterward (otherwise the magnification screws up the destination)\r\n                    if(_helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].zoomedIn()){\r\n                        _helpers_zoom__WEBPACK_IMPORTED_MODULE_1__.zoom.out({\r\n                            callback: ()=>{\r\n                                _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].scrollToElement(this.boardConfigContainer);\r\n                            }\r\n                        });\r\n                    }else{\r\n                        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].scrollToElement(this.boardConfigContainer);\r\n                    }\r\n                }\r\n            }else{\r\n                _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].scrollToElement(this.table);\r\n            }\r\n\r\n            // normally there would be an else add hidden to the class list\r\n            // here, there is not, because there is a separate \"hide settings\" option\r\n        });\r\n        document.getElementById(\"tileBarBoardCalib\").addEventListener(\"click\", () => {\r\n\r\n            this.captureModeMgr.closeCaptureMode();\r\n\r\n            this.hideAllSettings();\r\n\r\n            if(this.boardCalibContainer.classList.contains(\"hidden\")){\r\n                if(this.bmsObj.isConnected()){\r\n\r\n                    // zoom out if not already\r\n                    // and only move to settings afterward (otherwise the magnification screws up the destination)\r\n                    if(_helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].zoomedIn()){\r\n                        _helpers_zoom__WEBPACK_IMPORTED_MODULE_1__.zoom.out({\r\n                            callback: ()=>{\r\n                                this.boardCalibContainer.classList.remove(\"hidden\");\r\n\r\n                                _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].scrollToElement(this.boardCalibContainer);\r\n                            }\r\n                        });\r\n                    }else{\r\n                        this.boardCalibContainer.classList.remove(\"hidden\");\r\n                        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].scrollToElement(this.boardCalibContainer);\r\n                    }\r\n                }\r\n            }else{\r\n                _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].scrollToElement(this.table);\r\n            }\r\n        });\r\n        document.getElementById(\"tileBarTachoConfig\").addEventListener(\"click\", () => {\r\n\r\n            this.captureModeMgr.closeCaptureMode();\r\n\r\n            this.hideAllSettings();\r\n\r\n            if(this.inlineConfigContainer.classList.contains(\"hidden\")){\r\n                if(this.tachoObj.isConnected()){\r\n                    // show settings container\r\n                    this.inlineConfigContainer.classList.remove(\"hidden\");\r\n\r\n                    // zoom out if not already\r\n                    // and only move to settings afterward (otherwise the magnification screws up the destination)\r\n                    if(_helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].zoomedIn()){\r\n                        _helpers_zoom__WEBPACK_IMPORTED_MODULE_1__.zoom.out({\r\n                            callback: ()=>{\r\n                                _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].scrollToElement(this.inlineConfigContainer);\r\n                            }\r\n                        });\r\n                    }else{\r\n                        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].scrollToElement(this.inlineConfigContainer);\r\n                    }\r\n                }\r\n            }else{\r\n                _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].scrollToElement(this.table);\r\n            }\r\n        });\r\n\r\n        // LOGGING\r\n\r\n        document.getElementById(\"tileBarSelectDataLoggingFile\").addEventListener(\"click\", () => {\r\n            // disables button if either no devices are connected or data logging is already running\r\n            if ((this.bmsObj.isConnected() && this.tachoObj.isConnected())\r\n                || this.dataLoggingMgr.dataLoggingEnabled) {\r\n                return;\r\n            }\r\n            this.dataLoggingMgr.newFile().then();\r\n        });\r\n\r\n\r\n        document.getElementById(\"tileBarStartDataLogging\").addEventListener(\"click\", () => {\r\n            // disables button if no devices are connected\r\n            if (!this.bmsObj.isConnected() && !this.tachoObj.isConnected()) {\r\n                return;\r\n            }\r\n\r\n            console.log(this.dataLoggingMgr.loggingFileObj)\r\n\r\n            // if there is no logging data file object, get one\r\n            if(typeof this.dataLoggingMgr.loggingFileObj === \"undefined\" || this.dataLoggingMgr.loggingFileObj === null){\r\n                this.dataLoggingMgr.newFile().then(()=>{\r\n\r\n                    this.dataLoggingMgr.dataLoggingEnabled = true;\r\n\r\n                    document.getElementById(\"logging-span\").classList.add(\"recording\");\r\n                });\r\n            }else{\r\n                this.dataLoggingMgr.dataLoggingEnabled = true;\r\n\r\n                document.getElementById(\"logging-span\").classList.add(\"recording\");\r\n            }\r\n        });\r\n\r\n        document.getElementById(\"tileBarStopDataLogging\").addEventListener(\"click\", ()=>{\r\n\r\n            // don't do anything if already closed\r\n            if(!this.dataLoggingMgr.dataLoggingEnabled){\r\n                return;\r\n            }\r\n\r\n            document.getElementById(\"logging-span\").classList.remove(\"recording\");\r\n\r\n            this.dataLoggingMgr.closeFile();\r\n        });\r\n\r\n\r\n\r\n        // ABOUT (INTERFACE SETTINGS)\r\n\r\n        // toggle about window\r\n        document.getElementById(\"tileBar-about\").addEventListener(\"click\", ()=>{\r\n\r\n            this.captureModeMgr.closeCaptureMode();\r\n\r\n            this.hideAllSettings();\r\n\r\n            if(this.interfaceSettingsContainer.classList.contains(\"hidden\")){\r\n\r\n                // remove nothingConnectedOverlay\r\n                // as per Franz's wish, it should enable users to go to the tiles without overlay\r\n                this.disableNothingConnectedOverlay();\r\n\r\n                // zoom out if not already\r\n                // and only move to settings afterward (otherwise the magnification screws up the destination)\r\n                if(_helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].zoomedIn()){\r\n                    _helpers_zoom__WEBPACK_IMPORTED_MODULE_1__.zoom.out({\r\n                        callback: ()=>{\r\n                            // not the nicest solution but it works\r\n                            //interfaceSettingsContainerLastSeen = Date.now();\r\n\r\n                            this.interfaceSettingsContainer.classList.remove(\"hidden\");\r\n                            this.interfaceSettingsContainer.scrollIntoView({ behavior: \"smooth\"});\r\n                        }\r\n                    });\r\n                }else{\r\n                    // I suppose commenting this out works, because it is redundant with the scroll listener\r\n                    // that listener is contained in virtual keyboard\r\n                    // not the nicest solution, but it works\r\n                    //interfaceSettingsContainerLastSeen = Date.now();\r\n\r\n                    this.interfaceSettingsContainer.classList.remove(\"hidden\");\r\n                    _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].scrollToElement(this.interfaceSettingsContainer);\r\n                    //this.interfaceSettingsContainer.scrollIntoView({ behavior: \"smooth\"});\r\n                }\r\n            }else{\r\n                // reverse all changes when clicking on settings again\r\n                if(this.bmsObj.isDisconnected()\r\n                    && !this.tachoObj.isConnected()){\r\n                    this.enableNothingConnectedOverlay();\r\n                }\r\n\r\n                this.table.scrollIntoView({ behavior: \"smooth\"});\r\n                this.interfaceSettingsContainer.classList.add(\"hidden\");\r\n            }\r\n        });\r\n\r\n\r\n\r\n\r\n        // DARKMODE\r\n\r\n        document.getElementById(\"tileBar-colormode\").addEventListener(\"click\", ()=>{\r\n            this.colorModeObj.toggle();\r\n        });\r\n\r\n\r\n\r\n        this.tileBarEditMode.addEventListener(\"click\", ()=>{\r\n            this.rearrangeManager.toggleTileMoveMode();\r\n        });\r\n\r\n\r\n\r\n        // only show \"capture mode\" if the device supports and has a camera\r\n        if ('mediaDevices' in navigator && 'getUserMedia' in navigator.mediaDevices) {\r\n            this.tileBarCaptureMode.addEventListener(\"click\", ()=>{\r\n\r\n                this.hideAllSettings();\r\n\r\n                if(this.captureModeContainer.classList.contains(\"display-none\")){\r\n\r\n                    if(_helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].zoomedIn()){\r\n                        _helpers_zoom__WEBPACK_IMPORTED_MODULE_1__.zoom.out({\r\n                            callback: ()=>{\r\n                                this.captureModeMgr.activateCaptureMode();\r\n\r\n                                // scrollIntoView is used here because the offset of the tilebar is unwanted!\r\n                                this.captureModeContainer.scrollIntoView({ behavior: \"smooth\"});\r\n                            }\r\n                        });\r\n                    }else{\r\n                        this.captureModeMgr.activateCaptureMode();\r\n\r\n                        // scrollIntoView is used here because the offset of the tilebar is unwanted!\r\n                        this.captureModeContainer.scrollIntoView({ behavior: \"smooth\"});\r\n                    }\r\n                }else{\r\n                    this.captureModeMgr.closeCaptureMode();\r\n                    this.table.scrollIntoView({behavior: \"smooth\"});\r\n                }\r\n            });\r\n        }else{\r\n            this.tileBarCaptureMode.classList.add(\"display-none\");\r\n        }\r\n\r\n        document.getElementById(\"tilebar-interface-mode\").addEventListener(\"click\", ()=>{\r\n            let entered_pw = window.prompt(\"Password\",\"\");\r\n\r\n            let prev_version = \"\";\r\n            let prev_version_shortened = \"\";\r\n\r\n            try{\r\n                prev_version = document.getElementsByClassName(\"version-number-field\")[0].innerHTML;\r\n                prev_version_shortened = prev_version.split(\"-\")[0];\r\n            }catch(e){\r\n                console.log(\"[serviceworker] no version found, serviceworker not installed!\");\r\n            }\r\n\r\n\r\n            // DEV OPTIONS\r\n            if(prev_version.includes(\"dev\")){\r\n                return;\r\n            }\r\n            if(entered_pw === \"diggahvallahfilmheute\"){\r\n                _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].setValueTexts(this.interfaceVersionFields, prev_version_shortened + \"-dev\");\r\n\r\n                this.rearrangeManager.showDevTiles();\r\n\r\n                this.initDevMode();\r\n            }\r\n\r\n\r\n            // EXPERIMENTAL OPTIONS\r\n            if(prev_version.includes(\"exp\")){\r\n                return;\r\n            }\r\n            if(entered_pw === \"yomama\"){\r\n                _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].setValueTexts(this.interfaceVersionFields, prev_version_shortened + \"-exp\");\r\n\r\n                this.rearrangeManager.showDevTiles();\r\n\r\n                this.initExpMode();\r\n            }\r\n\r\n        });\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    scrollToBoardInfo(){\r\n        this.hideAllSettings();\r\n\r\n        this.boardInfoContainer.classList.remove(\"hidden\");\r\n\r\n        // should be zoomed out since this is only called after firmware update reset\r\n        // but double-checking doesn't hurt xD\r\n\r\n        // zoom out if not already\r\n        // and only move to settings afterward (otherwise the magnification screws up the destination)\r\n        if(_helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].zoomedIn()){\r\n            _helpers_zoom__WEBPACK_IMPORTED_MODULE_1__.zoom.out({\r\n                callback: ()=>{\r\n                    _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].scrollToElement(this.boardInfoContainer);\r\n                }\r\n            });\r\n        }else{\r\n            _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].scrollToElement(this.boardInfoContainer);\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    initExpMode(){\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].swap(this.vehicleModelGauge, this.rearrangeManager.getDevTile(1));\r\n    }\r\n\r\n    initDevMode(){\r\n        this.initExpMode();\r\n\r\n        _helpers_small_functions__WEBPACK_IMPORTED_MODULE_0__[\"default\"].swap(this.canGauge, this.rearrangeManager.getDevTile(0));\r\n\r\n    }\r\n\r\n}\n\n//# sourceURL=webpack://dragonbms-interface-web/./js/tilebar.js?");

/***/ }),

/***/ "./js/vehicleModel.js":
/*!****************************!*\
  !*** ./js/vehicleModel.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ vehicleModel)\n/* harmony export */ });\n/* harmony import */ var _gui_elements__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./gui_elements */ \"./js/gui_elements.js\");\n/* harmony import */ var _iconfu_svg_inject__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @iconfu/svg-inject */ \"./node_modules/@iconfu/svg-inject/dist/svg-inject.js\");\n/* harmony import */ var _iconfu_svg_inject__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_iconfu_svg_inject__WEBPACK_IMPORTED_MODULE_1__);\n\r\n\r\n\r\nclass vehicleModel extends _gui_elements__WEBPACK_IMPORTED_MODULE_0__[\"default\"]{\r\n\r\n    expectedDataLabels = [\r\n        \"torqueFL\",\r\n        \"torqueFR\",\r\n        \"torqueRL\",\r\n        \"torqueRR\",\r\n\r\n        \"rpmFL\",\r\n        \"rpmFR\",\r\n        \"rpmRL\",\r\n        \"rpmRR\",\r\n\r\n        \"tempFL\",\r\n        \"tempFR\",\r\n        \"tempRL\",\r\n        \"tempRR\",\r\n    ]\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        _iconfu_svg_inject__WEBPACK_IMPORTED_MODULE_1___default()(document.getElementsByClassName('vehicle-model-image'));\r\n\r\n        this.torqueGaugeFL = new torqueGauge(\"vehicle-model-torque-fl\");\r\n        this.torqueGaugeFR = new torqueGauge(\"vehicle-model-torque-fr\");\r\n        this.torqueGaugeRL = new torqueGauge(\"vehicle-model-torque-rl\");\r\n        this.torqueGaugeRR = new torqueGauge(\"vehicle-model-torque-rr\");\r\n\r\n        this.enabled = true;\r\n    }\r\n\r\n    initDataDistribution(dd){\r\n        this.dd = dd;\r\n\r\n        // todo: add identifier, which component expects the label, then economic (on demand) updating will be possible\r\n        this.dd.addExpectedDataLabels(this.expectedDataLabels);\r\n\r\n        // updateOnDataInput will be called when data distribution has new data available\r\n        this.dd.registerExpecterUpdate((data)=>{\r\n            this.updateOnDataInput(data);\r\n        });\r\n    }\r\n\r\n    updateOnDataInput(data){\r\n\r\n        if(typeof data[\"torqueFL\"] !== \"undefined\"){\r\n            if(typeof data[\"rpmFL\"] !== \"undefined\"){\r\n                let direction = ((data[\"rpmFL\"] < 0) ? 'backward' : 'forward')\r\n                this.torqueGaugeFL.setTorqueDirection(data[\"torqueFL\"], direction);\r\n            }else{\r\n                this.torqueGaugeFL.setTorqueDirection(data[\"torqueFL\"], \"forward\");\r\n            }\r\n        }\r\n\r\n        if(typeof data[\"torqueFR\"] !== \"undefined\"){\r\n            if(typeof data[\"rpmFR\"] !== \"undefined\"){\r\n                let direction = ((data[\"rpmFR\"] < 0) ? 'backward' : 'forward')\r\n                this.torqueGaugeFR.setTorqueDirection(data[\"torqueFR\"], direction);\r\n            }else{\r\n                this.torqueGaugeFR.setTorqueDirection(data[\"torqueFR\"], \"forward\");\r\n            }\r\n        }\r\n\r\n        if(typeof data[\"torqueRL\"] !== \"undefined\"){\r\n            if(typeof data[\"rpmRL\"] !== \"undefined\"){\r\n                let direction = ((data[\"rpmRL\"] < 0) ? 'backward' : 'forward')\r\n                this.torqueGaugeRL.setTorqueDirection(data[\"torqueRL\"], direction);\r\n            }else{\r\n                this.torqueGaugeRL.setTorqueDirection(data[\"torqueRL\"], \"forward\");\r\n            }\r\n        }\r\n\r\n        if(typeof data[\"torqueRR\"] !== \"undefined\"){\r\n            if(typeof data[\"rpmRR\"] !== \"undefined\"){\r\n                let direction = ((data[\"rpmRR\"] < 0) ? 'backward' : 'forward')\r\n                this.torqueGaugeRR.setTorqueDirection(data[\"torqueRR\"], direction);\r\n            }else{\r\n                this.torqueGaugeRR.setTorqueDirection(data[\"torqueRR\"], \"forward\");\r\n            }\r\n        }\r\n\r\n        // to be implemented: rpm and temp\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\nclass torqueGauge{\r\n\r\n    forward = \"forward\";\r\n    backward = \"backward\";\r\n\r\n    constructor(className){\r\n\r\n        let gaugeElements = document.getElementsByClassName(className);\r\n\r\n\r\n        // catch the case that HTML is configured wrong\r\n        if(gaugeElements.length !== 2){\r\n            return;\r\n        }\r\n\r\n        // set positive and negative gauges\r\n        for (let gauge of gaugeElements) {\r\n            if(gauge.classList.contains(\"vehicle-model-torque-positive\")){\r\n                this.positiveGauge = gauge;\r\n            }\r\n\r\n            if(gauge.classList.contains(\"vehicle-model-torque-negative\")){\r\n                this.negativeGauge = gauge;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    setTorqueDirection(torquePercent, direction){\r\n        if(direction === this.forward){\r\n\r\n            // make the positive gauge green\r\n            this.positiveGauge.classList.remove(\"vehicle-model-negative-bg\");\r\n            this.positiveGauge.classList.add(\"vehicle-model-positive-bg\");\r\n\r\n            // make the negative gauge red\r\n            this.negativeGauge.classList.remove(\"vehicle-model-positive-bg\");\r\n            this.negativeGauge.classList.add(\"vehicle-model-negative-bg\");\r\n\r\n\r\n            if(torquePercent >= 0){\r\n                this.negativeGauge.style.backgroundSize = \"0 0\";\r\n                this.positiveGauge.style.backgroundSize = \"100% \" + torquePercent + \"%\";\r\n            }\r\n\r\n            if(torquePercent < 0){\r\n                this.positiveGauge.style.backgroundSize = \"0 0\";\r\n                this.negativeGauge.style.backgroundSize = \"100% \" + (-torquePercent) + \"%\";\r\n            }\r\n        }\r\n\r\n\r\n        if(direction === this.backward){\r\n\r\n            // make the positive gauge red\r\n            this.positiveGauge.classList.remove(\"vehicle-model-positive-bg\");\r\n            this.positiveGauge.classList.add(\"vehicle-model-negative-bg\");\r\n\r\n            // make the negative gauge green\r\n            this.negativeGauge.classList.remove(\"vehicle-model-negative-bg\");\r\n            this.negativeGauge.classList.add(\"vehicle-model-positive-bg\");\r\n\r\n\r\n            if(torquePercent >= 0){\r\n                this.negativeGauge.style.backgroundSize = \"0 0\";\r\n                this.positiveGauge.style.backgroundSize = \"100% \" + torquePercent + \"%\";\r\n            }\r\n\r\n            if(torquePercent < 0){\r\n                this.positiveGauge.style.backgroundSize = \"0\";\r\n                this.negativeGauge.style.backgroundSize = \"100% \" + (-torquePercent) + \"%\";\r\n            }\r\n        }\r\n\r\n    }\r\n}\n\n//# sourceURL=webpack://dragonbms-interface-web/./js/vehicleModel.js?");

/***/ }),

/***/ "./node_modules/@iconfu/svg-inject/dist/svg-inject.js":
/*!************************************************************!*\
  !*** ./node_modules/@iconfu/svg-inject/dist/svg-inject.js ***!
  \************************************************************/
/***/ ((module) => {

eval("/**\n * SVGInject - Version 1.2.3\n * A tiny, intuitive, robust, caching solution for injecting SVG files inline into the DOM.\n *\n * https://github.com/iconfu/svg-inject\n *\n * Copyright (c) 2018 INCORS, the creators of iconfu.com\n * @license MIT License - https://github.com/iconfu/svg-inject/blob/master/LICENSE\n */\n\n(function(window, document) {\n  // constants for better minification\n  var _CREATE_ELEMENT_ = 'createElement';\n  var _GET_ELEMENTS_BY_TAG_NAME_ = 'getElementsByTagName';\n  var _LENGTH_ = 'length';\n  var _STYLE_ = 'style';\n  var _TITLE_ = 'title';\n  var _UNDEFINED_ = 'undefined';\n  var _SET_ATTRIBUTE_ = 'setAttribute';\n  var _GET_ATTRIBUTE_ = 'getAttribute';\n\n  var NULL = null;\n\n  // constants\n  var __SVGINJECT = '__svgInject';\n  var ID_SUFFIX = '--inject-';\n  var ID_SUFFIX_REGEX = new RegExp(ID_SUFFIX + '\\\\d+', \"g\");\n  var LOAD_FAIL = 'LOAD_FAIL';\n  var SVG_NOT_SUPPORTED = 'SVG_NOT_SUPPORTED';\n  var SVG_INVALID = 'SVG_INVALID';\n  var ATTRIBUTE_EXCLUSION_NAMES = ['src', 'alt', 'onload', 'onerror'];\n  var A_ELEMENT = document[_CREATE_ELEMENT_]('a');\n  var IS_SVG_SUPPORTED = typeof SVGRect != _UNDEFINED_;\n  var DEFAULT_OPTIONS = {\n    useCache: true,\n    copyAttributes: true,\n    makeIdsUnique: true\n  };\n  // Map of IRI referenceable tag names to properties that can reference them. This is defined in\n  // https://www.w3.org/TR/SVG11/linking.html#processingIRI\n  var IRI_TAG_PROPERTIES_MAP = {\n    clipPath: ['clip-path'],\n    'color-profile': NULL,\n    cursor: NULL,\n    filter: NULL,\n    linearGradient: ['fill', 'stroke'],\n    marker: ['marker', 'marker-end', 'marker-mid', 'marker-start'],\n    mask: NULL,\n    pattern: ['fill', 'stroke'],\n    radialGradient: ['fill', 'stroke']\n  };\n  var INJECTED = 1;\n  var FAIL = 2;\n\n  var uniqueIdCounter = 1;\n  var xmlSerializer;\n  var domParser;\n\n\n  // creates an SVG document from an SVG string\n  function svgStringToSvgDoc(svgStr) {\n    domParser = domParser || new DOMParser();\n    return domParser.parseFromString(svgStr, 'text/xml');\n  }\n\n\n  // searializes an SVG element to an SVG string\n  function svgElemToSvgString(svgElement) {\n    xmlSerializer = xmlSerializer || new XMLSerializer();\n    return xmlSerializer.serializeToString(svgElement);\n  }\n\n\n  // Returns the absolute url for the specified url\n  function getAbsoluteUrl(url) {\n    A_ELEMENT.href = url;\n    return A_ELEMENT.href;\n  }\n\n\n  // Load svg with an XHR request\n  function loadSvg(url, callback, errorCallback) {\n    if (url) {\n      var req = new XMLHttpRequest();\n      req.onreadystatechange = function() {\n        if (req.readyState == 4) {\n          // readyState is DONE\n          var status = req.status;\n          if (status == 200) {\n            // request status is OK\n            callback(req.responseXML, req.responseText.trim());\n          } else if (status >= 400) {\n            // request status is error (4xx or 5xx)\n            errorCallback();\n          } else if (status == 0) {\n            // request status 0 can indicate a failed cross-domain call\n            errorCallback();\n          }\n        }\n      };\n      req.open('GET', url, true);\n      req.send();\n    }\n  }\n\n\n  // Copy attributes from img element to svg element\n  function copyAttributes(imgElem, svgElem) {\n    var attribute;\n    var attributeName;\n    var attributeValue;\n    var attributes = imgElem.attributes;\n    for (var i = 0; i < attributes[_LENGTH_]; i++) {\n      attribute = attributes[i];\n      attributeName = attribute.name;\n      // Only copy attributes not explicitly excluded from copying\n      if (ATTRIBUTE_EXCLUSION_NAMES.indexOf(attributeName) == -1) {\n        attributeValue = attribute.value;\n        // If img attribute is \"title\", insert a title element into SVG element\n        if (attributeName == _TITLE_) {\n          var titleElem;\n          var firstElementChild = svgElem.firstElementChild;\n          if (firstElementChild && firstElementChild.localName.toLowerCase() == _TITLE_) {\n            // If the SVG element's first child is a title element, keep it as the title element\n            titleElem = firstElementChild;\n          } else {\n            // If the SVG element's first child element is not a title element, create a new title\n            // ele,emt and set it as the first child\n            titleElem = document[_CREATE_ELEMENT_ + 'NS']('http://www.w3.org/2000/svg', _TITLE_);\n            svgElem.insertBefore(titleElem, firstElementChild);\n          }\n          // Set new title content\n          titleElem.textContent = attributeValue;\n        } else {\n          // Set img attribute to svg element\n          svgElem[_SET_ATTRIBUTE_](attributeName, attributeValue);\n        }\n      }\n    }\n  }\n\n\n  // This function appends a suffix to IDs of referenced elements in the <defs> in order to  to avoid ID collision\n  // between multiple injected SVGs. The suffix has the form \"--inject-X\", where X is a running number which is\n  // incremented with each injection. References to the IDs are adjusted accordingly.\n  // We assume tha all IDs within the injected SVG are unique, therefore the same suffix can be used for all IDs of one\n  // injected SVG.\n  // If the onlyReferenced argument is set to true, only those IDs will be made unique that are referenced from within the SVG\n  function makeIdsUnique(svgElem, onlyReferenced) {\n    var idSuffix = ID_SUFFIX + uniqueIdCounter++;\n    // Regular expression for functional notations of an IRI references. This will find occurences in the form\n    // url(#anyId) or url(\"#anyId\") (for Internet Explorer) and capture the referenced ID\n    var funcIriRegex = /url\\(\"?#([a-zA-Z][\\w:.-]*)\"?\\)/g;\n    // Get all elements with an ID. The SVG spec recommends to put referenced elements inside <defs> elements, but\n    // this is not a requirement, therefore we have to search for IDs in the whole SVG.\n    var idElements = svgElem.querySelectorAll('[id]');\n    var idElem;\n    // An object containing referenced IDs  as keys is used if only referenced IDs should be uniquified.\n    // If this object does not exist, all IDs will be uniquified.\n    var referencedIds = onlyReferenced ? [] : NULL;\n    var tagName;\n    var iriTagNames = {};\n    var iriProperties = [];\n    var changed = false;\n    var i, j;\n\n    if (idElements[_LENGTH_]) {\n      // Make all IDs unique by adding the ID suffix and collect all encountered tag names\n      // that are IRI referenceable from properities.\n      for (i = 0; i < idElements[_LENGTH_]; i++) {\n        tagName = idElements[i].localName; // Use non-namespaced tag name\n        // Make ID unique if tag name is IRI referenceable\n        if (tagName in IRI_TAG_PROPERTIES_MAP) {\n          iriTagNames[tagName] = 1;\n        }\n      }\n      // Get all properties that are mapped to the found IRI referenceable tags\n      for (tagName in iriTagNames) {\n        (IRI_TAG_PROPERTIES_MAP[tagName] || [tagName]).forEach(function (mappedProperty) {\n          // Add mapped properties to array of iri referencing properties.\n          // Use linear search here because the number of possible entries is very small (maximum 11)\n          if (iriProperties.indexOf(mappedProperty) < 0) {\n            iriProperties.push(mappedProperty);\n          }\n        });\n      }\n      if (iriProperties[_LENGTH_]) {\n        // Add \"style\" to properties, because it may contain references in the form 'style=\"fill:url(#myFill)\"'\n        iriProperties.push(_STYLE_);\n      }\n      // Run through all elements of the SVG and replace IDs in references.\n      // To get all descending elements, getElementsByTagName('*') seems to perform faster than querySelectorAll('*').\n      // Since svgElem.getElementsByTagName('*') does not return the svg element itself, we have to handle it separately.\n      var descElements = svgElem[_GET_ELEMENTS_BY_TAG_NAME_]('*');\n      var element = svgElem;\n      var propertyName;\n      var value;\n      var newValue;\n      for (i = -1; element != NULL;) {\n        if (element.localName == _STYLE_) {\n          // If element is a style element, replace IDs in all occurences of \"url(#anyId)\" in text content\n          value = element.textContent;\n          newValue = value && value.replace(funcIriRegex, function(match, id) {\n            if (referencedIds) {\n              referencedIds[id] = 1;\n            }\n            return 'url(#' + id + idSuffix + ')';\n          });\n          if (newValue !== value) {\n            element.textContent = newValue;\n          }\n        } else if (element.hasAttributes()) {\n          // Run through all property names for which IDs were found\n          for (j = 0; j < iriProperties[_LENGTH_]; j++) {\n            propertyName = iriProperties[j];\n            value = element[_GET_ATTRIBUTE_](propertyName);\n            newValue = value && value.replace(funcIriRegex, function(match, id) {\n              if (referencedIds) {\n                referencedIds[id] = 1;\n              }\n                return 'url(#' + id + idSuffix + ')';\n            });\n            if (newValue !== value) {\n              element[_SET_ATTRIBUTE_](propertyName, newValue);\n            }\n          }\n          // Replace IDs in xlink:ref and href attributes\n          ['xlink:href', 'href'].forEach(function(refAttrName) {\n            var iri = element[_GET_ATTRIBUTE_](refAttrName);\n            if (/^\\s*#/.test(iri)) { // Check if iri is non-null and internal reference\n              iri = iri.trim();\n              element[_SET_ATTRIBUTE_](refAttrName, iri + idSuffix);\n              if (referencedIds) {\n                // Add ID to referenced IDs\n                referencedIds[iri.substring(1)] = 1;\n              }\n            }\n          });\n        }\n        element = descElements[++i];\n      }\n      for (i = 0; i < idElements[_LENGTH_]; i++) {\n        idElem = idElements[i];\n        // If set of referenced IDs exists, make only referenced IDs unique,\n        // otherwise make all IDs unique.\n        if (!referencedIds || referencedIds[idElem.id]) {\n          // Add suffix to element's ID\n          idElem.id += idSuffix;\n          changed = true;\n        }\n      }\n    }\n    // return true if SVG element has changed\n    return changed;\n  }\n\n\n  // For cached SVGs the IDs are made unique by simply replacing the already inserted unique IDs with a\n  // higher ID counter. This is much more performant than a call to makeIdsUnique().\n  function makeIdsUniqueCached(svgString) {\n    return svgString.replace(ID_SUFFIX_REGEX, ID_SUFFIX + uniqueIdCounter++);\n  }\n\n\n  // Inject SVG by replacing the img element with the SVG element in the DOM\n  function inject(imgElem, svgElem, absUrl, options) {\n    if (svgElem) {\n      svgElem[_SET_ATTRIBUTE_]('data-inject-url', absUrl);\n      var parentNode = imgElem.parentNode;\n      if (parentNode) {\n        if (options.copyAttributes) {\n          copyAttributes(imgElem, svgElem);\n        }\n        // Invoke beforeInject hook if set\n        var beforeInject = options.beforeInject;\n        var injectElem = (beforeInject && beforeInject(imgElem, svgElem)) || svgElem;\n        // Replace img element with new element. This is the actual injection.\n        parentNode.replaceChild(injectElem, imgElem);\n        // Mark img element as injected\n        imgElem[__SVGINJECT] = INJECTED;\n        removeOnLoadAttribute(imgElem);\n        // Invoke afterInject hook if set\n        var afterInject = options.afterInject;\n        if (afterInject) {\n          afterInject(imgElem, injectElem);\n        }\n      }\n    } else {\n      svgInvalid(imgElem, options);\n    }\n  }\n\n\n  // Merges any number of options objects into a new object\n  function mergeOptions() {\n    var mergedOptions = {};\n    var args = arguments;\n    // Iterate over all specified options objects and add all properties to the new options object\n    for (var i = 0; i < args[_LENGTH_]; i++) {\n      var argument = args[i];\n        for (var key in argument) {\n          if (argument.hasOwnProperty(key)) {\n            mergedOptions[key] = argument[key];\n          }\n        }\n      }\n    return mergedOptions;\n  }\n\n\n  // Adds the specified CSS to the document's <head> element\n  function addStyleToHead(css) {\n    var head = document[_GET_ELEMENTS_BY_TAG_NAME_]('head')[0];\n    if (head) {\n      var style = document[_CREATE_ELEMENT_](_STYLE_);\n      style.type = 'text/css';\n      style.appendChild(document.createTextNode(css));\n      head.appendChild(style);\n    }\n  }\n\n\n  // Builds an SVG element from the specified SVG string\n  function buildSvgElement(svgStr, verify) {\n    if (verify) {\n      var svgDoc;\n      try {\n        // Parse the SVG string with DOMParser\n        svgDoc = svgStringToSvgDoc(svgStr);\n      } catch(e) {\n        return NULL;\n      }\n      if (svgDoc[_GET_ELEMENTS_BY_TAG_NAME_]('parsererror')[_LENGTH_]) {\n        // DOMParser does not throw an exception, but instead puts parsererror tags in the document\n        return NULL;\n      }\n      return svgDoc.documentElement;\n    } else {\n      var div = document.createElement('div');\n      div.innerHTML = svgStr;\n      return div.firstElementChild;\n    }\n  }\n\n\n  function removeOnLoadAttribute(imgElem) {\n    // Remove the onload attribute. Should only be used to remove the unstyled image flash protection and\n    // make the element visible, not for removing the event listener.\n    imgElem.removeAttribute('onload');\n  }\n\n\n  function errorMessage(msg) {\n    console.error('SVGInject: ' + msg);\n  }\n\n\n  function fail(imgElem, status, options) {\n    imgElem[__SVGINJECT] = FAIL;\n    if (options.onFail) {\n      options.onFail(imgElem, status);\n    } else {\n      errorMessage(status);\n    }\n  }\n\n\n  function svgInvalid(imgElem, options) {\n    removeOnLoadAttribute(imgElem);\n    fail(imgElem, SVG_INVALID, options);\n  }\n\n\n  function svgNotSupported(imgElem, options) {\n    removeOnLoadAttribute(imgElem);\n    fail(imgElem, SVG_NOT_SUPPORTED, options);\n  }\n\n\n  function loadFail(imgElem, options) {\n    fail(imgElem, LOAD_FAIL, options);\n  }\n\n\n  function removeEventListeners(imgElem) {\n    imgElem.onload = NULL;\n    imgElem.onerror = NULL;\n  }\n\n\n  function imgNotSet(msg) {\n    errorMessage('no img element');\n  }\n\n\n  function createSVGInject(globalName, options) {\n    var defaultOptions = mergeOptions(DEFAULT_OPTIONS, options);\n    var svgLoadCache = {};\n\n    if (IS_SVG_SUPPORTED) {\n      // If the browser supports SVG, add a small stylesheet that hides the <img> elements until\n      // injection is finished. This avoids showing the unstyled SVGs before style is applied.\n      addStyleToHead('img[onload^=\"' + globalName + '(\"]{visibility:hidden;}');\n    }\n\n\n    /**\n     * SVGInject\n     *\n     * Injects the SVG specified in the `src` attribute of the specified `img` element or array of `img`\n     * elements. Returns a Promise object which resolves if all passed in `img` elements have either been\n     * injected or failed to inject (Only if a global Promise object is available like in all modern browsers\n     * or through a polyfill).\n     *\n     * Options:\n     * useCache: If set to `true` the SVG will be cached using the absolute URL. Default value is `true`.\n     * copyAttributes: If set to `true` the attributes will be copied from `img` to `svg`. Dfault value\n     *     is `true`.\n     * makeIdsUnique: If set to `true` the ID of elements in the `<defs>` element that can be references by\n     *     property values (for example 'clipPath') are made unique by appending \"--inject-X\", where X is a\n     *     running number which increases with each injection. This is done to avoid duplicate IDs in the DOM.\n     * beforeLoad: Hook before SVG is loaded. The `img` element is passed as a parameter. If the hook returns\n     *     a string it is used as the URL instead of the `img` element's `src` attribute.\n     * afterLoad: Hook after SVG is loaded. The loaded `svg` element and `svg` string are passed as a\n     *     parameters. If caching is active this hook will only get called once for injected SVGs with the\n     *     same absolute path. Changes to the `svg` element in this hook will be applied to all injected SVGs\n     *     with the same absolute path. It's also possible to return an `svg` string or `svg` element which\n     *     will then be used for the injection.\n     * beforeInject: Hook before SVG is injected. The `img` and `svg` elements are passed as parameters. If\n     *     any html element is returned it gets injected instead of applying the default SVG injection.\n     * afterInject: Hook after SVG is injected. The `img` and `svg` elements are passed as parameters.\n     * onAllFinish: Hook after all `img` elements passed to an SVGInject() call have either been injected or\n     *     failed to inject.\n     * onFail: Hook after injection fails. The `img` element and a `status` string are passed as an parameter.\n     *     The `status` can be either `'SVG_NOT_SUPPORTED'` (the browser does not support SVG),\n     *     `'SVG_INVALID'` (the SVG is not in a valid format) or `'LOAD_FAILED'` (loading of the SVG failed).\n     *\n     * @param {HTMLImageElement} img - an img element or an array of img elements\n     * @param {Object} [options] - optional parameter with [options](#options) for this injection.\n     */\n    function SVGInject(img, options) {\n      options = mergeOptions(defaultOptions, options);\n\n      var run = function(resolve) {\n        var allFinish = function() {\n          var onAllFinish = options.onAllFinish;\n          if (onAllFinish) {\n            onAllFinish();\n          }\n          resolve && resolve();\n        };\n\n        if (img && typeof img[_LENGTH_] != _UNDEFINED_) {\n          // an array like structure of img elements\n          var injectIndex = 0;\n          var injectCount = img[_LENGTH_];\n\n          if (injectCount == 0) {\n            allFinish();\n          } else {\n            var finish = function() {\n              if (++injectIndex == injectCount) {\n                allFinish();\n              }\n            };\n\n            for (var i = 0; i < injectCount; i++) {\n              SVGInjectElement(img[i], options, finish);\n            }\n          }\n        } else {\n          // only one img element\n          SVGInjectElement(img, options, allFinish);\n        }\n      };\n\n      // return a Promise object if globally available\n      return typeof Promise == _UNDEFINED_ ? run() : new Promise(run);\n    }\n\n\n    // Injects a single svg element. Options must be already merged with the default options.\n    function SVGInjectElement(imgElem, options, callback) {\n      if (imgElem) {\n        var svgInjectAttributeValue = imgElem[__SVGINJECT];\n        if (!svgInjectAttributeValue) {\n          removeEventListeners(imgElem);\n\n          if (!IS_SVG_SUPPORTED) {\n            svgNotSupported(imgElem, options);\n            callback();\n            return;\n          }\n          // Invoke beforeLoad hook if set. If the beforeLoad returns a value use it as the src for the load\n          // URL path. Else use the imgElem's src attribute value.\n          var beforeLoad = options.beforeLoad;\n          var src = (beforeLoad && beforeLoad(imgElem)) || imgElem[_GET_ATTRIBUTE_]('src');\n\n          if (!src) {\n            // If no image src attribute is set do no injection. This can only be reached by using javascript\n            // because if no src attribute is set the onload and onerror events do not get called\n            if (src === '') {\n              loadFail(imgElem, options);\n            }\n            callback();\n            return;\n          }\n\n          // set array so later calls can register callbacks\n          var onFinishCallbacks = [];\n          imgElem[__SVGINJECT] = onFinishCallbacks;\n\n          var onFinish = function() {\n            callback();\n            onFinishCallbacks.forEach(function(onFinishCallback) {\n              onFinishCallback();\n            });\n          };\n\n          var absUrl = getAbsoluteUrl(src);\n          var useCacheOption = options.useCache;\n          var makeIdsUniqueOption = options.makeIdsUnique;\n          \n          var setSvgLoadCacheValue = function(val) {\n            if (useCacheOption) {\n              svgLoadCache[absUrl].forEach(function(svgLoad) {\n                svgLoad(val);\n              });\n              svgLoadCache[absUrl] = val;\n            }\n          };\n\n          if (useCacheOption) {\n            var svgLoad = svgLoadCache[absUrl];\n\n            var handleLoadValue = function(loadValue) {\n              if (loadValue === LOAD_FAIL) {\n                loadFail(imgElem, options);\n              } else if (loadValue === SVG_INVALID) {\n                svgInvalid(imgElem, options);\n              } else {\n                var hasUniqueIds = loadValue[0];\n                var svgString = loadValue[1];\n                var uniqueIdsSvgString = loadValue[2];\n                var svgElem;\n\n                if (makeIdsUniqueOption) {\n                  if (hasUniqueIds === NULL) {\n                    // IDs for the SVG string have not been made unique before. This may happen if previous\n                    // injection of a cached SVG have been run with the option makedIdsUnique set to false\n                    svgElem = buildSvgElement(svgString, false);\n                    hasUniqueIds = makeIdsUnique(svgElem, false);\n\n                    loadValue[0] = hasUniqueIds;\n                    loadValue[2] = hasUniqueIds && svgElemToSvgString(svgElem);\n                  } else if (hasUniqueIds) {\n                    // Make IDs unique for already cached SVGs with better performance\n                    svgString = makeIdsUniqueCached(uniqueIdsSvgString);\n                  }\n                }\n\n                svgElem = svgElem || buildSvgElement(svgString, false);\n\n                inject(imgElem, svgElem, absUrl, options);\n              }\n              onFinish();\n            };\n\n            if (typeof svgLoad != _UNDEFINED_) {\n              // Value for url exists in cache\n              if (svgLoad.isCallbackQueue) {\n                // Same url has been cached, but value has not been loaded yet, so add to callbacks\n                svgLoad.push(handleLoadValue);\n              } else {\n                handleLoadValue(svgLoad);\n              }\n              return;\n            } else {\n              var svgLoad = [];\n              // set property isCallbackQueue to Array to differentiate from array with cached loaded values\n              svgLoad.isCallbackQueue = true;\n              svgLoadCache[absUrl] = svgLoad;\n            }\n          }\n\n          // Load the SVG because it is not cached or caching is disabled\n          loadSvg(absUrl, function(svgXml, svgString) {\n            // Use the XML from the XHR request if it is an instance of Document. Otherwise\n            // (for example of IE9), create the svg document from the svg string.\n            var svgElem = svgXml instanceof Document ? svgXml.documentElement : buildSvgElement(svgString, true);\n\n            var afterLoad = options.afterLoad;\n            if (afterLoad) {\n              // Invoke afterLoad hook which may modify the SVG element. After load may also return a new\n              // svg element or svg string\n              var svgElemOrSvgString = afterLoad(svgElem, svgString) || svgElem;\n              if (svgElemOrSvgString) {\n                // Update svgElem and svgString because of modifications to the SVG element or SVG string in\n                // the afterLoad hook, so the modified SVG is also used for all later cached injections\n                var isString = typeof svgElemOrSvgString == 'string';\n                svgString = isString ? svgElemOrSvgString : svgElemToSvgString(svgElem);\n                svgElem = isString ? buildSvgElement(svgElemOrSvgString, true) : svgElemOrSvgString;\n              }\n            }\n\n            if (svgElem instanceof SVGElement) {\n              var hasUniqueIds = NULL;\n              if (makeIdsUniqueOption) {\n                hasUniqueIds = makeIdsUnique(svgElem, false);\n              }\n\n              if (useCacheOption) {\n                var uniqueIdsSvgString = hasUniqueIds && svgElemToSvgString(svgElem);\n                // set an array with three entries to the load cache\n                setSvgLoadCacheValue([hasUniqueIds, svgString, uniqueIdsSvgString]);\n              }\n\n              inject(imgElem, svgElem, absUrl, options);\n            } else {\n              svgInvalid(imgElem, options);\n              setSvgLoadCacheValue(SVG_INVALID);\n            }\n            onFinish();\n          }, function() {\n            loadFail(imgElem, options);\n            setSvgLoadCacheValue(LOAD_FAIL);\n            onFinish();\n          });\n        } else {\n          if (Array.isArray(svgInjectAttributeValue)) {\n            // svgInjectAttributeValue is an array. Injection is not complete so register callback\n            svgInjectAttributeValue.push(callback);\n          } else {\n            callback();\n          }\n        }\n      } else {\n        imgNotSet();\n      }\n    }\n\n\n    /**\n     * Sets the default [options](#options) for SVGInject.\n     *\n     * @param {Object} [options] - default [options](#options) for an injection.\n     */\n    SVGInject.setOptions = function(options) {\n      defaultOptions = mergeOptions(defaultOptions, options);\n    };\n\n\n    // Create a new instance of SVGInject\n    SVGInject.create = createSVGInject;\n\n\n    /**\n     * Used in onerror Event of an `<img>` element to handle cases when the loading the original src fails\n     * (for example if file is not found or if the browser does not support SVG). This triggers a call to the\n     * options onFail hook if available. The optional second parameter will be set as the new src attribute\n     * for the img element.\n     *\n     * @param {HTMLImageElement} img - an img element\n     * @param {String} [fallbackSrc] - optional parameter fallback src\n     */\n    SVGInject.err = function(img, fallbackSrc) {\n      if (img) {\n        if (img[__SVGINJECT] != FAIL) {\n          removeEventListeners(img);\n\n          if (!IS_SVG_SUPPORTED) {\n            svgNotSupported(img, defaultOptions);\n          } else {\n            removeOnLoadAttribute(img);\n            loadFail(img, defaultOptions);\n          }\n          if (fallbackSrc) {\n            removeOnLoadAttribute(img);\n            img.src = fallbackSrc;\n          }\n        }\n      } else {\n        imgNotSet();\n      }\n    };\n\n    window[globalName] = SVGInject;\n\n    return SVGInject;\n  }\n\n  var SVGInjectInstance = createSVGInject('SVGInject');\n\n  if ( true && typeof module.exports == 'object') {\n    module.exports = SVGInjectInstance;\n  }\n})(window, document);\n\n//# sourceURL=webpack://dragonbms-interface-web/./node_modules/@iconfu/svg-inject/dist/svg-inject.js?");

/***/ }),

/***/ "./node_modules/simple-keyboard/build/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/simple-keyboard/build/index.js ***!
  \*****************************************************/
/***/ (function(module) {

eval("/*!\n * \n *   simple-keyboard v3.6.8\n *   https://github.com/hodgef/simple-keyboard\n *\n *   Copyright (c) Francisco Hodge (https://github.com/hodgef) and project contributors.\n *\n *   This source code is licensed under the MIT license found in the\n *   LICENSE file in the root directory of this source tree.\n *\n */\n!function(t,e){ true?module.exports=e():0}(this,(function(){return function(){var t={9662:function(t,e,n){var o=n(614),r=n(6330),i=TypeError;t.exports=function(t){if(o(t))return t;throw i(r(t)+\" is not a function\")}},9483:function(t,e,n){var o=n(4411),r=n(6330),i=TypeError;t.exports=function(t){if(o(t))return t;throw i(r(t)+\" is not a constructor\")}},6077:function(t,e,n){var o=n(614),r=String,i=TypeError;t.exports=function(t){if(\"object\"==typeof t||o(t))return t;throw i(\"Can't set \"+r(t)+\" as a prototype\")}},1223:function(t,e,n){var o=n(5112),r=n(30),i=n(3070).f,a=o(\"unscopables\"),s=Array.prototype;null==s[a]&&i(s,a,{configurable:!0,value:r(null)}),t.exports=function(t){s[a][t]=!0}},1530:function(t,e,n){\"use strict\";var o=n(8710).charAt;t.exports=function(t,e,n){return e+(n?o(t,e).length:1)}},9670:function(t,e,n){var o=n(111),r=String,i=TypeError;t.exports=function(t){if(o(t))return t;throw i(r(t)+\" is not an object\")}},8533:function(t,e,n){\"use strict\";var o=n(2092).forEach,r=n(9341)(\"forEach\");t.exports=r?[].forEach:function(t){return o(this,t,arguments.length>1?arguments[1]:void 0)}},8457:function(t,e,n){\"use strict\";var o=n(9974),r=n(6916),i=n(7908),a=n(3411),s=n(7659),u=n(4411),c=n(6244),l=n(6135),f=n(4121),d=n(1246),p=Array;t.exports=function(t){var e=i(t),n=u(this),h=arguments.length,v=h>1?arguments[1]:void 0,y=void 0!==v;y&&(v=o(v,h>2?arguments[2]:void 0));var g,m,b,x,w,E,S=d(e),O=0;if(!S||this===p&&s(S))for(g=c(e),m=n?new this(g):p(g);g>O;O++)E=y?v(e[O],O):e[O],l(m,O,E);else for(w=(x=f(e,S)).next,m=n?new this:[];!(b=r(w,x)).done;O++)E=y?a(x,v,[b.value,O],!0):b.value,l(m,O,E);return m.length=O,m}},1318:function(t,e,n){var o=n(5656),r=n(1400),i=n(6244),a=function(t){return function(e,n,a){var s,u=o(e),c=i(u),l=r(a,c);if(t&&n!=n){for(;c>l;)if((s=u[l++])!=s)return!0}else for(;c>l;l++)if((t||l in u)&&u[l]===n)return t||l||0;return!t&&-1}};t.exports={includes:a(!0),indexOf:a(!1)}},2092:function(t,e,n){var o=n(9974),r=n(1702),i=n(8361),a=n(7908),s=n(6244),u=n(5417),c=r([].push),l=function(t){var e=1==t,n=2==t,r=3==t,l=4==t,f=6==t,d=7==t,p=5==t||f;return function(h,v,y,g){for(var m,b,x=a(h),w=i(x),E=o(v,y),S=s(w),O=0,k=g||u,P=e?k(h,S):n||d?k(h,0):void 0;S>O;O++)if((p||O in w)&&(b=E(m=w[O],O,x),t))if(e)P[O]=b;else if(b)switch(t){case 3:return!0;case 5:return m;case 6:return O;case 2:c(P,m)}else switch(t){case 4:return!1;case 7:c(P,m)}return f?-1:r||l?l:P}};t.exports={forEach:l(0),map:l(1),filter:l(2),some:l(3),every:l(4),find:l(5),findIndex:l(6),filterReject:l(7)}},1194:function(t,e,n){var o=n(7293),r=n(5112),i=n(7392),a=r(\"species\");t.exports=function(t){return i>=51||!o((function(){var e=[];return(e.constructor={})[a]=function(){return{foo:1}},1!==e[t](Boolean).foo}))}},9341:function(t,e,n){\"use strict\";var o=n(7293);t.exports=function(t,e){var n=[][t];return!!n&&o((function(){n.call(null,e||function(){return 1},1)}))}},3671:function(t,e,n){var o=n(9662),r=n(7908),i=n(8361),a=n(6244),s=TypeError,u=function(t){return function(e,n,u,c){o(n);var l=r(e),f=i(l),d=a(l),p=t?d-1:0,h=t?-1:1;if(u<2)for(;;){if(p in f){c=f[p],p+=h;break}if(p+=h,t?p<0:d<=p)throw s(\"Reduce of empty array with no initial value\")}for(;t?p>=0:d>p;p+=h)p in f&&(c=n(c,f[p],p,l));return c}};t.exports={left:u(!1),right:u(!0)}},3658:function(t,e,n){\"use strict\";var o=n(9781),r=n(3157),i=TypeError,a=Object.getOwnPropertyDescriptor,s=o&&!function(){if(void 0!==this)return!0;try{Object.defineProperty([],\"length\",{writable:!1}).length=1}catch(t){return t instanceof TypeError}}();t.exports=s?function(t,e){if(r(t)&&!a(t,\"length\").writable)throw i(\"Cannot set read only .length\");return t.length=e}:function(t,e){return t.length=e}},1589:function(t,e,n){var o=n(1400),r=n(6244),i=n(6135),a=Array,s=Math.max;t.exports=function(t,e,n){for(var u=r(t),c=o(e,u),l=o(void 0===n?u:n,u),f=a(s(l-c,0)),d=0;c<l;c++,d++)i(f,d,t[c]);return f.length=d,f}},206:function(t,e,n){var o=n(1702);t.exports=o([].slice)},4362:function(t,e,n){var o=n(1589),r=Math.floor,i=function(t,e){var n=t.length,u=r(n/2);return n<8?a(t,e):s(t,i(o(t,0,u),e),i(o(t,u),e),e)},a=function(t,e){for(var n,o,r=t.length,i=1;i<r;){for(o=i,n=t[i];o&&e(t[o-1],n)>0;)t[o]=t[--o];o!==i++&&(t[o]=n)}return t},s=function(t,e,n,o){for(var r=e.length,i=n.length,a=0,s=0;a<r||s<i;)t[a+s]=a<r&&s<i?o(e[a],n[s])<=0?e[a++]:n[s++]:a<r?e[a++]:n[s++];return t};t.exports=i},7475:function(t,e,n){var o=n(3157),r=n(4411),i=n(111),a=n(5112)(\"species\"),s=Array;t.exports=function(t){var e;return o(t)&&(e=t.constructor,(r(e)&&(e===s||o(e.prototype))||i(e)&&null===(e=e[a]))&&(e=void 0)),void 0===e?s:e}},5417:function(t,e,n){var o=n(7475);t.exports=function(t,e){return new(o(t))(0===e?0:e)}},3411:function(t,e,n){var o=n(9670),r=n(9212);t.exports=function(t,e,n,i){try{return i?e(o(n)[0],n[1]):e(n)}catch(e){r(t,\"throw\",e)}}},7072:function(t,e,n){var o=n(5112)(\"iterator\"),r=!1;try{var i=0,a={next:function(){return{done:!!i++}},return:function(){r=!0}};a[o]=function(){return this},Array.from(a,(function(){throw 2}))}catch(t){}t.exports=function(t,e){if(!e&&!r)return!1;var n=!1;try{var i={};i[o]=function(){return{next:function(){return{done:n=!0}}}},t(i)}catch(t){}return n}},4326:function(t,e,n){var o=n(1702),r=o({}.toString),i=o(\"\".slice);t.exports=function(t){return i(r(t),8,-1)}},648:function(t,e,n){var o=n(1694),r=n(614),i=n(4326),a=n(5112)(\"toStringTag\"),s=Object,u=\"Arguments\"==i(function(){return arguments}());t.exports=o?i:function(t){var e,n,o;return void 0===t?\"Undefined\":null===t?\"Null\":\"string\"==typeof(n=function(t,e){try{return t[e]}catch(t){}}(e=s(t),a))?n:u?i(e):\"Object\"==(o=i(e))&&r(e.callee)?\"Arguments\":o}},9920:function(t,e,n){var o=n(2597),r=n(3887),i=n(1236),a=n(3070);t.exports=function(t,e,n){for(var s=r(e),u=a.f,c=i.f,l=0;l<s.length;l++){var f=s[l];o(t,f)||n&&o(n,f)||u(t,f,c(e,f))}}},4964:function(t,e,n){var o=n(5112)(\"match\");t.exports=function(t){var e=/./;try{\"/./\"[t](e)}catch(n){try{return e[o]=!1,\"/./\"[t](e)}catch(t){}}return!1}},8544:function(t,e,n){var o=n(7293);t.exports=!o((function(){function t(){}return t.prototype.constructor=null,Object.getPrototypeOf(new t)!==t.prototype}))},6178:function(t){t.exports=function(t,e){return{value:t,done:e}}},8880:function(t,e,n){var o=n(9781),r=n(3070),i=n(9114);t.exports=o?function(t,e,n){return r.f(t,e,i(1,n))}:function(t,e,n){return t[e]=n,t}},9114:function(t){t.exports=function(t,e){return{enumerable:!(1&t),configurable:!(2&t),writable:!(4&t),value:e}}},6135:function(t,e,n){\"use strict\";var o=n(4948),r=n(3070),i=n(9114);t.exports=function(t,e,n){var a=o(e);a in t?r.f(t,a,i(0,n)):t[a]=n}},8709:function(t,e,n){\"use strict\";var o=n(9670),r=n(2140),i=TypeError;t.exports=function(t){if(o(this),\"string\"===t||\"default\"===t)t=\"string\";else if(\"number\"!==t)throw i(\"Incorrect hint\");return r(this,t)}},7045:function(t,e,n){var o=n(6339),r=n(3070);t.exports=function(t,e,n){return n.get&&o(n.get,e,{getter:!0}),n.set&&o(n.set,e,{setter:!0}),r.f(t,e,n)}},8052:function(t,e,n){var o=n(614),r=n(3070),i=n(6339),a=n(3072);t.exports=function(t,e,n,s){s||(s={});var u=s.enumerable,c=void 0!==s.name?s.name:e;if(o(n)&&i(n,c,s),s.global)u?t[e]=n:a(e,n);else{try{s.unsafe?t[e]&&(u=!0):delete t[e]}catch(t){}u?t[e]=n:r.f(t,e,{value:n,enumerable:!1,configurable:!s.nonConfigurable,writable:!s.nonWritable})}return t}},3072:function(t,e,n){var o=n(7854),r=Object.defineProperty;t.exports=function(t,e){try{r(o,t,{value:e,configurable:!0,writable:!0})}catch(n){o[t]=e}return e}},5117:function(t,e,n){\"use strict\";var o=n(6330),r=TypeError;t.exports=function(t,e){if(!delete t[e])throw r(\"Cannot delete property \"+o(e)+\" of \"+o(t))}},9781:function(t,e,n){var o=n(7293);t.exports=!o((function(){return 7!=Object.defineProperty({},1,{get:function(){return 7}})[1]}))},4154:function(t){var e=\"object\"==typeof document&&document.all,n=void 0===e&&void 0!==e;t.exports={all:e,IS_HTMLDDA:n}},317:function(t,e,n){var o=n(7854),r=n(111),i=o.document,a=r(i)&&r(i.createElement);t.exports=function(t){return a?i.createElement(t):{}}},7207:function(t){var e=TypeError;t.exports=function(t){if(t>9007199254740991)throw e(\"Maximum allowed index exceeded\");return t}},8324:function(t){t.exports={CSSRuleList:0,CSSStyleDeclaration:0,CSSValueList:0,ClientRectList:0,DOMRectList:0,DOMStringList:0,DOMTokenList:1,DataTransferItemList:0,FileList:0,HTMLAllCollection:0,HTMLCollection:0,HTMLFormElement:0,HTMLSelectElement:0,MediaList:0,MimeTypeArray:0,NamedNodeMap:0,NodeList:1,PaintRequestList:0,Plugin:0,PluginArray:0,SVGLengthList:0,SVGNumberList:0,SVGPathSegList:0,SVGPointList:0,SVGStringList:0,SVGTransformList:0,SourceBufferList:0,StyleSheetList:0,TextTrackCueList:0,TextTrackList:0,TouchList:0}},8509:function(t,e,n){var o=n(317)(\"span\").classList,r=o&&o.constructor&&o.constructor.prototype;t.exports=r===Object.prototype?void 0:r},8886:function(t,e,n){var o=n(8113).match(/firefox\\/(\\d+)/i);t.exports=!!o&&+o[1]},256:function(t,e,n){var o=n(8113);t.exports=/MSIE|Trident/.test(o)},5268:function(t,e,n){var o=n(4326);t.exports=\"undefined\"!=typeof process&&\"process\"==o(process)},8113:function(t){t.exports=\"undefined\"!=typeof navigator&&String(navigator.userAgent)||\"\"},7392:function(t,e,n){var o,r,i=n(7854),a=n(8113),s=i.process,u=i.Deno,c=s&&s.versions||u&&u.version,l=c&&c.v8;l&&(r=(o=l.split(\".\"))[0]>0&&o[0]<4?1:+(o[0]+o[1])),!r&&a&&(!(o=a.match(/Edge\\/(\\d+)/))||o[1]>=74)&&(o=a.match(/Chrome\\/(\\d+)/))&&(r=+o[1]),t.exports=r},8008:function(t,e,n){var o=n(8113).match(/AppleWebKit\\/(\\d+)\\./);t.exports=!!o&&+o[1]},748:function(t){t.exports=[\"constructor\",\"hasOwnProperty\",\"isPrototypeOf\",\"propertyIsEnumerable\",\"toLocaleString\",\"toString\",\"valueOf\"]},2109:function(t,e,n){var o=n(7854),r=n(1236).f,i=n(8880),a=n(8052),s=n(3072),u=n(9920),c=n(4705);t.exports=function(t,e){var n,l,f,d,p,h=t.target,v=t.global,y=t.stat;if(n=v?o:y?o[h]||s(h,{}):(o[h]||{}).prototype)for(l in e){if(d=e[l],f=t.dontCallGetSet?(p=r(n,l))&&p.value:n[l],!c(v?l:h+(y?\".\":\"#\")+l,t.forced)&&void 0!==f){if(typeof d==typeof f)continue;u(d,f)}(t.sham||f&&f.sham)&&i(d,\"sham\",!0),a(n,l,d,t)}}},7293:function(t){t.exports=function(t){try{return!!t()}catch(t){return!0}}},7007:function(t,e,n){\"use strict\";n(4916);var o=n(1470),r=n(8052),i=n(2261),a=n(7293),s=n(5112),u=n(8880),c=s(\"species\"),l=RegExp.prototype;t.exports=function(t,e,n,f){var d=s(t),p=!a((function(){var e={};return e[d]=function(){return 7},7!=\"\"[t](e)})),h=p&&!a((function(){var e=!1,n=/a/;return\"split\"===t&&((n={}).constructor={},n.constructor[c]=function(){return n},n.flags=\"\",n[d]=/./[d]),n.exec=function(){return e=!0,null},n[d](\"\"),!e}));if(!p||!h||n){var v=o(/./[d]),y=e(d,\"\"[t],(function(t,e,n,r,a){var s=o(t),u=e.exec;return u===i||u===l.exec?p&&!a?{done:!0,value:v(e,n,r)}:{done:!0,value:s(n,e,r)}:{done:!1}}));r(String.prototype,t,y[0]),r(l,d,y[1])}f&&u(l[d],\"sham\",!0)}},2104:function(t,e,n){var o=n(4374),r=Function.prototype,i=r.apply,a=r.call;t.exports=\"object\"==typeof Reflect&&Reflect.apply||(o?a.bind(i):function(){return a.apply(i,arguments)})},9974:function(t,e,n){var o=n(1470),r=n(9662),i=n(4374),a=o(o.bind);t.exports=function(t,e){return r(t),void 0===e?t:i?a(t,e):function(){return t.apply(e,arguments)}}},4374:function(t,e,n){var o=n(7293);t.exports=!o((function(){var t=function(){}.bind();return\"function\"!=typeof t||t.hasOwnProperty(\"prototype\")}))},6916:function(t,e,n){var o=n(4374),r=Function.prototype.call;t.exports=o?r.bind(r):function(){return r.apply(r,arguments)}},6530:function(t,e,n){var o=n(9781),r=n(2597),i=Function.prototype,a=o&&Object.getOwnPropertyDescriptor,s=r(i,\"name\"),u=s&&\"something\"===function(){}.name,c=s&&(!o||o&&a(i,\"name\").configurable);t.exports={EXISTS:s,PROPER:u,CONFIGURABLE:c}},5668:function(t,e,n){var o=n(1702),r=n(9662);t.exports=function(t,e,n){try{return o(r(Object.getOwnPropertyDescriptor(t,e)[n]))}catch(t){}}},1470:function(t,e,n){var o=n(4326),r=n(1702);t.exports=function(t){if(\"Function\"===o(t))return r(t)}},1702:function(t,e,n){var o=n(4374),r=Function.prototype,i=r.call,a=o&&r.bind.bind(i,i);t.exports=o?a:function(t){return function(){return i.apply(t,arguments)}}},5005:function(t,e,n){var o=n(7854),r=n(614);t.exports=function(t,e){return arguments.length<2?(n=o[t],r(n)?n:void 0):o[t]&&o[t][e];var n}},1246:function(t,e,n){var o=n(648),r=n(8173),i=n(8554),a=n(7497),s=n(5112)(\"iterator\");t.exports=function(t){if(!i(t))return r(t,s)||r(t,\"@@iterator\")||a[o(t)]}},4121:function(t,e,n){var o=n(6916),r=n(9662),i=n(9670),a=n(6330),s=n(1246),u=TypeError;t.exports=function(t,e){var n=arguments.length<2?s(t):e;if(r(n))return i(o(n,t));throw u(a(t)+\" is not iterable\")}},8044:function(t,e,n){var o=n(1702),r=n(3157),i=n(614),a=n(4326),s=n(1340),u=o([].push);t.exports=function(t){if(i(t))return t;if(r(t)){for(var e=t.length,n=[],o=0;o<e;o++){var c=t[o];\"string\"==typeof c?u(n,c):\"number\"!=typeof c&&\"Number\"!=a(c)&&\"String\"!=a(c)||u(n,s(c))}var l=n.length,f=!0;return function(t,e){if(f)return f=!1,e;if(r(this))return e;for(var o=0;o<l;o++)if(n[o]===t)return e}}}},8173:function(t,e,n){var o=n(9662),r=n(8554);t.exports=function(t,e){var n=t[e];return r(n)?void 0:o(n)}},647:function(t,e,n){var o=n(1702),r=n(7908),i=Math.floor,a=o(\"\".charAt),s=o(\"\".replace),u=o(\"\".slice),c=/\\$([$&'`]|\\d{1,2}|<[^>]*>)/g,l=/\\$([$&'`]|\\d{1,2})/g;t.exports=function(t,e,n,o,f,d){var p=n+t.length,h=o.length,v=l;return void 0!==f&&(f=r(f),v=c),s(d,v,(function(r,s){var c;switch(a(s,0)){case\"$\":return\"$\";case\"&\":return t;case\"`\":return u(e,0,n);case\"'\":return u(e,p);case\"<\":c=f[u(s,1,-1)];break;default:var l=+s;if(0===l)return r;if(l>h){var d=i(l/10);return 0===d?r:d<=h?void 0===o[d-1]?a(s,1):o[d-1]+a(s,1):r}c=o[l-1]}return void 0===c?\"\":c}))}},7854:function(t,e,n){var o=function(t){return t&&t.Math==Math&&t};t.exports=o(\"object\"==typeof globalThis&&globalThis)||o(\"object\"==typeof window&&window)||o(\"object\"==typeof self&&self)||o(\"object\"==typeof n.g&&n.g)||function(){return this}()||this||Function(\"return this\")()},2597:function(t,e,n){var o=n(1702),r=n(7908),i=o({}.hasOwnProperty);t.exports=Object.hasOwn||function(t,e){return i(r(t),e)}},3501:function(t){t.exports={}},490:function(t,e,n){var o=n(5005);t.exports=o(\"document\",\"documentElement\")},4664:function(t,e,n){var o=n(9781),r=n(7293),i=n(317);t.exports=!o&&!r((function(){return 7!=Object.defineProperty(i(\"div\"),\"a\",{get:function(){return 7}}).a}))},8361:function(t,e,n){var o=n(1702),r=n(7293),i=n(4326),a=Object,s=o(\"\".split);t.exports=r((function(){return!a(\"z\").propertyIsEnumerable(0)}))?function(t){return\"String\"==i(t)?s(t,\"\"):a(t)}:a},9587:function(t,e,n){var o=n(614),r=n(111),i=n(7674);t.exports=function(t,e,n){var a,s;return i&&o(a=e.constructor)&&a!==n&&r(s=a.prototype)&&s!==n.prototype&&i(t,s),t}},2788:function(t,e,n){var o=n(1702),r=n(614),i=n(5465),a=o(Function.toString);r(i.inspectSource)||(i.inspectSource=function(t){return a(t)}),t.exports=i.inspectSource},9909:function(t,e,n){var o,r,i,a=n(4811),s=n(7854),u=n(111),c=n(8880),l=n(2597),f=n(5465),d=n(6200),p=n(3501),h=\"Object already initialized\",v=s.TypeError,y=s.WeakMap;if(a||f.state){var g=f.state||(f.state=new y);g.get=g.get,g.has=g.has,g.set=g.set,o=function(t,e){if(g.has(t))throw v(h);return e.facade=t,g.set(t,e),e},r=function(t){return g.get(t)||{}},i=function(t){return g.has(t)}}else{var m=d(\"state\");p[m]=!0,o=function(t,e){if(l(t,m))throw v(h);return e.facade=t,c(t,m,e),e},r=function(t){return l(t,m)?t[m]:{}},i=function(t){return l(t,m)}}t.exports={set:o,get:r,has:i,enforce:function(t){return i(t)?r(t):o(t,{})},getterFor:function(t){return function(e){var n;if(!u(e)||(n=r(e)).type!==t)throw v(\"Incompatible receiver, \"+t+\" required\");return n}}}},7659:function(t,e,n){var o=n(5112),r=n(7497),i=o(\"iterator\"),a=Array.prototype;t.exports=function(t){return void 0!==t&&(r.Array===t||a[i]===t)}},3157:function(t,e,n){var o=n(4326);t.exports=Array.isArray||function(t){return\"Array\"==o(t)}},614:function(t,e,n){var o=n(4154),r=o.all;t.exports=o.IS_HTMLDDA?function(t){return\"function\"==typeof t||t===r}:function(t){return\"function\"==typeof t}},4411:function(t,e,n){var o=n(1702),r=n(7293),i=n(614),a=n(648),s=n(5005),u=n(2788),c=function(){},l=[],f=s(\"Reflect\",\"construct\"),d=/^\\s*(?:class|function)\\b/,p=o(d.exec),h=!d.exec(c),v=function(t){if(!i(t))return!1;try{return f(c,l,t),!0}catch(t){return!1}},y=function(t){if(!i(t))return!1;switch(a(t)){case\"AsyncFunction\":case\"GeneratorFunction\":case\"AsyncGeneratorFunction\":return!1}try{return h||!!p(d,u(t))}catch(t){return!0}};y.sham=!0,t.exports=!f||r((function(){var t;return v(v.call)||!v(Object)||!v((function(){t=!0}))||t}))?y:v},4705:function(t,e,n){var o=n(7293),r=n(614),i=/#|\\.prototype\\./,a=function(t,e){var n=u[s(t)];return n==l||n!=c&&(r(e)?o(e):!!e)},s=a.normalize=function(t){return String(t).replace(i,\".\").toLowerCase()},u=a.data={},c=a.NATIVE=\"N\",l=a.POLYFILL=\"P\";t.exports=a},5988:function(t,e,n){var o=n(111),r=Math.floor;t.exports=Number.isInteger||function(t){return!o(t)&&isFinite(t)&&r(t)===t}},8554:function(t){t.exports=function(t){return null==t}},111:function(t,e,n){var o=n(614),r=n(4154),i=r.all;t.exports=r.IS_HTMLDDA?function(t){return\"object\"==typeof t?null!==t:o(t)||t===i}:function(t){return\"object\"==typeof t?null!==t:o(t)}},1913:function(t){t.exports=!1},7850:function(t,e,n){var o=n(111),r=n(4326),i=n(5112)(\"match\");t.exports=function(t){var e;return o(t)&&(void 0!==(e=t[i])?!!e:\"RegExp\"==r(t))}},2190:function(t,e,n){var o=n(5005),r=n(614),i=n(7976),a=n(3307),s=Object;t.exports=a?function(t){return\"symbol\"==typeof t}:function(t){var e=o(\"Symbol\");return r(e)&&i(e.prototype,s(t))}},9212:function(t,e,n){var o=n(6916),r=n(9670),i=n(8173);t.exports=function(t,e,n){var a,s;r(t);try{if(!(a=i(t,\"return\"))){if(\"throw\"===e)throw n;return n}a=o(a,t)}catch(t){s=!0,a=t}if(\"throw\"===e)throw n;if(s)throw a;return r(a),n}},3061:function(t,e,n){\"use strict\";var o=n(3383).IteratorPrototype,r=n(30),i=n(9114),a=n(8003),s=n(7497),u=function(){return this};t.exports=function(t,e,n,c){var l=e+\" Iterator\";return t.prototype=r(o,{next:i(+!c,n)}),a(t,l,!1,!0),s[l]=u,t}},1656:function(t,e,n){\"use strict\";var o=n(2109),r=n(6916),i=n(1913),a=n(6530),s=n(614),u=n(3061),c=n(9518),l=n(7674),f=n(8003),d=n(8880),p=n(8052),h=n(5112),v=n(7497),y=n(3383),g=a.PROPER,m=a.CONFIGURABLE,b=y.IteratorPrototype,x=y.BUGGY_SAFARI_ITERATORS,w=h(\"iterator\"),E=\"keys\",S=\"values\",O=\"entries\",k=function(){return this};t.exports=function(t,e,n,a,h,y,P){u(n,e,a);var I,C,A,M=function(t){if(t===h&&R)return R;if(!x&&t in j)return j[t];switch(t){case E:case S:case O:return function(){return new n(this,t)}}return function(){return new n(this)}},T=e+\" Iterator\",D=!1,j=t.prototype,N=j[w]||j[\"@@iterator\"]||h&&j[h],R=!x&&N||M(h),L=\"Array\"==e&&j.entries||N;if(L&&(I=c(L.call(new t)))!==Object.prototype&&I.next&&(i||c(I)===b||(l?l(I,b):s(I[w])||p(I,w,k)),f(I,T,!0,!0),i&&(v[T]=k)),g&&h==S&&N&&N.name!==S&&(!i&&m?d(j,\"name\",S):(D=!0,R=function(){return r(N,this)})),h)if(C={values:M(S),keys:y?R:M(E),entries:M(O)},P)for(A in C)(x||D||!(A in j))&&p(j,A,C[A]);else o({target:e,proto:!0,forced:x||D},C);return i&&!P||j[w]===R||p(j,w,R,{name:h}),v[e]=R,C}},3383:function(t,e,n){\"use strict\";var o,r,i,a=n(7293),s=n(614),u=n(111),c=n(30),l=n(9518),f=n(8052),d=n(5112),p=n(1913),h=d(\"iterator\"),v=!1;[].keys&&(\"next\"in(i=[].keys())?(r=l(l(i)))!==Object.prototype&&(o=r):v=!0),!u(o)||a((function(){var t={};return o[h].call(t)!==t}))?o={}:p&&(o=c(o)),s(o[h])||f(o,h,(function(){return this})),t.exports={IteratorPrototype:o,BUGGY_SAFARI_ITERATORS:v}},7497:function(t){t.exports={}},6244:function(t,e,n){var o=n(7466);t.exports=function(t){return o(t.length)}},6339:function(t,e,n){var o=n(1702),r=n(7293),i=n(614),a=n(2597),s=n(9781),u=n(6530).CONFIGURABLE,c=n(2788),l=n(9909),f=l.enforce,d=l.get,p=String,h=Object.defineProperty,v=o(\"\".slice),y=o(\"\".replace),g=o([].join),m=s&&!r((function(){return 8!==h((function(){}),\"length\",{value:8}).length})),b=String(String).split(\"String\"),x=t.exports=function(t,e,n){\"Symbol(\"===v(p(e),0,7)&&(e=\"[\"+y(p(e),/^Symbol\\(([^)]*)\\)/,\"$1\")+\"]\"),n&&n.getter&&(e=\"get \"+e),n&&n.setter&&(e=\"set \"+e),(!a(t,\"name\")||u&&t.name!==e)&&(s?h(t,\"name\",{value:e,configurable:!0}):t.name=e),m&&n&&a(n,\"arity\")&&t.length!==n.arity&&h(t,\"length\",{value:n.arity});try{n&&a(n,\"constructor\")&&n.constructor?s&&h(t,\"prototype\",{writable:!1}):t.prototype&&(t.prototype=void 0)}catch(t){}var o=f(t);return a(o,\"source\")||(o.source=g(b,\"string\"==typeof e?e:\"\")),t};Function.prototype.toString=x((function(){return i(this)&&d(this).source||c(this)}),\"toString\")},4758:function(t){var e=Math.ceil,n=Math.floor;t.exports=Math.trunc||function(t){var o=+t;return(o>0?n:e)(o)}},3929:function(t,e,n){var o=n(7850),r=TypeError;t.exports=function(t){if(o(t))throw r(\"The method doesn't accept regular expressions\");return t}},1574:function(t,e,n){\"use strict\";var o=n(9781),r=n(1702),i=n(6916),a=n(7293),s=n(1956),u=n(5181),c=n(5296),l=n(7908),f=n(8361),d=Object.assign,p=Object.defineProperty,h=r([].concat);t.exports=!d||a((function(){if(o&&1!==d({b:1},d(p({},\"a\",{enumerable:!0,get:function(){p(this,\"b\",{value:3,enumerable:!1})}}),{b:2})).b)return!0;var t={},e={},n=Symbol(),r=\"abcdefghijklmnopqrst\";return t[n]=7,r.split(\"\").forEach((function(t){e[t]=t})),7!=d({},t)[n]||s(d({},e)).join(\"\")!=r}))?function(t,e){for(var n=l(t),r=arguments.length,a=1,d=u.f,p=c.f;r>a;)for(var v,y=f(arguments[a++]),g=d?h(s(y),d(y)):s(y),m=g.length,b=0;m>b;)v=g[b++],o&&!i(p,y,v)||(n[v]=y[v]);return n}:d},30:function(t,e,n){var o,r=n(9670),i=n(6048),a=n(748),s=n(3501),u=n(490),c=n(317),l=n(6200),f=\"prototype\",d=\"script\",p=l(\"IE_PROTO\"),h=function(){},v=function(t){return\"<\"+d+\">\"+t+\"</\"+d+\">\"},y=function(t){t.write(v(\"\")),t.close();var e=t.parentWindow.Object;return t=null,e},g=function(){try{o=new ActiveXObject(\"htmlfile\")}catch(t){}var t,e,n;g=\"undefined\"!=typeof document?document.domain&&o?y(o):(e=c(\"iframe\"),n=\"java\"+d+\":\",e.style.display=\"none\",u.appendChild(e),e.src=String(n),(t=e.contentWindow.document).open(),t.write(v(\"document.F=Object\")),t.close(),t.F):y(o);for(var r=a.length;r--;)delete g[f][a[r]];return g()};s[p]=!0,t.exports=Object.create||function(t,e){var n;return null!==t?(h[f]=r(t),n=new h,h[f]=null,n[p]=t):n=g(),void 0===e?n:i.f(n,e)}},6048:function(t,e,n){var o=n(9781),r=n(3353),i=n(3070),a=n(9670),s=n(5656),u=n(1956);e.f=o&&!r?Object.defineProperties:function(t,e){a(t);for(var n,o=s(e),r=u(e),c=r.length,l=0;c>l;)i.f(t,n=r[l++],o[n]);return t}},3070:function(t,e,n){var o=n(9781),r=n(4664),i=n(3353),a=n(9670),s=n(4948),u=TypeError,c=Object.defineProperty,l=Object.getOwnPropertyDescriptor,f=\"enumerable\",d=\"configurable\",p=\"writable\";e.f=o?i?function(t,e,n){if(a(t),e=s(e),a(n),\"function\"==typeof t&&\"prototype\"===e&&\"value\"in n&&p in n&&!n[p]){var o=l(t,e);o&&o[p]&&(t[e]=n.value,n={configurable:d in n?n[d]:o[d],enumerable:f in n?n[f]:o[f],writable:!1})}return c(t,e,n)}:c:function(t,e,n){if(a(t),e=s(e),a(n),r)try{return c(t,e,n)}catch(t){}if(\"get\"in n||\"set\"in n)throw u(\"Accessors not supported\");return\"value\"in n&&(t[e]=n.value),t}},1236:function(t,e,n){var o=n(9781),r=n(6916),i=n(5296),a=n(9114),s=n(5656),u=n(4948),c=n(2597),l=n(4664),f=Object.getOwnPropertyDescriptor;e.f=o?f:function(t,e){if(t=s(t),e=u(e),l)try{return f(t,e)}catch(t){}if(c(t,e))return a(!r(i.f,t,e),t[e])}},1156:function(t,e,n){var o=n(4326),r=n(5656),i=n(8006).f,a=n(1589),s=\"object\"==typeof window&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[];t.exports.f=function(t){return s&&\"Window\"==o(t)?function(t){try{return i(t)}catch(t){return a(s)}}(t):i(r(t))}},8006:function(t,e,n){var o=n(6324),r=n(748).concat(\"length\",\"prototype\");e.f=Object.getOwnPropertyNames||function(t){return o(t,r)}},5181:function(t,e){e.f=Object.getOwnPropertySymbols},9518:function(t,e,n){var o=n(2597),r=n(614),i=n(7908),a=n(6200),s=n(8544),u=a(\"IE_PROTO\"),c=Object,l=c.prototype;t.exports=s?c.getPrototypeOf:function(t){var e=i(t);if(o(e,u))return e[u];var n=e.constructor;return r(n)&&e instanceof n?n.prototype:e instanceof c?l:null}},7976:function(t,e,n){var o=n(1702);t.exports=o({}.isPrototypeOf)},6324:function(t,e,n){var o=n(1702),r=n(2597),i=n(5656),a=n(1318).indexOf,s=n(3501),u=o([].push);t.exports=function(t,e){var n,o=i(t),c=0,l=[];for(n in o)!r(s,n)&&r(o,n)&&u(l,n);for(;e.length>c;)r(o,n=e[c++])&&(~a(l,n)||u(l,n));return l}},1956:function(t,e,n){var o=n(6324),r=n(748);t.exports=Object.keys||function(t){return o(t,r)}},5296:function(t,e){\"use strict\";var n={}.propertyIsEnumerable,o=Object.getOwnPropertyDescriptor,r=o&&!n.call({1:2},1);e.f=r?function(t){var e=o(this,t);return!!e&&e.enumerable}:n},9026:function(t,e,n){\"use strict\";var o=n(1913),r=n(7854),i=n(7293),a=n(8008);t.exports=o||!i((function(){if(!(a&&a<535)){var t=Math.random();__defineSetter__.call(null,t,(function(){})),delete r[t]}}))},7674:function(t,e,n){var o=n(5668),r=n(9670),i=n(6077);t.exports=Object.setPrototypeOf||(\"__proto__\"in{}?function(){var t,e=!1,n={};try{(t=o(Object.prototype,\"__proto__\",\"set\"))(n,[]),e=n instanceof Array}catch(t){}return function(n,o){return r(n),i(o),e?t(n,o):n.__proto__=o,n}}():void 0)},288:function(t,e,n){\"use strict\";var o=n(1694),r=n(648);t.exports=o?{}.toString:function(){return\"[object \"+r(this)+\"]\"}},2140:function(t,e,n){var o=n(6916),r=n(614),i=n(111),a=TypeError;t.exports=function(t,e){var n,s;if(\"string\"===e&&r(n=t.toString)&&!i(s=o(n,t)))return s;if(r(n=t.valueOf)&&!i(s=o(n,t)))return s;if(\"string\"!==e&&r(n=t.toString)&&!i(s=o(n,t)))return s;throw a(\"Can't convert object to primitive value\")}},3887:function(t,e,n){var o=n(5005),r=n(1702),i=n(8006),a=n(5181),s=n(9670),u=r([].concat);t.exports=o(\"Reflect\",\"ownKeys\")||function(t){var e=i.f(s(t)),n=a.f;return n?u(e,n(t)):e}},857:function(t,e,n){var o=n(7854);t.exports=o},2626:function(t,e,n){var o=n(3070).f;t.exports=function(t,e,n){n in t||o(t,n,{configurable:!0,get:function(){return e[n]},set:function(t){e[n]=t}})}},7651:function(t,e,n){var o=n(6916),r=n(9670),i=n(614),a=n(4326),s=n(2261),u=TypeError;t.exports=function(t,e){var n=t.exec;if(i(n)){var c=o(n,t,e);return null!==c&&r(c),c}if(\"RegExp\"===a(t))return o(s,t,e);throw u(\"RegExp#exec called on incompatible receiver\")}},2261:function(t,e,n){\"use strict\";var o,r,i=n(6916),a=n(1702),s=n(1340),u=n(7066),c=n(2999),l=n(2309),f=n(30),d=n(9909).get,p=n(9441),h=n(7168),v=l(\"native-string-replace\",String.prototype.replace),y=RegExp.prototype.exec,g=y,m=a(\"\".charAt),b=a(\"\".indexOf),x=a(\"\".replace),w=a(\"\".slice),E=(r=/b*/g,i(y,o=/a/,\"a\"),i(y,r,\"a\"),0!==o.lastIndex||0!==r.lastIndex),S=c.BROKEN_CARET,O=void 0!==/()??/.exec(\"\")[1];(E||O||S||p||h)&&(g=function(t){var e,n,o,r,a,c,l,p=this,h=d(p),k=s(t),P=h.raw;if(P)return P.lastIndex=p.lastIndex,e=i(g,P,k),p.lastIndex=P.lastIndex,e;var I=h.groups,C=S&&p.sticky,A=i(u,p),M=p.source,T=0,D=k;if(C&&(A=x(A,\"y\",\"\"),-1===b(A,\"g\")&&(A+=\"g\"),D=w(k,p.lastIndex),p.lastIndex>0&&(!p.multiline||p.multiline&&\"\\n\"!==m(k,p.lastIndex-1))&&(M=\"(?: \"+M+\")\",D=\" \"+D,T++),n=new RegExp(\"^(?:\"+M+\")\",A)),O&&(n=new RegExp(\"^\"+M+\"$(?!\\\\s)\",A)),E&&(o=p.lastIndex),r=i(y,C?n:p,D),C?r?(r.input=w(r.input,T),r[0]=w(r[0],T),r.index=p.lastIndex,p.lastIndex+=r[0].length):p.lastIndex=0:E&&r&&(p.lastIndex=p.global?r.index+r[0].length:o),O&&r&&r.length>1&&i(v,r[0],n,(function(){for(a=1;a<arguments.length-2;a++)void 0===arguments[a]&&(r[a]=void 0)})),r&&I)for(r.groups=c=f(null),a=0;a<I.length;a++)c[(l=I[a])[0]]=r[l[1]];return r}),t.exports=g},7066:function(t,e,n){\"use strict\";var o=n(9670);t.exports=function(){var t=o(this),e=\"\";return t.hasIndices&&(e+=\"d\"),t.global&&(e+=\"g\"),t.ignoreCase&&(e+=\"i\"),t.multiline&&(e+=\"m\"),t.dotAll&&(e+=\"s\"),t.unicode&&(e+=\"u\"),t.unicodeSets&&(e+=\"v\"),t.sticky&&(e+=\"y\"),e}},4706:function(t,e,n){var o=n(6916),r=n(2597),i=n(7976),a=n(7066),s=RegExp.prototype;t.exports=function(t){var e=t.flags;return void 0!==e||\"flags\"in s||r(t,\"flags\")||!i(s,t)?e:o(a,t)}},2999:function(t,e,n){var o=n(7293),r=n(7854).RegExp,i=o((function(){var t=r(\"a\",\"y\");return t.lastIndex=2,null!=t.exec(\"abcd\")})),a=i||o((function(){return!r(\"a\",\"y\").sticky})),s=i||o((function(){var t=r(\"^r\",\"gy\");return t.lastIndex=2,null!=t.exec(\"str\")}));t.exports={BROKEN_CARET:s,MISSED_STICKY:a,UNSUPPORTED_Y:i}},9441:function(t,e,n){var o=n(7293),r=n(7854).RegExp;t.exports=o((function(){var t=r(\".\",\"s\");return!(t.dotAll&&t.exec(\"\\n\")&&\"s\"===t.flags)}))},7168:function(t,e,n){var o=n(7293),r=n(7854).RegExp;t.exports=o((function(){var t=r(\"(?<a>b)\",\"g\");return\"b\"!==t.exec(\"b\").groups.a||\"bc\"!==\"b\".replace(t,\"$<a>c\")}))},4488:function(t,e,n){var o=n(8554),r=TypeError;t.exports=function(t){if(o(t))throw r(\"Can't call method on \"+t);return t}},6340:function(t,e,n){\"use strict\";var o=n(5005),r=n(7045),i=n(5112),a=n(9781),s=i(\"species\");t.exports=function(t){var e=o(t);a&&e&&!e[s]&&r(e,s,{configurable:!0,get:function(){return this}})}},8003:function(t,e,n){var o=n(3070).f,r=n(2597),i=n(5112)(\"toStringTag\");t.exports=function(t,e,n){t&&!n&&(t=t.prototype),t&&!r(t,i)&&o(t,i,{configurable:!0,value:e})}},6200:function(t,e,n){var o=n(2309),r=n(9711),i=o(\"keys\");t.exports=function(t){return i[t]||(i[t]=r(t))}},5465:function(t,e,n){var o=n(7854),r=n(3072),i=\"__core-js_shared__\",a=o[i]||r(i,{});t.exports=a},2309:function(t,e,n){var o=n(1913),r=n(5465);(t.exports=function(t,e){return r[t]||(r[t]=void 0!==e?e:{})})(\"versions\",[]).push({version:\"3.30.2\",mode:o?\"pure\":\"global\",copyright:\"© 2014-2023 Denis Pushkarev (zloirock.ru)\",license:\"https://github.com/zloirock/core-js/blob/v3.30.2/LICENSE\",source:\"https://github.com/zloirock/core-js\"})},6707:function(t,e,n){var o=n(9670),r=n(9483),i=n(8554),a=n(5112)(\"species\");t.exports=function(t,e){var n,s=o(t).constructor;return void 0===s||i(n=o(s)[a])?e:r(n)}},8710:function(t,e,n){var o=n(1702),r=n(9303),i=n(1340),a=n(4488),s=o(\"\".charAt),u=o(\"\".charCodeAt),c=o(\"\".slice),l=function(t){return function(e,n){var o,l,f=i(a(e)),d=r(n),p=f.length;return d<0||d>=p?t?\"\":void 0:(o=u(f,d))<55296||o>56319||d+1===p||(l=u(f,d+1))<56320||l>57343?t?s(f,d):o:t?c(f,d,d+2):l-56320+(o-55296<<10)+65536}};t.exports={codeAt:l(!1),charAt:l(!0)}},6091:function(t,e,n){var o=n(6530).PROPER,r=n(7293),i=n(1361);t.exports=function(t){return r((function(){return!!i[t]()||\"​᠎\"!==\"​᠎\"[t]()||o&&i[t].name!==t}))}},3111:function(t,e,n){var o=n(1702),r=n(4488),i=n(1340),a=n(1361),s=o(\"\".replace),u=RegExp(\"^[\"+a+\"]+\"),c=RegExp(\"(^|[^\"+a+\"])[\"+a+\"]+$\"),l=function(t){return function(e){var n=i(r(e));return 1&t&&(n=s(n,u,\"\")),2&t&&(n=s(n,c,\"$1\")),n}};t.exports={start:l(1),end:l(2),trim:l(3)}},6293:function(t,e,n){var o=n(7392),r=n(7293),i=n(7854).String;t.exports=!!Object.getOwnPropertySymbols&&!r((function(){var t=Symbol();return!i(t)||!(Object(t)instanceof Symbol)||!Symbol.sham&&o&&o<41}))},6532:function(t,e,n){var o=n(6916),r=n(5005),i=n(5112),a=n(8052);t.exports=function(){var t=r(\"Symbol\"),e=t&&t.prototype,n=e&&e.valueOf,s=i(\"toPrimitive\");e&&!e[s]&&a(e,s,(function(t){return o(n,this)}),{arity:1})}},2015:function(t,e,n){var o=n(6293);t.exports=o&&!!Symbol.for&&!!Symbol.keyFor},863:function(t,e,n){var o=n(1702);t.exports=o(1..valueOf)},1400:function(t,e,n){var o=n(9303),r=Math.max,i=Math.min;t.exports=function(t,e){var n=o(t);return n<0?r(n+e,0):i(n,e)}},5656:function(t,e,n){var o=n(8361),r=n(4488);t.exports=function(t){return o(r(t))}},9303:function(t,e,n){var o=n(4758);t.exports=function(t){var e=+t;return e!=e||0===e?0:o(e)}},7466:function(t,e,n){var o=n(9303),r=Math.min;t.exports=function(t){return t>0?r(o(t),9007199254740991):0}},7908:function(t,e,n){var o=n(4488),r=Object;t.exports=function(t){return r(o(t))}},7593:function(t,e,n){var o=n(6916),r=n(111),i=n(2190),a=n(8173),s=n(2140),u=n(5112),c=TypeError,l=u(\"toPrimitive\");t.exports=function(t,e){if(!r(t)||i(t))return t;var n,u=a(t,l);if(u){if(void 0===e&&(e=\"default\"),n=o(u,t,e),!r(n)||i(n))return n;throw c(\"Can't convert object to primitive value\")}return void 0===e&&(e=\"number\"),s(t,e)}},4948:function(t,e,n){var o=n(7593),r=n(2190);t.exports=function(t){var e=o(t,\"string\");return r(e)?e:e+\"\"}},1694:function(t,e,n){var o={};o[n(5112)(\"toStringTag\")]=\"z\",t.exports=\"[object z]\"===String(o)},1340:function(t,e,n){var o=n(648),r=String;t.exports=function(t){if(\"Symbol\"===o(t))throw TypeError(\"Cannot convert a Symbol value to a string\");return r(t)}},6330:function(t){var e=String;t.exports=function(t){try{return e(t)}catch(t){return\"Object\"}}},9711:function(t,e,n){var o=n(1702),r=0,i=Math.random(),a=o(1..toString);t.exports=function(t){return\"Symbol(\"+(void 0===t?\"\":t)+\")_\"+a(++r+i,36)}},3307:function(t,e,n){var o=n(6293);t.exports=o&&!Symbol.sham&&\"symbol\"==typeof Symbol.iterator},3353:function(t,e,n){var o=n(9781),r=n(7293);t.exports=o&&r((function(){return 42!=Object.defineProperty((function(){}),\"prototype\",{value:42,writable:!1}).prototype}))},4811:function(t,e,n){var o=n(7854),r=n(614),i=o.WeakMap;t.exports=r(i)&&/native code/.test(String(i))},6800:function(t,e,n){var o=n(857),r=n(2597),i=n(6061),a=n(3070).f;t.exports=function(t){var e=o.Symbol||(o.Symbol={});r(e,t)||a(e,t,{value:i.f(t)})}},6061:function(t,e,n){var o=n(5112);e.f=o},5112:function(t,e,n){var o=n(7854),r=n(2309),i=n(2597),a=n(9711),s=n(6293),u=n(3307),c=o.Symbol,l=r(\"wks\"),f=u?c.for||c:c&&c.withoutSetter||a;t.exports=function(t){return i(l,t)||(l[t]=s&&i(c,t)?c[t]:f(\"Symbol.\"+t)),l[t]}},1361:function(t){t.exports=\"\\t\\n\\v\\f\\r                　\\u2028\\u2029\\ufeff\"},2222:function(t,e,n){\"use strict\";var o=n(2109),r=n(7293),i=n(3157),a=n(111),s=n(7908),u=n(6244),c=n(7207),l=n(6135),f=n(5417),d=n(1194),p=n(5112),h=n(7392),v=p(\"isConcatSpreadable\"),y=h>=51||!r((function(){var t=[];return t[v]=!1,t.concat()[0]!==t})),g=function(t){if(!a(t))return!1;var e=t[v];return void 0!==e?!!e:i(t)};o({target:\"Array\",proto:!0,arity:1,forced:!y||!d(\"concat\")},{concat:function(t){var e,n,o,r,i,a=s(this),d=f(a,0),p=0;for(e=-1,o=arguments.length;e<o;e++)if(g(i=-1===e?a:arguments[e]))for(r=u(i),c(p+r),n=0;n<r;n++,p++)n in i&&l(d,p,i[n]);else c(p+1),l(d,p++,i);return d.length=p,d}})},7327:function(t,e,n){\"use strict\";var o=n(2109),r=n(2092).filter;o({target:\"Array\",proto:!0,forced:!n(1194)(\"filter\")},{filter:function(t){return r(this,t,arguments.length>1?arguments[1]:void 0)}})},1038:function(t,e,n){var o=n(2109),r=n(8457);o({target:\"Array\",stat:!0,forced:!n(7072)((function(t){Array.from(t)}))},{from:r})},6699:function(t,e,n){\"use strict\";var o=n(2109),r=n(1318).includes,i=n(7293),a=n(1223);o({target:\"Array\",proto:!0,forced:i((function(){return!Array(1).includes()}))},{includes:function(t){return r(this,t,arguments.length>1?arguments[1]:void 0)}}),a(\"includes\")},2772:function(t,e,n){\"use strict\";var o=n(2109),r=n(1470),i=n(1318).indexOf,a=n(9341),s=r([].indexOf),u=!!s&&1/s([1],1,-0)<0;o({target:\"Array\",proto:!0,forced:u||!a(\"indexOf\")},{indexOf:function(t){var e=arguments.length>1?arguments[1]:void 0;return u?s(this,t,e)||0:i(this,t,e)}})},6992:function(t,e,n){\"use strict\";var o=n(5656),r=n(1223),i=n(7497),a=n(9909),s=n(3070).f,u=n(1656),c=n(6178),l=n(1913),f=n(9781),d=\"Array Iterator\",p=a.set,h=a.getterFor(d);t.exports=u(Array,\"Array\",(function(t,e){p(this,{type:d,target:o(t),index:0,kind:e})}),(function(){var t=h(this),e=t.target,n=t.kind,o=t.index++;return!e||o>=e.length?(t.target=void 0,c(void 0,!0)):c(\"keys\"==n?o:\"values\"==n?e[o]:[o,e[o]],!1)}),\"values\");var v=i.Arguments=i.Array;if(r(\"keys\"),r(\"values\"),r(\"entries\"),!l&&f&&\"values\"!==v.name)try{s(v,\"name\",{value:\"values\"})}catch(t){}},9600:function(t,e,n){\"use strict\";var o=n(2109),r=n(1702),i=n(8361),a=n(5656),s=n(9341),u=r([].join);o({target:\"Array\",proto:!0,forced:i!=Object||!s(\"join\",\",\")},{join:function(t){return u(a(this),void 0===t?\",\":t)}})},1249:function(t,e,n){\"use strict\";var o=n(2109),r=n(2092).map;o({target:\"Array\",proto:!0,forced:!n(1194)(\"map\")},{map:function(t){return r(this,t,arguments.length>1?arguments[1]:void 0)}})},5827:function(t,e,n){\"use strict\";var o=n(2109),r=n(3671).left,i=n(9341),a=n(7392);o({target:\"Array\",proto:!0,forced:!n(5268)&&a>79&&a<83||!i(\"reduce\")},{reduce:function(t){var e=arguments.length;return r(this,t,e,e>1?arguments[1]:void 0)}})},7042:function(t,e,n){\"use strict\";var o=n(2109),r=n(3157),i=n(4411),a=n(111),s=n(1400),u=n(6244),c=n(5656),l=n(6135),f=n(5112),d=n(1194),p=n(206),h=d(\"slice\"),v=f(\"species\"),y=Array,g=Math.max;o({target:\"Array\",proto:!0,forced:!h},{slice:function(t,e){var n,o,f,d=c(this),h=u(d),m=s(t,h),b=s(void 0===e?h:e,h);if(r(d)&&(n=d.constructor,(i(n)&&(n===y||r(n.prototype))||a(n)&&null===(n=n[v]))&&(n=void 0),n===y||void 0===n))return p(d,m,b);for(o=new(void 0===n?y:n)(g(b-m,0)),f=0;m<b;m++,f++)m in d&&l(o,f,d[m]);return o.length=f,o}})},2707:function(t,e,n){\"use strict\";var o=n(2109),r=n(1702),i=n(9662),a=n(7908),s=n(6244),u=n(5117),c=n(1340),l=n(7293),f=n(4362),d=n(9341),p=n(8886),h=n(256),v=n(7392),y=n(8008),g=[],m=r(g.sort),b=r(g.push),x=l((function(){g.sort(void 0)})),w=l((function(){g.sort(null)})),E=d(\"sort\"),S=!l((function(){if(v)return v<70;if(!(p&&p>3)){if(h)return!0;if(y)return y<603;var t,e,n,o,r=\"\";for(t=65;t<76;t++){switch(e=String.fromCharCode(t),t){case 66:case 69:case 70:case 72:n=3;break;case 68:case 71:n=4;break;default:n=2}for(o=0;o<47;o++)g.push({k:e+o,v:n})}for(g.sort((function(t,e){return e.v-t.v})),o=0;o<g.length;o++)e=g[o].k.charAt(0),r.charAt(r.length-1)!==e&&(r+=e);return\"DGBEFHACIJK\"!==r}}));o({target:\"Array\",proto:!0,forced:x||!w||!E||!S},{sort:function(t){void 0!==t&&i(t);var e=a(this);if(S)return void 0===t?m(e):m(e,t);var n,o,r=[],l=s(e);for(o=0;o<l;o++)o in e&&b(r,e[o]);for(f(r,function(t){return function(e,n){return void 0===n?-1:void 0===e?1:void 0!==t?+t(e,n)||0:c(e)>c(n)?1:-1}}(t)),n=s(r),o=0;o<n;)e[o]=r[o++];for(;o<l;)u(e,o++);return e}})},561:function(t,e,n){\"use strict\";var o=n(2109),r=n(7908),i=n(1400),a=n(9303),s=n(6244),u=n(3658),c=n(7207),l=n(5417),f=n(6135),d=n(5117),p=n(1194)(\"splice\"),h=Math.max,v=Math.min;o({target:\"Array\",proto:!0,forced:!p},{splice:function(t,e){var n,o,p,y,g,m,b=r(this),x=s(b),w=i(t,x),E=arguments.length;for(0===E?n=o=0:1===E?(n=0,o=x-w):(n=E-2,o=v(h(a(e),0),x-w)),c(x+n-o),p=l(b,o),y=0;y<o;y++)(g=w+y)in b&&f(p,y,b[g]);if(p.length=o,n<o){for(y=w;y<x-o;y++)m=y+n,(g=y+o)in b?b[m]=b[g]:d(b,m);for(y=x;y>x-o+n;y--)d(b,y-1)}else if(n>o)for(y=x-o;y>w;y--)m=y+n-1,(g=y+o-1)in b?b[m]=b[g]:d(b,m);for(y=0;y<n;y++)b[y+w]=arguments[y+2];return u(b,x-o+n),p}})},6078:function(t,e,n){var o=n(2597),r=n(8052),i=n(8709),a=n(5112)(\"toPrimitive\"),s=Date.prototype;o(s,a)||r(s,a,i)},8309:function(t,e,n){var o=n(9781),r=n(6530).EXISTS,i=n(1702),a=n(7045),s=Function.prototype,u=i(s.toString),c=/function\\b(?:\\s|\\/\\*[\\S\\s]*?\\*\\/|\\/\\/[^\\n\\r]*[\\n\\r]+)*([^\\s(/]*)/,l=i(c.exec);o&&!r&&a(s,\"name\",{configurable:!0,get:function(){try{return l(c,u(this))[1]}catch(t){return\"\"}}})},8862:function(t,e,n){var o=n(2109),r=n(5005),i=n(2104),a=n(6916),s=n(1702),u=n(7293),c=n(614),l=n(2190),f=n(206),d=n(8044),p=n(6293),h=String,v=r(\"JSON\",\"stringify\"),y=s(/./.exec),g=s(\"\".charAt),m=s(\"\".charCodeAt),b=s(\"\".replace),x=s(1..toString),w=/[\\uD800-\\uDFFF]/g,E=/^[\\uD800-\\uDBFF]$/,S=/^[\\uDC00-\\uDFFF]$/,O=!p||u((function(){var t=r(\"Symbol\")();return\"[null]\"!=v([t])||\"{}\"!=v({a:t})||\"{}\"!=v(Object(t))})),k=u((function(){return'\"\\\\udf06\\\\ud834\"'!==v(\"\\udf06\\ud834\")||'\"\\\\udead\"'!==v(\"\\udead\")})),P=function(t,e){var n=f(arguments),o=d(e);if(c(o)||void 0!==t&&!l(t))return n[1]=function(t,e){if(c(o)&&(e=a(o,this,h(t),e)),!l(e))return e},i(v,null,n)},I=function(t,e,n){var o=g(n,e-1),r=g(n,e+1);return y(E,t)&&!y(S,r)||y(S,t)&&!y(E,o)?\"\\\\u\"+x(m(t,0),16):t};v&&o({target:\"JSON\",stat:!0,arity:3,forced:O||k},{stringify:function(t,e,n){var o=f(arguments),r=i(O?P:v,null,o);return k&&\"string\"==typeof r?b(r,w,I):r}})},9653:function(t,e,n){\"use strict\";var o=n(2109),r=n(1913),i=n(9781),a=n(7854),s=n(857),u=n(1702),c=n(4705),l=n(2597),f=n(9587),d=n(7976),p=n(2190),h=n(7593),v=n(7293),y=n(8006).f,g=n(1236).f,m=n(3070).f,b=n(863),x=n(3111).trim,w=\"Number\",E=a[w],S=s[w],O=E.prototype,k=a.TypeError,P=u(\"\".slice),I=u(\"\".charCodeAt),C=function(t){var e,n,o,r,i,a,s,u,c=h(t,\"number\");if(p(c))throw k(\"Cannot convert a Symbol value to a number\");if(\"string\"==typeof c&&c.length>2)if(c=x(c),43===(e=I(c,0))||45===e){if(88===(n=I(c,2))||120===n)return NaN}else if(48===e){switch(I(c,1)){case 66:case 98:o=2,r=49;break;case 79:case 111:o=8,r=55;break;default:return+c}for(a=(i=P(c,2)).length,s=0;s<a;s++)if((u=I(i,s))<48||u>r)return NaN;return parseInt(i,o)}return+c},A=c(w,!E(\" 0o1\")||!E(\"0b1\")||E(\"+0x1\")),M=function(t){var e,n=arguments.length<1?0:E(function(t){var e=h(t,\"number\");return\"bigint\"==typeof e?e:C(e)}(t));return d(O,e=this)&&v((function(){b(e)}))?f(Object(n),this,M):n};M.prototype=O,A&&!r&&(O.constructor=M),o({global:!0,constructor:!0,wrap:!0,forced:A},{Number:M});var T=function(t,e){for(var n,o=i?y(e):\"MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,EPSILON,MAX_SAFE_INTEGER,MIN_SAFE_INTEGER,isFinite,isInteger,isNaN,isSafeInteger,parseFloat,parseInt,fromString,range\".split(\",\"),r=0;o.length>r;r++)l(e,n=o[r])&&!l(t,n)&&m(t,n,g(e,n))};r&&S&&T(s[w],S),(A||r)&&T(s[w],E)},3161:function(t,e,n){n(2109)({target:\"Number\",stat:!0},{isInteger:n(5988)})},9601:function(t,e,n){var o=n(2109),r=n(1574);o({target:\"Object\",stat:!0,arity:2,forced:Object.assign!==r},{assign:r})},9595:function(t,e,n){\"use strict\";var o=n(2109),r=n(9781),i=n(9026),a=n(9662),s=n(7908),u=n(3070);r&&o({target:\"Object\",proto:!0,forced:i},{__defineGetter__:function(t,e){u.f(s(this),t,{get:a(e),enumerable:!0,configurable:!0})}})},5003:function(t,e,n){var o=n(2109),r=n(7293),i=n(5656),a=n(1236).f,s=n(9781);o({target:\"Object\",stat:!0,forced:!s||r((function(){a(1)})),sham:!s},{getOwnPropertyDescriptor:function(t,e){return a(i(t),e)}})},9337:function(t,e,n){var o=n(2109),r=n(9781),i=n(3887),a=n(5656),s=n(1236),u=n(6135);o({target:\"Object\",stat:!0,sham:!r},{getOwnPropertyDescriptors:function(t){for(var e,n,o=a(t),r=s.f,c=i(o),l={},f=0;c.length>f;)void 0!==(n=r(o,e=c[f++]))&&u(l,e,n);return l}})},6210:function(t,e,n){var o=n(2109),r=n(7293),i=n(1156).f;o({target:\"Object\",stat:!0,forced:r((function(){return!Object.getOwnPropertyNames(1)}))},{getOwnPropertyNames:i})},9660:function(t,e,n){var o=n(2109),r=n(6293),i=n(7293),a=n(5181),s=n(7908);o({target:\"Object\",stat:!0,forced:!r||i((function(){a.f(1)}))},{getOwnPropertySymbols:function(t){var e=a.f;return e?e(s(t)):[]}})},7941:function(t,e,n){var o=n(2109),r=n(7908),i=n(1956);o({target:\"Object\",stat:!0,forced:n(7293)((function(){i(1)}))},{keys:function(t){return i(r(t))}})},1539:function(t,e,n){var o=n(1694),r=n(8052),i=n(288);o||r(Object.prototype,\"toString\",i,{unsafe:!0})},4603:function(t,e,n){var o=n(9781),r=n(7854),i=n(1702),a=n(4705),s=n(9587),u=n(8880),c=n(8006).f,l=n(7976),f=n(7850),d=n(1340),p=n(4706),h=n(2999),v=n(2626),y=n(8052),g=n(7293),m=n(2597),b=n(9909).enforce,x=n(6340),w=n(5112),E=n(9441),S=n(7168),O=w(\"match\"),k=r.RegExp,P=k.prototype,I=r.SyntaxError,C=i(P.exec),A=i(\"\".charAt),M=i(\"\".replace),T=i(\"\".indexOf),D=i(\"\".slice),j=/^\\?<[^\\s\\d!#%&*+<=>@^][^\\s!#%&*+<=>@^]*>/,N=/a/g,R=/a/g,L=new k(N)!==N,B=h.MISSED_STICKY,K=h.UNSUPPORTED_Y,F=o&&(!L||B||E||S||g((function(){return R[O]=!1,k(N)!=N||k(R)==R||\"/a/i\"!=k(N,\"i\")})));if(a(\"RegExp\",F)){for(var _=function(t,e){var n,o,r,i,a,c,h=l(P,this),v=f(t),y=void 0===e,g=[],x=t;if(!h&&v&&y&&t.constructor===_)return t;if((v||l(P,t))&&(t=t.source,y&&(e=p(x))),t=void 0===t?\"\":d(t),e=void 0===e?\"\":d(e),x=t,E&&\"dotAll\"in N&&(o=!!e&&T(e,\"s\")>-1)&&(e=M(e,/s/g,\"\")),n=e,B&&\"sticky\"in N&&(r=!!e&&T(e,\"y\")>-1)&&K&&(e=M(e,/y/g,\"\")),S&&(i=function(t){for(var e,n=t.length,o=0,r=\"\",i=[],a={},s=!1,u=!1,c=0,l=\"\";o<=n;o++){if(\"\\\\\"===(e=A(t,o)))e+=A(t,++o);else if(\"]\"===e)s=!1;else if(!s)switch(!0){case\"[\"===e:s=!0;break;case\"(\"===e:C(j,D(t,o+1))&&(o+=2,u=!0),r+=e,c++;continue;case\">\"===e&&u:if(\"\"===l||m(a,l))throw new I(\"Invalid capture group name\");a[l]=!0,i[i.length]=[l,c],u=!1,l=\"\";continue}u?l+=e:r+=e}return[r,i]}(t),t=i[0],g=i[1]),a=s(k(t,e),h?this:P,_),(o||r||g.length)&&(c=b(a),o&&(c.dotAll=!0,c.raw=_(function(t){for(var e,n=t.length,o=0,r=\"\",i=!1;o<=n;o++)\"\\\\\"!==(e=A(t,o))?i||\".\"!==e?(\"[\"===e?i=!0:\"]\"===e&&(i=!1),r+=e):r+=\"[\\\\s\\\\S]\":r+=e+A(t,++o);return r}(t),n)),r&&(c.sticky=!0),g.length&&(c.groups=g)),t!==x)try{u(a,\"source\",\"\"===x?\"(?:)\":x)}catch(t){}return a},H=c(k),U=0;H.length>U;)v(_,k,H[U++]);P.constructor=_,_.prototype=P,y(r,\"RegExp\",_,{constructor:!0})}x(\"RegExp\")},4916:function(t,e,n){\"use strict\";var o=n(2109),r=n(2261);o({target:\"RegExp\",proto:!0,forced:/./.exec!==r},{exec:r})},9714:function(t,e,n){\"use strict\";var o=n(6530).PROPER,r=n(8052),i=n(9670),a=n(1340),s=n(7293),u=n(4706),c=\"toString\",l=RegExp.prototype[c],f=s((function(){return\"/a/b\"!=l.call({source:\"a\",flags:\"b\"})})),d=o&&l.name!=c;(f||d)&&r(RegExp.prototype,c,(function(){var t=i(this);return\"/\"+a(t.source)+\"/\"+a(u(t))}),{unsafe:!0})},2023:function(t,e,n){\"use strict\";var o=n(2109),r=n(1702),i=n(3929),a=n(4488),s=n(1340),u=n(4964),c=r(\"\".indexOf);o({target:\"String\",proto:!0,forced:!u(\"includes\")},{includes:function(t){return!!~c(s(a(this)),s(i(t)),arguments.length>1?arguments[1]:void 0)}})},8783:function(t,e,n){\"use strict\";var o=n(8710).charAt,r=n(1340),i=n(9909),a=n(1656),s=n(6178),u=\"String Iterator\",c=i.set,l=i.getterFor(u);a(String,\"String\",(function(t){c(this,{type:u,string:r(t),index:0})}),(function(){var t,e=l(this),n=e.string,r=e.index;return r>=n.length?s(void 0,!0):(t=o(n,r),e.index+=t.length,s(t,!1))}))},6373:function(t,e,n){\"use strict\";var o=n(2109),r=n(6916),i=n(1470),a=n(3061),s=n(6178),u=n(4488),c=n(7466),l=n(1340),f=n(9670),d=n(8554),p=n(4326),h=n(7850),v=n(4706),y=n(8173),g=n(8052),m=n(7293),b=n(5112),x=n(6707),w=n(1530),E=n(7651),S=n(9909),O=n(1913),k=b(\"matchAll\"),P=\"RegExp String\",I=P+\" Iterator\",C=S.set,A=S.getterFor(I),M=RegExp.prototype,T=TypeError,D=i(\"\".indexOf),j=i(\"\".matchAll),N=!!j&&!m((function(){j(\"a\",/./)})),R=a((function(t,e,n,o){C(this,{type:I,regexp:t,string:e,global:n,unicode:o,done:!1})}),P,(function(){var t=A(this);if(t.done)return s(void 0,!0);var e=t.regexp,n=t.string,o=E(e,n);return null===o?(t.done=!0,s(void 0,!0)):t.global?(\"\"===l(o[0])&&(e.lastIndex=w(n,c(e.lastIndex),t.unicode)),s(o,!1)):(t.done=!0,s(o,!1))})),L=function(t){var e,n,o,r=f(this),i=l(t),a=x(r,RegExp),s=l(v(r));return e=new a(a===RegExp?r.source:r,s),n=!!~D(s,\"g\"),o=!!~D(s,\"u\"),e.lastIndex=c(r.lastIndex),new R(e,i,n,o)};o({target:\"String\",proto:!0,forced:N},{matchAll:function(t){var e,n,o,i,a=u(this);if(d(t)){if(N)return j(a,t)}else{if(h(t)&&(e=l(u(v(t))),!~D(e,\"g\")))throw T(\"`.matchAll` does not allow non-global regexes\");if(N)return j(a,t);if(void 0===(o=y(t,k))&&O&&\"RegExp\"==p(t)&&(o=L),o)return r(o,t,a)}return n=l(a),i=new RegExp(t,\"g\"),O?r(L,i,n):i[k](n)}}),O||k in M||g(M,k,L)},4723:function(t,e,n){\"use strict\";var o=n(6916),r=n(7007),i=n(9670),a=n(8554),s=n(7466),u=n(1340),c=n(4488),l=n(8173),f=n(1530),d=n(7651);r(\"match\",(function(t,e,n){return[function(e){var n=c(this),r=a(e)?void 0:l(e,t);return r?o(r,e,n):new RegExp(e)[t](u(n))},function(t){var o=i(this),r=u(t),a=n(e,o,r);if(a.done)return a.value;if(!o.global)return d(o,r);var c=o.unicode;o.lastIndex=0;for(var l,p=[],h=0;null!==(l=d(o,r));){var v=u(l[0]);p[h]=v,\"\"===v&&(o.lastIndex=f(r,s(o.lastIndex),c)),h++}return 0===h?null:p}]}))},5306:function(t,e,n){\"use strict\";var o=n(2104),r=n(6916),i=n(1702),a=n(7007),s=n(7293),u=n(9670),c=n(614),l=n(8554),f=n(9303),d=n(7466),p=n(1340),h=n(4488),v=n(1530),y=n(8173),g=n(647),m=n(7651),b=n(5112)(\"replace\"),x=Math.max,w=Math.min,E=i([].concat),S=i([].push),O=i(\"\".indexOf),k=i(\"\".slice),P=\"$0\"===\"a\".replace(/./,\"$0\"),I=!!/./[b]&&\"\"===/./[b](\"a\",\"$0\");a(\"replace\",(function(t,e,n){var i=I?\"$\":\"$0\";return[function(t,n){var o=h(this),i=l(t)?void 0:y(t,b);return i?r(i,t,o,n):r(e,p(o),t,n)},function(t,r){var a=u(this),s=p(t);if(\"string\"==typeof r&&-1===O(r,i)&&-1===O(r,\"$<\")){var l=n(e,a,s,r);if(l.done)return l.value}var h=c(r);h||(r=p(r));var y=a.global;if(y){var b=a.unicode;a.lastIndex=0}for(var P=[];;){var I=m(a,s);if(null===I)break;if(S(P,I),!y)break;\"\"===p(I[0])&&(a.lastIndex=v(s,d(a.lastIndex),b))}for(var C,A=\"\",M=0,T=0;T<P.length;T++){for(var D=p((I=P[T])[0]),j=x(w(f(I.index),s.length),0),N=[],R=1;R<I.length;R++)S(N,void 0===(C=I[R])?C:String(C));var L=I.groups;if(h){var B=E([D],N,j,s);void 0!==L&&S(B,L);var K=p(o(r,void 0,B))}else K=g(D,s,j,N,L,r);j>=M&&(A+=k(s,M,j)+K,M=j+D.length)}return A+k(s,M)}]}),!!s((function(){var t=/./;return t.exec=function(){var t=[];return t.groups={a:\"7\"},t},\"7\"!==\"\".replace(t,\"$<a>\")}))||!P||I)},3123:function(t,e,n){\"use strict\";var o=n(2104),r=n(6916),i=n(1702),a=n(7007),s=n(9670),u=n(8554),c=n(7850),l=n(4488),f=n(6707),d=n(1530),p=n(7466),h=n(1340),v=n(8173),y=n(1589),g=n(7651),m=n(2261),b=n(2999),x=n(7293),w=b.UNSUPPORTED_Y,E=4294967295,S=Math.min,O=[].push,k=i(/./.exec),P=i(O),I=i(\"\".slice),C=!x((function(){var t=/(?:)/,e=t.exec;t.exec=function(){return e.apply(this,arguments)};var n=\"ab\".split(t);return 2!==n.length||\"a\"!==n[0]||\"b\"!==n[1]}));a(\"split\",(function(t,e,n){var i;return i=\"c\"==\"abbc\".split(/(b)*/)[1]||4!=\"test\".split(/(?:)/,-1).length||2!=\"ab\".split(/(?:ab)*/).length||4!=\".\".split(/(.?)(.?)/).length||\".\".split(/()()/).length>1||\"\".split(/.?/).length?function(t,n){var i=h(l(this)),a=void 0===n?E:n>>>0;if(0===a)return[];if(void 0===t)return[i];if(!c(t))return r(e,i,t,a);for(var s,u,f,d=[],p=(t.ignoreCase?\"i\":\"\")+(t.multiline?\"m\":\"\")+(t.unicode?\"u\":\"\")+(t.sticky?\"y\":\"\"),v=0,g=new RegExp(t.source,p+\"g\");(s=r(m,g,i))&&!((u=g.lastIndex)>v&&(P(d,I(i,v,s.index)),s.length>1&&s.index<i.length&&o(O,d,y(s,1)),f=s[0].length,v=u,d.length>=a));)g.lastIndex===s.index&&g.lastIndex++;return v===i.length?!f&&k(g,\"\")||P(d,\"\"):P(d,I(i,v)),d.length>a?y(d,0,a):d}:\"0\".split(void 0,0).length?function(t,n){return void 0===t&&0===n?[]:r(e,this,t,n)}:e,[function(e,n){var o=l(this),a=u(e)?void 0:v(e,t);return a?r(a,e,o,n):r(i,h(o),e,n)},function(t,o){var r=s(this),a=h(t),u=n(i,r,a,o,i!==e);if(u.done)return u.value;var c=f(r,RegExp),l=r.unicode,v=(r.ignoreCase?\"i\":\"\")+(r.multiline?\"m\":\"\")+(r.unicode?\"u\":\"\")+(w?\"g\":\"y\"),y=new c(w?\"^(?:\"+r.source+\")\":r,v),m=void 0===o?E:o>>>0;if(0===m)return[];if(0===a.length)return null===g(y,a)?[a]:[];for(var b=0,x=0,O=[];x<a.length;){y.lastIndex=w?0:x;var k,C=g(y,w?I(a,x):a);if(null===C||(k=S(p(y.lastIndex+(w?x:0)),a.length))===b)x=d(a,x,l);else{if(P(O,I(a,b,x)),O.length===m)return O;for(var A=1;A<=C.length-1;A++)if(P(O,C[A]),O.length===m)return O;x=b=k}}return P(O,I(a,b)),O}]}),!C,w)},3210:function(t,e,n){\"use strict\";var o=n(2109),r=n(3111).trim;o({target:\"String\",proto:!0,forced:n(6091)(\"trim\")},{trim:function(){return r(this)}})},4032:function(t,e,n){\"use strict\";var o=n(2109),r=n(7854),i=n(6916),a=n(1702),s=n(1913),u=n(9781),c=n(6293),l=n(7293),f=n(2597),d=n(7976),p=n(9670),h=n(5656),v=n(4948),y=n(1340),g=n(9114),m=n(30),b=n(1956),x=n(8006),w=n(1156),E=n(5181),S=n(1236),O=n(3070),k=n(6048),P=n(5296),I=n(8052),C=n(7045),A=n(2309),M=n(6200),T=n(3501),D=n(9711),j=n(5112),N=n(6061),R=n(6800),L=n(6532),B=n(8003),K=n(9909),F=n(2092).forEach,_=M(\"hidden\"),H=\"Symbol\",U=\"prototype\",$=K.set,G=K.getterFor(H),V=Object[U],z=r.Symbol,Y=z&&z[U],W=r.TypeError,X=r.QObject,J=S.f,q=O.f,Q=w.f,Z=P.f,tt=a([].push),et=A(\"symbols\"),nt=A(\"op-symbols\"),ot=A(\"wks\"),rt=!X||!X[U]||!X[U].findChild,it=u&&l((function(){return 7!=m(q({},\"a\",{get:function(){return q(this,\"a\",{value:7}).a}})).a}))?function(t,e,n){var o=J(V,e);o&&delete V[e],q(t,e,n),o&&t!==V&&q(V,e,o)}:q,at=function(t,e){var n=et[t]=m(Y);return $(n,{type:H,tag:t,description:e}),u||(n.description=e),n},st=function(t,e,n){t===V&&st(nt,e,n),p(t);var o=v(e);return p(n),f(et,o)?(n.enumerable?(f(t,_)&&t[_][o]&&(t[_][o]=!1),n=m(n,{enumerable:g(0,!1)})):(f(t,_)||q(t,_,g(1,{})),t[_][o]=!0),it(t,o,n)):q(t,o,n)},ut=function(t,e){p(t);var n=h(e),o=b(n).concat(dt(n));return F(o,(function(e){u&&!i(ct,n,e)||st(t,e,n[e])})),t},ct=function(t){var e=v(t),n=i(Z,this,e);return!(this===V&&f(et,e)&&!f(nt,e))&&(!(n||!f(this,e)||!f(et,e)||f(this,_)&&this[_][e])||n)},lt=function(t,e){var n=h(t),o=v(e);if(n!==V||!f(et,o)||f(nt,o)){var r=J(n,o);return!r||!f(et,o)||f(n,_)&&n[_][o]||(r.enumerable=!0),r}},ft=function(t){var e=Q(h(t)),n=[];return F(e,(function(t){f(et,t)||f(T,t)||tt(n,t)})),n},dt=function(t){var e=t===V,n=Q(e?nt:h(t)),o=[];return F(n,(function(t){!f(et,t)||e&&!f(V,t)||tt(o,et[t])})),o};c||(z=function(){if(d(Y,this))throw W(\"Symbol is not a constructor\");var t=arguments.length&&void 0!==arguments[0]?y(arguments[0]):void 0,e=D(t),n=function(t){this===V&&i(n,nt,t),f(this,_)&&f(this[_],e)&&(this[_][e]=!1),it(this,e,g(1,t))};return u&&rt&&it(V,e,{configurable:!0,set:n}),at(e,t)},I(Y=z[U],\"toString\",(function(){return G(this).tag})),I(z,\"withoutSetter\",(function(t){return at(D(t),t)})),P.f=ct,O.f=st,k.f=ut,S.f=lt,x.f=w.f=ft,E.f=dt,N.f=function(t){return at(j(t),t)},u&&(C(Y,\"description\",{configurable:!0,get:function(){return G(this).description}}),s||I(V,\"propertyIsEnumerable\",ct,{unsafe:!0}))),o({global:!0,constructor:!0,wrap:!0,forced:!c,sham:!c},{Symbol:z}),F(b(ot),(function(t){R(t)})),o({target:H,stat:!0,forced:!c},{useSetter:function(){rt=!0},useSimple:function(){rt=!1}}),o({target:\"Object\",stat:!0,forced:!c,sham:!u},{create:function(t,e){return void 0===e?m(t):ut(m(t),e)},defineProperty:st,defineProperties:ut,getOwnPropertyDescriptor:lt}),o({target:\"Object\",stat:!0,forced:!c},{getOwnPropertyNames:ft}),L(),B(z,H),T[_]=!0},1817:function(t,e,n){\"use strict\";var o=n(2109),r=n(9781),i=n(7854),a=n(1702),s=n(2597),u=n(614),c=n(7976),l=n(1340),f=n(7045),d=n(9920),p=i.Symbol,h=p&&p.prototype;if(r&&u(p)&&(!(\"description\"in h)||void 0!==p().description)){var v={},y=function(){var t=arguments.length<1||void 0===arguments[0]?void 0:l(arguments[0]),e=c(h,this)?new p(t):void 0===t?p():p(t);return\"\"===t&&(v[e]=!0),e};d(y,p),y.prototype=h,h.constructor=y;var g=\"Symbol(test)\"==String(p(\"test\")),m=a(h.valueOf),b=a(h.toString),x=/^Symbol\\((.*)\\)[^)]+$/,w=a(\"\".replace),E=a(\"\".slice);f(h,\"description\",{configurable:!0,get:function(){var t=m(this);if(s(v,t))return\"\";var e=b(t),n=g?E(e,7,-1):w(e,x,\"$1\");return\"\"===n?void 0:n}}),o({global:!0,constructor:!0,forced:!0},{Symbol:y})}},763:function(t,e,n){var o=n(2109),r=n(5005),i=n(2597),a=n(1340),s=n(2309),u=n(2015),c=s(\"string-to-symbol-registry\"),l=s(\"symbol-to-string-registry\");o({target:\"Symbol\",stat:!0,forced:!u},{for:function(t){var e=a(t);if(i(c,e))return c[e];var n=r(\"Symbol\")(e);return c[e]=n,l[n]=e,n}})},2165:function(t,e,n){n(6800)(\"iterator\")},2526:function(t,e,n){n(4032),n(763),n(6620),n(8862),n(9660)},6620:function(t,e,n){var o=n(2109),r=n(2597),i=n(2190),a=n(6330),s=n(2309),u=n(2015),c=s(\"symbol-to-string-registry\");o({target:\"Symbol\",stat:!0,forced:!u},{keyFor:function(t){if(!i(t))throw TypeError(a(t)+\" is not a symbol\");if(r(c,t))return c[t]}})},6649:function(t,e,n){var o=n(6800),r=n(6532);o(\"toPrimitive\"),r()},3728:function(t,e,n){n(6373)},4747:function(t,e,n){var o=n(7854),r=n(8324),i=n(8509),a=n(8533),s=n(8880),u=function(t){if(t&&t.forEach!==a)try{s(t,\"forEach\",a)}catch(e){t.forEach=a}};for(var c in r)r[c]&&u(o[c]&&o[c].prototype);u(i)},3948:function(t,e,n){var o=n(7854),r=n(8324),i=n(8509),a=n(6992),s=n(8880),u=n(5112),c=u(\"iterator\"),l=u(\"toStringTag\"),f=a.values,d=function(t,e){if(t){if(t[c]!==f)try{s(t,c,f)}catch(e){t[c]=f}if(t[l]||s(t,l,e),r[e])for(var n in a)if(t[n]!==a[n])try{s(t,n,a[n])}catch(e){t[n]=a[n]}}};for(var p in r)d(o[p]&&o[p].prototype,p);d(i,\"DOMTokenList\")}},e={};function n(o){var r=e[o];if(void 0!==r)return r.exports;var i=e[o]={exports:{}};return t[o].call(i.exports,i,i.exports,n),i.exports}n.d=function(t,e){for(var o in e)n.o(e,o)&&!n.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:e[o]})},n.g=function(){if(\"object\"==typeof globalThis)return globalThis;try{return this||new Function(\"return this\")()}catch(t){if(\"object\"==typeof window)return window}}(),n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.r=function(t){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(t,\"__esModule\",{value:!0})};var o={};return function(){\"use strict\";n.r(o),n.d(o,{SimpleKeyboard:function(){return M},default:function(){return T}});n(3210),n(4916),n(5306),n(2772),n(8309),n(3123),n(1539),n(9714),n(561),n(9600),n(9595),n(7042);\"undefined\"==typeof Element||\"remove\"in Element.prototype||(Element.prototype.remove=function(){this.parentNode&&this.parentNode.removeChild(this)}),\"undefined\"!=typeof self&&\"document\"in self&&((!(\"classList\"in document.createElement(\"_\"))||document.createElementNS&&!(\"classList\"in document.createElementNS(\"http://www.w3.org/2000/svg\",\"g\")))&&function(t){if(\"Element\"in t){var e=\"classList\",n=\"prototype\",o=t.Element[n],r=Object,i=String[n].trim||function(){return this.replace(/^\\s+|\\s+$/g,\"\")},a=Array[n].indexOf||function(t){for(var e=0,n=this.length;e<n;e++)if(e in this&&this[e]===t)return e;return-1},s=function(t,e){this.name=t,this.code=DOMException[t],this.message=e},u=function(t,e){if(\"\"===e)throw new s(\"SYNTAX_ERR\",\"The token must not be empty.\");if(/\\s/.test(e))throw new s(\"INVALID_CHARACTER_ERR\",\"The token must not contain space characters.\");return a.call(t,e)},c=function(t){for(var e=i.call(t.getAttribute(\"class\")||\"\"),n=e?e.split(/\\s+/):[],o=0,r=n.length;o<r;o++)this.push(n[o]);this._updateClassName=function(){t.setAttribute(\"class\",this.toString())}},l=c[n]=[],f=function(){return new c(this)};if(s[n]=Error[n],l.item=function(t){return this[t]||null},l.contains=function(t){return~u(this,t+\"\")},l.add=function(){var t,e=arguments,n=0,o=e.length,r=!1;do{~u(this,t=e[n]+\"\")||(this.push(t),r=!0)}while(++n<o);r&&this._updateClassName()},l.remove=function(){var t,e,n=arguments,o=0,r=n.length,i=!1;do{for(e=u(this,t=n[o]+\"\");~e;)this.splice(e,1),i=!0,e=u(this,t)}while(++o<r);i&&this._updateClassName()},l.toggle=function(t,e){var n=this.contains(t),o=n?!0!==e&&\"remove\":!1!==e&&\"add\";return o&&this[o](t),!0===e||!1===e?e:!n},l.replace=function(t,e){var n=u(t+\"\");~n&&(this.splice(n,1,e),this._updateClassName())},l.toString=function(){return this.join(\" \")},r.defineProperty){var d={get:f,enumerable:!0,configurable:!0};try{r.defineProperty(o,e,d)}catch(t){void 0!==t.number&&-2146823252!==t.number||(d.enumerable=!1,r.defineProperty(o,e,d))}}else r[n].__defineGetter__&&o.__defineGetter__(e,f)}}(self),function(){var t=document.createElement(\"_\");if(t.classList.add(\"c1\",\"c2\"),!t.classList.contains(\"c2\")){var e=function(t){var e=DOMTokenList.prototype[t];DOMTokenList.prototype[t]=function(t){var n,o=arguments.length;for(n=0;n<o;n++)t=arguments[n],e.call(this,t)}};e(\"add\"),e(\"remove\")}if(t.classList.toggle(\"c3\",!1),t.classList.contains(\"c3\")){var n=DOMTokenList.prototype.toggle;DOMTokenList.prototype.toggle=function(t,e){return 1 in arguments&&!this.contains(t)==!e?e:n.call(this,t)}}\"replace\"in document.createElement(\"_\").classList||(DOMTokenList.prototype.replace=function(t,e){var n=this.toString().split(\" \"),o=n.indexOf(t+\"\");~o&&(n=n.slice(o),this.remove.apply(this,n),this.add(e),this.add.apply(this,n.slice(1)))}),t=null}());n(7327),n(2222),n(7941),n(4603),n(3728),n(2707),n(6699),n(2023),n(4747),n(9601),n(1249),n(1038),n(8783),n(6649),n(6078),n(2526),n(1817),n(9653),n(5003),n(9337),n(2165),n(6992),n(3948),n(3161),n(4723),n(5827),n(6210);function t(t){return function(t){if(Array.isArray(t))return r(t)}(t)||function(t){if(\"undefined\"!=typeof Symbol&&null!=t[Symbol.iterator]||null!=t[\"@@iterator\"])return Array.from(t)}(t)||e(t)||function(){throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()}function e(t,e){if(t){if(\"string\"==typeof t)return r(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);return\"Object\"===n&&t.constructor&&(n=t.constructor.name),\"Map\"===n||\"Set\"===n?Array.from(t):\"Arguments\"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?r(t,e):void 0}}function r(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,o=new Array(e);n<e;n++)o[n]=t[n];return o}function i(t){return i=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t},i(t)}function a(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,\"value\"in o&&(o.writable=!0),Object.defineProperty(t,u(o.key),o)}}function s(t,e,n){return(e=u(e))in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function u(t){var e=function(t,e){if(\"object\"!==i(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var o=n.call(t,e||\"default\");if(\"object\"!==i(o))return o;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return(\"string\"===e?String:Number)(t)}(t,\"string\");return\"symbol\"===i(e)?e:String(e)}var c=function(){function n(t){var e=t.getOptions,o=t.getCaretPosition,r=t.getCaretPositionEnd,i=t.dispatch;!function(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}(this,n),s(this,\"getOptions\",void 0),s(this,\"getCaretPosition\",void 0),s(this,\"getCaretPositionEnd\",void 0),s(this,\"dispatch\",void 0),s(this,\"maxLengthReached\",void 0),s(this,\"isStandardButton\",(function(t){return t&&!(\"{\"===t[0]&&\"}\"===t[t.length-1])})),this.getOptions=e,this.getCaretPosition=o,this.getCaretPositionEnd=r,this.dispatch=i,n.bindMethods(n,this)}var o,r,u;return o=n,r=[{key:\"getButtonType\",value:function(t){return t.includes(\"{\")&&t.includes(\"}\")&&\"{//}\"!==t?\"functionBtn\":\"standardBtn\"}},{key:\"getButtonClass\",value:function(t){var e=this.getButtonType(t),n=t.replace(\"{\",\"\").replace(\"}\",\"\"),o=\"\";return\"standardBtn\"!==e&&(o=\" hg-button-\".concat(n)),\"hg-\".concat(e).concat(o)}},{key:\"getDefaultDiplay\",value:function(){return{\"{bksp}\":\"backspace\",\"{backspace}\":\"backspace\",\"{enter}\":\"< enter\",\"{shift}\":\"shift\",\"{shiftleft}\":\"shift\",\"{shiftright}\":\"shift\",\"{alt}\":\"alt\",\"{s}\":\"shift\",\"{tab}\":\"tab\",\"{lock}\":\"caps\",\"{capslock}\":\"caps\",\"{accept}\":\"Submit\",\"{space}\":\" \",\"{//}\":\" \",\"{esc}\":\"esc\",\"{escape}\":\"esc\",\"{f1}\":\"f1\",\"{f2}\":\"f2\",\"{f3}\":\"f3\",\"{f4}\":\"f4\",\"{f5}\":\"f5\",\"{f6}\":\"f6\",\"{f7}\":\"f7\",\"{f8}\":\"f8\",\"{f9}\":\"f9\",\"{f10}\":\"f10\",\"{f11}\":\"f11\",\"{f12}\":\"f12\",\"{numpaddivide}\":\"/\",\"{numlock}\":\"lock\",\"{arrowup}\":\"↑\",\"{arrowleft}\":\"←\",\"{arrowdown}\":\"↓\",\"{arrowright}\":\"→\",\"{prtscr}\":\"print\",\"{scrolllock}\":\"scroll\",\"{pause}\":\"pause\",\"{insert}\":\"ins\",\"{home}\":\"home\",\"{pageup}\":\"up\",\"{delete}\":\"del\",\"{forwarddelete}\":\"del\",\"{end}\":\"end\",\"{pagedown}\":\"down\",\"{numpadmultiply}\":\"*\",\"{numpadsubtract}\":\"-\",\"{numpadadd}\":\"+\",\"{numpadenter}\":\"enter\",\"{period}\":\".\",\"{numpaddecimal}\":\".\",\"{numpad0}\":\"0\",\"{numpad1}\":\"1\",\"{numpad2}\":\"2\",\"{numpad3}\":\"3\",\"{numpad4}\":\"4\",\"{numpad5}\":\"5\",\"{numpad6}\":\"6\",\"{numpad7}\":\"7\",\"{numpad8}\":\"8\",\"{numpad9}\":\"9\"}}},{key:\"getButtonDisplayName\",value:function(t,e){return(e=arguments.length>2&&void 0!==arguments[2]&&arguments[2]?Object.assign({},this.getDefaultDiplay(),e):e||this.getDefaultDiplay())[t]||t}},{key:\"getUpdatedInput\",value:function(t,e,n){var o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:n,r=arguments.length>4&&void 0!==arguments[4]&&arguments[4],i=this.getOptions(),a=[n,o,r],s=e;return(\"{bksp}\"===t||\"{backspace}\"===t)&&s.length>0?s=this.removeAt.apply(this,[s].concat(a)):(\"{delete}\"===t||\"{forwarddelete}\"===t)&&s.length>0?s=this.removeForwardsAt.apply(this,[s].concat(a)):\"{space}\"===t?s=this.addStringAt.apply(this,[s,\" \"].concat(a)):\"{tab}\"!==t||\"boolean\"==typeof i.tabCharOnTab&&!1===i.tabCharOnTab?\"{enter}\"!==t&&\"{numpadenter}\"!==t||!i.newLineOnEnter?t.includes(\"numpad\")&&Number.isInteger(Number(t[t.length-2]))?s=this.addStringAt.apply(this,[s,t[t.length-2]].concat(a)):\"{numpaddivide}\"===t?s=this.addStringAt.apply(this,[s,\"/\"].concat(a)):\"{numpadmultiply}\"===t?s=this.addStringAt.apply(this,[s,\"*\"].concat(a)):\"{numpadsubtract}\"===t?s=this.addStringAt.apply(this,[s,\"-\"].concat(a)):\"{numpadadd}\"===t?s=this.addStringAt.apply(this,[s,\"+\"].concat(a)):\"{numpaddecimal}\"===t?s=this.addStringAt.apply(this,[s,\".\"].concat(a)):\"{\"===t||\"}\"===t?s=this.addStringAt.apply(this,[s,t].concat(a)):t.includes(\"{\")||t.includes(\"}\")||(s=this.addStringAt.apply(this,[s,t].concat(a))):s=this.addStringAt.apply(this,[s,\"\\n\"].concat(a)):s=this.addStringAt.apply(this,[s,\"\\t\"].concat(a)),i.debug&&console.log(\"Input will be: \"+s),s}},{key:\"updateCaretPos\",value:function(t){var e=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=this.updateCaretPosAction(t,e);this.dispatch((function(t){t.setCaretPosition(n)}))}},{key:\"updateCaretPosAction\",value:function(t){var e=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=this.getOptions(),o=this.getCaretPosition();return null!=o&&(e?o>0&&(o-=t):o+=t),n.debug&&console.log(\"Caret at:\",o),o}},{key:\"addStringAt\",value:function(t,e){var n,o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:t.length,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:t.length,i=arguments.length>4&&void 0!==arguments[4]&&arguments[4];return o||0===o?(n=[t.slice(0,o),e,t.slice(r)].join(\"\"),this.isMaxLengthReached()||i&&this.updateCaretPos(e.length)):n=t+e,n}},{key:\"removeAt\",value:function(t){var e,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:t.length,o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:t.length,r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];if(0===n&&0===o)return t;if(n===o){var i=/([\\uD800-\\uDBFF][\\uDC00-\\uDFFF])/g;n&&n>=0?t.substring(n-2,n).match(i)?(e=t.substr(0,n-2)+t.substr(n),r&&this.updateCaretPos(2,!0)):(e=t.substr(0,n-1)+t.substr(n),r&&this.updateCaretPos(1,!0)):t.slice(-2).match(i)?(e=t.slice(0,-2),r&&this.updateCaretPos(2,!0)):(e=t.slice(0,-1),r&&this.updateCaretPos(1,!0))}else e=t.slice(0,n)+t.slice(o),r&&this.dispatch((function(t){t.setCaretPosition(n)}));return e}},{key:\"removeForwardsAt\",value:function(t){var e,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:t.length,o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:t.length,r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];return null!=t&&t.length&&null!==n?(n===o?e=t.substring(n,n+2).match(/([\\uD800-\\uDBFF][\\uDC00-\\uDFFF])/g)?t.substr(0,n)+t.substr(n+2):t.substr(0,n)+t.substr(n+1):(e=t.slice(0,n)+t.slice(o),r&&this.dispatch((function(t){t.setCaretPosition(n)}))),e):t}},{key:\"handleMaxLength\",value:function(t,e){var n=this.getOptions(),o=n.maxLength,r=t[n.inputName||\"default\"],a=e.length-1>=o;if(e.length<=r.length)return!1;if(Number.isInteger(o))return n.debug&&console.log(\"maxLength (num) reached:\",a),a?(this.maxLengthReached=!0,!0):(this.maxLengthReached=!1,!1);if(\"object\"===i(o)){var s=e.length-1>=o[n.inputName||\"default\"];return n.debug&&console.log(\"maxLength (obj) reached:\",s),s?(this.maxLengthReached=!0,!0):(this.maxLengthReached=!1,!1)}}},{key:\"isMaxLengthReached\",value:function(){return Boolean(this.maxLengthReached)}},{key:\"isTouchDevice\",value:function(){return\"ontouchstart\"in window||navigator.maxTouchPoints}},{key:\"pointerEventsSupported\",value:function(){return!!window.PointerEvent}},{key:\"camelCase\",value:function(t){return t?t.toLowerCase().trim().split(/[.\\-_\\s]/g).reduce((function(t,e){return e.length?t+e[0].toUpperCase()+e.slice(1):t})):\"\"}},{key:\"chunkArray\",value:function(e,n){return t(Array(Math.ceil(e.length/n))).map((function(t,o){return e.slice(n*o,n+n*o)}))}},{key:\"escapeRegex\",value:function(t){return t.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g,\"\\\\$&\")}},{key:\"getRtlOffset\",value:function(t,e){var n=t,o=e.indexOf(\"‫\");return o<t&&-1!=o&&n--,e.indexOf(\"‬\")<t&&-1!=o&&n--,n<0?0:n}}],u=[{key:\"bindMethods\",value:function(t,n){var o,r=function(t,n){var o=\"undefined\"!=typeof Symbol&&t[Symbol.iterator]||t[\"@@iterator\"];if(!o){if(Array.isArray(t)||(o=e(t))||n&&t&&\"number\"==typeof t.length){o&&(t=o);var r=0,i=function(){};return{s:i,n:function(){return r>=t.length?{done:!0}:{done:!1,value:t[r++]}},e:function(t){throw t},f:i}}throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}var a,s=!0,u=!1;return{s:function(){o=o.call(t)},n:function(){var t=o.next();return s=t.done,t},e:function(t){u=!0,a=t},f:function(){try{s||null==o.return||o.return()}finally{if(u)throw a}}}}(Object.getOwnPropertyNames(t.prototype));try{for(r.s();!(o=r.n()).done;){var i=o.value;\"constructor\"===i||\"bindMethods\"===i||(n[i]=n[i].bind(n))}}catch(t){r.e(t)}finally{r.f()}}}],r&&a(o.prototype,r),u&&a(o,u),Object.defineProperty(o,\"prototype\",{writable:!1}),n}();s(c,\"noop\",(function(){}));var l=c;function f(t){return f=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t},f(t)}function d(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,\"value\"in o&&(o.writable=!0),Object.defineProperty(t,h(o.key),o)}}function p(t,e,n){return(e=h(e))in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function h(t){var e=function(t,e){if(\"object\"!==f(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var o=n.call(t,e||\"default\");if(\"object\"!==f(o))return o;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return(\"string\"===e?String:Number)(t)}(t,\"string\");return\"symbol\"===f(e)?e:String(e)}var v=function(){function t(e){var n=this,o=e.dispatch,r=e.getOptions;!function(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}(this,t),p(this,\"getOptions\",void 0),p(this,\"dispatch\",void 0),p(this,\"isMofifierKey\",(function(t){return t.altKey||t.ctrlKey||t.shiftKey||[\"Tab\",\"CapsLock\",\"Esc\",\"ArrowUp\",\"ArrowDown\",\"ArrowLeft\",\"ArrowRight\"].includes(t.code||t.key||n.keyCodeToKey(null==t?void 0:t.keyCode))})),this.dispatch=o,this.getOptions=r,l.bindMethods(t,this)}var e,n,o;return e=t,(n=[{key:\"handleHighlightKeyDown\",value:function(t){var e=this.getOptions();e.physicalKeyboardHighlightPreventDefault&&this.isMofifierKey(t)&&(t.preventDefault(),t.stopImmediatePropagation());var n=this.getSimpleKeyboardLayoutKey(t);this.dispatch((function(o){var r,i,a=o.getButtonElement(n),s=o.getButtonElement(\"{\".concat(n,\"}\"));if(a)r=a,i=n;else{if(!s)return;r=s,i=\"{\".concat(n,\"}\")}var u,c=function(t){t.style.background=e.physicalKeyboardHighlightBgColor||\"#dadce4\",t.style.color=e.physicalKeyboardHighlightTextColor||\"black\"};if(r)if(Array.isArray(r)){if(r.forEach((function(t){return c(t)})),e.physicalKeyboardHighlightPress)if(e.physicalKeyboardHighlightPressUsePointerEvents)null===(u=r[0])||void 0===u||u.onpointerdown();else if(e.physicalKeyboardHighlightPressUseClick){var l;null===(l=r[0])||void 0===l||l.click()}else o.handleButtonClicked(i,t)}else c(r),e.physicalKeyboardHighlightPress&&(e.physicalKeyboardHighlightPressUsePointerEvents?r.onpointerdown():e.physicalKeyboardHighlightPressUseClick?r.click():o.handleButtonClicked(i,t))}))}},{key:\"handleHighlightKeyUp\",value:function(t){var e=this.getOptions();e.physicalKeyboardHighlightPreventDefault&&this.isMofifierKey(t)&&(t.preventDefault(),t.stopImmediatePropagation());var n=this.getSimpleKeyboardLayoutKey(t);this.dispatch((function(t){var o,r=t.getButtonElement(n)||t.getButtonElement(\"{\".concat(n,\"}\")),i=function(t){t.removeAttribute&&t.removeAttribute(\"style\")};r&&(Array.isArray(r)?(r.forEach((function(t){return i(t)})),e.physicalKeyboardHighlightPressUsePointerEvents&&(null===(o=r[0])||void 0===o||o.onpointerup())):(i(r),e.physicalKeyboardHighlightPressUsePointerEvents&&r.onpointerup()))}))}},{key:\"getSimpleKeyboardLayoutKey\",value:function(t){var e,n=\"\",o=t.code||t.key||this.keyCodeToKey(null==t?void 0:t.keyCode);return(n=null!=o&&o.includes(\"Numpad\")||null!=o&&o.includes(\"Shift\")||null!=o&&o.includes(\"Space\")||null!=o&&o.includes(\"Backspace\")||null!=o&&o.includes(\"Control\")||null!=o&&o.includes(\"Alt\")||null!=o&&o.includes(\"Meta\")?t.code||\"\":t.key||this.keyCodeToKey(null==t?void 0:t.keyCode)||\"\").length>1?null===(e=n)||void 0===e?void 0:e.toLowerCase():n}},{key:\"keyCodeToKey\",value:function(t){return{8:\"Backspace\",9:\"Tab\",13:\"Enter\",16:\"Shift\",17:\"Ctrl\",18:\"Alt\",19:\"Pause\",20:\"CapsLock\",27:\"Esc\",32:\"Space\",33:\"PageUp\",34:\"PageDown\",35:\"End\",36:\"Home\",37:\"ArrowLeft\",38:\"ArrowUp\",39:\"ArrowRight\",40:\"ArrowDown\",45:\"Insert\",46:\"Delete\",48:\"0\",49:\"1\",50:\"2\",51:\"3\",52:\"4\",53:\"5\",54:\"6\",55:\"7\",56:\"8\",57:\"9\",65:\"A\",66:\"B\",67:\"C\",68:\"D\",69:\"E\",70:\"F\",71:\"G\",72:\"H\",73:\"I\",74:\"J\",75:\"K\",76:\"L\",77:\"M\",78:\"N\",79:\"O\",80:\"P\",81:\"Q\",82:\"R\",83:\"S\",84:\"T\",85:\"U\",86:\"V\",87:\"W\",88:\"X\",89:\"Y\",90:\"Z\",91:\"Meta\",96:\"Numpad0\",97:\"Numpad1\",98:\"Numpad2\",99:\"Numpad3\",100:\"Numpad4\",101:\"Numpad5\",102:\"Numpad6\",103:\"Numpad7\",104:\"Numpad8\",105:\"Numpad9\",106:\"NumpadMultiply\",107:\"NumpadAdd\",109:\"NumpadSubtract\",110:\"NumpadDecimal\",111:\"NumpadDivide\",112:\"F1\",113:\"F2\",114:\"F3\",115:\"F4\",116:\"F5\",117:\"F6\",118:\"F7\",119:\"F8\",120:\"F9\",121:\"F10\",122:\"F11\",123:\"F12\",144:\"NumLock\",145:\"ScrollLock\",186:\";\",187:\"=\",188:\",\",189:\"-\",190:\".\",191:\"/\",192:\"`\",219:\"[\",220:\"\\\\\",221:\"]\",222:\"'\"}[t]||\"\"}}])&&d(e.prototype,n),o&&d(e,o),Object.defineProperty(e,\"prototype\",{writable:!1}),t}();function y(t){return y=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t},y(t)}function g(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,\"value\"in o&&(o.writable=!0),Object.defineProperty(t,b(o.key),o)}}function m(t,e,n){return(e=b(e))in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function b(t){var e=function(t,e){if(\"object\"!==y(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var o=n.call(t,e||\"default\");if(\"object\"!==y(o))return o;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return(\"string\"===e?String:Number)(t)}(t,\"string\");return\"symbol\"===y(e)?e:String(e)}var x=function(){function t(e){var n=e.utilities,o=e.options;!function(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}(this,t),m(this,\"utilities\",void 0),m(this,\"options\",void 0),m(this,\"candidateBoxElement\",void 0),m(this,\"pageIndex\",0),m(this,\"pageSize\",void 0),this.utilities=n,this.options=o,l.bindMethods(t,this),this.pageSize=this.utilities.getOptions().layoutCandidatesPageSize||5}var e,n,o;return e=t,n=[{key:\"destroy\",value:function(){this.candidateBoxElement&&(this.candidateBoxElement.remove(),this.pageIndex=0)}},{key:\"show\",value:function(t){var e=this,n=t.candidateValue,o=t.targetElement,r=t.onSelect;if(n&&n.length){var i=this.utilities.chunkArray(n.split(\" \"),this.pageSize);this.renderPage({candidateListPages:i,targetElement:o,pageIndex:this.pageIndex,nbPages:i.length,onItemSelected:function(t,n){r(t,n),e.destroy()}})}}},{key:\"renderPage\",value:function(t){var e,n=this,o=t.candidateListPages,r=t.targetElement,i=t.pageIndex,a=t.nbPages,s=t.onItemSelected;null===(e=this.candidateBoxElement)||void 0===e||e.remove(),this.candidateBoxElement=document.createElement(\"div\"),this.candidateBoxElement.className=\"hg-candidate-box\";var u=document.createElement(\"ul\");u.className=\"hg-candidate-box-list\",o[i].forEach((function(t){var e,o=document.createElement(\"li\"),r=function(){var t=new(n.options.useTouchEvents?TouchEvent:MouseEvent)(\"click\");return Object.defineProperty(t,\"target\",{value:o}),t};o.className=\"hg-candidate-box-list-item\",o.innerHTML=(null===(e=n.options.display)||void 0===e?void 0:e[t])||t,n.options.useTouchEvents?o.ontouchstart=function(e){return s(t,e||r())}:o.onclick=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:r();return s(t,e)},u.appendChild(o)}));var c=i>0,l=document.createElement(\"div\");l.classList.add(\"hg-candidate-box-prev\"),c&&l.classList.add(\"hg-candidate-box-btn-active\");var f=function(){c&&n.renderPage({candidateListPages:o,targetElement:r,pageIndex:i-1,nbPages:a,onItemSelected:s})};this.options.useTouchEvents?l.ontouchstart=f:l.onclick=f,this.candidateBoxElement.appendChild(l),this.candidateBoxElement.appendChild(u);var d=i<a-1,p=document.createElement(\"div\");p.classList.add(\"hg-candidate-box-next\"),d&&p.classList.add(\"hg-candidate-box-btn-active\");var h=function(){d&&n.renderPage({candidateListPages:o,targetElement:r,pageIndex:i+1,nbPages:a,onItemSelected:s})};this.options.useTouchEvents?p.ontouchstart=h:p.onclick=h,this.candidateBoxElement.appendChild(p),r.prepend(this.candidateBoxElement)}}],n&&g(e.prototype,n),o&&g(e,o),Object.defineProperty(e,\"prototype\",{writable:!1}),t}(),w=x;function E(t){return function(t){if(Array.isArray(t))return S(t)}(t)||function(t){if(\"undefined\"!=typeof Symbol&&null!=t[Symbol.iterator]||null!=t[\"@@iterator\"])return Array.from(t)}(t)||function(t,e){if(!t)return;if(\"string\"==typeof t)return S(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);\"Object\"===n&&t.constructor&&(n=t.constructor.name);if(\"Map\"===n||\"Set\"===n)return Array.from(t);if(\"Arguments\"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return S(t,e)}(t)||function(){throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()}function S(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,o=new Array(e);n<e;n++)o[n]=t[n];return o}function O(t){return O=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t},O(t)}function k(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);e&&(o=o.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,o)}return n}function P(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,\"value\"in o&&(o.writable=!0),Object.defineProperty(t,C(o.key),o)}}function I(t,e,n){return(e=C(e))in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function C(t){var e=function(t,e){if(\"object\"!==O(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var o=n.call(t,e||\"default\");if(\"object\"!==O(o))return o;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return(\"string\"===e?String:Number)(t)}(t,\"string\");return\"symbol\"===O(e)?e:String(e)}var A=function(){function t(e,n){var o=this;if(function(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}(this,t),I(this,\"input\",void 0),I(this,\"options\",void 0),I(this,\"utilities\",void 0),I(this,\"caretPosition\",void 0),I(this,\"caretPositionEnd\",void 0),I(this,\"keyboardDOM\",void 0),I(this,\"keyboardPluginClasses\",void 0),I(this,\"keyboardDOMClass\",void 0),I(this,\"buttonElements\",void 0),I(this,\"currentInstanceName\",void 0),I(this,\"allKeyboardInstances\",void 0),I(this,\"keyboardInstanceNames\",void 0),I(this,\"isFirstKeyboardInstance\",void 0),I(this,\"physicalKeyboard\",void 0),I(this,\"modules\",void 0),I(this,\"activeButtonClass\",void 0),I(this,\"holdInteractionTimeout\",void 0),I(this,\"holdTimeout\",void 0),I(this,\"isMouseHold\",void 0),I(this,\"initialized\",void 0),I(this,\"candidateBox\",void 0),I(this,\"keyboardRowsDOM\",void 0),I(this,\"defaultName\",\"default\"),I(this,\"activeInputElement\",null),I(this,\"handleParams\",(function(t,e){var n,o,r;if(\"string\"==typeof t)n=t.split(\".\").join(\"\"),o=document.querySelector(\".\".concat(n)),r=e;else if(t instanceof HTMLDivElement){if(!t.className)throw console.warn(\"Any DOM element passed as parameter must have a class.\"),new Error(\"KEYBOARD_DOM_CLASS_ERROR\");n=t.className.split(\" \")[0],o=t,r=e}else n=\"simple-keyboard\",o=document.querySelector(\".\".concat(n)),r=t;return{keyboardDOMClass:n,keyboardDOM:o,options:r}})),I(this,\"getOptions\",(function(){return o.options})),I(this,\"getCaretPosition\",(function(){return o.caretPosition})),I(this,\"getCaretPositionEnd\",(function(){return o.caretPositionEnd})),I(this,\"registerModule\",(function(t,e){o.modules[t]||(o.modules[t]={}),e(o.modules[t])})),I(this,\"getKeyboardClassString\",(function(){for(var t=arguments.length,e=new Array(t),n=0;n<t;n++)e[n]=arguments[n];return[o.keyboardDOMClass].concat(e).filter((function(t){return!!t})).join(\" \")})),\"undefined\"!=typeof window){var r=this.handleParams(e,n),i=r.keyboardDOMClass,a=r.keyboardDOM,s=r.options,u=void 0===s?{}:s;this.utilities=new l({getOptions:this.getOptions,getCaretPosition:this.getCaretPosition,getCaretPositionEnd:this.getCaretPositionEnd,dispatch:this.dispatch}),this.caretPosition=null,this.caretPositionEnd=null,this.keyboardDOM=a,this.options=function(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?k(Object(n),!0).forEach((function(e){I(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):k(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}({layoutName:\"default\",theme:\"hg-theme-default\",inputName:\"default\",preventMouseDownDefault:!1,enableLayoutCandidates:!0,excludeFromLayout:{}},u),this.keyboardPluginClasses=\"\",l.bindMethods(t,this);var c=this.options.inputName,f=void 0===c?this.defaultName:c;if(this.input={},this.input[f]=\"\",this.keyboardDOMClass=i,this.buttonElements={},window.SimpleKeyboardInstances||(window.SimpleKeyboardInstances={}),this.currentInstanceName=this.utilities.camelCase(this.keyboardDOMClass),window.SimpleKeyboardInstances[this.currentInstanceName]=this,this.allKeyboardInstances=window.SimpleKeyboardInstances,this.keyboardInstanceNames=Object.keys(window.SimpleKeyboardInstances),this.isFirstKeyboardInstance=this.keyboardInstanceNames[0]===this.currentInstanceName,this.physicalKeyboard=new v({dispatch:this.dispatch,getOptions:this.getOptions}),this.candidateBox=this.options.enableLayoutCandidates?new w({utilities:this.utilities,options:this.options}):null,!this.keyboardDOM)throw console.warn('\".'.concat(i,'\" was not found in the DOM.')),new Error(\"KEYBOARD_DOM_ERROR\");this.render(),this.modules={},this.loadModules()}}var e,n,o;return e=t,n=[{key:\"setCaretPosition\",value:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:t;this.caretPosition=t,this.caretPositionEnd=e}},{key:\"getInputCandidates\",value:function(t){var e=this,n=this.options,o=n.layoutCandidates,r=n.layoutCandidatesCaseSensitiveMatch;if(!o||\"object\"!==O(o))return{};var i=Object.keys(o).filter((function(n){var o=t.substring(0,e.getCaretPositionEnd()||0)||t,i=new RegExp(\"\".concat(e.utilities.escapeRegex(n),\"$\"),r?\"g\":\"gi\");return!!E(o.matchAll(i)).length}));if(i.length>1){var a=i.sort((function(t,e){return e.length-t.length}))[0];return{candidateKey:a,candidateValue:o[a]}}if(i.length){var s=i[0];return{candidateKey:s,candidateValue:o[s]}}return{}}},{key:\"showCandidatesBox\",value:function(t,e,n){var o=this;this.candidateBox&&this.candidateBox.show({candidateValue:e,targetElement:n,onSelect:function(e,n){var r=o.options,i=r.layoutCandidatesCaseSensitiveMatch,a=r.disableCandidateNormalization,s=r.enableLayoutCandidatesKeyPress,u=e;a||(u=e.normalize(\"NFD\"));var c=o.getInput(o.options.inputName,!0),l=o.getCaretPositionEnd()||0,f=c.substring(0,l||0)||c,d=new RegExp(\"\".concat(o.utilities.escapeRegex(t),\"$\"),i?\"g\":\"gi\"),p=f.replace(d,u),h=c.replace(f,p),v=p.length-f.length,y=(l||c.length)+v;y<0&&(y=0),o.setInput(h,o.options.inputName,!0),o.setCaretPosition(y),s&&\"function\"==typeof o.options.onKeyPress&&o.options.onKeyPress(e,n),\"function\"==typeof o.options.onChange&&o.options.onChange(o.getInput(o.options.inputName,!0),n),\"function\"==typeof o.options.onChangeAll&&o.options.onChangeAll(o.getAllInputs(),n)}})}},{key:\"handleButtonClicked\",value:function(t,e){var n=this.options,o=n.inputName,r=void 0===o?this.defaultName:o,i=n.debug;if(\"{//}\"!==t){this.input[r]||(this.input[r]=\"\");var a=this.utilities.getUpdatedInput(t,this.input[r],this.caretPosition,this.caretPositionEnd);if(this.utilities.isStandardButton(t)&&this.activeInputElement&&this.input[r]&&this.input[r]===a&&0===this.caretPosition&&this.caretPositionEnd===a.length)return this.setInput(\"\",this.options.inputName,!0),this.setCaretPosition(0),this.activeInputElement.value=\"\",this.activeInputElement.setSelectionRange(0,0),void this.handleButtonClicked(t,e);if(\"function\"==typeof this.options.onKeyPress&&this.options.onKeyPress(t,e),this.input[r]!==a&&(!this.options.inputPattern||this.options.inputPattern&&this.inputPatternIsValid(a))){if(this.options.maxLength&&this.utilities.handleMaxLength(this.input,a))return;var s=this.utilities.getUpdatedInput(t,this.input[r],this.caretPosition,this.caretPositionEnd,!0);if(this.setInput(s,this.options.inputName,!0),i&&console.log(\"Input changed:\",this.getAllInputs()),this.options.debug&&console.log(\"Caret at: \",this.getCaretPosition(),this.getCaretPositionEnd(),\"(\".concat(this.keyboardDOMClass,\")\"),null==e?void 0:e.type),this.options.syncInstanceInputs&&this.syncInstanceInputs(),\"function\"==typeof this.options.onChange&&this.options.onChange(this.getInput(this.options.inputName,!0),e),\"function\"==typeof this.options.onChangeAll&&this.options.onChangeAll(this.getAllInputs(),e),null!=e&&e.target&&this.options.enableLayoutCandidates){var u,c=this.getInputCandidates(a),l=c.candidateKey,f=c.candidateValue;l&&f?this.showCandidatesBox(l,f,this.keyboardDOM):null===(u=this.candidateBox)||void 0===u||u.destroy()}}this.caretPositionEnd&&this.caretPosition!==this.caretPositionEnd&&(this.setCaretPosition(this.caretPositionEnd,this.caretPositionEnd),this.activeInputElement&&this.activeInputElement.setSelectionRange(this.caretPositionEnd,this.caretPositionEnd),this.options.debug&&console.log(\"Caret position aligned\",this.caretPosition)),i&&console.log(\"Key pressed:\",t)}}},{key:\"getMouseHold\",value:function(){return this.isMouseHold}},{key:\"setMouseHold\",value:function(t){this.options.syncInstanceInputs?this.dispatch((function(e){e.isMouseHold=t})):this.isMouseHold=t}},{key:\"handleButtonMouseDown\",value:function(t,e){var n=this;e&&(this.options.preventMouseDownDefault&&e.preventDefault(),this.options.stopMouseDownPropagation&&e.stopPropagation(),e.target.classList.add(this.activeButtonClass)),this.holdInteractionTimeout&&clearTimeout(this.holdInteractionTimeout),this.holdTimeout&&clearTimeout(this.holdTimeout),this.setMouseHold(!0),this.options.disableButtonHold||(this.holdTimeout=window.setTimeout((function(){(n.getMouseHold()&&(!t.includes(\"{\")&&!t.includes(\"}\")||\"{delete}\"===t||\"{backspace}\"===t||\"{bksp}\"===t||\"{space}\"===t||\"{tab}\"===t)||\"{arrowright}\"===t||\"{arrowleft}\"===t||\"{arrowup}\"===t||\"{arrowdown}\"===t)&&(n.options.debug&&console.log(\"Button held:\",t),n.handleButtonHold(t)),clearTimeout(n.holdTimeout)}),500))}},{key:\"handleButtonMouseUp\",value:function(t,e){var n=this;e&&(this.options.preventMouseUpDefault&&e.preventDefault&&e.preventDefault(),this.options.stopMouseUpPropagation&&e.stopPropagation&&e.stopPropagation(),!(e.target===this.keyboardDOM||e.target&&this.keyboardDOM.contains(e.target)||this.candidateBox&&this.candidateBox.candidateBoxElement&&(e.target===this.candidateBox.candidateBoxElement||e.target&&this.candidateBox.candidateBoxElement.contains(e.target)))&&this.candidateBox&&this.candidateBox.destroy()),this.recurseButtons((function(t){t.classList.remove(n.activeButtonClass)})),this.setMouseHold(!1),this.holdInteractionTimeout&&clearTimeout(this.holdInteractionTimeout),t&&\"function\"==typeof this.options.onKeyReleased&&this.options.onKeyReleased(t,e)}},{key:\"handleKeyboardContainerMouseDown\",value:function(t){this.options.preventMouseDownDefault&&t.preventDefault()}},{key:\"handleButtonHold\",value:function(t){var e=this;this.holdInteractionTimeout&&clearTimeout(this.holdInteractionTimeout),this.holdInteractionTimeout=window.setTimeout((function(){e.getMouseHold()?(e.handleButtonClicked(t),e.handleButtonHold(t)):clearTimeout(e.holdInteractionTimeout)}),100)}},{key:\"syncInstanceInputs\",value:function(){var t=this;this.dispatch((function(e){e.replaceInput(t.input),e.setCaretPosition(t.caretPosition,t.caretPositionEnd)}))}},{key:\"clearInput\",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.options.inputName||this.defaultName;this.input[t]=\"\",this.setCaretPosition(0),this.options.syncInstanceInputs&&this.syncInstanceInputs()}},{key:\"getInput\",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.options.inputName||this.defaultName,e=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return this.options.syncInstanceInputs&&!e&&this.syncInstanceInputs(),this.options.rtl?\"‫\"+this.input[t].replace(\"‫\",\"\").replace(\"‬\",\"\")+\"‬\":this.input[t]}},{key:\"getAllInputs\",value:function(){var t=this,e={};return Object.keys(this.input).forEach((function(n){e[n]=t.getInput(n,!0)})),e}},{key:\"setInput\",value:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.options.inputName||this.defaultName,n=arguments.length>2?arguments[2]:void 0;this.input[e]=t,!n&&this.options.syncInstanceInputs&&this.syncInstanceInputs()}},{key:\"replaceInput\",value:function(t){this.input=t}},{key:\"setOptions\",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},e=this.changedOptions(t);this.options=Object.assign(this.options,t),e.length&&(this.options.debug&&console.log(\"changedOptions\",e),this.onSetOptions(e),this.render())}},{key:\"changedOptions\",value:function(t){var e=this;return Object.keys(t).filter((function(n){return JSON.stringify(t[n])!==JSON.stringify(e.options[n])}))}},{key:\"onSetOptions\",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];t.includes(\"layoutName\")&&this.candidateBox&&this.candidateBox.destroy(),(t.includes(\"layoutCandidatesPageSize\")||t.includes(\"layoutCandidates\"))&&this.candidateBox&&(this.candidateBox.destroy(),this.candidateBox=new w({utilities:this.utilities,options:this.options}))}},{key:\"resetRows\",value:function(){this.keyboardRowsDOM&&this.keyboardRowsDOM.remove(),this.keyboardDOM.className=this.keyboardDOMClass,this.keyboardDOM.setAttribute(\"data-skInstance\",this.currentInstanceName),this.buttonElements={}}},{key:\"dispatch\",value:function(t){if(!window.SimpleKeyboardInstances)throw console.warn(\"SimpleKeyboardInstances is not defined. Dispatch cannot be called.\"),new Error(\"INSTANCES_VAR_ERROR\");return Object.keys(window.SimpleKeyboardInstances).forEach((function(e){t(window.SimpleKeyboardInstances[e],e)}))}},{key:\"addButtonTheme\",value:function(t,e){var n=this;e&&t&&(t.split(\" \").forEach((function(o){e.split(\" \").forEach((function(e){n.options.buttonTheme||(n.options.buttonTheme=[]);var r=!1;n.options.buttonTheme.map((function(t){if(null!=t&&t.class.split(\" \").includes(e)){r=!0;var n=t.buttons.split(\" \");n.includes(o)||(r=!0,n.push(o),t.buttons=n.join(\" \"))}return t})),r||n.options.buttonTheme.push({class:e,buttons:t})}))})),this.render())}},{key:\"removeButtonTheme\",value:function(t,e){var n=this;if(!t&&!e)return this.options.buttonTheme=[],void this.render();t&&Array.isArray(this.options.buttonTheme)&&this.options.buttonTheme.length&&(t.split(\" \").forEach((function(t){var o,r;null===(o=n.options)||void 0===o||null===(r=o.buttonTheme)||void 0===r||r.map((function(o,r){if(o&&e&&e.includes(o.class)||!e){var i,a,s=null===(i=o)||void 0===i?void 0:i.buttons.split(\" \").filter((function(e){return e!==t}));o&&null!=s&&s.length?o.buttons=s.join(\" \"):(null===(a=n.options.buttonTheme)||void 0===a||a.splice(r,1),o=null)}return o}))})),this.render())}},{key:\"getButtonElement\",value:function(t){var e,n=this.buttonElements[t];return n&&(e=n.length>1?n:n[0]),e}},{key:\"inputPatternIsValid\",value:function(t){var e,n=this.options.inputPattern;if((e=n instanceof RegExp?n:n[this.options.inputName||this.defaultName])&&t){var o=e.test(t);return this.options.debug&&console.log('inputPattern (\"'.concat(e,'\"): ').concat(o?\"passed\":\"did not pass!\")),o}return!0}},{key:\"setEventListeners\",value:function(){if(this.isFirstKeyboardInstance||!this.allKeyboardInstances){this.options.debug&&console.log(\"Caret handling started (\".concat(this.keyboardDOMClass,\")\"));var t=this.options.physicalKeyboardHighlightPreventDefault,e=void 0!==t&&t;document.addEventListener(\"keyup\",this.handleKeyUp,e),document.addEventListener(\"keydown\",this.handleKeyDown,e),document.addEventListener(\"mouseup\",this.handleMouseUp),document.addEventListener(\"touchend\",this.handleTouchEnd),document.addEventListener(\"selectionchange\",this.handleSelectionChange),document.addEventListener(\"select\",this.handleSelect)}}},{key:\"handleKeyUp\",value:function(t){this.caretEventHandler(t),this.options.physicalKeyboardHighlight&&this.physicalKeyboard.handleHighlightKeyUp(t)}},{key:\"handleKeyDown\",value:function(t){this.options.physicalKeyboardHighlight&&this.physicalKeyboard.handleHighlightKeyDown(t)}},{key:\"handleMouseUp\",value:function(t){this.caretEventHandler(t)}},{key:\"handleTouchEnd\",value:function(t){this.caretEventHandler(t)}},{key:\"handleSelect\",value:function(t){this.caretEventHandler(t)}},{key:\"handleSelectionChange\",value:function(t){navigator.userAgent.includes(\"Firefox\")||this.caretEventHandler(t)}},{key:\"caretEventHandler\",value:function(t){var e,n=this;t.target.tagName&&(e=t.target.tagName.toLowerCase()),this.dispatch((function(o){var r=t.target===o.keyboardDOM||t.target&&o.keyboardDOM.contains(t.target);if(n.options.syncInstanceInputs&&Array.isArray(t.path)&&(r=t.path.some((function(t){var e;return null==t||null===(e=t.hasAttribute)||void 0===e?void 0:e.call(t,\"data-skInstance\")}))),(\"textarea\"===e||\"input\"===e&&[\"text\",\"search\",\"url\",\"tel\",\"password\"].includes(t.target.type))&&!o.options.disableCaretPositioning){var i=t.target.selectionStart,a=t.target.selectionEnd;o.options.rtl&&(i=o.utilities.getRtlOffset(i,o.getInput()),a=o.utilities.getRtlOffset(a,o.getInput())),o.setCaretPosition(i,a),n.activeInputElement=t.target,o.options.debug&&console.log(\"Caret at: \",o.getCaretPosition(),o.getCaretPositionEnd(),t&&t.target.tagName.toLowerCase(),\"(\".concat(o.keyboardDOMClass,\")\"),null==t?void 0:t.type)}else!o.options.disableCaretPositioning&&r||\"selectionchange\"===(null==t?void 0:t.type)||(o.setCaretPosition(null),n.activeInputElement=null,o.options.debug&&console.log('Caret position reset due to \"'.concat(null==t?void 0:t.type,'\" event'),t))}))}},{key:\"recurseButtons\",value:function(t){var e=this;t&&Object.keys(this.buttonElements).forEach((function(n){return e.buttonElements[n].forEach(t)}))}},{key:\"destroy\",value:function(){this.options.debug&&console.log(\"Destroying simple-keyboard instance: \".concat(this.currentInstanceName));var t=this.options.physicalKeyboardHighlightPreventDefault,e=void 0!==t&&t;document.removeEventListener(\"keyup\",this.handleKeyUp,e),document.removeEventListener(\"keydown\",this.handleKeyDown,e),document.removeEventListener(\"mouseup\",this.handleMouseUp),document.removeEventListener(\"touchend\",this.handleTouchEnd),document.removeEventListener(\"select\",this.handleSelect),document.removeEventListener(\"selectionchange\",this.handleSelectionChange),document.onpointerup=null,document.ontouchend=null,document.ontouchcancel=null,document.onmouseup=null,this.recurseButtons((function(t){t&&(t.onpointerdown=null,t.onpointerup=null,t.onpointercancel=null,t.ontouchstart=null,t.ontouchend=null,t.ontouchcancel=null,t.onclick=null,t.onmousedown=null,t.onmouseup=null,t.remove(),t=null)})),this.keyboardDOM.onpointerdown=null,this.keyboardDOM.ontouchstart=null,this.keyboardDOM.onmousedown=null,this.resetRows(),this.candidateBox&&(this.candidateBox.destroy(),this.candidateBox=null),this.activeInputElement=null,this.keyboardDOM.removeAttribute(\"data-skInstance\"),this.keyboardDOM.innerHTML=\"\",window.SimpleKeyboardInstances[this.currentInstanceName]=null,delete window.SimpleKeyboardInstances[this.currentInstanceName],this.initialized=!1}},{key:\"getButtonThemeClasses\",value:function(t){var e=this.options.buttonTheme,n=[];return Array.isArray(e)&&e.forEach((function(e){if(e&&e.class&&\"string\"==typeof e.class&&e.buttons&&\"string\"==typeof e.buttons){var o=e.class.split(\" \");e.buttons.split(\" \").includes(t)&&(n=[].concat(E(n),E(o)))}else console.warn('Incorrect \"buttonTheme\". Please check the documentation.',e)})),n}},{key:\"setDOMButtonAttributes\",value:function(t,e){var n=this.options.buttonAttributes;Array.isArray(n)&&n.forEach((function(n){n.attribute&&\"string\"==typeof n.attribute&&n.value&&\"string\"==typeof n.value&&n.buttons&&\"string\"==typeof n.buttons?n.buttons.split(\" \").includes(t)&&e(n.attribute,n.value):console.warn('Incorrect \"buttonAttributes\". Please check the documentation.',n)}))}},{key:\"onTouchDeviceDetected\",value:function(){this.processAutoTouchEvents(),this.disableContextualWindow()}},{key:\"disableContextualWindow\",value:function(){window.oncontextmenu=function(t){if(t.target.classList.contains(\"hg-button\"))return t.preventDefault(),t.stopPropagation(),!1}}},{key:\"processAutoTouchEvents\",value:function(){this.options.autoUseTouchEvents&&(this.options.useTouchEvents=!0,this.options.debug&&console.log(\"autoUseTouchEvents: Touch device detected, useTouchEvents enabled.\"))}},{key:\"onInit\",value:function(){this.options.debug&&console.log(\"\".concat(this.keyboardDOMClass,\" Initialized\")),this.setEventListeners(),\"function\"==typeof this.options.onInit&&this.options.onInit(this)}},{key:\"beforeFirstRender\",value:function(){this.utilities.isTouchDevice()&&this.onTouchDeviceDetected(),\"function\"==typeof this.options.beforeFirstRender&&this.options.beforeFirstRender(this),this.isFirstKeyboardInstance&&this.utilities.pointerEventsSupported()&&!this.options.useTouchEvents&&!this.options.useMouseEvents&&this.options.debug&&console.log(\"Using PointerEvents as it is supported by this browser\"),this.options.useTouchEvents&&this.options.debug&&console.log(\"useTouchEvents has been enabled. Only touch events will be used.\")}},{key:\"beforeRender\",value:function(){\"function\"==typeof this.options.beforeRender&&this.options.beforeRender(this)}},{key:\"onRender\",value:function(){\"function\"==typeof this.options.onRender&&this.options.onRender(this)}},{key:\"onModulesLoaded\",value:function(){\"function\"==typeof this.options.onModulesLoaded&&this.options.onModulesLoaded(this)}},{key:\"loadModules\",value:function(){var t=this;Array.isArray(this.options.modules)&&(this.options.modules.forEach((function(e){var n=new e(t);n.init&&n.init(t)})),this.keyboardPluginClasses=\"modules-loaded\",this.render(),this.onModulesLoaded())}},{key:\"getModuleProp\",value:function(t,e){return!!this.modules[t]&&this.modules[t][e]}},{key:\"getModulesList\",value:function(){return Object.keys(this.modules)}},{key:\"parseRowDOMContainers\",value:function(t,e,n,o){var r=this,i=Array.from(t.children),a=0;return i.length&&n.forEach((function(n,s){var u=o[s];if(!(u&&u>n))return!1;var c=n-a,l=u-a,f=document.createElement(\"div\");f.className+=\"hg-button-container\";var d=\"\".concat(r.options.layoutName,\"-r\").concat(e,\"c\").concat(s);f.setAttribute(\"data-skUID\",d);var p=i.splice(c,l-c+1);a=l-c,p.forEach((function(t){return f.appendChild(t)})),i.splice(c,0,f),t.innerHTML=\"\",i.forEach((function(e){return t.appendChild(e)})),r.options.debug&&console.log(\"rowDOMContainer\",p,c,l,a+1)})),t}},{key:\"render\",value:function(){var t=this;this.resetRows(),this.initialized||this.beforeFirstRender(),this.beforeRender();var e=\"hg-layout-\".concat(this.options.layoutName),n=this.options.layout||{default:[\"` 1 2 3 4 5 6 7 8 9 0 - = {bksp}\",\"{tab} q w e r t y u i o p [ ] \\\\\",\"{lock} a s d f g h j k l ; ' {enter}\",\"{shift} z x c v b n m , . / {shift}\",\".com @ {space}\"],shift:[\"~ ! @ # $ % ^ & * ( ) _ + {bksp}\",\"{tab} Q W E R T Y U I O P { } |\",'{lock} A S D F G H J K L : \" {enter}',\"{shift} Z X C V B N M < > ? {shift}\",\".com @ {space}\"]},o=this.options.useTouchEvents||!1,r=o?\"hg-touch-events\":\"\",i=this.options.useMouseEvents||!1,a=this.options.disableRowButtonContainers;this.keyboardDOM.className=this.getKeyboardClassString(this.options.theme,e,this.keyboardPluginClasses,r),this.keyboardDOM.setAttribute(\"data-skInstance\",this.currentInstanceName),this.keyboardRowsDOM=document.createElement(\"div\"),this.keyboardRowsDOM.className=\"hg-rows\",n[this.options.layoutName||this.defaultName].forEach((function(e,n){var r=e.split(\" \");t.options.excludeFromLayout&&t.options.excludeFromLayout[t.options.layoutName||t.defaultName]&&(r=r.filter((function(e){return t.options.excludeFromLayout&&!t.options.excludeFromLayout[t.options.layoutName||t.defaultName].includes(e)})));var s=document.createElement(\"div\");s.className+=\"hg-row\";var u=[],c=[];r.forEach((function(e,r){var l,f=!a&&\"string\"==typeof e&&e.length>1&&0===e.indexOf(\"[\"),d=!a&&\"string\"==typeof e&&e.length>1&&e.indexOf(\"]\")===e.length-1;f&&(u.push(r),e=e.replace(/\\[/g,\"\")),d&&(c.push(r),e=e.replace(/\\]/g,\"\"));var p=t.utilities.getButtonClass(e),h=t.utilities.getButtonDisplayName(e,t.options.display,t.options.mergeDisplay),v=t.options.useButtonTag?\"button\":\"div\",y=document.createElement(v);y.className+=\"hg-button \".concat(p),(l=y.classList).add.apply(l,E(t.getButtonThemeClasses(e))),t.setDOMButtonAttributes(e,(function(t,e){y.setAttribute(t,e)})),t.activeButtonClass=\"hg-activeButton\",!t.utilities.pointerEventsSupported()||o||i?o?(y.ontouchstart=function(n){t.handleButtonClicked(e,n),t.handleButtonMouseDown(e,n)},y.ontouchend=function(n){t.handleButtonMouseUp(e,n)},y.ontouchcancel=function(n){t.handleButtonMouseUp(e,n)}):(y.onclick=function(n){t.setMouseHold(!1),\"function\"!=typeof t.options.onKeyReleased&&t.handleButtonClicked(e,n)},y.onmousedown=function(n){\"function\"!=typeof t.options.onKeyReleased||t.isMouseHold||t.handleButtonClicked(e,n),t.handleButtonMouseDown(e,n)},y.onmouseup=function(n){t.handleButtonMouseUp(e,n)}):(y.onpointerdown=function(n){t.handleButtonClicked(e,n),t.handleButtonMouseDown(e,n)},y.onpointerup=function(n){t.handleButtonMouseUp(e,n)},y.onpointercancel=function(n){t.handleButtonMouseUp(e,n)}),y.setAttribute(\"data-skBtn\",e);var g=\"\".concat(t.options.layoutName,\"-r\").concat(n,\"b\").concat(r);y.setAttribute(\"data-skBtnUID\",g);var m=document.createElement(\"span\");m.innerHTML=h,y.appendChild(m),t.buttonElements[e]||(t.buttonElements[e]=[]),t.buttonElements[e].push(y),s.appendChild(y)})),s=t.parseRowDOMContainers(s,n,u,c),t.keyboardRowsDOM.appendChild(s)})),this.keyboardDOM.appendChild(this.keyboardRowsDOM),this.onRender(),this.initialized||(this.initialized=!0,!this.utilities.pointerEventsSupported()||o||i?o?(document.ontouchend=function(e){return t.handleButtonMouseUp(void 0,e)},document.ontouchcancel=function(e){return t.handleButtonMouseUp(void 0,e)},this.keyboardDOM.ontouchstart=function(e){return t.handleKeyboardContainerMouseDown(e)}):o||(document.onmouseup=function(e){return t.handleButtonMouseUp(void 0,e)},this.keyboardDOM.onmousedown=function(e){return t.handleKeyboardContainerMouseDown(e)}):(document.onpointerup=function(e){return t.handleButtonMouseUp(void 0,e)},this.keyboardDOM.onpointerdown=function(e){return t.handleKeyboardContainerMouseDown(e)}),this.onInit())}}],n&&P(e.prototype,n),o&&P(e,o),Object.defineProperty(e,\"prototype\",{writable:!1}),t}(),M=A,T=A}(),o}()}));\n\n//# sourceURL=webpack://dragonbms-interface-web/./node_modules/simple-keyboard/build/index.js?");

/***/ }),

/***/ "./node_modules/@melloware/coloris/dist/esm/coloris.js":
/*!*************************************************************!*\
  !*** ./node_modules/@melloware/coloris/dist/esm/coloris.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   close: () => (/* binding */ _close),\n/* harmony export */   coloris: () => (/* binding */ _coloris),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   init: () => (/* binding */ _init),\n/* harmony export */   removeInstance: () => (/* binding */ _removeInstance),\n/* harmony export */   set: () => (/* binding */ _set),\n/* harmony export */   setInstance: () => (/* binding */ _setInstance),\n/* harmony export */   updatePosition: () => (/* binding */ _updatePosition),\n/* harmony export */   wrap: () => (/* binding */ _wrap)\n/* harmony export */ });\nvar Coloris = function () {\n  /*!\r\n  * Copyright (c) 2021-2023 Momo Bassit.\r\n  * Licensed under the MIT License (MIT)\r\n  * https://github.com/mdbassit/Coloris\r\n  * Version: 0.19.0\r\n  * NPM: https://github.com/melloware/coloris-npm\r\n  */\n\n  return function (window, document, Math) {\n    var ctx = document.createElement('canvas').getContext('2d');\n    var currentColor = { r: 0, g: 0, b: 0, h: 0, s: 0, v: 0, a: 1 };\n    var container, picker, colorArea, colorAreaDims, colorMarker, colorPreview, colorValue, clearButton, closeButton,\n      hueSlider, hueMarker, alphaSlider, alphaMarker, currentEl, currentFormat, oldColor, keyboardNav;\n\n    // Default settings\n    var settings = {\n      el: '[data-coloris]',\n      parent: 'body',\n      theme: 'default',\n      themeMode: 'light',\n      rtl: false,\n      wrap: true,\n      margin: 2,\n      format: 'hex',\n      formatToggle: false,\n      swatches: [],\n      swatchesOnly: false,\n      alpha: true,\n      forceAlpha: false,\n      focusInput: true,\n      selectInput: false,\n      inline: false,\n      defaultColor: '#000000',\n      clearButton: false,\n      clearLabel: 'Clear',\n      closeButton: false,\n      closeLabel: 'Close',\n      onChange: function onChange() {return undefined;},\n      a11y: {\n        open: 'Open color picker',\n        close: 'Close color picker',\n        clear: 'Clear the selected color',\n        marker: 'Saturation: {s}. Brightness: {v}.',\n        hueSlider: 'Hue slider',\n        alphaSlider: 'Opacity slider',\n        input: 'Color value field',\n        format: 'Color format',\n        swatch: 'Color swatch',\n        instruction: 'Saturation and brightness selector. Use up, down, left and right arrow keys to select.'\n      }\n    };\n\n    // Virtual instances cache\n    var instances = {};\n    var currentInstanceId = '';\n    var defaultInstance = {};\n    var hasInstance = false;\n\n    /**\r\n     * Configure the color picker.\r\n     * @param {object} options Configuration options.\r\n     */\n    function configure(options) {\n      if (typeof options !== 'object') {\n        return;\n      }var _loop = function _loop()\n\n      {\n        switch (key) {\n          case 'el':\n            bindFields(options.el);\n            if (options.wrap !== false) {\n              wrapFields(options.el);\n            }\n            break;\n          case 'parent':\n            container = document.querySelector(options.parent);\n            if (container) {\n              container.appendChild(picker);\n              settings.parent = options.parent;\n\n              // document.body is special\n              if (container === document.body) {\n                container = null;\n              }\n            }\n            break;\n          case 'themeMode':\n            settings.themeMode = options.themeMode;\n            if (options.themeMode === 'auto' && window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) {\n              settings.themeMode = 'dark';\n            }\n          // The lack of a break statement is intentional\n          case 'theme':\n            if (options.theme) {\n              settings.theme = options.theme;\n            }\n\n            // Set the theme and color scheme\n            picker.className = \"clr-picker clr-\" + settings.theme + \" clr-\" + settings.themeMode;\n\n            // Update the color picker's position if inline mode is in use\n            if (settings.inline) {\n              updatePickerPosition();\n            }\n            break;\n          case 'rtl':\n            settings.rtl = !!options.rtl;\n            document.querySelectorAll('.clr-field').forEach(function (field) {return field.classList.toggle('clr-rtl', settings.rtl);});\n            break;\n          case 'margin':\n            options.margin *= 1;\n            settings.margin = !isNaN(options.margin) ? options.margin : settings.margin;\n            break;\n          case 'wrap':\n            if (options.el && options.wrap) {\n              wrapFields(options.el);\n            }\n            break;\n          case 'formatToggle':\n            settings.formatToggle = !!options.formatToggle;\n            getEl('clr-format').style.display = settings.formatToggle ? 'block' : 'none';\n            if (settings.formatToggle) {\n              settings.format = 'auto';\n            }\n            break;\n          case 'swatches':\n            if (Array.isArray(options.swatches)) {\n              var swatches = [];\n\n              options.swatches.forEach(function (swatch, i) {\n                swatches.push(\"<button type=\\\"button\\\" id=\\\"clr-swatch-\" + i + \"\\\" aria-labelledby=\\\"clr-swatch-label clr-swatch-\" + i + \"\\\" style=\\\"color: \" + swatch + \";\\\">\" + swatch + \"</button>\");\n              });\n\n              getEl('clr-swatches').innerHTML = swatches.length ? \"<div>\" + swatches.join('') + \"</div>\" : '';\n              settings.swatches = options.swatches.slice();\n            }\n            break;\n          case 'swatchesOnly':\n            settings.swatchesOnly = !!options.swatchesOnly;\n            picker.setAttribute('data-minimal', settings.swatchesOnly);\n            break;\n          case 'alpha':\n            settings.alpha = !!options.alpha;\n            picker.setAttribute('data-alpha', settings.alpha);\n            break;\n          case 'inline':\n            settings.inline = !!options.inline;\n            picker.setAttribute('data-inline', settings.inline);\n\n            if (settings.inline) {\n              var defaultColor = options.defaultColor || settings.defaultColor;\n\n              currentFormat = getColorFormatFromStr(defaultColor);\n              updatePickerPosition();\n              setColorFromStr(defaultColor);\n            }\n            break;\n          case 'clearButton':\n            // Backward compatibility\n            if (typeof options.clearButton === 'object') {\n              if (options.clearButton.label) {\n                settings.clearLabel = options.clearButton.label;\n                clearButton.innerHTML = settings.clearLabel;\n              }\n\n              options.clearButton = options.clearButton.show;\n            }\n\n            settings.clearButton = !!options.clearButton;\n            clearButton.style.display = settings.clearButton ? 'block' : 'none';\n            break;\n          case 'clearLabel':\n            settings.clearLabel = options.clearLabel;\n            clearButton.innerHTML = settings.clearLabel;\n            break;\n          case 'closeButton':\n            settings.closeButton = !!options.closeButton;\n\n            if (settings.closeButton) {\n              picker.insertBefore(closeButton, colorPreview);\n            } else {\n              colorPreview.appendChild(closeButton);\n            }\n\n            break;\n          case 'closeLabel':\n            settings.closeLabel = options.closeLabel;\n            closeButton.innerHTML = settings.closeLabel;\n            break;\n          case 'a11y':\n            var labels = options.a11y;\n            var update = false;\n\n            if (typeof labels === 'object') {\n              for (var label in labels) {\n                if (labels[label] && settings.a11y[label]) {\n                  settings.a11y[label] = labels[label];\n                  update = true;\n                }\n              }\n            }\n\n            if (update) {\n              var openLabel = getEl('clr-open-label');\n              var swatchLabel = getEl('clr-swatch-label');\n\n              openLabel.innerHTML = settings.a11y.open;\n              swatchLabel.innerHTML = settings.a11y.swatch;\n              closeButton.setAttribute('aria-label', settings.a11y.close);\n              clearButton.setAttribute('aria-label', settings.a11y.clear);\n              hueSlider.setAttribute('aria-label', settings.a11y.hueSlider);\n              alphaSlider.setAttribute('aria-label', settings.a11y.alphaSlider);\n              colorValue.setAttribute('aria-label', settings.a11y.input);\n              colorArea.setAttribute('aria-label', settings.a11y.instruction);\n            }\n            break;\n          default:\n            settings[key] = options[key];}\n\n      };for (var key in options) {_loop();}\n    }\n\n    /**\r\n     * Add or update a virtual instance.\r\n     * @param {String} selector The CSS selector of the elements to which the instance is attached.\r\n     * @param {Object} options Per-instance options to apply.\r\n     */\n    function setVirtualInstance(selector, options) {\n      if (typeof selector === 'string' && typeof options === 'object') {\n        instances[selector] = options;\n        hasInstance = true;\n      }\n    }\n\n    /**\r\n     * Remove a virtual instance.\r\n     * @param {String} selector The CSS selector of the elements to which the instance is attached.\r\n     */\n    function removeVirtualInstance(selector) {\n      delete instances[selector];\n\n      if (Object.keys(instances).length === 0) {\n        hasInstance = false;\n\n        if (selector === currentInstanceId) {\n          resetVirtualInstance();\n        }\n      }\n    }\n\n    /**\r\n     * Attach a virtual instance to an element if it matches a selector.\r\n     * @param {Object} element Target element that will receive a virtual instance if applicable.\r\n     */\n    function attachVirtualInstance(element) {\n      if (hasInstance) {\n        // These options can only be set globally, not per instance\n        var unsupportedOptions = ['el', 'wrap', 'rtl', 'inline', 'defaultColor', 'a11y'];var _loop2 = function _loop2()\n\n        {\n          var options = instances[selector];\n\n          // If the element matches an instance's CSS selector\n          if (element.matches(selector)) {\n            currentInstanceId = selector;\n            defaultInstance = {};\n\n            // Delete unsupported options\n            unsupportedOptions.forEach(function (option) {return delete options[option];});\n\n            // Back up the default options so we can restore them later\n            for (var option in options) {\n              defaultInstance[option] = Array.isArray(settings[option]) ? settings[option].slice() : settings[option];\n            }\n\n            // Set the instance's options\n            configure(options);return \"break\";\n\n          }\n        };for (var selector in instances) {var _ret = _loop2();if (_ret === \"break\") break;}\n      }\n    }\n\n    /**\r\n     * Revert any per-instance options that were previously applied.\r\n     */\n    function resetVirtualInstance() {\n      if (Object.keys(defaultInstance).length > 0) {\n        configure(defaultInstance);\n        currentInstanceId = '';\n        defaultInstance = {};\n      }\n    }\n\n    /**\r\n     * Bind the color picker to input fields that match the selector.\r\n     * @param {string} selector One or more selectors pointing to input fields.\r\n     */\n    function bindFields(selector) {\n      // Show the color picker on click on the input fields that match the selector\n      addListener(document, 'click', selector, function (event) {\n        // Skip if inline mode is in use\n        if (settings.inline) {\n          return;\n        }\n\n        // Apply any per-instance options first\n        attachVirtualInstance(event.target);\n\n        currentEl = event.target;\n        oldColor = currentEl.value;\n        currentFormat = getColorFormatFromStr(oldColor);\n        picker.classList.add('clr-open');\n\n        updatePickerPosition();\n        setColorFromStr(oldColor);\n\n        if (settings.focusInput || settings.selectInput) {\n          colorValue.focus({ preventScroll: true });\n        }\n\n        if (settings.selectInput) {\n          colorValue.select();\n        }\n\n        // Always focus the first element when using keyboard navigation\n        if (keyboardNav || settings.swatchesOnly) {\n          getFocusableElements().shift().focus();\n        }\n\n        // Trigger an \"open\" event\n        currentEl.dispatchEvent(new Event('open', { bubbles: true }));\n      });\n\n      // Update the color preview of the input fields that match the selector\n      addListener(document, 'input', selector, function (event) {\n        var parent = event.target.parentNode;\n\n        // Only update the preview if the field has been previously wrapped\n        if (parent.classList.contains('clr-field')) {\n          parent.style.color = event.target.value;\n        }\n      });\n    }\n\n    /**\r\n     * Update the color picker's position and the color gradient's offset\r\n     */\n    function updatePickerPosition() {\n      if (!picker || !currentEl && !settings.inline) return; //** DO NOT REMOVE: in case called before initialized\n      var parent = container;\n      var scrollY = window.scrollY;\n      var pickerWidth = picker.offsetWidth;\n      var pickerHeight = picker.offsetHeight;\n      var reposition = { left: false, top: false };\n      var parentStyle, parentMarginTop, parentBorderTop;\n      var offset = { x: 0, y: 0 };\n\n      if (parent) {\n        parentStyle = window.getComputedStyle(parent);\n        parentMarginTop = parseFloat(parentStyle.marginTop);\n        parentBorderTop = parseFloat(parentStyle.borderTopWidth);\n\n        offset = parent.getBoundingClientRect();\n        offset.y += parentBorderTop + scrollY;\n      }\n\n      if (!settings.inline) {\n        var coords = currentEl.getBoundingClientRect();\n        var left = coords.x;\n        var top = scrollY + coords.y + coords.height + settings.margin;\n\n        // If the color picker is inside a custom container\n        // set the position relative to it\n        if (parent) {\n          left -= offset.x;\n          top -= offset.y;\n\n          if (left + pickerWidth > parent.clientWidth) {\n            left += coords.width - pickerWidth;\n            reposition.left = true;\n          }\n\n          if (top + pickerHeight > parent.clientHeight - parentMarginTop) {\n            if (pickerHeight + settings.margin <= coords.top - (offset.y - scrollY)) {\n              top -= coords.height + pickerHeight + settings.margin * 2;\n              reposition.top = true;\n            }\n          }\n\n          top += parent.scrollTop;\n\n          // Otherwise set the position relative to the whole document\n        } else {\n          if (left + pickerWidth > document.documentElement.clientWidth) {\n            left += coords.width - pickerWidth;\n            reposition.left = true;\n          }\n\n          if (top + pickerHeight - scrollY > document.documentElement.clientHeight) {\n            if (pickerHeight + settings.margin <= coords.top) {\n              top = scrollY + coords.y - pickerHeight - settings.margin;\n              reposition.top = true;\n            }\n          }\n        }\n\n        picker.classList.toggle('clr-left', reposition.left);\n        picker.classList.toggle('clr-top', reposition.top);\n        picker.style.left = left + \"px\";\n        picker.style.top = top + \"px\";\n        offset.x += picker.offsetLeft;\n        offset.y += picker.offsetTop;\n      }\n\n      colorAreaDims = {\n        width: colorArea.offsetWidth,\n        height: colorArea.offsetHeight,\n        x: colorArea.offsetLeft + offset.x,\n        y: colorArea.offsetTop + offset.y\n      };\n    }\n\n    /**\r\n     * Wrap the linked input fields in a div that adds a color preview.\r\n     * @param {string} selector One or more selectors pointing to input fields.\r\n     */\n    function wrapFields(selector) {\n      document.querySelectorAll(selector).forEach(function (field) {\n        var parentNode = field.parentNode;\n\n        if (!parentNode.classList.contains('clr-field')) {\n          var wrapper = document.createElement('div');\n          var classes = 'clr-field';\n\n          if (settings.rtl || field.classList.contains('clr-rtl')) {\n            classes += ' clr-rtl';\n          }\n\n          wrapper.innerHTML = \"<button type=\\\"button\\\" aria-labelledby=\\\"clr-open-label\\\"></button>\";\n          parentNode.insertBefore(wrapper, field);\n          wrapper.setAttribute('class', classes);\n          wrapper.style.color = field.value;\n          wrapper.appendChild(field);\n        }\n      });\n    }\n\n    /**\r\n     * Close the color picker.\r\n     * @param {boolean} [revert] If true, revert the color to the original value.\r\n     */\n    function closePicker(revert) {\n      if (currentEl && !settings.inline) {\n        var prevEl = currentEl;\n\n        // Revert the color to the original value if needed\n        if (revert) {\n          // This will prevent the \"change\" event on the colorValue input to execute its handler\n          currentEl = null;\n\n          if (oldColor !== prevEl.value) {\n            prevEl.value = oldColor;\n\n            // Trigger an \"input\" event to force update the thumbnail next to the input field\n            prevEl.dispatchEvent(new Event('input', { bubbles: true }));\n          }\n        }\n\n        // Trigger a \"change\" event if needed\n        setTimeout(function () {// Add this to the end of the event loop\n          if (oldColor !== prevEl.value) {\n            prevEl.dispatchEvent(new Event('change', { bubbles: true }));\n          }\n        });\n\n        // Hide the picker dialog\n        picker.classList.remove('clr-open');\n\n        // Reset any previously set per-instance options\n        if (hasInstance) {\n          resetVirtualInstance();\n        }\n\n        // Trigger a \"close\" event\n        prevEl.dispatchEvent(new Event('close', { bubbles: true }));\n\n        if (settings.focusInput) {\n          prevEl.focus({ preventScroll: true });\n        }\n\n        // This essentially marks the picker as closed\n        currentEl = null;\n      }\n    }\n\n    /**\r\n     * Set the active color from a string.\r\n     * @param {string} str String representing a color.\r\n     */\n    function setColorFromStr(str) {\n      var rgba = strToRGBA(str);\n      var hsva = RGBAtoHSVA(rgba);\n\n      updateMarkerA11yLabel(hsva.s, hsva.v);\n      updateColor(rgba, hsva);\n\n      // Update the UI\n      hueSlider.value = hsva.h;\n      picker.style.color = \"hsl(\" + hsva.h + \", 100%, 50%)\";\n      hueMarker.style.left = hsva.h / 360 * 100 + \"%\";\n\n      colorMarker.style.left = colorAreaDims.width * hsva.s / 100 + \"px\";\n      colorMarker.style.top = colorAreaDims.height - colorAreaDims.height * hsva.v / 100 + \"px\";\n\n      alphaSlider.value = hsva.a * 100;\n      alphaMarker.style.left = hsva.a * 100 + \"%\";\n    }\n\n    /**\r\n     * Guess the color format from a string.\r\n     * @param {string} str String representing a color.\r\n     * @return {string} The color format.\r\n     */\n    function getColorFormatFromStr(str) {\n      var format = str.substring(0, 3).toLowerCase();\n\n      if (format === 'rgb' || format === 'hsl') {\n        return format;\n      }\n\n      return 'hex';\n    }\n\n    /**\r\n     * Copy the active color to the linked input field.\r\n     * @param {number} [color] Color value to override the active color.\r\n     */\n    function pickColor(color) {\n      color = color !== undefined ? color : colorValue.value;\n\n      if (currentEl) {\n        currentEl.value = color;\n        currentEl.dispatchEvent(new Event('input', { bubbles: true }));\n      }\n\n      if (settings.onChange) {\n        settings.onChange.call(window, color);\n      }\n\n      document.dispatchEvent(new CustomEvent('coloris:pick', { detail: { color: color } }));\n    }\n\n    /**\r\n     * Set the active color based on a specific point in the color gradient.\r\n     * @param {number} x Left position.\r\n     * @param {number} y Top position.\r\n     */\n    function setColorAtPosition(x, y) {\n      var hsva = {\n        h: hueSlider.value * 1,\n        s: x / colorAreaDims.width * 100,\n        v: 100 - y / colorAreaDims.height * 100,\n        a: alphaSlider.value / 100\n      };\n      var rgba = HSVAtoRGBA(hsva);\n\n      updateMarkerA11yLabel(hsva.s, hsva.v);\n      updateColor(rgba, hsva);\n      pickColor();\n    }\n\n    /**\r\n     * Update the color marker's accessibility label.\r\n     * @param {number} saturation\r\n     * @param {number} value\r\n     */\n    function updateMarkerA11yLabel(saturation, value) {\n      var label = settings.a11y.marker;\n\n      saturation = saturation.toFixed(1) * 1;\n      value = value.toFixed(1) * 1;\n      label = label.replace('{s}', saturation);\n      label = label.replace('{v}', value);\n      colorMarker.setAttribute('aria-label', label);\n    }\n\n    //\n    /**\r\n     * Get the pageX and pageY positions of the pointer.\r\n     * @param {object} event The MouseEvent or TouchEvent object.\r\n     * @return {object} The pageX and pageY positions.\r\n     */\n    function getPointerPosition(event) {\n      return {\n        pageX: event.changedTouches ? event.changedTouches[0].pageX : event.pageX,\n        pageY: event.changedTouches ? event.changedTouches[0].pageY : event.pageY\n      };\n    }\n\n    /**\r\n     * Move the color marker when dragged.\r\n     * @param {object} event The MouseEvent object.\r\n     */\n    function moveMarker(event) {\n      var pointer = getPointerPosition(event);\n      var x = pointer.pageX - colorAreaDims.x;\n      var y = pointer.pageY - colorAreaDims.y;\n\n      if (container) {\n        y += container.scrollTop;\n      }\n\n      setMarkerPosition(x, y);\n\n      // Prevent scrolling while dragging the marker\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    /**\r\n     * Move the color marker when the arrow keys are pressed.\r\n     * @param {number} offsetX The horizontal amount to move.\r\n     * @param {number} offsetY The vertical amount to move.\r\n     */\n    function moveMarkerOnKeydown(offsetX, offsetY) {\n      var x = colorMarker.style.left.replace('px', '') * 1 + offsetX;\n      var y = colorMarker.style.top.replace('px', '') * 1 + offsetY;\n\n      setMarkerPosition(x, y);\n    }\n\n    /**\r\n     * Set the color marker's position.\r\n     * @param {number} x Left position.\r\n     * @param {number} y Top position.\r\n     */\n    function setMarkerPosition(x, y) {\n      // Make sure the marker doesn't go out of bounds\n      x = x < 0 ? 0 : x > colorAreaDims.width ? colorAreaDims.width : x;\n      y = y < 0 ? 0 : y > colorAreaDims.height ? colorAreaDims.height : y;\n\n      // Set the position\n      colorMarker.style.left = x + \"px\";\n      colorMarker.style.top = y + \"px\";\n\n      // Update the color\n      setColorAtPosition(x, y);\n\n      // Make sure the marker is focused\n      colorMarker.focus();\n    }\n\n    /**\r\n     * Update the color picker's input field and preview thumb.\r\n     * @param {Object} rgba Red, green, blue and alpha values.\r\n     * @param {Object} [hsva] Hue, saturation, value and alpha values.\r\n     */\n    function updateColor(rgba, hsva) {if (rgba === void 0) {rgba = {};}if (hsva === void 0) {hsva = {};}\n      var format = settings.format;\n\n      for (var key in rgba) {\n        currentColor[key] = rgba[key];\n      }\n\n      for (var _key in hsva) {\n        currentColor[_key] = hsva[_key];\n      }\n\n      var hex = RGBAToHex(currentColor);\n      var opaqueHex = hex.substring(0, 7);\n\n      colorMarker.style.color = opaqueHex;\n      alphaMarker.parentNode.style.color = opaqueHex;\n      alphaMarker.style.color = hex;\n      colorPreview.style.color = hex;\n\n      // Force repaint the color and alpha gradients as a workaround for a Google Chrome bug\n      colorArea.style.display = 'none';\n      colorArea.offsetHeight;\n      colorArea.style.display = '';\n      alphaMarker.nextElementSibling.style.display = 'none';\n      alphaMarker.nextElementSibling.offsetHeight;\n      alphaMarker.nextElementSibling.style.display = '';\n\n      if (format === 'mixed') {\n        format = currentColor.a === 1 ? 'hex' : 'rgb';\n      } else if (format === 'auto') {\n        format = currentFormat;\n      }\n\n      switch (format) {\n        case 'hex':\n          colorValue.value = hex;\n          break;\n        case 'rgb':\n          colorValue.value = RGBAToStr(currentColor);\n          break;\n        case 'hsl':\n          colorValue.value = HSLAToStr(HSVAtoHSLA(currentColor));\n          break;}\n\n\n      // Select the current format in the format switcher\n      document.querySelector(\".clr-format [value=\\\"\" + format + \"\\\"]\").checked = true;\n    }\n\n    /**\r\n     * Set the hue when its slider is moved.\r\n     */\n    function setHue() {\n      var hue = hueSlider.value * 1;\n      var x = colorMarker.style.left.replace('px', '') * 1;\n      var y = colorMarker.style.top.replace('px', '') * 1;\n\n      picker.style.color = \"hsl(\" + hue + \", 100%, 50%)\";\n      hueMarker.style.left = hue / 360 * 100 + \"%\";\n\n      setColorAtPosition(x, y);\n    }\n\n    /**\r\n     * Set the alpha when its slider is moved.\r\n     */\n    function setAlpha() {\n      var alpha = alphaSlider.value / 100;\n\n      alphaMarker.style.left = alpha * 100 + \"%\";\n      updateColor({ a: alpha });\n      pickColor();\n    }\n\n    /**\r\n     * Convert HSVA to RGBA.\r\n     * @param {object} hsva Hue, saturation, value and alpha values.\r\n     * @return {object} Red, green, blue and alpha values.\r\n     */\n    function HSVAtoRGBA(hsva) {\n      var saturation = hsva.s / 100;\n      var value = hsva.v / 100;\n      var chroma = saturation * value;\n      var hueBy60 = hsva.h / 60;\n      var x = chroma * (1 - Math.abs(hueBy60 % 2 - 1));\n      var m = value - chroma;\n\n      chroma = chroma + m;\n      x = x + m;\n\n      var index = Math.floor(hueBy60) % 6;\n      var red = [chroma, x, m, m, x, chroma][index];\n      var green = [x, chroma, chroma, x, m, m][index];\n      var blue = [m, m, x, chroma, chroma, x][index];\n\n      return {\n        r: Math.round(red * 255),\n        g: Math.round(green * 255),\n        b: Math.round(blue * 255),\n        a: hsva.a\n      };\n    }\n\n    /**\r\n     * Convert HSVA to HSLA.\r\n     * @param {object} hsva Hue, saturation, value and alpha values.\r\n     * @return {object} Hue, saturation, lightness and alpha values.\r\n     */\n    function HSVAtoHSLA(hsva) {\n      var value = hsva.v / 100;\n      var lightness = value * (1 - hsva.s / 100 / 2);\n      var saturation;\n\n      if (lightness > 0 && lightness < 1) {\n        saturation = Math.round((value - lightness) / Math.min(lightness, 1 - lightness) * 100);\n      }\n\n      return {\n        h: hsva.h,\n        s: saturation || 0,\n        l: Math.round(lightness * 100),\n        a: hsva.a\n      };\n    }\n\n    /**\r\n     * Convert RGBA to HSVA.\r\n     * @param {object} rgba Red, green, blue and alpha values.\r\n     * @return {object} Hue, saturation, value and alpha values.\r\n     */\n    function RGBAtoHSVA(rgba) {\n      var red = rgba.r / 255;\n      var green = rgba.g / 255;\n      var blue = rgba.b / 255;\n      var xmax = Math.max(red, green, blue);\n      var xmin = Math.min(red, green, blue);\n      var chroma = xmax - xmin;\n      var value = xmax;\n      var hue = 0;\n      var saturation = 0;\n\n      if (chroma) {\n        if (xmax === red) {hue = (green - blue) / chroma;}\n        if (xmax === green) {hue = 2 + (blue - red) / chroma;}\n        if (xmax === blue) {hue = 4 + (red - green) / chroma;}\n        if (xmax) {saturation = chroma / xmax;}\n      }\n\n      hue = Math.floor(hue * 60);\n\n      return {\n        h: hue < 0 ? hue + 360 : hue,\n        s: Math.round(saturation * 100),\n        v: Math.round(value * 100),\n        a: rgba.a\n      };\n    }\n\n    /**\r\n     * Parse a string to RGBA.\r\n     * @param {string} str String representing a color.\r\n     * @return {object} Red, green, blue and alpha values.\r\n     */\n    function strToRGBA(str) {\n      var regex = /^((rgba)|rgb)[\\D]+([\\d.]+)[\\D]+([\\d.]+)[\\D]+([\\d.]+)[\\D]*?([\\d.]+|$)/i;\n      var match, rgba;\n\n      // Default to black for invalid color strings\n      ctx.fillStyle = '#000';\n\n      // Use canvas to convert the string to a valid color string\n      ctx.fillStyle = str;\n      match = regex.exec(ctx.fillStyle);\n\n      if (match) {\n        rgba = {\n          r: match[3] * 1,\n          g: match[4] * 1,\n          b: match[5] * 1,\n          a: match[6] * 1\n        };\n\n        // Workaround to mitigate a Chromium bug where the alpha value is rounded incorrectly\n        rgba.a = +rgba.a.toFixed(2);\n\n      } else {\n        match = ctx.fillStyle.replace('#', '').match(/.{2}/g).map(function (h) {return parseInt(h, 16);});\n        rgba = {\n          r: match[0],\n          g: match[1],\n          b: match[2],\n          a: 1\n        };\n      }\n\n      return rgba;\n    }\n\n    /**\r\n     * Convert RGBA to Hex.\r\n     * @param {object} rgba Red, green, blue and alpha values.\r\n     * @return {string} Hex color string.\r\n     */\n    function RGBAToHex(rgba) {\n      var R = rgba.r.toString(16);\n      var G = rgba.g.toString(16);\n      var B = rgba.b.toString(16);\n      var A = '';\n\n      if (rgba.r < 16) {\n        R = '0' + R;\n      }\n\n      if (rgba.g < 16) {\n        G = '0' + G;\n      }\n\n      if (rgba.b < 16) {\n        B = '0' + B;\n      }\n\n      if (settings.alpha && (rgba.a < 1 || settings.forceAlpha)) {\n        var alpha = rgba.a * 255 | 0;\n        A = alpha.toString(16);\n\n        if (alpha < 16) {\n          A = '0' + A;\n        }\n      }\n\n      return '#' + R + G + B + A;\n    }\n\n    /**\r\n     * Convert RGBA values to a CSS rgb/rgba string.\r\n     * @param {object} rgba Red, green, blue and alpha values.\r\n     * @return {string} CSS color string.\r\n     */\n    function RGBAToStr(rgba) {\n      if (!settings.alpha || rgba.a === 1 && !settings.forceAlpha) {\n        return \"rgb(\" + rgba.r + \", \" + rgba.g + \", \" + rgba.b + \")\";\n      } else {\n        return \"rgba(\" + rgba.r + \", \" + rgba.g + \", \" + rgba.b + \", \" + rgba.a + \")\";\n      }\n    }\n\n    /**\r\n     * Convert HSLA values to a CSS hsl/hsla string.\r\n     * @param {object} hsla Hue, saturation, lightness and alpha values.\r\n     * @return {string} CSS color string.\r\n     */\n    function HSLAToStr(hsla) {\n      if (!settings.alpha || hsla.a === 1 && !settings.forceAlpha) {\n        return \"hsl(\" + hsla.h + \", \" + hsla.s + \"%, \" + hsla.l + \"%)\";\n      } else {\n        return \"hsla(\" + hsla.h + \", \" + hsla.s + \"%, \" + hsla.l + \"%, \" + hsla.a + \")\";\n      }\n    }\n\n    /**\r\n     * Init the color picker.\r\n     */\n    function init() {\n      if (document.getElementById('clr-picker')) return; //** DO NOT REMOVE: Prevent binding events multiple times\n      // Render the UI\n      container = null;\n      picker = document.createElement('div');\n      picker.setAttribute('id', 'clr-picker');\n      picker.className = 'clr-picker';\n      picker.innerHTML =\n      \"<input id=\\\"clr-color-value\\\" name=\\\"clr-color-value\\\" class=\\\"clr-color\\\" type=\\\"text\\\" value=\\\"\\\" spellcheck=\\\"false\\\" aria-label=\\\"\" + settings.a11y.input + \"\\\">\" + (\"<div id=\\\"clr-color-area\\\" class=\\\"clr-gradient\\\" role=\\\"application\\\" aria-label=\\\"\" +\n      settings.a11y.instruction + \"\\\">\") +\n      '<div id=\"clr-color-marker\" class=\"clr-marker\" tabindex=\"0\"></div>' +\n      '</div>' +\n      '<div class=\"clr-hue\">' + (\"<input id=\\\"clr-hue-slider\\\" name=\\\"clr-hue-slider\\\" type=\\\"range\\\" min=\\\"0\\\" max=\\\"360\\\" step=\\\"1\\\" aria-label=\\\"\" +\n      settings.a11y.hueSlider + \"\\\">\") +\n      '<div id=\"clr-hue-marker\"></div>' +\n      '</div>' +\n      '<div class=\"clr-alpha\">' + (\"<input id=\\\"clr-alpha-slider\\\" name=\\\"clr-alpha-slider\\\" type=\\\"range\\\" min=\\\"0\\\" max=\\\"100\\\" step=\\\"1\\\" aria-label=\\\"\" +\n      settings.a11y.alphaSlider + \"\\\">\") +\n      '<div id=\"clr-alpha-marker\"></div>' +\n      '<span></span>' +\n      '</div>' +\n      '<div id=\"clr-format\" class=\"clr-format\">' +\n      '<fieldset class=\"clr-segmented\">' + (\"<legend>\" +\n      settings.a11y.format + \"</legend>\") +\n      '<input id=\"clr-f1\" type=\"radio\" name=\"clr-format\" value=\"hex\">' +\n      '<label for=\"clr-f1\">Hex</label>' +\n      '<input id=\"clr-f2\" type=\"radio\" name=\"clr-format\" value=\"rgb\">' +\n      '<label for=\"clr-f2\">RGB</label>' +\n      '<input id=\"clr-f3\" type=\"radio\" name=\"clr-format\" value=\"hsl\">' +\n      '<label for=\"clr-f3\">HSL</label>' +\n      '<span></span>' +\n      '</fieldset>' +\n      '</div>' +\n      '<div id=\"clr-swatches\" class=\"clr-swatches\"></div>' + (\"<button type=\\\"button\\\" id=\\\"clr-clear\\\" class=\\\"clr-clear\\\" aria-label=\\\"\" +\n      settings.a11y.clear + \"\\\">\" + settings.clearLabel + \"</button>\") +\n      '<div id=\"clr-color-preview\" class=\"clr-preview\">' + (\"<button type=\\\"button\\\" id=\\\"clr-close\\\" class=\\\"clr-close\\\" aria-label=\\\"\" +\n      settings.a11y.close + \"\\\">\" + settings.closeLabel + \"</button>\") +\n      '</div>' + (\"<span id=\\\"clr-open-label\\\" hidden>\" +\n      settings.a11y.open + \"</span>\") + (\"<span id=\\\"clr-swatch-label\\\" hidden>\" +\n      settings.a11y.swatch + \"</span>\");\n\n      // Append the color picker to the DOM\n      document.body.appendChild(picker);\n\n      // Reference the UI elements\n      colorArea = getEl('clr-color-area');\n      colorMarker = getEl('clr-color-marker');\n      clearButton = getEl('clr-clear');\n      closeButton = getEl('clr-close');\n      colorPreview = getEl('clr-color-preview');\n      colorValue = getEl('clr-color-value');\n      hueSlider = getEl('clr-hue-slider');\n      hueMarker = getEl('clr-hue-marker');\n      alphaSlider = getEl('clr-alpha-slider');\n      alphaMarker = getEl('clr-alpha-marker');\n\n      // Bind the picker to the default selector\n      bindFields(settings.el);\n      wrapFields(settings.el);\n\n      addListener(picker, 'mousedown', function (event) {\n        picker.classList.remove('clr-keyboard-nav');\n        event.stopPropagation();\n      });\n\n      addListener(colorArea, 'mousedown', function (event) {\n        addListener(document, 'mousemove', moveMarker);\n      });\n\n      addListener(colorArea, 'touchstart', function (event) {\n        document.addEventListener('touchmove', moveMarker, { passive: false });\n      });\n\n      addListener(colorMarker, 'mousedown', function (event) {\n        addListener(document, 'mousemove', moveMarker);\n      });\n\n      addListener(colorMarker, 'touchstart', function (event) {\n        document.addEventListener('touchmove', moveMarker, { passive: false });\n      });\n\n      addListener(colorValue, 'change', function (event) {\n        if (currentEl || settings.inline) {\n          setColorFromStr(colorValue.value);\n          pickColor();\n        }\n      });\n\n      addListener(clearButton, 'click', function (event) {\n        pickColor('');\n        closePicker();\n      });\n\n      addListener(closeButton, 'click', function (event) {\n        pickColor();\n        closePicker();\n      });\n\n      addListener(document, 'click', '.clr-format input', function (event) {\n        currentFormat = event.target.value;\n        updateColor();\n        pickColor();\n      });\n\n      addListener(picker, 'click', '.clr-swatches button', function (event) {\n        setColorFromStr(event.target.textContent);\n        pickColor();\n\n        if (settings.swatchesOnly) {\n          closePicker();\n        }\n      });\n\n      addListener(document, 'mouseup', function (event) {\n        document.removeEventListener('mousemove', moveMarker);\n      });\n\n      addListener(document, 'touchend', function (event) {\n        document.removeEventListener('touchmove', moveMarker);\n      });\n\n      addListener(document, 'mousedown', function (event) {\n        keyboardNav = false;\n        picker.classList.remove('clr-keyboard-nav');\n        closePicker();\n      });\n\n      addListener(document, 'keydown', function (event) {\n        var key = event.key;\n        var target = event.target;\n        var shiftKey = event.shiftKey;\n        var navKeys = ['Tab', 'ArrowUp', 'ArrowDown', 'ArrowLeft', 'ArrowRight'];\n\n        if (key === 'Escape') {\n          closePicker(true);\n\n          // Display focus rings when using the keyboard\n        } else if (navKeys.includes(key)) {\n          keyboardNav = true;\n          picker.classList.add('clr-keyboard-nav');\n        }\n\n        // Trap the focus within the color picker while it's open\n        if (key === 'Tab' && target.matches('.clr-picker *')) {\n          var focusables = getFocusableElements();\n          var firstFocusable = focusables.shift();\n          var lastFocusable = focusables.pop();\n\n          if (shiftKey && target === firstFocusable) {\n            lastFocusable.focus();\n            event.preventDefault();\n          } else if (!shiftKey && target === lastFocusable) {\n            firstFocusable.focus();\n            event.preventDefault();\n          }\n        }\n      });\n\n      addListener(document, 'click', '.clr-field button', function (event) {\n        // Reset any previously set per-instance options\n        if (hasInstance) {\n          resetVirtualInstance();\n        }\n\n        // Open the color picker\n        event.target.nextElementSibling.dispatchEvent(new Event('click', { bubbles: true }));\n      });\n\n      addListener(colorMarker, 'keydown', function (event) {\n        var movements = {\n          ArrowUp: [0, -1],\n          ArrowDown: [0, 1],\n          ArrowLeft: [-1, 0],\n          ArrowRight: [1, 0]\n        };\n\n        if (Object.keys(movements).includes(event.key)) {\n          moveMarkerOnKeydown.apply(void 0, movements[event.key]);\n          event.preventDefault();\n        }\n      });\n\n      addListener(colorArea, 'click', moveMarker);\n      addListener(hueSlider, 'input', setHue);\n      addListener(alphaSlider, 'input', setAlpha);\n    }\n\n    /**\r\n     * Return a list of focusable elements within the color picker.\r\n     * @return {array} The list of focusable DOM elemnts.\r\n     */\n    function getFocusableElements() {\n      var controls = Array.from(picker.querySelectorAll('input, button'));\n      var focusables = controls.filter(function (node) {return !!node.offsetWidth;});\n\n      return focusables;\n    }\n\n    /**\r\n     * Shortcut for getElementById to optimize the minified JS.\r\n     * @param {string} id The element id.\r\n     * @return {object} The DOM element with the provided id.\r\n     */\n    function getEl(id) {\n      return document.getElementById(id);\n    }\n\n    /**\r\n     * Shortcut for addEventListener to optimize the minified JS.\r\n     * @param {object} context The context to which the listener is attached.\r\n     * @param {string} type Event type.\r\n     * @param {(string|function)} selector Event target if delegation is used, event handler if not.\r\n     * @param {function} [fn] Event handler if delegation is used.\r\n     */\n    function addListener(context, type, selector, fn) {\n      var matches = Element.prototype.matches || Element.prototype.msMatchesSelector;\n\n      // Delegate event to the target of the selector\n      if (typeof selector === 'string') {\n        context.addEventListener(type, function (event) {\n          if (matches.call(event.target, selector)) {\n            fn.call(event.target, event);\n          }\n        });\n\n        // If the selector is not a string then it's a function\n        // in which case we need a regular event listener\n      } else {\n        fn = selector;\n        context.addEventListener(type, fn);\n      }\n    }\n\n    /**\r\n     * Call a function only when the DOM is ready.\r\n     * @param {function} fn The function to call.\r\n     * @param {array} [args] Arguments to pass to the function.\r\n     */\n    function DOMReady(fn, args) {\n      args = args !== undefined ? args : [];\n\n      if (document.readyState !== 'loading') {\n        fn.apply(void 0, args);\n      } else {\n        document.addEventListener('DOMContentLoaded', function () {\n          fn.apply(void 0, args);\n        });\n      }\n    }\n\n    // Polyfill for Nodelist.forEach\n    if (NodeList !== undefined && NodeList.prototype && !NodeList.prototype.forEach) {\n      NodeList.prototype.forEach = Array.prototype.forEach;\n    }\n\n    //*****************************************************\n    //******* NPM: Custom code starts here ****************\n    //*****************************************************\n\n    /**\r\n     * Copy the active color to the linked input field and set the color.\r\n     * @param {string} [color] Color value to override the active color.\r\n     * @param {HTMLelement} [target] the element setting the color on\r\n     */\n    function setColor(color, target) {\n      currentEl = target;\n      oldColor = currentEl.value;\n      attachVirtualInstance(target);\n      currentFormat = getColorFormatFromStr(color);\n      updatePickerPosition();\n      setColorFromStr(color);\n      pickColor();\n      if (oldColor !== color) {\n        currentEl.dispatchEvent(new Event('change', { bubbles: true }));\n      }\n    }\n\n    // Expose the color picker to the global scope\n    var Coloris = function () {\n      var methods = {\n        init: init,\n        set: configure,\n        wrap: wrapFields,\n        close: closePicker,\n        setInstance: setVirtualInstance,\n        setColor: setColor,\n        removeInstance: removeVirtualInstance,\n        updatePosition: updatePickerPosition\n      };\n\n      function Coloris(options) {\n        DOMReady(function () {\n          if (options) {\n            if (typeof options === 'string') {\n              bindFields(options);\n            } else {\n              configure(options);\n            }\n          }\n        });\n      }var _loop3 = function _loop3(key)\n\n      {\n        Coloris[key] = function () {for (var _len = arguments.length, args = new Array(_len), _key2 = 0; _key2 < _len; _key2++) {args[_key2] = arguments[_key2];}\n          DOMReady(methods[key], args);\n        };\n      };for (var key in methods) {_loop3(key);}\n\n      // handle window resize events re-aligning the panel\n      DOMReady(function () {\n        window.addEventListener('resize', function (event) {Coloris.updatePosition();});\n        window.addEventListener('scroll', function (event) {Coloris.updatePosition();});\n      });\n\n      return Coloris;\n    }();\n\n    // Ensure init function is available not only as as a default import\n    Coloris.coloris = Coloris;\n\n    // Init the color picker when the DOM is ready\n    return Coloris;\n\n  }(window, document, Math);\n}();\n\nvar _coloris = Coloris.coloris;\nvar _init = Coloris.init;\nvar _set = Coloris.set;\nvar _wrap = Coloris.wrap;\nvar _close = Coloris.close;\nvar _setInstance = Coloris.setInstance;\nvar _removeInstance = Coloris.removeInstance;\nvar _updatePosition = Coloris.updatePosition;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Coloris);\n\n\n//# sourceURL=webpack://dragonbms-interface-web/./node_modules/@melloware/coloris/dist/esm/coloris.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./js/entry.js");
/******/ 	
/******/ })()
;